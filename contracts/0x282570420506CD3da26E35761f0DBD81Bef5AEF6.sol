contract main {




// =====================  Runtime code  =====================


#
#  - sub_62b3ccd9(?)
#
address stor0;
address stor1;
mapping of uint8 stor2;

function isWhitelisted(address arg1) {
    require calldata.size - 4 >= 32
    return bool(stor2[address(arg1)])
}

function _fallback() payable {
  stop
}

function addWhitelist(address arg1) {
    require calldata.size - 4 >= 32
    if stor2[address(arg1)]:
        revert with 0, 'W1'
    if stor0 != msg.sender:
        revert with 0, 'W1'
    stor2[address(arg1)] = 1
}

function withdraw(uint256 arg1) {
    require calldata.size - 4 >= 32
    if stor0 != msg.sender:
        revert with 0, 'W1'
    call stor0 with:
       value arg1 wei
         gas 2300 * is_zero(value) wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function withdrawToken(uint256 arg1, address arg2) {
    require calldata.size - 4 >= 64
    if stor0 != msg.sender:
        revert with 0, 'W2'
    require ext_code.size(arg2)
    call arg2.transfer(address rg1, uint256 rg2) with:
         gas gas_remaining wei
        args stor0, arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
}

function trade(address[] arg1, address[] arg2, uint256 arg3, uint256 arg4) {
    require calldata.size - 4 >= 128
    require arg1 <= 4294967296
    require arg1 + 36 <= calldata.size
    require arg1.length <= 4294967296 and arg1 + (32 * arg1.length) + 36 <= calldata.size
    mem[96] = arg1.length
    mem[128 len 32 * arg1.length] = call.data[arg1 + 36 len 32 * arg1.length]
    require arg2 <= 4294967296
    require arg2 + 36 <= calldata.size
    require arg2.length <= 4294967296 and arg2 + (32 * arg2.length) + 36 <= calldata.size
    mem[64] = (32 * arg1.length) + (32 * arg2.length) + 160
    mem[(32 * arg1.length) + 128] = arg2.length
    mem[(32 * arg1.length) + 160 len 32 * arg2.length] = call.data[arg2 + 36 len 32 * arg2.length]
    mem[(32 * arg1.length) + (32 * arg2.length) + 160] = 0
    mem[0] = msg.sender
    mem[32] = 2
    if bool(stor2[address(msg.sender)]) == 1:
        idx = 0
        s = arg3
        while idx < arg2.length:
            require idx < arg2.length
            require idx < arg1.length
            _7972 = mem[(32 * idx) + 128]
            require idx + 1 < arg1.length
            _7979 = mem[(32 * idx + 1) + 128]
            if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                revert with 0, 
                            32,
                            37,
                            0xfe556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345,
                            mem[(32 * arg1.length) + (32 * arg2.length) + 265 len 27]
            if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                if not mem[(32 * idx) + 140 len 20]:
                    revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                require ext_code.size(mem[(32 * idx) + (32 * arg1.length) + 172 len 20])
                staticcall mem[(32 * idx) + (32 * arg1.length) + 172 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[(32 * arg1.length) + (32 * arg2.length) + 160 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                if 997 * s / 997 != s:
                    revert with 0, 'ds-math-mul-overflow'
                if address(_7972) == address(_7972):
                    if not ext_call.return_data[50 len 14]:
                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[18 len 14]) + (997 * s) < 1000 * ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        if (1000 * ext_call.return_data[18 len 14]) + (997 * s):
                            idx = idx + 1
                            s = 0 / (1000 * ext_call.return_data[18 len 14]) + (997 * s)
                            continue 
                    else:
                        if ext_call.return_data[50 len 14]:
                            if 997 * s * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * s:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * ext_call.return_data[18 len 14]) + (997 * s) < 1000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            if (1000 * ext_call.return_data[18 len 14]) + (997 * s):
                                idx = idx + 1
                                s = 997 * s * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * s)
                                continue 
                else:
                    if not ext_call.return_data[18 len 14]:
                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[50 len 14]) + (997 * s) < 1000 * ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        if (1000 * ext_call.return_data[50 len 14]) + (997 * s):
                            idx = idx + 1
                            s = 0 / (1000 * ext_call.return_data[50 len 14]) + (997 * s)
                            continue 
                    else:
                        if ext_call.return_data[18 len 14]:
                            if 997 * s * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * s:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * ext_call.return_data[50 len 14]) + (997 * s) < 1000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            if (1000 * ext_call.return_data[50 len 14]) + (997 * s):
                                idx = idx + 1
                                s = 997 * s * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * s)
                                continue 
            else:
                if not mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                require ext_code.size(mem[(32 * idx) + (32 * arg1.length) + 172 len 20])
                staticcall mem[(32 * idx) + (32 * arg1.length) + 172 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[(32 * arg1.length) + (32 * arg2.length) + 160 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                if 997 * s / 997 != s:
                    revert with 0, 'ds-math-mul-overflow'
                if address(_7972) == address(_7979):
                    if not ext_call.return_data[50 len 14]:
                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[18 len 14]) + (997 * s) < 1000 * ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        if (1000 * ext_call.return_data[18 len 14]) + (997 * s):
                            idx = idx + 1
                            s = 0 / (1000 * ext_call.return_data[18 len 14]) + (997 * s)
                            continue 
                    else:
                        if ext_call.return_data[50 len 14]:
                            if 997 * s * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * s:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * ext_call.return_data[18 len 14]) + (997 * s) < 1000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            if (1000 * ext_call.return_data[18 len 14]) + (997 * s):
                                idx = idx + 1
                                s = 997 * s * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * s)
                                continue 
                else:
                    if not ext_call.return_data[18 len 14]:
                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[50 len 14]) + (997 * s) < 1000 * ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        if (1000 * ext_call.return_data[50 len 14]) + (997 * s):
                            idx = idx + 1
                            s = 0 / (1000 * ext_call.return_data[50 len 14]) + (997 * s)
                            continue 
                    else:
                        if ext_call.return_data[18 len 14]:
                            if 997 * s * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * s:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * ext_call.return_data[50 len 14]) + (997 * s) < 1000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            if (1000 * ext_call.return_data[50 len 14]) + (997 * s):
                                idx = idx + 1
                                s = 997 * s * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * s)
                                continue 
            revert
        if s < arg4:
            revert with 0, 'R1'
        idx = 0
        s = arg3
        while idx < arg2.length:
            require idx < mem[96]
            if mem[(32 * idx) + 140 len 20] != stor1:
                require idx < mem[96]
                _15926 = mem[(32 * idx) + 128]
                require idx + 1 < mem[96]
                _15936 = mem[(32 * idx + 1) + 128]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 32, 37, 0xfe556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                    require idx < mem[(32 * arg1.length) + 128]
                    require idx < mem[96]
                    _15998 = mem[(32 * idx) + 128]
                    require idx + 1 < mem[96]
                    _16018 = mem[(32 * idx + 1) + 128]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 32, 37, 0xfe556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                    if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                        if not mem[(32 * idx) + 140 len 20]:
                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                        require ext_code.size(mem[(32 * idx) + (32 * arg1.length) + 172 len 20])
                        staticcall mem[(32 * idx) + (32 * arg1.length) + 172 len 20].getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 96
                        if 997 * s / 997 != s:
                            revert with 0, 'ds-math-mul-overflow'
                        if address(_15998) == address(_15998):
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                require idx < mem[96]
                                if mem[(32 * idx) + 140 len 20] == address(_15926):
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17153 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17154 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17154 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17154 + 36] = 0
                                        mem[_17154 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_17154 + 100] = this.address
                                        mem[_17154 + 132] = 128
                                        mem[_17154 + 164] = mem[_17154]
                                        t = 0
                                        while t < mem[_17154]:
                                            mem[_17154 + t + 196] = mem[_17154 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17154] % 32:
                                            require ext_code.size(address(_17153))
                                            call address(_17153).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_17154 + 164 len mem[_17154] + 32]
                                        else:
                                            mem[floor32(mem[_17154]) + _17154 + 196] = mem[floor32(mem[_17154]) + _17154 + -(mem[_17154] % 32) + 228 len mem[_17154] % 32]
                                            require ext_code.size(address(_17153))
                                            call address(_17153).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_17154], mem[_17154 + 196 len floor32(mem[_17154]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17154 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17154 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _16992 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17408 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17409 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17409 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17409 + 36] = 0
                                        mem[_17409 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_17409 + 100] = address(_16992)
                                        mem[_17409 + 132] = 128
                                        mem[_17409 + 164] = mem[_17409]
                                        t = 0
                                        while t < mem[_17409]:
                                            mem[_17409 + t + 196] = mem[_17409 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17409] % 32:
                                            require ext_code.size(address(_17408))
                                            call address(_17408).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_16992), 128, mem[_17409 + 164 len mem[_17409] + 32]
                                        else:
                                            mem[floor32(mem[_17409]) + _17409 + 196] = mem[floor32(mem[_17409]) + _17409 + -(mem[_17409] % 32) + 228 len mem[_17409] % 32]
                                            require ext_code.size(address(_17408))
                                            call address(_17408).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_16992), 128, mem[_17409], mem[_17409 + 196 len floor32(mem[_17409]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17409 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17409 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17156 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17157 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17157 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17157 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_17157 + 68] = 0
                                        mem[_17157 + 100] = this.address
                                        mem[_17157 + 132] = 128
                                        mem[_17157 + 164] = mem[_17157]
                                        t = 0
                                        while t < mem[_17157]:
                                            mem[_17157 + t + 196] = mem[_17157 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17157] % 32:
                                            require ext_code.size(address(_17156))
                                            call address(_17156).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_17157 + 164 len mem[_17157] + 32]
                                        else:
                                            mem[floor32(mem[_17157]) + _17157 + 196] = mem[floor32(mem[_17157]) + _17157 + -(mem[_17157] % 32) + 228 len mem[_17157] % 32]
                                            require ext_code.size(address(_17156))
                                            call address(_17156).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_17157], mem[_17157 + 196 len floor32(mem[_17157]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17157 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17157 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _16994 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17413 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17414 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17414 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17414 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_17414 + 68] = 0
                                        mem[_17414 + 100] = address(_16994)
                                        mem[_17414 + 132] = 128
                                        mem[_17414 + 164] = mem[_17414]
                                        t = 0
                                        while t < mem[_17414]:
                                            mem[_17414 + t + 196] = mem[_17414 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17414] % 32:
                                            require ext_code.size(address(_17413))
                                            call address(_17413).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_16994), 128, mem[_17414 + 164 len mem[_17414] + 32]
                                        else:
                                            mem[floor32(mem[_17414]) + _17414 + 196] = mem[floor32(mem[_17414]) + _17414 + -(mem[_17414] % 32) + 228 len mem[_17414] % 32]
                                            require ext_code.size(address(_17413))
                                            call address(_17413).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_16994), 128, mem[_17414], mem[_17414 + 196 len floor32(mem[_17414]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17414 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17414 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                continue 
                            require Mask(112, 0, ext_call.return_data[32])
                            if 997 * s * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * s:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                            require idx < mem[96]
                            if mem[(32 * idx) + 140 len 20] == address(_15926):
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _17767 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _17768 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_17768 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_17768 + 36] = 0
                                    mem[_17768 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    mem[_17768 + 100] = this.address
                                    mem[_17768 + 132] = 128
                                    mem[_17768 + 164] = mem[_17768]
                                    t = 0
                                    while t < mem[_17768]:
                                        mem[_17768 + t + 196] = mem[_17768 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_17768] % 32:
                                        require ext_code.size(address(_17767))
                                        call address(_17767).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_17768 + 164 len mem[_17768] + 32]
                                    else:
                                        mem[floor32(mem[_17768]) + _17768 + 196] = mem[floor32(mem[_17768]) + _17768 + -(mem[_17768] % 32) + 228 len mem[_17768] % 32]
                                        require ext_code.size(address(_17767))
                                        call address(_17767).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_17768], mem[_17768 + 196 len floor32(mem[_17768]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_17768 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_17768 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _17418 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18210 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18211 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18211 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18211 + 36] = 0
                                    mem[_18211 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    mem[_18211 + 100] = address(_17418)
                                    mem[_18211 + 132] = 128
                                    mem[_18211 + 164] = mem[_18211]
                                    t = 0
                                    while t < mem[_18211]:
                                        mem[_18211 + t + 196] = mem[_18211 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18211] % 32:
                                        require ext_code.size(address(_18210))
                                        call address(_18210).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17418), 128, mem[_18211 + 164 len mem[_18211] + 32]
                                    else:
                                        mem[floor32(mem[_18211]) + _18211 + 196] = mem[floor32(mem[_18211]) + _18211 + -(mem[_18211] % 32) + 228 len mem[_18211] % 32]
                                        require ext_code.size(address(_18210))
                                        call address(_18210).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17418), 128, mem[_18211], mem[_18211 + 196 len floor32(mem[_18211]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18211 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18211 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _17770 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _17771 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_17771 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_17771 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    mem[_17771 + 68] = 0
                                    mem[_17771 + 100] = this.address
                                    mem[_17771 + 132] = 128
                                    mem[_17771 + 164] = mem[_17771]
                                    t = 0
                                    while t < mem[_17771]:
                                        mem[_17771 + t + 196] = mem[_17771 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_17771] % 32:
                                        require ext_code.size(address(_17770))
                                        call address(_17770).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_17771 + 164 len mem[_17771] + 32]
                                    else:
                                        mem[floor32(mem[_17771]) + _17771 + 196] = mem[floor32(mem[_17771]) + _17771 + -(mem[_17771] % 32) + 228 len mem[_17771] % 32]
                                        require ext_code.size(address(_17770))
                                        call address(_17770).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_17771], mem[_17771 + 196 len floor32(mem[_17771]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_17771 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_17771 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _17420 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18215 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18216 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18216 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18216 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    mem[_18216 + 68] = 0
                                    mem[_18216 + 100] = address(_17420)
                                    mem[_18216 + 132] = 128
                                    mem[_18216 + 164] = mem[_18216]
                                    t = 0
                                    while t < mem[_18216]:
                                        mem[_18216 + t + 196] = mem[_18216 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18216] % 32:
                                        require ext_code.size(address(_18215))
                                        call address(_18215).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17420), 128, mem[_18216 + 164 len mem[_18216] + 32]
                                    else:
                                        mem[floor32(mem[_18216]) + _18216 + 196] = mem[floor32(mem[_18216]) + _18216 + -(mem[_18216] % 32) + 228 len mem[_18216] % 32]
                                        require ext_code.size(address(_18215))
                                        call address(_18215).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17420), 128, mem[_18216], mem[_18216 + 196 len floor32(mem[_18216]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18216 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18216 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                            continue 
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                            require idx < mem[96]
                            if mem[(32 * idx) + 140 len 20] == address(_15926):
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _17161 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _17162 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_17162 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_17162 + 36] = 0
                                    mem[_17162 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_17162 + 100] = this.address
                                    mem[_17162 + 132] = 128
                                    mem[_17162 + 164] = mem[_17162]
                                    t = 0
                                    while t < mem[_17162]:
                                        mem[_17162 + t + 196] = mem[_17162 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_17162] % 32:
                                        require ext_code.size(address(_17161))
                                        call address(_17161).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_17162 + 164 len mem[_17162] + 32]
                                    else:
                                        mem[floor32(mem[_17162]) + _17162 + 196] = mem[floor32(mem[_17162]) + _17162 + -(mem[_17162] % 32) + 228 len mem[_17162] % 32]
                                        require ext_code.size(address(_17161))
                                        call address(_17161).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_17162], mem[_17162 + 196 len floor32(mem[_17162]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_17162 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_17162 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _16998 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _17422 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _17423 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_17423 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_17423 + 36] = 0
                                    mem[_17423 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_17423 + 100] = address(_16998)
                                    mem[_17423 + 132] = 128
                                    mem[_17423 + 164] = mem[_17423]
                                    t = 0
                                    while t < mem[_17423]:
                                        mem[_17423 + t + 196] = mem[_17423 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_17423] % 32:
                                        require ext_code.size(address(_17422))
                                        call address(_17422).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_16998), 128, mem[_17423 + 164 len mem[_17423] + 32]
                                    else:
                                        mem[floor32(mem[_17423]) + _17423 + 196] = mem[floor32(mem[_17423]) + _17423 + -(mem[_17423] % 32) + 228 len mem[_17423] % 32]
                                        require ext_code.size(address(_17422))
                                        call address(_17422).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_16998), 128, mem[_17423], mem[_17423 + 196 len floor32(mem[_17423]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_17423 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_17423 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _17164 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _17165 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_17165 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_17165 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_17165 + 68] = 0
                                    mem[_17165 + 100] = this.address
                                    mem[_17165 + 132] = 128
                                    mem[_17165 + 164] = mem[_17165]
                                    t = 0
                                    while t < mem[_17165]:
                                        mem[_17165 + t + 196] = mem[_17165 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_17165] % 32:
                                        require ext_code.size(address(_17164))
                                        call address(_17164).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_17165 + 164 len mem[_17165] + 32]
                                    else:
                                        mem[floor32(mem[_17165]) + _17165 + 196] = mem[floor32(mem[_17165]) + _17165 + -(mem[_17165] % 32) + 228 len mem[_17165] % 32]
                                        require ext_code.size(address(_17164))
                                        call address(_17164).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_17165], mem[_17165 + 196 len floor32(mem[_17165]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_17165 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_17165 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _17000 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _17427 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _17428 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_17428 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_17428 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_17428 + 68] = 0
                                    mem[_17428 + 100] = address(_17000)
                                    mem[_17428 + 132] = 128
                                    mem[_17428 + 164] = mem[_17428]
                                    t = 0
                                    while t < mem[_17428]:
                                        mem[_17428 + t + 196] = mem[_17428 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_17428] % 32:
                                        require ext_code.size(address(_17427))
                                        call address(_17427).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17000), 128, mem[_17428 + 164 len mem[_17428] + 32]
                                    else:
                                        mem[floor32(mem[_17428]) + _17428 + 196] = mem[floor32(mem[_17428]) + _17428 + -(mem[_17428] % 32) + 228 len mem[_17428] % 32]
                                        require ext_code.size(address(_17427))
                                        call address(_17427).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17000), 128, mem[_17428], mem[_17428 + 196 len floor32(mem[_17428]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_17428 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_17428 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                            continue 
                        require Mask(112, 0, ext_call.return_data[0])
                        if 997 * s * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * s:
                            revert with 0, 'ds-math-mul-overflow'
                        if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                            revert with 0, 'ds-math-add-overflow'
                        require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                        require idx < mem[96]
                        if mem[(32 * idx) + 140 len 20] == address(_15926):
                            if idx >= mem[(32 * arg1.length) + 128] - 1:
                                require idx < mem[(32 * arg1.length) + 128]
                                _17779 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                _17780 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_17780 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_17780 + 36] = 0
                                mem[_17780 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                mem[_17780 + 100] = this.address
                                mem[_17780 + 132] = 128
                                mem[_17780 + 164] = mem[_17780]
                                t = 0
                                while t < mem[_17780]:
                                    mem[_17780 + t + 196] = mem[_17780 + t + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_17780] % 32:
                                    require ext_code.size(address(_17779))
                                    call address(_17779).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_17780 + 164 len mem[_17780] + 32]
                                else:
                                    mem[floor32(mem[_17780]) + _17780 + 196] = mem[floor32(mem[_17780]) + _17780 + -(mem[_17780] % 32) + 228 len mem[_17780] % 32]
                                    require ext_code.size(address(_17779))
                                    call address(_17779).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_17780], mem[_17780 + 196 len floor32(mem[_17780]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                    require ext_code.size(stor1)
                                    staticcall stor1.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[_17780 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[_17780 + 36] = ext_call.return_data[0]
                                    require ext_code.size(stor1)
                                    call stor1.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require idx + 1 < mem[(32 * arg1.length) + 128]
                                _17432 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                require idx < mem[(32 * arg1.length) + 128]
                                _18222 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                _18223 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_18223 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_18223 + 36] = 0
                                mem[_18223 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                mem[_18223 + 100] = address(_17432)
                                mem[_18223 + 132] = 128
                                mem[_18223 + 164] = mem[_18223]
                                t = 0
                                while t < mem[_18223]:
                                    mem[_18223 + t + 196] = mem[_18223 + t + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_18223] % 32:
                                    require ext_code.size(address(_18222))
                                    call address(_18222).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17432), 128, mem[_18223 + 164 len mem[_18223] + 32]
                                else:
                                    mem[floor32(mem[_18223]) + _18223 + 196] = mem[floor32(mem[_18223]) + _18223 + -(mem[_18223] % 32) + 228 len mem[_18223] % 32]
                                    require ext_code.size(address(_18222))
                                    call address(_18222).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17432), 128, mem[_18223], mem[_18223 + 196 len floor32(mem[_18223]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                    require ext_code.size(stor1)
                                    staticcall stor1.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[_18223 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[_18223 + 36] = ext_call.return_data[0]
                                    require ext_code.size(stor1)
                                    call stor1.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if idx >= mem[(32 * arg1.length) + 128] - 1:
                                require idx < mem[(32 * arg1.length) + 128]
                                _17782 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                _17783 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_17783 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_17783 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                mem[_17783 + 68] = 0
                                mem[_17783 + 100] = this.address
                                mem[_17783 + 132] = 128
                                mem[_17783 + 164] = mem[_17783]
                                t = 0
                                while t < mem[_17783]:
                                    mem[_17783 + t + 196] = mem[_17783 + t + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_17783] % 32:
                                    require ext_code.size(address(_17782))
                                    call address(_17782).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_17783 + 164 len mem[_17783] + 32]
                                else:
                                    mem[floor32(mem[_17783]) + _17783 + 196] = mem[floor32(mem[_17783]) + _17783 + -(mem[_17783] % 32) + 228 len mem[_17783] % 32]
                                    require ext_code.size(address(_17782))
                                    call address(_17782).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_17783], mem[_17783 + 196 len floor32(mem[_17783]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                    require ext_code.size(stor1)
                                    staticcall stor1.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[_17783 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[_17783 + 36] = ext_call.return_data[0]
                                    require ext_code.size(stor1)
                                    call stor1.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require idx + 1 < mem[(32 * arg1.length) + 128]
                                _17434 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                require idx < mem[(32 * arg1.length) + 128]
                                _18227 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                _18228 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_18228 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_18228 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                mem[_18228 + 68] = 0
                                mem[_18228 + 100] = address(_17434)
                                mem[_18228 + 132] = 128
                                mem[_18228 + 164] = mem[_18228]
                                t = 0
                                while t < mem[_18228]:
                                    mem[_18228 + t + 196] = mem[_18228 + t + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_18228] % 32:
                                    require ext_code.size(address(_18227))
                                    call address(_18227).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17434), 128, mem[_18228 + 164 len mem[_18228] + 32]
                                else:
                                    mem[floor32(mem[_18228]) + _18228 + 196] = mem[floor32(mem[_18228]) + _18228 + -(mem[_18228] % 32) + 228 len mem[_18228] % 32]
                                    require ext_code.size(address(_18227))
                                    call address(_18227).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17434), 128, mem[_18228], mem[_18228 + 196 len floor32(mem[_18228]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                    require ext_code.size(stor1)
                                    staticcall stor1.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[_18228 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[_18228 + 36] = ext_call.return_data[0]
                                    require ext_code.size(stor1)
                                    call stor1.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if not mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                        require ext_code.size(mem[(32 * idx) + (32 * arg1.length) + 172 len 20])
                        staticcall mem[(32 * idx) + (32 * arg1.length) + 172 len 20].getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 96
                        if 997 * s / 997 != s:
                            revert with 0, 'ds-math-mul-overflow'
                        if address(_15998) == address(_16018):
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                require idx < mem[96]
                                if mem[(32 * idx) + 140 len 20] == address(_15926):
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17169 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17170 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17170 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17170 + 36] = 0
                                        mem[_17170 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_17170 + 100] = this.address
                                        mem[_17170 + 132] = 128
                                        mem[_17170 + 164] = mem[_17170]
                                        t = 0
                                        while t < mem[_17170]:
                                            mem[_17170 + t + 196] = mem[_17170 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17170] % 32:
                                            require ext_code.size(address(_17169))
                                            call address(_17169).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_17170 + 164 len mem[_17170] + 32]
                                        else:
                                            mem[floor32(mem[_17170]) + _17170 + 196] = mem[floor32(mem[_17170]) + _17170 + -(mem[_17170] % 32) + 228 len mem[_17170] % 32]
                                            require ext_code.size(address(_17169))
                                            call address(_17169).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_17170], mem[_17170 + 196 len floor32(mem[_17170]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17170 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17170 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _17004 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17436 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17437 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17437 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17437 + 36] = 0
                                        mem[_17437 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_17437 + 100] = address(_17004)
                                        mem[_17437 + 132] = 128
                                        mem[_17437 + 164] = mem[_17437]
                                        t = 0
                                        while t < mem[_17437]:
                                            mem[_17437 + t + 196] = mem[_17437 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17437] % 32:
                                            require ext_code.size(address(_17436))
                                            call address(_17436).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17004), 128, mem[_17437 + 164 len mem[_17437] + 32]
                                        else:
                                            mem[floor32(mem[_17437]) + _17437 + 196] = mem[floor32(mem[_17437]) + _17437 + -(mem[_17437] % 32) + 228 len mem[_17437] % 32]
                                            require ext_code.size(address(_17436))
                                            call address(_17436).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17004), 128, mem[_17437], mem[_17437 + 196 len floor32(mem[_17437]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17437 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17437 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17172 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17173 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17173 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17173 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_17173 + 68] = 0
                                        mem[_17173 + 100] = this.address
                                        mem[_17173 + 132] = 128
                                        mem[_17173 + 164] = mem[_17173]
                                        t = 0
                                        while t < mem[_17173]:
                                            mem[_17173 + t + 196] = mem[_17173 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17173] % 32:
                                            require ext_code.size(address(_17172))
                                            call address(_17172).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_17173 + 164 len mem[_17173] + 32]
                                        else:
                                            mem[floor32(mem[_17173]) + _17173 + 196] = mem[floor32(mem[_17173]) + _17173 + -(mem[_17173] % 32) + 228 len mem[_17173] % 32]
                                            require ext_code.size(address(_17172))
                                            call address(_17172).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_17173], mem[_17173 + 196 len floor32(mem[_17173]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17173 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17173 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _17006 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17441 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17442 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17442 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17442 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_17442 + 68] = 0
                                        mem[_17442 + 100] = address(_17006)
                                        mem[_17442 + 132] = 128
                                        mem[_17442 + 164] = mem[_17442]
                                        t = 0
                                        while t < mem[_17442]:
                                            mem[_17442 + t + 196] = mem[_17442 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17442] % 32:
                                            require ext_code.size(address(_17441))
                                            call address(_17441).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17006), 128, mem[_17442 + 164 len mem[_17442] + 32]
                                        else:
                                            mem[floor32(mem[_17442]) + _17442 + 196] = mem[floor32(mem[_17442]) + _17442 + -(mem[_17442] % 32) + 228 len mem[_17442] % 32]
                                            require ext_code.size(address(_17441))
                                            call address(_17441).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17006), 128, mem[_17442], mem[_17442 + 196 len floor32(mem[_17442]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17442 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17442 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                continue 
                            require Mask(112, 0, ext_call.return_data[32])
                            if 997 * s * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * s:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                            require idx < mem[96]
                            if mem[(32 * idx) + 140 len 20] == address(_15926):
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _17791 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _17792 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_17792 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_17792 + 36] = 0
                                    mem[_17792 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    mem[_17792 + 100] = this.address
                                    mem[_17792 + 132] = 128
                                    mem[_17792 + 164] = mem[_17792]
                                    t = 0
                                    while t < mem[_17792]:
                                        mem[_17792 + t + 196] = mem[_17792 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_17792] % 32:
                                        require ext_code.size(address(_17791))
                                        call address(_17791).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_17792 + 164 len mem[_17792] + 32]
                                    else:
                                        mem[floor32(mem[_17792]) + _17792 + 196] = mem[floor32(mem[_17792]) + _17792 + -(mem[_17792] % 32) + 228 len mem[_17792] % 32]
                                        require ext_code.size(address(_17791))
                                        call address(_17791).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_17792], mem[_17792 + 196 len floor32(mem[_17792]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_17792 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_17792 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _17446 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18234 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18235 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18235 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18235 + 36] = 0
                                    mem[_18235 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    mem[_18235 + 100] = address(_17446)
                                    mem[_18235 + 132] = 128
                                    mem[_18235 + 164] = mem[_18235]
                                    t = 0
                                    while t < mem[_18235]:
                                        mem[_18235 + t + 196] = mem[_18235 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18235] % 32:
                                        require ext_code.size(address(_18234))
                                        call address(_18234).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17446), 128, mem[_18235 + 164 len mem[_18235] + 32]
                                    else:
                                        mem[floor32(mem[_18235]) + _18235 + 196] = mem[floor32(mem[_18235]) + _18235 + -(mem[_18235] % 32) + 228 len mem[_18235] % 32]
                                        require ext_code.size(address(_18234))
                                        call address(_18234).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17446), 128, mem[_18235], mem[_18235 + 196 len floor32(mem[_18235]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18235 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18235 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _17794 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _17795 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_17795 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_17795 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    mem[_17795 + 68] = 0
                                    mem[_17795 + 100] = this.address
                                    mem[_17795 + 132] = 128
                                    mem[_17795 + 164] = mem[_17795]
                                    t = 0
                                    while t < mem[_17795]:
                                        mem[_17795 + t + 196] = mem[_17795 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_17795] % 32:
                                        require ext_code.size(address(_17794))
                                        call address(_17794).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_17795 + 164 len mem[_17795] + 32]
                                    else:
                                        mem[floor32(mem[_17795]) + _17795 + 196] = mem[floor32(mem[_17795]) + _17795 + -(mem[_17795] % 32) + 228 len mem[_17795] % 32]
                                        require ext_code.size(address(_17794))
                                        call address(_17794).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_17795], mem[_17795 + 196 len floor32(mem[_17795]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_17795 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_17795 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _17448 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18239 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18240 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18240 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18240 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    mem[_18240 + 68] = 0
                                    mem[_18240 + 100] = address(_17448)
                                    mem[_18240 + 132] = 128
                                    mem[_18240 + 164] = mem[_18240]
                                    t = 0
                                    while t < mem[_18240]:
                                        mem[_18240 + t + 196] = mem[_18240 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18240] % 32:
                                        require ext_code.size(address(_18239))
                                        call address(_18239).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17448), 128, mem[_18240 + 164 len mem[_18240] + 32]
                                    else:
                                        mem[floor32(mem[_18240]) + _18240 + 196] = mem[floor32(mem[_18240]) + _18240 + -(mem[_18240] % 32) + 228 len mem[_18240] % 32]
                                        require ext_code.size(address(_18239))
                                        call address(_18239).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17448), 128, mem[_18240], mem[_18240 + 196 len floor32(mem[_18240]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18240 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18240 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                            continue 
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                            require idx < mem[96]
                            if mem[(32 * idx) + 140 len 20] == address(_15926):
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _17177 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _17178 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_17178 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_17178 + 36] = 0
                                    mem[_17178 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_17178 + 100] = this.address
                                    mem[_17178 + 132] = 128
                                    mem[_17178 + 164] = mem[_17178]
                                    t = 0
                                    while t < mem[_17178]:
                                        mem[_17178 + t + 196] = mem[_17178 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_17178] % 32:
                                        require ext_code.size(address(_17177))
                                        call address(_17177).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_17178 + 164 len mem[_17178] + 32]
                                    else:
                                        mem[floor32(mem[_17178]) + _17178 + 196] = mem[floor32(mem[_17178]) + _17178 + -(mem[_17178] % 32) + 228 len mem[_17178] % 32]
                                        require ext_code.size(address(_17177))
                                        call address(_17177).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_17178], mem[_17178 + 196 len floor32(mem[_17178]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_17178 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_17178 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _17010 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _17450 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _17451 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_17451 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_17451 + 36] = 0
                                    mem[_17451 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_17451 + 100] = address(_17010)
                                    mem[_17451 + 132] = 128
                                    mem[_17451 + 164] = mem[_17451]
                                    t = 0
                                    while t < mem[_17451]:
                                        mem[_17451 + t + 196] = mem[_17451 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_17451] % 32:
                                        require ext_code.size(address(_17450))
                                        call address(_17450).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17010), 128, mem[_17451 + 164 len mem[_17451] + 32]
                                    else:
                                        mem[floor32(mem[_17451]) + _17451 + 196] = mem[floor32(mem[_17451]) + _17451 + -(mem[_17451] % 32) + 228 len mem[_17451] % 32]
                                        require ext_code.size(address(_17450))
                                        call address(_17450).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17010), 128, mem[_17451], mem[_17451 + 196 len floor32(mem[_17451]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_17451 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_17451 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _17180 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _17181 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_17181 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_17181 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_17181 + 68] = 0
                                    mem[_17181 + 100] = this.address
                                    mem[_17181 + 132] = 128
                                    mem[_17181 + 164] = mem[_17181]
                                    t = 0
                                    while t < mem[_17181]:
                                        mem[_17181 + t + 196] = mem[_17181 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_17181] % 32:
                                        require ext_code.size(address(_17180))
                                        call address(_17180).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_17181 + 164 len mem[_17181] + 32]
                                    else:
                                        mem[floor32(mem[_17181]) + _17181 + 196] = mem[floor32(mem[_17181]) + _17181 + -(mem[_17181] % 32) + 228 len mem[_17181] % 32]
                                        require ext_code.size(address(_17180))
                                        call address(_17180).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_17181], mem[_17181 + 196 len floor32(mem[_17181]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_17181 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_17181 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _17012 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _17455 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _17456 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_17456 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_17456 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_17456 + 68] = 0
                                    mem[_17456 + 100] = address(_17012)
                                    mem[_17456 + 132] = 128
                                    mem[_17456 + 164] = mem[_17456]
                                    t = 0
                                    while t < mem[_17456]:
                                        mem[_17456 + t + 196] = mem[_17456 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_17456] % 32:
                                        require ext_code.size(address(_17455))
                                        call address(_17455).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17012), 128, mem[_17456 + 164 len mem[_17456] + 32]
                                    else:
                                        mem[floor32(mem[_17456]) + _17456 + 196] = mem[floor32(mem[_17456]) + _17456 + -(mem[_17456] % 32) + 228 len mem[_17456] % 32]
                                        require ext_code.size(address(_17455))
                                        call address(_17455).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17012), 128, mem[_17456], mem[_17456 + 196 len floor32(mem[_17456]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_17456 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_17456 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                            continue 
                        require Mask(112, 0, ext_call.return_data[0])
                        if 997 * s * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * s:
                            revert with 0, 'ds-math-mul-overflow'
                        if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                            revert with 0, 'ds-math-add-overflow'
                        require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                        require idx < mem[96]
                        if mem[(32 * idx) + 140 len 20] == address(_15926):
                            if idx >= mem[(32 * arg1.length) + 128] - 1:
                                require idx < mem[(32 * arg1.length) + 128]
                                _17803 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                _17804 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_17804 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_17804 + 36] = 0
                                mem[_17804 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                mem[_17804 + 100] = this.address
                                mem[_17804 + 132] = 128
                                mem[_17804 + 164] = mem[_17804]
                                t = 0
                                while t < mem[_17804]:
                                    mem[_17804 + t + 196] = mem[_17804 + t + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_17804] % 32:
                                    require ext_code.size(address(_17803))
                                    call address(_17803).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_17804 + 164 len mem[_17804] + 32]
                                else:
                                    mem[floor32(mem[_17804]) + _17804 + 196] = mem[floor32(mem[_17804]) + _17804 + -(mem[_17804] % 32) + 228 len mem[_17804] % 32]
                                    require ext_code.size(address(_17803))
                                    call address(_17803).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_17804], mem[_17804 + 196 len floor32(mem[_17804]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                    require ext_code.size(stor1)
                                    staticcall stor1.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[_17804 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[_17804 + 36] = ext_call.return_data[0]
                                    require ext_code.size(stor1)
                                    call stor1.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require idx + 1 < mem[(32 * arg1.length) + 128]
                                _17460 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                require idx < mem[(32 * arg1.length) + 128]
                                _18246 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                _18247 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_18247 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_18247 + 36] = 0
                                mem[_18247 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                mem[_18247 + 100] = address(_17460)
                                mem[_18247 + 132] = 128
                                mem[_18247 + 164] = mem[_18247]
                                t = 0
                                while t < mem[_18247]:
                                    mem[_18247 + t + 196] = mem[_18247 + t + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_18247] % 32:
                                    require ext_code.size(address(_18246))
                                    call address(_18246).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17460), 128, mem[_18247 + 164 len mem[_18247] + 32]
                                else:
                                    mem[floor32(mem[_18247]) + _18247 + 196] = mem[floor32(mem[_18247]) + _18247 + -(mem[_18247] % 32) + 228 len mem[_18247] % 32]
                                    require ext_code.size(address(_18246))
                                    call address(_18246).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17460), 128, mem[_18247], mem[_18247 + 196 len floor32(mem[_18247]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                    require ext_code.size(stor1)
                                    staticcall stor1.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[_18247 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[_18247 + 36] = ext_call.return_data[0]
                                    require ext_code.size(stor1)
                                    call stor1.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if idx >= mem[(32 * arg1.length) + 128] - 1:
                                require idx < mem[(32 * arg1.length) + 128]
                                _17806 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                _17807 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_17807 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_17807 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                mem[_17807 + 68] = 0
                                mem[_17807 + 100] = this.address
                                mem[_17807 + 132] = 128
                                mem[_17807 + 164] = mem[_17807]
                                t = 0
                                while t < mem[_17807]:
                                    mem[_17807 + t + 196] = mem[_17807 + t + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_17807] % 32:
                                    require ext_code.size(address(_17806))
                                    call address(_17806).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_17807 + 164 len mem[_17807] + 32]
                                else:
                                    mem[floor32(mem[_17807]) + _17807 + 196] = mem[floor32(mem[_17807]) + _17807 + -(mem[_17807] % 32) + 228 len mem[_17807] % 32]
                                    require ext_code.size(address(_17806))
                                    call address(_17806).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_17807], mem[_17807 + 196 len floor32(mem[_17807]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                    require ext_code.size(stor1)
                                    staticcall stor1.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[_17807 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[_17807 + 36] = ext_call.return_data[0]
                                    require ext_code.size(stor1)
                                    call stor1.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require idx + 1 < mem[(32 * arg1.length) + 128]
                                _17462 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                require idx < mem[(32 * arg1.length) + 128]
                                _18251 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                _18252 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_18252 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_18252 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                mem[_18252 + 68] = 0
                                mem[_18252 + 100] = address(_17462)
                                mem[_18252 + 132] = 128
                                mem[_18252 + 164] = mem[_18252]
                                t = 0
                                while t < mem[_18252]:
                                    mem[_18252 + t + 196] = mem[_18252 + t + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_18252] % 32:
                                    require ext_code.size(address(_18251))
                                    call address(_18251).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17462), 128, mem[_18252 + 164 len mem[_18252] + 32]
                                else:
                                    mem[floor32(mem[_18252]) + _18252 + 196] = mem[floor32(mem[_18252]) + _18252 + -(mem[_18252] % 32) + 228 len mem[_18252] % 32]
                                    require ext_code.size(address(_18251))
                                    call address(_18251).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17462), 128, mem[_18252], mem[_18252 + 196 len floor32(mem[_18252]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                    require ext_code.size(stor1)
                                    staticcall stor1.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[_18252 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[_18252 + 36] = ext_call.return_data[0]
                                    require ext_code.size(stor1)
                                    call stor1.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                    require idx < mem[(32 * arg1.length) + 128]
                    require idx < mem[96]
                    _16000 = mem[(32 * idx) + 128]
                    require idx + 1 < mem[96]
                    _16019 = mem[(32 * idx + 1) + 128]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 32, 37, 0xfe556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                    if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                        if not mem[(32 * idx) + 140 len 20]:
                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                        require ext_code.size(mem[(32 * idx) + (32 * arg1.length) + 172 len 20])
                        staticcall mem[(32 * idx) + (32 * arg1.length) + 172 len 20].getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 96
                        if 997 * s / 997 != s:
                            revert with 0, 'ds-math-mul-overflow'
                        if address(_16000) == address(_16000):
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                require idx < mem[96]
                                if mem[(32 * idx) + 140 len 20] == address(_15936):
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17185 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17186 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17186 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17186 + 36] = 0
                                        mem[_17186 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_17186 + 100] = this.address
                                        mem[_17186 + 132] = 128
                                        mem[_17186 + 164] = mem[_17186]
                                        t = 0
                                        while t < mem[_17186]:
                                            mem[_17186 + t + 196] = mem[_17186 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17186] % 32:
                                            require ext_code.size(address(_17185))
                                            call address(_17185).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_17186 + 164 len mem[_17186] + 32]
                                        else:
                                            mem[floor32(mem[_17186]) + _17186 + 196] = mem[floor32(mem[_17186]) + _17186 + -(mem[_17186] % 32) + 228 len mem[_17186] % 32]
                                            require ext_code.size(address(_17185))
                                            call address(_17185).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_17186], mem[_17186 + 196 len floor32(mem[_17186]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17186 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17186 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _17016 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17464 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17465 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17465 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17465 + 36] = 0
                                        mem[_17465 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_17465 + 100] = address(_17016)
                                        mem[_17465 + 132] = 128
                                        mem[_17465 + 164] = mem[_17465]
                                        t = 0
                                        while t < mem[_17465]:
                                            mem[_17465 + t + 196] = mem[_17465 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17465] % 32:
                                            require ext_code.size(address(_17464))
                                            call address(_17464).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17016), 128, mem[_17465 + 164 len mem[_17465] + 32]
                                        else:
                                            mem[floor32(mem[_17465]) + _17465 + 196] = mem[floor32(mem[_17465]) + _17465 + -(mem[_17465] % 32) + 228 len mem[_17465] % 32]
                                            require ext_code.size(address(_17464))
                                            call address(_17464).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17016), 128, mem[_17465], mem[_17465 + 196 len floor32(mem[_17465]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17465 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17465 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17188 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17189 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17189 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17189 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_17189 + 68] = 0
                                        mem[_17189 + 100] = this.address
                                        mem[_17189 + 132] = 128
                                        mem[_17189 + 164] = mem[_17189]
                                        t = 0
                                        while t < mem[_17189]:
                                            mem[_17189 + t + 196] = mem[_17189 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17189] % 32:
                                            require ext_code.size(address(_17188))
                                            call address(_17188).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_17189 + 164 len mem[_17189] + 32]
                                        else:
                                            mem[floor32(mem[_17189]) + _17189 + 196] = mem[floor32(mem[_17189]) + _17189 + -(mem[_17189] % 32) + 228 len mem[_17189] % 32]
                                            require ext_code.size(address(_17188))
                                            call address(_17188).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_17189], mem[_17189 + 196 len floor32(mem[_17189]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17189 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17189 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _17018 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17469 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17470 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17470 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17470 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_17470 + 68] = 0
                                        mem[_17470 + 100] = address(_17018)
                                        mem[_17470 + 132] = 128
                                        mem[_17470 + 164] = mem[_17470]
                                        t = 0
                                        while t < mem[_17470]:
                                            mem[_17470 + t + 196] = mem[_17470 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17470] % 32:
                                            require ext_code.size(address(_17469))
                                            call address(_17469).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17018), 128, mem[_17470 + 164 len mem[_17470] + 32]
                                        else:
                                            mem[floor32(mem[_17470]) + _17470 + 196] = mem[floor32(mem[_17470]) + _17470 + -(mem[_17470] % 32) + 228 len mem[_17470] % 32]
                                            require ext_code.size(address(_17469))
                                            call address(_17469).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17018), 128, mem[_17470], mem[_17470 + 196 len floor32(mem[_17470]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17470 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17470 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                continue 
                            require Mask(112, 0, ext_call.return_data[32])
                            if 997 * s * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * s:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                            require idx < mem[96]
                            if mem[(32 * idx) + 140 len 20] == address(_15936):
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _17815 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _17816 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_17816 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_17816 + 36] = 0
                                    mem[_17816 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    mem[_17816 + 100] = this.address
                                    mem[_17816 + 132] = 128
                                    mem[_17816 + 164] = mem[_17816]
                                    t = 0
                                    while t < mem[_17816]:
                                        mem[_17816 + t + 196] = mem[_17816 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_17816] % 32:
                                        require ext_code.size(address(_17815))
                                        call address(_17815).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_17816 + 164 len mem[_17816] + 32]
                                    else:
                                        mem[floor32(mem[_17816]) + _17816 + 196] = mem[floor32(mem[_17816]) + _17816 + -(mem[_17816] % 32) + 228 len mem[_17816] % 32]
                                        require ext_code.size(address(_17815))
                                        call address(_17815).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_17816], mem[_17816 + 196 len floor32(mem[_17816]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_17816 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_17816 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _17474 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18258 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18259 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18259 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18259 + 36] = 0
                                    mem[_18259 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    mem[_18259 + 100] = address(_17474)
                                    mem[_18259 + 132] = 128
                                    mem[_18259 + 164] = mem[_18259]
                                    t = 0
                                    while t < mem[_18259]:
                                        mem[_18259 + t + 196] = mem[_18259 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18259] % 32:
                                        require ext_code.size(address(_18258))
                                        call address(_18258).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17474), 128, mem[_18259 + 164 len mem[_18259] + 32]
                                    else:
                                        mem[floor32(mem[_18259]) + _18259 + 196] = mem[floor32(mem[_18259]) + _18259 + -(mem[_18259] % 32) + 228 len mem[_18259] % 32]
                                        require ext_code.size(address(_18258))
                                        call address(_18258).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17474), 128, mem[_18259], mem[_18259 + 196 len floor32(mem[_18259]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18259 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18259 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _17818 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _17819 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_17819 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_17819 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    mem[_17819 + 68] = 0
                                    mem[_17819 + 100] = this.address
                                    mem[_17819 + 132] = 128
                                    mem[_17819 + 164] = mem[_17819]
                                    t = 0
                                    while t < mem[_17819]:
                                        mem[_17819 + t + 196] = mem[_17819 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_17819] % 32:
                                        require ext_code.size(address(_17818))
                                        call address(_17818).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_17819 + 164 len mem[_17819] + 32]
                                    else:
                                        mem[floor32(mem[_17819]) + _17819 + 196] = mem[floor32(mem[_17819]) + _17819 + -(mem[_17819] % 32) + 228 len mem[_17819] % 32]
                                        require ext_code.size(address(_17818))
                                        call address(_17818).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_17819], mem[_17819 + 196 len floor32(mem[_17819]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_17819 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_17819 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _17476 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18263 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18264 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18264 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18264 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    mem[_18264 + 68] = 0
                                    mem[_18264 + 100] = address(_17476)
                                    mem[_18264 + 132] = 128
                                    mem[_18264 + 164] = mem[_18264]
                                    t = 0
                                    while t < mem[_18264]:
                                        mem[_18264 + t + 196] = mem[_18264 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18264] % 32:
                                        require ext_code.size(address(_18263))
                                        call address(_18263).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17476), 128, mem[_18264 + 164 len mem[_18264] + 32]
                                    else:
                                        mem[floor32(mem[_18264]) + _18264 + 196] = mem[floor32(mem[_18264]) + _18264 + -(mem[_18264] % 32) + 228 len mem[_18264] % 32]
                                        require ext_code.size(address(_18263))
                                        call address(_18263).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17476), 128, mem[_18264], mem[_18264 + 196 len floor32(mem[_18264]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18264 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18264 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                            continue 
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                            require idx < mem[96]
                            if mem[(32 * idx) + 140 len 20] == address(_15936):
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _17193 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _17194 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_17194 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_17194 + 36] = 0
                                    mem[_17194 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_17194 + 100] = this.address
                                    mem[_17194 + 132] = 128
                                    mem[_17194 + 164] = mem[_17194]
                                    t = 0
                                    while t < mem[_17194]:
                                        mem[_17194 + t + 196] = mem[_17194 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_17194] % 32:
                                        require ext_code.size(address(_17193))
                                        call address(_17193).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_17194 + 164 len mem[_17194] + 32]
                                    else:
                                        mem[floor32(mem[_17194]) + _17194 + 196] = mem[floor32(mem[_17194]) + _17194 + -(mem[_17194] % 32) + 228 len mem[_17194] % 32]
                                        require ext_code.size(address(_17193))
                                        call address(_17193).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_17194], mem[_17194 + 196 len floor32(mem[_17194]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_17194 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_17194 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _17022 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _17478 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _17479 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_17479 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_17479 + 36] = 0
                                    mem[_17479 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_17479 + 100] = address(_17022)
                                    mem[_17479 + 132] = 128
                                    mem[_17479 + 164] = mem[_17479]
                                    t = 0
                                    while t < mem[_17479]:
                                        mem[_17479 + t + 196] = mem[_17479 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_17479] % 32:
                                        require ext_code.size(address(_17478))
                                        call address(_17478).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17022), 128, mem[_17479 + 164 len mem[_17479] + 32]
                                    else:
                                        mem[floor32(mem[_17479]) + _17479 + 196] = mem[floor32(mem[_17479]) + _17479 + -(mem[_17479] % 32) + 228 len mem[_17479] % 32]
                                        require ext_code.size(address(_17478))
                                        call address(_17478).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17022), 128, mem[_17479], mem[_17479 + 196 len floor32(mem[_17479]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_17479 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_17479 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _17196 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _17197 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_17197 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_17197 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_17197 + 68] = 0
                                    mem[_17197 + 100] = this.address
                                    mem[_17197 + 132] = 128
                                    mem[_17197 + 164] = mem[_17197]
                                    t = 0
                                    while t < mem[_17197]:
                                        mem[_17197 + t + 196] = mem[_17197 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_17197] % 32:
                                        require ext_code.size(address(_17196))
                                        call address(_17196).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_17197 + 164 len mem[_17197] + 32]
                                    else:
                                        mem[floor32(mem[_17197]) + _17197 + 196] = mem[floor32(mem[_17197]) + _17197 + -(mem[_17197] % 32) + 228 len mem[_17197] % 32]
                                        require ext_code.size(address(_17196))
                                        call address(_17196).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_17197], mem[_17197 + 196 len floor32(mem[_17197]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_17197 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_17197 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _17024 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _17483 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _17484 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_17484 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_17484 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_17484 + 68] = 0
                                    mem[_17484 + 100] = address(_17024)
                                    mem[_17484 + 132] = 128
                                    mem[_17484 + 164] = mem[_17484]
                                    t = 0
                                    while t < mem[_17484]:
                                        mem[_17484 + t + 196] = mem[_17484 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_17484] % 32:
                                        require ext_code.size(address(_17483))
                                        call address(_17483).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17024), 128, mem[_17484 + 164 len mem[_17484] + 32]
                                    else:
                                        mem[floor32(mem[_17484]) + _17484 + 196] = mem[floor32(mem[_17484]) + _17484 + -(mem[_17484] % 32) + 228 len mem[_17484] % 32]
                                        require ext_code.size(address(_17483))
                                        call address(_17483).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17024), 128, mem[_17484], mem[_17484 + 196 len floor32(mem[_17484]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_17484 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_17484 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                            continue 
                        require Mask(112, 0, ext_call.return_data[0])
                        if 997 * s * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * s:
                            revert with 0, 'ds-math-mul-overflow'
                        if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                            revert with 0, 'ds-math-add-overflow'
                        require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                        require idx < mem[96]
                        if mem[(32 * idx) + 140 len 20] == address(_15936):
                            if idx >= mem[(32 * arg1.length) + 128] - 1:
                                require idx < mem[(32 * arg1.length) + 128]
                                _17827 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                _17828 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_17828 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_17828 + 36] = 0
                                mem[_17828 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                mem[_17828 + 100] = this.address
                                mem[_17828 + 132] = 128
                                mem[_17828 + 164] = mem[_17828]
                                t = 0
                                while t < mem[_17828]:
                                    mem[_17828 + t + 196] = mem[_17828 + t + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_17828] % 32:
                                    require ext_code.size(address(_17827))
                                    call address(_17827).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_17828 + 164 len mem[_17828] + 32]
                                else:
                                    mem[floor32(mem[_17828]) + _17828 + 196] = mem[floor32(mem[_17828]) + _17828 + -(mem[_17828] % 32) + 228 len mem[_17828] % 32]
                                    require ext_code.size(address(_17827))
                                    call address(_17827).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_17828], mem[_17828 + 196 len floor32(mem[_17828]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                    require ext_code.size(stor1)
                                    staticcall stor1.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[_17828 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[_17828 + 36] = ext_call.return_data[0]
                                    require ext_code.size(stor1)
                                    call stor1.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require idx + 1 < mem[(32 * arg1.length) + 128]
                                _17488 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                require idx < mem[(32 * arg1.length) + 128]
                                _18270 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                _18271 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_18271 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_18271 + 36] = 0
                                mem[_18271 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                mem[_18271 + 100] = address(_17488)
                                mem[_18271 + 132] = 128
                                mem[_18271 + 164] = mem[_18271]
                                t = 0
                                while t < mem[_18271]:
                                    mem[_18271 + t + 196] = mem[_18271 + t + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_18271] % 32:
                                    require ext_code.size(address(_18270))
                                    call address(_18270).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17488), 128, mem[_18271 + 164 len mem[_18271] + 32]
                                else:
                                    mem[floor32(mem[_18271]) + _18271 + 196] = mem[floor32(mem[_18271]) + _18271 + -(mem[_18271] % 32) + 228 len mem[_18271] % 32]
                                    require ext_code.size(address(_18270))
                                    call address(_18270).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17488), 128, mem[_18271], mem[_18271 + 196 len floor32(mem[_18271]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                    require ext_code.size(stor1)
                                    staticcall stor1.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[_18271 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[_18271 + 36] = ext_call.return_data[0]
                                    require ext_code.size(stor1)
                                    call stor1.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if idx >= mem[(32 * arg1.length) + 128] - 1:
                                require idx < mem[(32 * arg1.length) + 128]
                                _17830 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                _17831 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_17831 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_17831 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                mem[_17831 + 68] = 0
                                mem[_17831 + 100] = this.address
                                mem[_17831 + 132] = 128
                                mem[_17831 + 164] = mem[_17831]
                                t = 0
                                while t < mem[_17831]:
                                    mem[_17831 + t + 196] = mem[_17831 + t + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_17831] % 32:
                                    require ext_code.size(address(_17830))
                                    call address(_17830).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_17831 + 164 len mem[_17831] + 32]
                                else:
                                    mem[floor32(mem[_17831]) + _17831 + 196] = mem[floor32(mem[_17831]) + _17831 + -(mem[_17831] % 32) + 228 len mem[_17831] % 32]
                                    require ext_code.size(address(_17830))
                                    call address(_17830).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_17831], mem[_17831 + 196 len floor32(mem[_17831]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                    require ext_code.size(stor1)
                                    staticcall stor1.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[_17831 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[_17831 + 36] = ext_call.return_data[0]
                                    require ext_code.size(stor1)
                                    call stor1.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require idx + 1 < mem[(32 * arg1.length) + 128]
                                _17490 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                require idx < mem[(32 * arg1.length) + 128]
                                _18275 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                _18276 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_18276 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_18276 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                mem[_18276 + 68] = 0
                                mem[_18276 + 100] = address(_17490)
                                mem[_18276 + 132] = 128
                                mem[_18276 + 164] = mem[_18276]
                                t = 0
                                while t < mem[_18276]:
                                    mem[_18276 + t + 196] = mem[_18276 + t + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_18276] % 32:
                                    require ext_code.size(address(_18275))
                                    call address(_18275).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17490), 128, mem[_18276 + 164 len mem[_18276] + 32]
                                else:
                                    mem[floor32(mem[_18276]) + _18276 + 196] = mem[floor32(mem[_18276]) + _18276 + -(mem[_18276] % 32) + 228 len mem[_18276] % 32]
                                    require ext_code.size(address(_18275))
                                    call address(_18275).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17490), 128, mem[_18276], mem[_18276 + 196 len floor32(mem[_18276]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                    require ext_code.size(stor1)
                                    staticcall stor1.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[_18276 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[_18276 + 36] = ext_call.return_data[0]
                                    require ext_code.size(stor1)
                                    call stor1.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if not mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                        require ext_code.size(mem[(32 * idx) + (32 * arg1.length) + 172 len 20])
                        staticcall mem[(32 * idx) + (32 * arg1.length) + 172 len 20].getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 96
                        if 997 * s / 997 != s:
                            revert with 0, 'ds-math-mul-overflow'
                        if address(_16000) == address(_16019):
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                require idx < mem[96]
                                if mem[(32 * idx) + 140 len 20] == address(_15936):
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17201 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17202 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17202 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17202 + 36] = 0
                                        mem[_17202 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_17202 + 100] = this.address
                                        mem[_17202 + 132] = 128
                                        mem[_17202 + 164] = mem[_17202]
                                        t = 0
                                        while t < mem[_17202]:
                                            mem[_17202 + t + 196] = mem[_17202 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17202] % 32:
                                            require ext_code.size(address(_17201))
                                            call address(_17201).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_17202 + 164 len mem[_17202] + 32]
                                        else:
                                            mem[floor32(mem[_17202]) + _17202 + 196] = mem[floor32(mem[_17202]) + _17202 + -(mem[_17202] % 32) + 228 len mem[_17202] % 32]
                                            require ext_code.size(address(_17201))
                                            call address(_17201).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_17202], mem[_17202 + 196 len floor32(mem[_17202]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17202 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17202 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _17028 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17492 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17493 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17493 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17493 + 36] = 0
                                        mem[_17493 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_17493 + 100] = address(_17028)
                                        mem[_17493 + 132] = 128
                                        mem[_17493 + 164] = mem[_17493]
                                        t = 0
                                        while t < mem[_17493]:
                                            mem[_17493 + t + 196] = mem[_17493 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17493] % 32:
                                            require ext_code.size(address(_17492))
                                            call address(_17492).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17028), 128, mem[_17493 + 164 len mem[_17493] + 32]
                                        else:
                                            mem[floor32(mem[_17493]) + _17493 + 196] = mem[floor32(mem[_17493]) + _17493 + -(mem[_17493] % 32) + 228 len mem[_17493] % 32]
                                            require ext_code.size(address(_17492))
                                            call address(_17492).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17028), 128, mem[_17493], mem[_17493 + 196 len floor32(mem[_17493]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17493 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17493 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17204 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17205 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17205 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17205 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_17205 + 68] = 0
                                        mem[_17205 + 100] = this.address
                                        mem[_17205 + 132] = 128
                                        mem[_17205 + 164] = mem[_17205]
                                        t = 0
                                        while t < mem[_17205]:
                                            mem[_17205 + t + 196] = mem[_17205 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17205] % 32:
                                            require ext_code.size(address(_17204))
                                            call address(_17204).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_17205 + 164 len mem[_17205] + 32]
                                        else:
                                            mem[floor32(mem[_17205]) + _17205 + 196] = mem[floor32(mem[_17205]) + _17205 + -(mem[_17205] % 32) + 228 len mem[_17205] % 32]
                                            require ext_code.size(address(_17204))
                                            call address(_17204).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_17205], mem[_17205 + 196 len floor32(mem[_17205]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17205 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17205 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _17030 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17497 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17498 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17498 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17498 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_17498 + 68] = 0
                                        mem[_17498 + 100] = address(_17030)
                                        mem[_17498 + 132] = 128
                                        mem[_17498 + 164] = mem[_17498]
                                        t = 0
                                        while t < mem[_17498]:
                                            mem[_17498 + t + 196] = mem[_17498 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17498] % 32:
                                            require ext_code.size(address(_17497))
                                            call address(_17497).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17030), 128, mem[_17498 + 164 len mem[_17498] + 32]
                                        else:
                                            mem[floor32(mem[_17498]) + _17498 + 196] = mem[floor32(mem[_17498]) + _17498 + -(mem[_17498] % 32) + 228 len mem[_17498] % 32]
                                            require ext_code.size(address(_17497))
                                            call address(_17497).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17030), 128, mem[_17498], mem[_17498 + 196 len floor32(mem[_17498]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17498 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17498 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                continue 
                            require Mask(112, 0, ext_call.return_data[32])
                            if 997 * s * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * s:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                            require idx < mem[96]
                            if mem[(32 * idx) + 140 len 20] == address(_15936):
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _17839 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _17840 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_17840 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_17840 + 36] = 0
                                    mem[_17840 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    mem[_17840 + 100] = this.address
                                    mem[_17840 + 132] = 128
                                    mem[_17840 + 164] = mem[_17840]
                                    t = 0
                                    while t < mem[_17840]:
                                        mem[_17840 + t + 196] = mem[_17840 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_17840] % 32:
                                        require ext_code.size(address(_17839))
                                        call address(_17839).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_17840 + 164 len mem[_17840] + 32]
                                    else:
                                        mem[floor32(mem[_17840]) + _17840 + 196] = mem[floor32(mem[_17840]) + _17840 + -(mem[_17840] % 32) + 228 len mem[_17840] % 32]
                                        require ext_code.size(address(_17839))
                                        call address(_17839).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_17840], mem[_17840 + 196 len floor32(mem[_17840]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_17840 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_17840 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _17502 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18282 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18283 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18283 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18283 + 36] = 0
                                    mem[_18283 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    mem[_18283 + 100] = address(_17502)
                                    mem[_18283 + 132] = 128
                                    mem[_18283 + 164] = mem[_18283]
                                    t = 0
                                    while t < mem[_18283]:
                                        mem[_18283 + t + 196] = mem[_18283 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18283] % 32:
                                        require ext_code.size(address(_18282))
                                        call address(_18282).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17502), 128, mem[_18283 + 164 len mem[_18283] + 32]
                                    else:
                                        mem[floor32(mem[_18283]) + _18283 + 196] = mem[floor32(mem[_18283]) + _18283 + -(mem[_18283] % 32) + 228 len mem[_18283] % 32]
                                        require ext_code.size(address(_18282))
                                        call address(_18282).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17502), 128, mem[_18283], mem[_18283 + 196 len floor32(mem[_18283]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18283 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18283 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _17842 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _17843 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_17843 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_17843 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    mem[_17843 + 68] = 0
                                    mem[_17843 + 100] = this.address
                                    mem[_17843 + 132] = 128
                                    mem[_17843 + 164] = mem[_17843]
                                    t = 0
                                    while t < mem[_17843]:
                                        mem[_17843 + t + 196] = mem[_17843 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_17843] % 32:
                                        require ext_code.size(address(_17842))
                                        call address(_17842).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_17843 + 164 len mem[_17843] + 32]
                                    else:
                                        mem[floor32(mem[_17843]) + _17843 + 196] = mem[floor32(mem[_17843]) + _17843 + -(mem[_17843] % 32) + 228 len mem[_17843] % 32]
                                        require ext_code.size(address(_17842))
                                        call address(_17842).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_17843], mem[_17843 + 196 len floor32(mem[_17843]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_17843 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_17843 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _17504 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18287 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18288 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18288 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18288 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    mem[_18288 + 68] = 0
                                    mem[_18288 + 100] = address(_17504)
                                    mem[_18288 + 132] = 128
                                    mem[_18288 + 164] = mem[_18288]
                                    t = 0
                                    while t < mem[_18288]:
                                        mem[_18288 + t + 196] = mem[_18288 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18288] % 32:
                                        require ext_code.size(address(_18287))
                                        call address(_18287).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17504), 128, mem[_18288 + 164 len mem[_18288] + 32]
                                    else:
                                        mem[floor32(mem[_18288]) + _18288 + 196] = mem[floor32(mem[_18288]) + _18288 + -(mem[_18288] % 32) + 228 len mem[_18288] % 32]
                                        require ext_code.size(address(_18287))
                                        call address(_18287).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17504), 128, mem[_18288], mem[_18288 + 196 len floor32(mem[_18288]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18288 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18288 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                            continue 
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                            require idx < mem[96]
                            if mem[(32 * idx) + 140 len 20] == address(_15936):
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _17209 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _17210 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_17210 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_17210 + 36] = 0
                                    mem[_17210 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_17210 + 100] = this.address
                                    mem[_17210 + 132] = 128
                                    mem[_17210 + 164] = mem[_17210]
                                    t = 0
                                    while t < mem[_17210]:
                                        mem[_17210 + t + 196] = mem[_17210 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_17210] % 32:
                                        require ext_code.size(address(_17209))
                                        call address(_17209).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_17210 + 164 len mem[_17210] + 32]
                                    else:
                                        mem[floor32(mem[_17210]) + _17210 + 196] = mem[floor32(mem[_17210]) + _17210 + -(mem[_17210] % 32) + 228 len mem[_17210] % 32]
                                        require ext_code.size(address(_17209))
                                        call address(_17209).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_17210], mem[_17210 + 196 len floor32(mem[_17210]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_17210 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_17210 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _17034 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _17506 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _17507 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_17507 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_17507 + 36] = 0
                                    mem[_17507 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_17507 + 100] = address(_17034)
                                    mem[_17507 + 132] = 128
                                    mem[_17507 + 164] = mem[_17507]
                                    t = 0
                                    while t < mem[_17507]:
                                        mem[_17507 + t + 196] = mem[_17507 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_17507] % 32:
                                        require ext_code.size(address(_17506))
                                        call address(_17506).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17034), 128, mem[_17507 + 164 len mem[_17507] + 32]
                                    else:
                                        mem[floor32(mem[_17507]) + _17507 + 196] = mem[floor32(mem[_17507]) + _17507 + -(mem[_17507] % 32) + 228 len mem[_17507] % 32]
                                        require ext_code.size(address(_17506))
                                        call address(_17506).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17034), 128, mem[_17507], mem[_17507 + 196 len floor32(mem[_17507]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_17507 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_17507 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _17212 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _17213 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_17213 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_17213 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_17213 + 68] = 0
                                    mem[_17213 + 100] = this.address
                                    mem[_17213 + 132] = 128
                                    mem[_17213 + 164] = mem[_17213]
                                    t = 0
                                    while t < mem[_17213]:
                                        mem[_17213 + t + 196] = mem[_17213 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_17213] % 32:
                                        require ext_code.size(address(_17212))
                                        call address(_17212).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_17213 + 164 len mem[_17213] + 32]
                                    else:
                                        mem[floor32(mem[_17213]) + _17213 + 196] = mem[floor32(mem[_17213]) + _17213 + -(mem[_17213] % 32) + 228 len mem[_17213] % 32]
                                        require ext_code.size(address(_17212))
                                        call address(_17212).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_17213], mem[_17213 + 196 len floor32(mem[_17213]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_17213 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_17213 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _17036 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _17511 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _17512 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_17512 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_17512 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_17512 + 68] = 0
                                    mem[_17512 + 100] = address(_17036)
                                    mem[_17512 + 132] = 128
                                    mem[_17512 + 164] = mem[_17512]
                                    t = 0
                                    while t < mem[_17512]:
                                        mem[_17512 + t + 196] = mem[_17512 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_17512] % 32:
                                        require ext_code.size(address(_17511))
                                        call address(_17511).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17036), 128, mem[_17512 + 164 len mem[_17512] + 32]
                                    else:
                                        mem[floor32(mem[_17512]) + _17512 + 196] = mem[floor32(mem[_17512]) + _17512 + -(mem[_17512] % 32) + 228 len mem[_17512] % 32]
                                        require ext_code.size(address(_17511))
                                        call address(_17511).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17036), 128, mem[_17512], mem[_17512 + 196 len floor32(mem[_17512]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_17512 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_17512 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                            continue 
                        require Mask(112, 0, ext_call.return_data[0])
                        if 997 * s * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * s:
                            revert with 0, 'ds-math-mul-overflow'
                        if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                            revert with 0, 'ds-math-add-overflow'
                        require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                        require idx < mem[96]
                        if mem[(32 * idx) + 140 len 20] == address(_15936):
                            if idx >= mem[(32 * arg1.length) + 128] - 1:
                                require idx < mem[(32 * arg1.length) + 128]
                                _17851 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                _17852 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_17852 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_17852 + 36] = 0
                                mem[_17852 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                mem[_17852 + 100] = this.address
                                mem[_17852 + 132] = 128
                                mem[_17852 + 164] = mem[_17852]
                                t = 0
                                while t < mem[_17852]:
                                    mem[_17852 + t + 196] = mem[_17852 + t + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_17852] % 32:
                                    require ext_code.size(address(_17851))
                                    call address(_17851).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_17852 + 164 len mem[_17852] + 32]
                                else:
                                    mem[floor32(mem[_17852]) + _17852 + 196] = mem[floor32(mem[_17852]) + _17852 + -(mem[_17852] % 32) + 228 len mem[_17852] % 32]
                                    require ext_code.size(address(_17851))
                                    call address(_17851).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_17852], mem[_17852 + 196 len floor32(mem[_17852]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                    require ext_code.size(stor1)
                                    staticcall stor1.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[_17852 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[_17852 + 36] = ext_call.return_data[0]
                                    require ext_code.size(stor1)
                                    call stor1.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require idx + 1 < mem[(32 * arg1.length) + 128]
                                _17516 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                require idx < mem[(32 * arg1.length) + 128]
                                _18294 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                _18295 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_18295 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_18295 + 36] = 0
                                mem[_18295 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                mem[_18295 + 100] = address(_17516)
                                mem[_18295 + 132] = 128
                                mem[_18295 + 164] = mem[_18295]
                                t = 0
                                while t < mem[_18295]:
                                    mem[_18295 + t + 196] = mem[_18295 + t + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_18295] % 32:
                                    require ext_code.size(address(_18294))
                                    call address(_18294).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17516), 128, mem[_18295 + 164 len mem[_18295] + 32]
                                else:
                                    mem[floor32(mem[_18295]) + _18295 + 196] = mem[floor32(mem[_18295]) + _18295 + -(mem[_18295] % 32) + 228 len mem[_18295] % 32]
                                    require ext_code.size(address(_18294))
                                    call address(_18294).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17516), 128, mem[_18295], mem[_18295 + 196 len floor32(mem[_18295]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                    require ext_code.size(stor1)
                                    staticcall stor1.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[_18295 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[_18295 + 36] = ext_call.return_data[0]
                                    require ext_code.size(stor1)
                                    call stor1.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if idx >= mem[(32 * arg1.length) + 128] - 1:
                                require idx < mem[(32 * arg1.length) + 128]
                                _17854 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                _17855 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_17855 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_17855 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                mem[_17855 + 68] = 0
                                mem[_17855 + 100] = this.address
                                mem[_17855 + 132] = 128
                                mem[_17855 + 164] = mem[_17855]
                                t = 0
                                while t < mem[_17855]:
                                    mem[_17855 + t + 196] = mem[_17855 + t + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_17855] % 32:
                                    require ext_code.size(address(_17854))
                                    call address(_17854).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_17855 + 164 len mem[_17855] + 32]
                                else:
                                    mem[floor32(mem[_17855]) + _17855 + 196] = mem[floor32(mem[_17855]) + _17855 + -(mem[_17855] % 32) + 228 len mem[_17855] % 32]
                                    require ext_code.size(address(_17854))
                                    call address(_17854).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_17855], mem[_17855 + 196 len floor32(mem[_17855]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                    require ext_code.size(stor1)
                                    staticcall stor1.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[_17855 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[_17855 + 36] = ext_call.return_data[0]
                                    require ext_code.size(stor1)
                                    call stor1.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require idx + 1 < mem[(32 * arg1.length) + 128]
                                _17518 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                require idx < mem[(32 * arg1.length) + 128]
                                _18299 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                _18300 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_18300 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_18300 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                mem[_18300 + 68] = 0
                                mem[_18300 + 100] = address(_17518)
                                mem[_18300 + 132] = 128
                                mem[_18300 + 164] = mem[_18300]
                                t = 0
                                while t < mem[_18300]:
                                    mem[_18300 + t + 196] = mem[_18300 + t + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_18300] % 32:
                                    require ext_code.size(address(_18299))
                                    call address(_18299).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17518), 128, mem[_18300 + 164 len mem[_18300] + 32]
                                else:
                                    mem[floor32(mem[_18300]) + _18300 + 196] = mem[floor32(mem[_18300]) + _18300 + -(mem[_18300] % 32) + 228 len mem[_18300] % 32]
                                    require ext_code.size(address(_18299))
                                    call address(_18299).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17518), 128, mem[_18300], mem[_18300 + 196 len floor32(mem[_18300]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                    require ext_code.size(stor1)
                                    staticcall stor1.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[_18300 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[_18300 + 36] = ext_call.return_data[0]
                                    require ext_code.size(stor1)
                                    call stor1.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
            else:
                if idx:
                    require idx < mem[96]
                    _15937 = mem[(32 * idx) + 128]
                    require idx + 1 < mem[96]
                    _15942 = mem[(32 * idx + 1) + 128]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 32, 37, 0xfe556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                    if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                        if not mem[(32 * idx) + 140 len 20]:
                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                        require idx < mem[(32 * arg1.length) + 128]
                        require idx < mem[96]
                        _16020 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _16032 = mem[(32 * idx + 1) + 128]
                        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 32, 37, 0xfe556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                        if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                            if not mem[(32 * idx) + 140 len 20]:
                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                            require ext_code.size(mem[(32 * idx) + (32 * arg1.length) + 172 len 20])
                            staticcall mem[(32 * idx) + (32 * arg1.length) + 172 len 20].getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if 997 * s / 997 != s:
                                revert with 0, 'ds-math-mul-overflow'
                            if address(_16020) == address(_16020):
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    require idx < mem[96]
                                    if mem[(32 * idx) + 140 len 20] == address(_15937):
                                        if idx >= mem[(32 * arg1.length) + 128] - 1:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _17521 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _17522 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_17522 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_17522 + 36] = 0
                                            mem[_17522 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_17522 + 100] = this.address
                                            mem[_17522 + 132] = 128
                                            mem[_17522 + 164] = mem[_17522]
                                            t = 0
                                            while t < mem[_17522]:
                                                mem[_17522 + t + 196] = mem[_17522 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_17522] % 32:
                                                require ext_code.size(address(_17521))
                                                call address(_17521).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_17522 + 164 len mem[_17522] + 32]
                                            else:
                                                mem[floor32(mem[_17522]) + _17522 + 196] = mem[floor32(mem[_17522]) + _17522 + -(mem[_17522] % 32) + 228 len mem[_17522] % 32]
                                                require ext_code.size(address(_17521))
                                                call address(_17521).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_17522], mem[_17522 + 196 len floor32(mem[_17522]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_17522 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_17522 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require idx + 1 < mem[(32 * arg1.length) + 128]
                                            _17216 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _17856 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _17857 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_17857 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_17857 + 36] = 0
                                            mem[_17857 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_17857 + 100] = address(_17216)
                                            mem[_17857 + 132] = 128
                                            mem[_17857 + 164] = mem[_17857]
                                            t = 0
                                            while t < mem[_17857]:
                                                mem[_17857 + t + 196] = mem[_17857 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_17857] % 32:
                                                require ext_code.size(address(_17856))
                                                call address(_17856).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17216), 128, mem[_17857 + 164 len mem[_17857] + 32]
                                            else:
                                                mem[floor32(mem[_17857]) + _17857 + 196] = mem[floor32(mem[_17857]) + _17857 + -(mem[_17857] % 32) + 228 len mem[_17857] % 32]
                                                require ext_code.size(address(_17856))
                                                call address(_17856).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17216), 128, mem[_17857], mem[_17857 + 196 len floor32(mem[_17857]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_17857 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_17857 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        if idx >= mem[(32 * arg1.length) + 128] - 1:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _17524 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _17525 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_17525 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_17525 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_17525 + 68] = 0
                                            mem[_17525 + 100] = this.address
                                            mem[_17525 + 132] = 128
                                            mem[_17525 + 164] = mem[_17525]
                                            t = 0
                                            while t < mem[_17525]:
                                                mem[_17525 + t + 196] = mem[_17525 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_17525] % 32:
                                                require ext_code.size(address(_17524))
                                                call address(_17524).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_17525 + 164 len mem[_17525] + 32]
                                            else:
                                                mem[floor32(mem[_17525]) + _17525 + 196] = mem[floor32(mem[_17525]) + _17525 + -(mem[_17525] % 32) + 228 len mem[_17525] % 32]
                                                require ext_code.size(address(_17524))
                                                call address(_17524).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_17525], mem[_17525 + 196 len floor32(mem[_17525]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_17525 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_17525 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require idx + 1 < mem[(32 * arg1.length) + 128]
                                            _17218 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _17861 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _17862 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_17862 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_17862 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_17862 + 68] = 0
                                            mem[_17862 + 100] = address(_17218)
                                            mem[_17862 + 132] = 128
                                            mem[_17862 + 164] = mem[_17862]
                                            t = 0
                                            while t < mem[_17862]:
                                                mem[_17862 + t + 196] = mem[_17862 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_17862] % 32:
                                                require ext_code.size(address(_17861))
                                                call address(_17861).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17218), 128, mem[_17862 + 164 len mem[_17862] + 32]
                                            else:
                                                mem[floor32(mem[_17862]) + _17862 + 196] = mem[floor32(mem[_17862]) + _17862 + -(mem[_17862] % 32) + 228 len mem[_17862] % 32]
                                                require ext_code.size(address(_17861))
                                                call address(_17861).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17218), 128, mem[_17862], mem[_17862 + 196 len floor32(mem[_17862]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_17862 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_17862 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    continue 
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * s * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * s:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                require idx < mem[96]
                                if mem[(32 * idx) + 140 len 20] == address(_15937):
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _18311 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _18312 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_18312 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_18312 + 36] = 0
                                        mem[_18312 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_18312 + 100] = this.address
                                        mem[_18312 + 132] = 128
                                        mem[_18312 + 164] = mem[_18312]
                                        t = 0
                                        while t < mem[_18312]:
                                            mem[_18312 + t + 196] = mem[_18312 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_18312] % 32:
                                            require ext_code.size(address(_18311))
                                            call address(_18311).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_18312 + 164 len mem[_18312] + 32]
                                        else:
                                            mem[floor32(mem[_18312]) + _18312 + 196] = mem[floor32(mem[_18312]) + _18312 + -(mem[_18312] % 32) + 228 len mem[_18312] % 32]
                                            require ext_code.size(address(_18311))
                                            call address(_18311).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_18312], mem[_18312 + 196 len floor32(mem[_18312]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_18312 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_18312 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _17866 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _18706 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _18707 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_18707 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_18707 + 36] = 0
                                        mem[_18707 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_18707 + 100] = address(_17866)
                                        mem[_18707 + 132] = 128
                                        mem[_18707 + 164] = mem[_18707]
                                        t = 0
                                        while t < mem[_18707]:
                                            mem[_18707 + t + 196] = mem[_18707 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_18707] % 32:
                                            require ext_code.size(address(_18706))
                                            call address(_18706).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17866), 128, mem[_18707 + 164 len mem[_18707] + 32]
                                        else:
                                            mem[floor32(mem[_18707]) + _18707 + 196] = mem[floor32(mem[_18707]) + _18707 + -(mem[_18707] % 32) + 228 len mem[_18707] % 32]
                                            require ext_code.size(address(_18706))
                                            call address(_18706).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17866), 128, mem[_18707], mem[_18707 + 196 len floor32(mem[_18707]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_18707 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_18707 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _18314 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _18315 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_18315 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_18315 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_18315 + 68] = 0
                                        mem[_18315 + 100] = this.address
                                        mem[_18315 + 132] = 128
                                        mem[_18315 + 164] = mem[_18315]
                                        t = 0
                                        while t < mem[_18315]:
                                            mem[_18315 + t + 196] = mem[_18315 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_18315] % 32:
                                            require ext_code.size(address(_18314))
                                            call address(_18314).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_18315 + 164 len mem[_18315] + 32]
                                        else:
                                            mem[floor32(mem[_18315]) + _18315 + 196] = mem[floor32(mem[_18315]) + _18315 + -(mem[_18315] % 32) + 228 len mem[_18315] % 32]
                                            require ext_code.size(address(_18314))
                                            call address(_18314).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_18315], mem[_18315 + 196 len floor32(mem[_18315]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_18315 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_18315 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _17868 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _18711 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _18712 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_18712 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_18712 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_18712 + 68] = 0
                                        mem[_18712 + 100] = address(_17868)
                                        mem[_18712 + 132] = 128
                                        mem[_18712 + 164] = mem[_18712]
                                        t = 0
                                        while t < mem[_18712]:
                                            mem[_18712 + t + 196] = mem[_18712 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_18712] % 32:
                                            require ext_code.size(address(_18711))
                                            call address(_18711).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17868), 128, mem[_18712 + 164 len mem[_18712] + 32]
                                        else:
                                            mem[floor32(mem[_18712]) + _18712 + 196] = mem[floor32(mem[_18712]) + _18712 + -(mem[_18712] % 32) + 228 len mem[_18712] % 32]
                                            require ext_code.size(address(_18711))
                                            call address(_18711).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17868), 128, mem[_18712], mem[_18712 + 196 len floor32(mem[_18712]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_18712 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_18712 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                continue 
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                require idx < mem[96]
                                if mem[(32 * idx) + 140 len 20] == address(_15937):
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17529 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17530 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17530 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17530 + 36] = 0
                                        mem[_17530 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_17530 + 100] = this.address
                                        mem[_17530 + 132] = 128
                                        mem[_17530 + 164] = mem[_17530]
                                        t = 0
                                        while t < mem[_17530]:
                                            mem[_17530 + t + 196] = mem[_17530 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17530] % 32:
                                            require ext_code.size(address(_17529))
                                            call address(_17529).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_17530 + 164 len mem[_17530] + 32]
                                        else:
                                            mem[floor32(mem[_17530]) + _17530 + 196] = mem[floor32(mem[_17530]) + _17530 + -(mem[_17530] % 32) + 228 len mem[_17530] % 32]
                                            require ext_code.size(address(_17529))
                                            call address(_17529).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_17530], mem[_17530 + 196 len floor32(mem[_17530]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17530 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17530 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _17222 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17870 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17871 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17871 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17871 + 36] = 0
                                        mem[_17871 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_17871 + 100] = address(_17222)
                                        mem[_17871 + 132] = 128
                                        mem[_17871 + 164] = mem[_17871]
                                        t = 0
                                        while t < mem[_17871]:
                                            mem[_17871 + t + 196] = mem[_17871 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17871] % 32:
                                            require ext_code.size(address(_17870))
                                            call address(_17870).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17222), 128, mem[_17871 + 164 len mem[_17871] + 32]
                                        else:
                                            mem[floor32(mem[_17871]) + _17871 + 196] = mem[floor32(mem[_17871]) + _17871 + -(mem[_17871] % 32) + 228 len mem[_17871] % 32]
                                            require ext_code.size(address(_17870))
                                            call address(_17870).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17222), 128, mem[_17871], mem[_17871 + 196 len floor32(mem[_17871]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17871 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17871 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17532 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17533 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17533 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17533 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_17533 + 68] = 0
                                        mem[_17533 + 100] = this.address
                                        mem[_17533 + 132] = 128
                                        mem[_17533 + 164] = mem[_17533]
                                        t = 0
                                        while t < mem[_17533]:
                                            mem[_17533 + t + 196] = mem[_17533 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17533] % 32:
                                            require ext_code.size(address(_17532))
                                            call address(_17532).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_17533 + 164 len mem[_17533] + 32]
                                        else:
                                            mem[floor32(mem[_17533]) + _17533 + 196] = mem[floor32(mem[_17533]) + _17533 + -(mem[_17533] % 32) + 228 len mem[_17533] % 32]
                                            require ext_code.size(address(_17532))
                                            call address(_17532).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_17533], mem[_17533 + 196 len floor32(mem[_17533]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17533 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17533 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _17224 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17875 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17876 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17876 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17876 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_17876 + 68] = 0
                                        mem[_17876 + 100] = address(_17224)
                                        mem[_17876 + 132] = 128
                                        mem[_17876 + 164] = mem[_17876]
                                        t = 0
                                        while t < mem[_17876]:
                                            mem[_17876 + t + 196] = mem[_17876 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17876] % 32:
                                            require ext_code.size(address(_17875))
                                            call address(_17875).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17224), 128, mem[_17876 + 164 len mem[_17876] + 32]
                                        else:
                                            mem[floor32(mem[_17876]) + _17876 + 196] = mem[floor32(mem[_17876]) + _17876 + -(mem[_17876] % 32) + 228 len mem[_17876] % 32]
                                            require ext_code.size(address(_17875))
                                            call address(_17875).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17224), 128, mem[_17876], mem[_17876 + 196 len floor32(mem[_17876]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17876 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17876 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                continue 
                            require Mask(112, 0, ext_call.return_data[0])
                            if 997 * s * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * s:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                            require idx < mem[96]
                            if mem[(32 * idx) + 140 len 20] == address(_15937):
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18323 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18324 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18324 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18324 + 36] = 0
                                    mem[_18324 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_18324 + 100] = this.address
                                    mem[_18324 + 132] = 128
                                    mem[_18324 + 164] = mem[_18324]
                                    t = 0
                                    while t < mem[_18324]:
                                        mem[_18324 + t + 196] = mem[_18324 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18324] % 32:
                                        require ext_code.size(address(_18323))
                                        call address(_18323).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_18324 + 164 len mem[_18324] + 32]
                                    else:
                                        mem[floor32(mem[_18324]) + _18324 + 196] = mem[floor32(mem[_18324]) + _18324 + -(mem[_18324] % 32) + 228 len mem[_18324] % 32]
                                        require ext_code.size(address(_18323))
                                        call address(_18323).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_18324], mem[_18324 + 196 len floor32(mem[_18324]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18324 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18324 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _17880 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18718 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18719 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18719 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18719 + 36] = 0
                                    mem[_18719 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_18719 + 100] = address(_17880)
                                    mem[_18719 + 132] = 128
                                    mem[_18719 + 164] = mem[_18719]
                                    t = 0
                                    while t < mem[_18719]:
                                        mem[_18719 + t + 196] = mem[_18719 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18719] % 32:
                                        require ext_code.size(address(_18718))
                                        call address(_18718).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17880), 128, mem[_18719 + 164 len mem[_18719] + 32]
                                    else:
                                        mem[floor32(mem[_18719]) + _18719 + 196] = mem[floor32(mem[_18719]) + _18719 + -(mem[_18719] % 32) + 228 len mem[_18719] % 32]
                                        require ext_code.size(address(_18718))
                                        call address(_18718).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17880), 128, mem[_18719], mem[_18719 + 196 len floor32(mem[_18719]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18719 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18719 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18326 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18327 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18327 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18327 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_18327 + 68] = 0
                                    mem[_18327 + 100] = this.address
                                    mem[_18327 + 132] = 128
                                    mem[_18327 + 164] = mem[_18327]
                                    t = 0
                                    while t < mem[_18327]:
                                        mem[_18327 + t + 196] = mem[_18327 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18327] % 32:
                                        require ext_code.size(address(_18326))
                                        call address(_18326).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_18327 + 164 len mem[_18327] + 32]
                                    else:
                                        mem[floor32(mem[_18327]) + _18327 + 196] = mem[floor32(mem[_18327]) + _18327 + -(mem[_18327] % 32) + 228 len mem[_18327] % 32]
                                        require ext_code.size(address(_18326))
                                        call address(_18326).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_18327], mem[_18327 + 196 len floor32(mem[_18327]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18327 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18327 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _17882 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18723 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18724 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18724 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18724 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_18724 + 68] = 0
                                    mem[_18724 + 100] = address(_17882)
                                    mem[_18724 + 132] = 128
                                    mem[_18724 + 164] = mem[_18724]
                                    t = 0
                                    while t < mem[_18724]:
                                        mem[_18724 + t + 196] = mem[_18724 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18724] % 32:
                                        require ext_code.size(address(_18723))
                                        call address(_18723).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17882), 128, mem[_18724 + 164 len mem[_18724] + 32]
                                    else:
                                        mem[floor32(mem[_18724]) + _18724 + 196] = mem[floor32(mem[_18724]) + _18724 + -(mem[_18724] % 32) + 228 len mem[_18724] % 32]
                                        require ext_code.size(address(_18723))
                                        call address(_18723).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17882), 128, mem[_18724], mem[_18724 + 196 len floor32(mem[_18724]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18724 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18724 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if not mem[(32 * idx + 1) + 140 len 20]:
                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                            require ext_code.size(mem[(32 * idx) + (32 * arg1.length) + 172 len 20])
                            staticcall mem[(32 * idx) + (32 * arg1.length) + 172 len 20].getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if 997 * s / 997 != s:
                                revert with 0, 'ds-math-mul-overflow'
                            if address(_16020) == address(_16032):
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    require idx < mem[96]
                                    if mem[(32 * idx) + 140 len 20] == address(_15937):
                                        if idx >= mem[(32 * arg1.length) + 128] - 1:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _17537 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _17538 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_17538 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_17538 + 36] = 0
                                            mem[_17538 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_17538 + 100] = this.address
                                            mem[_17538 + 132] = 128
                                            mem[_17538 + 164] = mem[_17538]
                                            t = 0
                                            while t < mem[_17538]:
                                                mem[_17538 + t + 196] = mem[_17538 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_17538] % 32:
                                                require ext_code.size(address(_17537))
                                                call address(_17537).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_17538 + 164 len mem[_17538] + 32]
                                            else:
                                                mem[floor32(mem[_17538]) + _17538 + 196] = mem[floor32(mem[_17538]) + _17538 + -(mem[_17538] % 32) + 228 len mem[_17538] % 32]
                                                require ext_code.size(address(_17537))
                                                call address(_17537).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_17538], mem[_17538 + 196 len floor32(mem[_17538]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_17538 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_17538 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require idx + 1 < mem[(32 * arg1.length) + 128]
                                            _17228 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _17884 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _17885 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_17885 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_17885 + 36] = 0
                                            mem[_17885 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_17885 + 100] = address(_17228)
                                            mem[_17885 + 132] = 128
                                            mem[_17885 + 164] = mem[_17885]
                                            t = 0
                                            while t < mem[_17885]:
                                                mem[_17885 + t + 196] = mem[_17885 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_17885] % 32:
                                                require ext_code.size(address(_17884))
                                                call address(_17884).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17228), 128, mem[_17885 + 164 len mem[_17885] + 32]
                                            else:
                                                mem[floor32(mem[_17885]) + _17885 + 196] = mem[floor32(mem[_17885]) + _17885 + -(mem[_17885] % 32) + 228 len mem[_17885] % 32]
                                                require ext_code.size(address(_17884))
                                                call address(_17884).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17228), 128, mem[_17885], mem[_17885 + 196 len floor32(mem[_17885]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_17885 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_17885 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        if idx >= mem[(32 * arg1.length) + 128] - 1:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _17540 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _17541 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_17541 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_17541 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_17541 + 68] = 0
                                            mem[_17541 + 100] = this.address
                                            mem[_17541 + 132] = 128
                                            mem[_17541 + 164] = mem[_17541]
                                            t = 0
                                            while t < mem[_17541]:
                                                mem[_17541 + t + 196] = mem[_17541 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_17541] % 32:
                                                require ext_code.size(address(_17540))
                                                call address(_17540).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_17541 + 164 len mem[_17541] + 32]
                                            else:
                                                mem[floor32(mem[_17541]) + _17541 + 196] = mem[floor32(mem[_17541]) + _17541 + -(mem[_17541] % 32) + 228 len mem[_17541] % 32]
                                                require ext_code.size(address(_17540))
                                                call address(_17540).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_17541], mem[_17541 + 196 len floor32(mem[_17541]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_17541 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_17541 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require idx + 1 < mem[(32 * arg1.length) + 128]
                                            _17230 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _17889 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _17890 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_17890 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_17890 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_17890 + 68] = 0
                                            mem[_17890 + 100] = address(_17230)
                                            mem[_17890 + 132] = 128
                                            mem[_17890 + 164] = mem[_17890]
                                            t = 0
                                            while t < mem[_17890]:
                                                mem[_17890 + t + 196] = mem[_17890 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_17890] % 32:
                                                require ext_code.size(address(_17889))
                                                call address(_17889).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17230), 128, mem[_17890 + 164 len mem[_17890] + 32]
                                            else:
                                                mem[floor32(mem[_17890]) + _17890 + 196] = mem[floor32(mem[_17890]) + _17890 + -(mem[_17890] % 32) + 228 len mem[_17890] % 32]
                                                require ext_code.size(address(_17889))
                                                call address(_17889).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17230), 128, mem[_17890], mem[_17890 + 196 len floor32(mem[_17890]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_17890 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_17890 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    continue 
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * s * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * s:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                require idx < mem[96]
                                if mem[(32 * idx) + 140 len 20] == address(_15937):
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _18335 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _18336 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_18336 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_18336 + 36] = 0
                                        mem[_18336 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_18336 + 100] = this.address
                                        mem[_18336 + 132] = 128
                                        mem[_18336 + 164] = mem[_18336]
                                        t = 0
                                        while t < mem[_18336]:
                                            mem[_18336 + t + 196] = mem[_18336 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_18336] % 32:
                                            require ext_code.size(address(_18335))
                                            call address(_18335).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_18336 + 164 len mem[_18336] + 32]
                                        else:
                                            mem[floor32(mem[_18336]) + _18336 + 196] = mem[floor32(mem[_18336]) + _18336 + -(mem[_18336] % 32) + 228 len mem[_18336] % 32]
                                            require ext_code.size(address(_18335))
                                            call address(_18335).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_18336], mem[_18336 + 196 len floor32(mem[_18336]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_18336 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_18336 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _17894 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _18730 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _18731 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_18731 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_18731 + 36] = 0
                                        mem[_18731 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_18731 + 100] = address(_17894)
                                        mem[_18731 + 132] = 128
                                        mem[_18731 + 164] = mem[_18731]
                                        t = 0
                                        while t < mem[_18731]:
                                            mem[_18731 + t + 196] = mem[_18731 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_18731] % 32:
                                            require ext_code.size(address(_18730))
                                            call address(_18730).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17894), 128, mem[_18731 + 164 len mem[_18731] + 32]
                                        else:
                                            mem[floor32(mem[_18731]) + _18731 + 196] = mem[floor32(mem[_18731]) + _18731 + -(mem[_18731] % 32) + 228 len mem[_18731] % 32]
                                            require ext_code.size(address(_18730))
                                            call address(_18730).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17894), 128, mem[_18731], mem[_18731 + 196 len floor32(mem[_18731]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_18731 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_18731 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _18338 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _18339 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_18339 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_18339 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_18339 + 68] = 0
                                        mem[_18339 + 100] = this.address
                                        mem[_18339 + 132] = 128
                                        mem[_18339 + 164] = mem[_18339]
                                        t = 0
                                        while t < mem[_18339]:
                                            mem[_18339 + t + 196] = mem[_18339 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_18339] % 32:
                                            require ext_code.size(address(_18338))
                                            call address(_18338).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_18339 + 164 len mem[_18339] + 32]
                                        else:
                                            mem[floor32(mem[_18339]) + _18339 + 196] = mem[floor32(mem[_18339]) + _18339 + -(mem[_18339] % 32) + 228 len mem[_18339] % 32]
                                            require ext_code.size(address(_18338))
                                            call address(_18338).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_18339], mem[_18339 + 196 len floor32(mem[_18339]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_18339 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_18339 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _17896 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _18735 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _18736 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_18736 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_18736 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_18736 + 68] = 0
                                        mem[_18736 + 100] = address(_17896)
                                        mem[_18736 + 132] = 128
                                        mem[_18736 + 164] = mem[_18736]
                                        t = 0
                                        while t < mem[_18736]:
                                            mem[_18736 + t + 196] = mem[_18736 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_18736] % 32:
                                            require ext_code.size(address(_18735))
                                            call address(_18735).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17896), 128, mem[_18736 + 164 len mem[_18736] + 32]
                                        else:
                                            mem[floor32(mem[_18736]) + _18736 + 196] = mem[floor32(mem[_18736]) + _18736 + -(mem[_18736] % 32) + 228 len mem[_18736] % 32]
                                            require ext_code.size(address(_18735))
                                            call address(_18735).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17896), 128, mem[_18736], mem[_18736 + 196 len floor32(mem[_18736]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_18736 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_18736 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                continue 
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                require idx < mem[96]
                                if mem[(32 * idx) + 140 len 20] == address(_15937):
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17545 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17546 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17546 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17546 + 36] = 0
                                        mem[_17546 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_17546 + 100] = this.address
                                        mem[_17546 + 132] = 128
                                        mem[_17546 + 164] = mem[_17546]
                                        t = 0
                                        while t < mem[_17546]:
                                            mem[_17546 + t + 196] = mem[_17546 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17546] % 32:
                                            require ext_code.size(address(_17545))
                                            call address(_17545).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_17546 + 164 len mem[_17546] + 32]
                                        else:
                                            mem[floor32(mem[_17546]) + _17546 + 196] = mem[floor32(mem[_17546]) + _17546 + -(mem[_17546] % 32) + 228 len mem[_17546] % 32]
                                            require ext_code.size(address(_17545))
                                            call address(_17545).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_17546], mem[_17546 + 196 len floor32(mem[_17546]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17546 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17546 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _17234 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17898 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17899 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17899 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17899 + 36] = 0
                                        mem[_17899 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_17899 + 100] = address(_17234)
                                        mem[_17899 + 132] = 128
                                        mem[_17899 + 164] = mem[_17899]
                                        t = 0
                                        while t < mem[_17899]:
                                            mem[_17899 + t + 196] = mem[_17899 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17899] % 32:
                                            require ext_code.size(address(_17898))
                                            call address(_17898).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17234), 128, mem[_17899 + 164 len mem[_17899] + 32]
                                        else:
                                            mem[floor32(mem[_17899]) + _17899 + 196] = mem[floor32(mem[_17899]) + _17899 + -(mem[_17899] % 32) + 228 len mem[_17899] % 32]
                                            require ext_code.size(address(_17898))
                                            call address(_17898).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17234), 128, mem[_17899], mem[_17899 + 196 len floor32(mem[_17899]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17899 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17899 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17548 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17549 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17549 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17549 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_17549 + 68] = 0
                                        mem[_17549 + 100] = this.address
                                        mem[_17549 + 132] = 128
                                        mem[_17549 + 164] = mem[_17549]
                                        t = 0
                                        while t < mem[_17549]:
                                            mem[_17549 + t + 196] = mem[_17549 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17549] % 32:
                                            require ext_code.size(address(_17548))
                                            call address(_17548).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_17549 + 164 len mem[_17549] + 32]
                                        else:
                                            mem[floor32(mem[_17549]) + _17549 + 196] = mem[floor32(mem[_17549]) + _17549 + -(mem[_17549] % 32) + 228 len mem[_17549] % 32]
                                            require ext_code.size(address(_17548))
                                            call address(_17548).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_17549], mem[_17549 + 196 len floor32(mem[_17549]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17549 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17549 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _17236 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17903 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17904 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17904 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17904 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_17904 + 68] = 0
                                        mem[_17904 + 100] = address(_17236)
                                        mem[_17904 + 132] = 128
                                        mem[_17904 + 164] = mem[_17904]
                                        t = 0
                                        while t < mem[_17904]:
                                            mem[_17904 + t + 196] = mem[_17904 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17904] % 32:
                                            require ext_code.size(address(_17903))
                                            call address(_17903).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17236), 128, mem[_17904 + 164 len mem[_17904] + 32]
                                        else:
                                            mem[floor32(mem[_17904]) + _17904 + 196] = mem[floor32(mem[_17904]) + _17904 + -(mem[_17904] % 32) + 228 len mem[_17904] % 32]
                                            require ext_code.size(address(_17903))
                                            call address(_17903).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17236), 128, mem[_17904], mem[_17904 + 196 len floor32(mem[_17904]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17904 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17904 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                continue 
                            require Mask(112, 0, ext_call.return_data[0])
                            if 997 * s * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * s:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                            require idx < mem[96]
                            if mem[(32 * idx) + 140 len 20] == address(_15937):
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18347 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18348 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18348 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18348 + 36] = 0
                                    mem[_18348 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_18348 + 100] = this.address
                                    mem[_18348 + 132] = 128
                                    mem[_18348 + 164] = mem[_18348]
                                    t = 0
                                    while t < mem[_18348]:
                                        mem[_18348 + t + 196] = mem[_18348 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18348] % 32:
                                        require ext_code.size(address(_18347))
                                        call address(_18347).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_18348 + 164 len mem[_18348] + 32]
                                    else:
                                        mem[floor32(mem[_18348]) + _18348 + 196] = mem[floor32(mem[_18348]) + _18348 + -(mem[_18348] % 32) + 228 len mem[_18348] % 32]
                                        require ext_code.size(address(_18347))
                                        call address(_18347).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_18348], mem[_18348 + 196 len floor32(mem[_18348]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18348 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18348 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _17908 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18742 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18743 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18743 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18743 + 36] = 0
                                    mem[_18743 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_18743 + 100] = address(_17908)
                                    mem[_18743 + 132] = 128
                                    mem[_18743 + 164] = mem[_18743]
                                    t = 0
                                    while t < mem[_18743]:
                                        mem[_18743 + t + 196] = mem[_18743 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18743] % 32:
                                        require ext_code.size(address(_18742))
                                        call address(_18742).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17908), 128, mem[_18743 + 164 len mem[_18743] + 32]
                                    else:
                                        mem[floor32(mem[_18743]) + _18743 + 196] = mem[floor32(mem[_18743]) + _18743 + -(mem[_18743] % 32) + 228 len mem[_18743] % 32]
                                        require ext_code.size(address(_18742))
                                        call address(_18742).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17908), 128, mem[_18743], mem[_18743 + 196 len floor32(mem[_18743]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18743 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18743 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18350 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18351 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18351 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18351 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_18351 + 68] = 0
                                    mem[_18351 + 100] = this.address
                                    mem[_18351 + 132] = 128
                                    mem[_18351 + 164] = mem[_18351]
                                    t = 0
                                    while t < mem[_18351]:
                                        mem[_18351 + t + 196] = mem[_18351 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18351] % 32:
                                        require ext_code.size(address(_18350))
                                        call address(_18350).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_18351 + 164 len mem[_18351] + 32]
                                    else:
                                        mem[floor32(mem[_18351]) + _18351 + 196] = mem[floor32(mem[_18351]) + _18351 + -(mem[_18351] % 32) + 228 len mem[_18351] % 32]
                                        require ext_code.size(address(_18350))
                                        call address(_18350).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_18351], mem[_18351 + 196 len floor32(mem[_18351]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18351 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18351 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _17910 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18747 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18748 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18748 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18748 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_18748 + 68] = 0
                                    mem[_18748 + 100] = address(_17910)
                                    mem[_18748 + 132] = 128
                                    mem[_18748 + 164] = mem[_18748]
                                    t = 0
                                    while t < mem[_18748]:
                                        mem[_18748 + t + 196] = mem[_18748 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18748] % 32:
                                        require ext_code.size(address(_18747))
                                        call address(_18747).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17910), 128, mem[_18748 + 164 len mem[_18748] + 32]
                                    else:
                                        mem[floor32(mem[_18748]) + _18748 + 196] = mem[floor32(mem[_18748]) + _18748 + -(mem[_18748] % 32) + 228 len mem[_18748] % 32]
                                        require ext_code.size(address(_18747))
                                        call address(_18747).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17910), 128, mem[_18748], mem[_18748 + 196 len floor32(mem[_18748]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18748 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18748 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if not mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                        require idx < mem[(32 * arg1.length) + 128]
                        require idx < mem[96]
                        _16022 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _16033 = mem[(32 * idx + 1) + 128]
                        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 32, 37, 0xfe556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                        if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                            if not mem[(32 * idx) + 140 len 20]:
                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                            require ext_code.size(mem[(32 * idx) + (32 * arg1.length) + 172 len 20])
                            staticcall mem[(32 * idx) + (32 * arg1.length) + 172 len 20].getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if 997 * s / 997 != s:
                                revert with 0, 'ds-math-mul-overflow'
                            if address(_16022) == address(_16022):
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    require idx < mem[96]
                                    if mem[(32 * idx) + 140 len 20] == address(_15942):
                                        if idx >= mem[(32 * arg1.length) + 128] - 1:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _17553 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _17554 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_17554 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_17554 + 36] = 0
                                            mem[_17554 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_17554 + 100] = this.address
                                            mem[_17554 + 132] = 128
                                            mem[_17554 + 164] = mem[_17554]
                                            t = 0
                                            while t < mem[_17554]:
                                                mem[_17554 + t + 196] = mem[_17554 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_17554] % 32:
                                                require ext_code.size(address(_17553))
                                                call address(_17553).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_17554 + 164 len mem[_17554] + 32]
                                            else:
                                                mem[floor32(mem[_17554]) + _17554 + 196] = mem[floor32(mem[_17554]) + _17554 + -(mem[_17554] % 32) + 228 len mem[_17554] % 32]
                                                require ext_code.size(address(_17553))
                                                call address(_17553).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_17554], mem[_17554 + 196 len floor32(mem[_17554]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_17554 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_17554 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require idx + 1 < mem[(32 * arg1.length) + 128]
                                            _17240 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _17912 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _17913 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_17913 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_17913 + 36] = 0
                                            mem[_17913 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_17913 + 100] = address(_17240)
                                            mem[_17913 + 132] = 128
                                            mem[_17913 + 164] = mem[_17913]
                                            t = 0
                                            while t < mem[_17913]:
                                                mem[_17913 + t + 196] = mem[_17913 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_17913] % 32:
                                                require ext_code.size(address(_17912))
                                                call address(_17912).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17240), 128, mem[_17913 + 164 len mem[_17913] + 32]
                                            else:
                                                mem[floor32(mem[_17913]) + _17913 + 196] = mem[floor32(mem[_17913]) + _17913 + -(mem[_17913] % 32) + 228 len mem[_17913] % 32]
                                                require ext_code.size(address(_17912))
                                                call address(_17912).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17240), 128, mem[_17913], mem[_17913 + 196 len floor32(mem[_17913]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_17913 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_17913 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        if idx >= mem[(32 * arg1.length) + 128] - 1:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _17556 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _17557 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_17557 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_17557 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_17557 + 68] = 0
                                            mem[_17557 + 100] = this.address
                                            mem[_17557 + 132] = 128
                                            mem[_17557 + 164] = mem[_17557]
                                            t = 0
                                            while t < mem[_17557]:
                                                mem[_17557 + t + 196] = mem[_17557 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_17557] % 32:
                                                require ext_code.size(address(_17556))
                                                call address(_17556).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_17557 + 164 len mem[_17557] + 32]
                                            else:
                                                mem[floor32(mem[_17557]) + _17557 + 196] = mem[floor32(mem[_17557]) + _17557 + -(mem[_17557] % 32) + 228 len mem[_17557] % 32]
                                                require ext_code.size(address(_17556))
                                                call address(_17556).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_17557], mem[_17557 + 196 len floor32(mem[_17557]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_17557 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_17557 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require idx + 1 < mem[(32 * arg1.length) + 128]
                                            _17242 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _17917 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _17918 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_17918 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_17918 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_17918 + 68] = 0
                                            mem[_17918 + 100] = address(_17242)
                                            mem[_17918 + 132] = 128
                                            mem[_17918 + 164] = mem[_17918]
                                            t = 0
                                            while t < mem[_17918]:
                                                mem[_17918 + t + 196] = mem[_17918 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_17918] % 32:
                                                require ext_code.size(address(_17917))
                                                call address(_17917).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17242), 128, mem[_17918 + 164 len mem[_17918] + 32]
                                            else:
                                                mem[floor32(mem[_17918]) + _17918 + 196] = mem[floor32(mem[_17918]) + _17918 + -(mem[_17918] % 32) + 228 len mem[_17918] % 32]
                                                require ext_code.size(address(_17917))
                                                call address(_17917).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17242), 128, mem[_17918], mem[_17918 + 196 len floor32(mem[_17918]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_17918 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_17918 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    continue 
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * s * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * s:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                require idx < mem[96]
                                if mem[(32 * idx) + 140 len 20] == address(_15942):
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _18359 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _18360 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_18360 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_18360 + 36] = 0
                                        mem[_18360 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_18360 + 100] = this.address
                                        mem[_18360 + 132] = 128
                                        mem[_18360 + 164] = mem[_18360]
                                        t = 0
                                        while t < mem[_18360]:
                                            mem[_18360 + t + 196] = mem[_18360 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_18360] % 32:
                                            require ext_code.size(address(_18359))
                                            call address(_18359).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_18360 + 164 len mem[_18360] + 32]
                                        else:
                                            mem[floor32(mem[_18360]) + _18360 + 196] = mem[floor32(mem[_18360]) + _18360 + -(mem[_18360] % 32) + 228 len mem[_18360] % 32]
                                            require ext_code.size(address(_18359))
                                            call address(_18359).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_18360], mem[_18360 + 196 len floor32(mem[_18360]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_18360 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_18360 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _17922 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _18754 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _18755 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_18755 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_18755 + 36] = 0
                                        mem[_18755 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_18755 + 100] = address(_17922)
                                        mem[_18755 + 132] = 128
                                        mem[_18755 + 164] = mem[_18755]
                                        t = 0
                                        while t < mem[_18755]:
                                            mem[_18755 + t + 196] = mem[_18755 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_18755] % 32:
                                            require ext_code.size(address(_18754))
                                            call address(_18754).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17922), 128, mem[_18755 + 164 len mem[_18755] + 32]
                                        else:
                                            mem[floor32(mem[_18755]) + _18755 + 196] = mem[floor32(mem[_18755]) + _18755 + -(mem[_18755] % 32) + 228 len mem[_18755] % 32]
                                            require ext_code.size(address(_18754))
                                            call address(_18754).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17922), 128, mem[_18755], mem[_18755 + 196 len floor32(mem[_18755]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_18755 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_18755 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _18362 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _18363 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_18363 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_18363 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_18363 + 68] = 0
                                        mem[_18363 + 100] = this.address
                                        mem[_18363 + 132] = 128
                                        mem[_18363 + 164] = mem[_18363]
                                        t = 0
                                        while t < mem[_18363]:
                                            mem[_18363 + t + 196] = mem[_18363 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_18363] % 32:
                                            require ext_code.size(address(_18362))
                                            call address(_18362).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_18363 + 164 len mem[_18363] + 32]
                                        else:
                                            mem[floor32(mem[_18363]) + _18363 + 196] = mem[floor32(mem[_18363]) + _18363 + -(mem[_18363] % 32) + 228 len mem[_18363] % 32]
                                            require ext_code.size(address(_18362))
                                            call address(_18362).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_18363], mem[_18363 + 196 len floor32(mem[_18363]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_18363 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_18363 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _17924 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _18759 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _18760 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_18760 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_18760 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_18760 + 68] = 0
                                        mem[_18760 + 100] = address(_17924)
                                        mem[_18760 + 132] = 128
                                        mem[_18760 + 164] = mem[_18760]
                                        t = 0
                                        while t < mem[_18760]:
                                            mem[_18760 + t + 196] = mem[_18760 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_18760] % 32:
                                            require ext_code.size(address(_18759))
                                            call address(_18759).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17924), 128, mem[_18760 + 164 len mem[_18760] + 32]
                                        else:
                                            mem[floor32(mem[_18760]) + _18760 + 196] = mem[floor32(mem[_18760]) + _18760 + -(mem[_18760] % 32) + 228 len mem[_18760] % 32]
                                            require ext_code.size(address(_18759))
                                            call address(_18759).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17924), 128, mem[_18760], mem[_18760 + 196 len floor32(mem[_18760]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_18760 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_18760 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                continue 
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                require idx < mem[96]
                                if mem[(32 * idx) + 140 len 20] == address(_15942):
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17561 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17562 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17562 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17562 + 36] = 0
                                        mem[_17562 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_17562 + 100] = this.address
                                        mem[_17562 + 132] = 128
                                        mem[_17562 + 164] = mem[_17562]
                                        t = 0
                                        while t < mem[_17562]:
                                            mem[_17562 + t + 196] = mem[_17562 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17562] % 32:
                                            require ext_code.size(address(_17561))
                                            call address(_17561).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_17562 + 164 len mem[_17562] + 32]
                                        else:
                                            mem[floor32(mem[_17562]) + _17562 + 196] = mem[floor32(mem[_17562]) + _17562 + -(mem[_17562] % 32) + 228 len mem[_17562] % 32]
                                            require ext_code.size(address(_17561))
                                            call address(_17561).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_17562], mem[_17562 + 196 len floor32(mem[_17562]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17562 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17562 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _17246 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17926 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17927 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17927 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17927 + 36] = 0
                                        mem[_17927 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_17927 + 100] = address(_17246)
                                        mem[_17927 + 132] = 128
                                        mem[_17927 + 164] = mem[_17927]
                                        t = 0
                                        while t < mem[_17927]:
                                            mem[_17927 + t + 196] = mem[_17927 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17927] % 32:
                                            require ext_code.size(address(_17926))
                                            call address(_17926).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17246), 128, mem[_17927 + 164 len mem[_17927] + 32]
                                        else:
                                            mem[floor32(mem[_17927]) + _17927 + 196] = mem[floor32(mem[_17927]) + _17927 + -(mem[_17927] % 32) + 228 len mem[_17927] % 32]
                                            require ext_code.size(address(_17926))
                                            call address(_17926).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17246), 128, mem[_17927], mem[_17927 + 196 len floor32(mem[_17927]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17927 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17927 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17564 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17565 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17565 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17565 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_17565 + 68] = 0
                                        mem[_17565 + 100] = this.address
                                        mem[_17565 + 132] = 128
                                        mem[_17565 + 164] = mem[_17565]
                                        t = 0
                                        while t < mem[_17565]:
                                            mem[_17565 + t + 196] = mem[_17565 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17565] % 32:
                                            require ext_code.size(address(_17564))
                                            call address(_17564).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_17565 + 164 len mem[_17565] + 32]
                                        else:
                                            mem[floor32(mem[_17565]) + _17565 + 196] = mem[floor32(mem[_17565]) + _17565 + -(mem[_17565] % 32) + 228 len mem[_17565] % 32]
                                            require ext_code.size(address(_17564))
                                            call address(_17564).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_17565], mem[_17565 + 196 len floor32(mem[_17565]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17565 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17565 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _17248 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17931 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17932 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17932 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17932 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_17932 + 68] = 0
                                        mem[_17932 + 100] = address(_17248)
                                        mem[_17932 + 132] = 128
                                        mem[_17932 + 164] = mem[_17932]
                                        t = 0
                                        while t < mem[_17932]:
                                            mem[_17932 + t + 196] = mem[_17932 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17932] % 32:
                                            require ext_code.size(address(_17931))
                                            call address(_17931).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17248), 128, mem[_17932 + 164 len mem[_17932] + 32]
                                        else:
                                            mem[floor32(mem[_17932]) + _17932 + 196] = mem[floor32(mem[_17932]) + _17932 + -(mem[_17932] % 32) + 228 len mem[_17932] % 32]
                                            require ext_code.size(address(_17931))
                                            call address(_17931).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17248), 128, mem[_17932], mem[_17932 + 196 len floor32(mem[_17932]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17932 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17932 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                continue 
                            require Mask(112, 0, ext_call.return_data[0])
                            if 997 * s * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * s:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                            require idx < mem[96]
                            if mem[(32 * idx) + 140 len 20] == address(_15942):
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18371 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18372 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18372 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18372 + 36] = 0
                                    mem[_18372 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_18372 + 100] = this.address
                                    mem[_18372 + 132] = 128
                                    mem[_18372 + 164] = mem[_18372]
                                    t = 0
                                    while t < mem[_18372]:
                                        mem[_18372 + t + 196] = mem[_18372 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18372] % 32:
                                        require ext_code.size(address(_18371))
                                        call address(_18371).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_18372 + 164 len mem[_18372] + 32]
                                    else:
                                        mem[floor32(mem[_18372]) + _18372 + 196] = mem[floor32(mem[_18372]) + _18372 + -(mem[_18372] % 32) + 228 len mem[_18372] % 32]
                                        require ext_code.size(address(_18371))
                                        call address(_18371).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_18372], mem[_18372 + 196 len floor32(mem[_18372]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18372 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18372 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _17936 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18766 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18767 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18767 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18767 + 36] = 0
                                    mem[_18767 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_18767 + 100] = address(_17936)
                                    mem[_18767 + 132] = 128
                                    mem[_18767 + 164] = mem[_18767]
                                    t = 0
                                    while t < mem[_18767]:
                                        mem[_18767 + t + 196] = mem[_18767 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18767] % 32:
                                        require ext_code.size(address(_18766))
                                        call address(_18766).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17936), 128, mem[_18767 + 164 len mem[_18767] + 32]
                                    else:
                                        mem[floor32(mem[_18767]) + _18767 + 196] = mem[floor32(mem[_18767]) + _18767 + -(mem[_18767] % 32) + 228 len mem[_18767] % 32]
                                        require ext_code.size(address(_18766))
                                        call address(_18766).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17936), 128, mem[_18767], mem[_18767 + 196 len floor32(mem[_18767]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18767 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18767 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18374 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18375 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18375 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18375 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_18375 + 68] = 0
                                    mem[_18375 + 100] = this.address
                                    mem[_18375 + 132] = 128
                                    mem[_18375 + 164] = mem[_18375]
                                    t = 0
                                    while t < mem[_18375]:
                                        mem[_18375 + t + 196] = mem[_18375 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18375] % 32:
                                        require ext_code.size(address(_18374))
                                        call address(_18374).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_18375 + 164 len mem[_18375] + 32]
                                    else:
                                        mem[floor32(mem[_18375]) + _18375 + 196] = mem[floor32(mem[_18375]) + _18375 + -(mem[_18375] % 32) + 228 len mem[_18375] % 32]
                                        require ext_code.size(address(_18374))
                                        call address(_18374).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_18375], mem[_18375 + 196 len floor32(mem[_18375]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18375 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18375 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _17938 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18771 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18772 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18772 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18772 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_18772 + 68] = 0
                                    mem[_18772 + 100] = address(_17938)
                                    mem[_18772 + 132] = 128
                                    mem[_18772 + 164] = mem[_18772]
                                    t = 0
                                    while t < mem[_18772]:
                                        mem[_18772 + t + 196] = mem[_18772 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18772] % 32:
                                        require ext_code.size(address(_18771))
                                        call address(_18771).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17938), 128, mem[_18772 + 164 len mem[_18772] + 32]
                                    else:
                                        mem[floor32(mem[_18772]) + _18772 + 196] = mem[floor32(mem[_18772]) + _18772 + -(mem[_18772] % 32) + 228 len mem[_18772] % 32]
                                        require ext_code.size(address(_18771))
                                        call address(_18771).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17938), 128, mem[_18772], mem[_18772 + 196 len floor32(mem[_18772]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18772 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18772 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if not mem[(32 * idx + 1) + 140 len 20]:
                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                            require ext_code.size(mem[(32 * idx) + (32 * arg1.length) + 172 len 20])
                            staticcall mem[(32 * idx) + (32 * arg1.length) + 172 len 20].getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if 997 * s / 997 != s:
                                revert with 0, 'ds-math-mul-overflow'
                            if address(_16022) == address(_16033):
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    require idx < mem[96]
                                    if mem[(32 * idx) + 140 len 20] == address(_15942):
                                        if idx >= mem[(32 * arg1.length) + 128] - 1:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _17569 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _17570 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_17570 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_17570 + 36] = 0
                                            mem[_17570 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_17570 + 100] = this.address
                                            mem[_17570 + 132] = 128
                                            mem[_17570 + 164] = mem[_17570]
                                            t = 0
                                            while t < mem[_17570]:
                                                mem[_17570 + t + 196] = mem[_17570 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_17570] % 32:
                                                require ext_code.size(address(_17569))
                                                call address(_17569).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_17570 + 164 len mem[_17570] + 32]
                                            else:
                                                mem[floor32(mem[_17570]) + _17570 + 196] = mem[floor32(mem[_17570]) + _17570 + -(mem[_17570] % 32) + 228 len mem[_17570] % 32]
                                                require ext_code.size(address(_17569))
                                                call address(_17569).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_17570], mem[_17570 + 196 len floor32(mem[_17570]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_17570 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_17570 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require idx + 1 < mem[(32 * arg1.length) + 128]
                                            _17252 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _17940 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _17941 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_17941 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_17941 + 36] = 0
                                            mem[_17941 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_17941 + 100] = address(_17252)
                                            mem[_17941 + 132] = 128
                                            mem[_17941 + 164] = mem[_17941]
                                            t = 0
                                            while t < mem[_17941]:
                                                mem[_17941 + t + 196] = mem[_17941 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_17941] % 32:
                                                require ext_code.size(address(_17940))
                                                call address(_17940).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17252), 128, mem[_17941 + 164 len mem[_17941] + 32]
                                            else:
                                                mem[floor32(mem[_17941]) + _17941 + 196] = mem[floor32(mem[_17941]) + _17941 + -(mem[_17941] % 32) + 228 len mem[_17941] % 32]
                                                require ext_code.size(address(_17940))
                                                call address(_17940).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17252), 128, mem[_17941], mem[_17941 + 196 len floor32(mem[_17941]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_17941 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_17941 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        if idx >= mem[(32 * arg1.length) + 128] - 1:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _17572 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _17573 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_17573 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_17573 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_17573 + 68] = 0
                                            mem[_17573 + 100] = this.address
                                            mem[_17573 + 132] = 128
                                            mem[_17573 + 164] = mem[_17573]
                                            t = 0
                                            while t < mem[_17573]:
                                                mem[_17573 + t + 196] = mem[_17573 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_17573] % 32:
                                                require ext_code.size(address(_17572))
                                                call address(_17572).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_17573 + 164 len mem[_17573] + 32]
                                            else:
                                                mem[floor32(mem[_17573]) + _17573 + 196] = mem[floor32(mem[_17573]) + _17573 + -(mem[_17573] % 32) + 228 len mem[_17573] % 32]
                                                require ext_code.size(address(_17572))
                                                call address(_17572).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_17573], mem[_17573 + 196 len floor32(mem[_17573]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_17573 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_17573 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require idx + 1 < mem[(32 * arg1.length) + 128]
                                            _17254 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _17945 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _17946 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_17946 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_17946 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_17946 + 68] = 0
                                            mem[_17946 + 100] = address(_17254)
                                            mem[_17946 + 132] = 128
                                            mem[_17946 + 164] = mem[_17946]
                                            t = 0
                                            while t < mem[_17946]:
                                                mem[_17946 + t + 196] = mem[_17946 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_17946] % 32:
                                                require ext_code.size(address(_17945))
                                                call address(_17945).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17254), 128, mem[_17946 + 164 len mem[_17946] + 32]
                                            else:
                                                mem[floor32(mem[_17946]) + _17946 + 196] = mem[floor32(mem[_17946]) + _17946 + -(mem[_17946] % 32) + 228 len mem[_17946] % 32]
                                                require ext_code.size(address(_17945))
                                                call address(_17945).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17254), 128, mem[_17946], mem[_17946 + 196 len floor32(mem[_17946]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_17946 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_17946 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    continue 
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * s * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * s:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                require idx < mem[96]
                                if mem[(32 * idx) + 140 len 20] == address(_15942):
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _18383 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _18384 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_18384 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_18384 + 36] = 0
                                        mem[_18384 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_18384 + 100] = this.address
                                        mem[_18384 + 132] = 128
                                        mem[_18384 + 164] = mem[_18384]
                                        t = 0
                                        while t < mem[_18384]:
                                            mem[_18384 + t + 196] = mem[_18384 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_18384] % 32:
                                            require ext_code.size(address(_18383))
                                            call address(_18383).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_18384 + 164 len mem[_18384] + 32]
                                        else:
                                            mem[floor32(mem[_18384]) + _18384 + 196] = mem[floor32(mem[_18384]) + _18384 + -(mem[_18384] % 32) + 228 len mem[_18384] % 32]
                                            require ext_code.size(address(_18383))
                                            call address(_18383).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_18384], mem[_18384 + 196 len floor32(mem[_18384]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_18384 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_18384 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _17950 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _18778 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _18779 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_18779 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_18779 + 36] = 0
                                        mem[_18779 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_18779 + 100] = address(_17950)
                                        mem[_18779 + 132] = 128
                                        mem[_18779 + 164] = mem[_18779]
                                        t = 0
                                        while t < mem[_18779]:
                                            mem[_18779 + t + 196] = mem[_18779 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_18779] % 32:
                                            require ext_code.size(address(_18778))
                                            call address(_18778).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17950), 128, mem[_18779 + 164 len mem[_18779] + 32]
                                        else:
                                            mem[floor32(mem[_18779]) + _18779 + 196] = mem[floor32(mem[_18779]) + _18779 + -(mem[_18779] % 32) + 228 len mem[_18779] % 32]
                                            require ext_code.size(address(_18778))
                                            call address(_18778).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17950), 128, mem[_18779], mem[_18779 + 196 len floor32(mem[_18779]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_18779 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_18779 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _18386 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _18387 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_18387 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_18387 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_18387 + 68] = 0
                                        mem[_18387 + 100] = this.address
                                        mem[_18387 + 132] = 128
                                        mem[_18387 + 164] = mem[_18387]
                                        t = 0
                                        while t < mem[_18387]:
                                            mem[_18387 + t + 196] = mem[_18387 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_18387] % 32:
                                            require ext_code.size(address(_18386))
                                            call address(_18386).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_18387 + 164 len mem[_18387] + 32]
                                        else:
                                            mem[floor32(mem[_18387]) + _18387 + 196] = mem[floor32(mem[_18387]) + _18387 + -(mem[_18387] % 32) + 228 len mem[_18387] % 32]
                                            require ext_code.size(address(_18386))
                                            call address(_18386).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_18387], mem[_18387 + 196 len floor32(mem[_18387]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_18387 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_18387 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _17952 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _18783 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _18784 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_18784 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_18784 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_18784 + 68] = 0
                                        mem[_18784 + 100] = address(_17952)
                                        mem[_18784 + 132] = 128
                                        mem[_18784 + 164] = mem[_18784]
                                        t = 0
                                        while t < mem[_18784]:
                                            mem[_18784 + t + 196] = mem[_18784 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_18784] % 32:
                                            require ext_code.size(address(_18783))
                                            call address(_18783).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17952), 128, mem[_18784 + 164 len mem[_18784] + 32]
                                        else:
                                            mem[floor32(mem[_18784]) + _18784 + 196] = mem[floor32(mem[_18784]) + _18784 + -(mem[_18784] % 32) + 228 len mem[_18784] % 32]
                                            require ext_code.size(address(_18783))
                                            call address(_18783).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17952), 128, mem[_18784], mem[_18784 + 196 len floor32(mem[_18784]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_18784 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_18784 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                continue 
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                require idx < mem[96]
                                if mem[(32 * idx) + 140 len 20] == address(_15942):
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17577 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17578 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17578 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17578 + 36] = 0
                                        mem[_17578 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_17578 + 100] = this.address
                                        mem[_17578 + 132] = 128
                                        mem[_17578 + 164] = mem[_17578]
                                        t = 0
                                        while t < mem[_17578]:
                                            mem[_17578 + t + 196] = mem[_17578 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17578] % 32:
                                            require ext_code.size(address(_17577))
                                            call address(_17577).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_17578 + 164 len mem[_17578] + 32]
                                        else:
                                            mem[floor32(mem[_17578]) + _17578 + 196] = mem[floor32(mem[_17578]) + _17578 + -(mem[_17578] % 32) + 228 len mem[_17578] % 32]
                                            require ext_code.size(address(_17577))
                                            call address(_17577).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_17578], mem[_17578 + 196 len floor32(mem[_17578]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17578 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17578 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _17258 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17954 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17955 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17955 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17955 + 36] = 0
                                        mem[_17955 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_17955 + 100] = address(_17258)
                                        mem[_17955 + 132] = 128
                                        mem[_17955 + 164] = mem[_17955]
                                        t = 0
                                        while t < mem[_17955]:
                                            mem[_17955 + t + 196] = mem[_17955 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17955] % 32:
                                            require ext_code.size(address(_17954))
                                            call address(_17954).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17258), 128, mem[_17955 + 164 len mem[_17955] + 32]
                                        else:
                                            mem[floor32(mem[_17955]) + _17955 + 196] = mem[floor32(mem[_17955]) + _17955 + -(mem[_17955] % 32) + 228 len mem[_17955] % 32]
                                            require ext_code.size(address(_17954))
                                            call address(_17954).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17258), 128, mem[_17955], mem[_17955 + 196 len floor32(mem[_17955]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17955 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17955 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17580 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17581 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17581 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17581 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_17581 + 68] = 0
                                        mem[_17581 + 100] = this.address
                                        mem[_17581 + 132] = 128
                                        mem[_17581 + 164] = mem[_17581]
                                        t = 0
                                        while t < mem[_17581]:
                                            mem[_17581 + t + 196] = mem[_17581 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17581] % 32:
                                            require ext_code.size(address(_17580))
                                            call address(_17580).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_17581 + 164 len mem[_17581] + 32]
                                        else:
                                            mem[floor32(mem[_17581]) + _17581 + 196] = mem[floor32(mem[_17581]) + _17581 + -(mem[_17581] % 32) + 228 len mem[_17581] % 32]
                                            require ext_code.size(address(_17580))
                                            call address(_17580).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_17581], mem[_17581 + 196 len floor32(mem[_17581]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17581 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17581 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _17260 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17959 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17960 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17960 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17960 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_17960 + 68] = 0
                                        mem[_17960 + 100] = address(_17260)
                                        mem[_17960 + 132] = 128
                                        mem[_17960 + 164] = mem[_17960]
                                        t = 0
                                        while t < mem[_17960]:
                                            mem[_17960 + t + 196] = mem[_17960 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17960] % 32:
                                            require ext_code.size(address(_17959))
                                            call address(_17959).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17260), 128, mem[_17960 + 164 len mem[_17960] + 32]
                                        else:
                                            mem[floor32(mem[_17960]) + _17960 + 196] = mem[floor32(mem[_17960]) + _17960 + -(mem[_17960] % 32) + 228 len mem[_17960] % 32]
                                            require ext_code.size(address(_17959))
                                            call address(_17959).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17260), 128, mem[_17960], mem[_17960 + 196 len floor32(mem[_17960]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17960 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17960 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                continue 
                            require Mask(112, 0, ext_call.return_data[0])
                            if 997 * s * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * s:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                            require idx < mem[96]
                            if mem[(32 * idx) + 140 len 20] == address(_15942):
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18395 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18396 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18396 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18396 + 36] = 0
                                    mem[_18396 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_18396 + 100] = this.address
                                    mem[_18396 + 132] = 128
                                    mem[_18396 + 164] = mem[_18396]
                                    t = 0
                                    while t < mem[_18396]:
                                        mem[_18396 + t + 196] = mem[_18396 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18396] % 32:
                                        require ext_code.size(address(_18395))
                                        call address(_18395).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_18396 + 164 len mem[_18396] + 32]
                                    else:
                                        mem[floor32(mem[_18396]) + _18396 + 196] = mem[floor32(mem[_18396]) + _18396 + -(mem[_18396] % 32) + 228 len mem[_18396] % 32]
                                        require ext_code.size(address(_18395))
                                        call address(_18395).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_18396], mem[_18396 + 196 len floor32(mem[_18396]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18396 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18396 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _17964 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18790 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18791 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18791 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18791 + 36] = 0
                                    mem[_18791 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_18791 + 100] = address(_17964)
                                    mem[_18791 + 132] = 128
                                    mem[_18791 + 164] = mem[_18791]
                                    t = 0
                                    while t < mem[_18791]:
                                        mem[_18791 + t + 196] = mem[_18791 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18791] % 32:
                                        require ext_code.size(address(_18790))
                                        call address(_18790).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17964), 128, mem[_18791 + 164 len mem[_18791] + 32]
                                    else:
                                        mem[floor32(mem[_18791]) + _18791 + 196] = mem[floor32(mem[_18791]) + _18791 + -(mem[_18791] % 32) + 228 len mem[_18791] % 32]
                                        require ext_code.size(address(_18790))
                                        call address(_18790).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17964), 128, mem[_18791], mem[_18791 + 196 len floor32(mem[_18791]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18791 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18791 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18398 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18399 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18399 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18399 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_18399 + 68] = 0
                                    mem[_18399 + 100] = this.address
                                    mem[_18399 + 132] = 128
                                    mem[_18399 + 164] = mem[_18399]
                                    t = 0
                                    while t < mem[_18399]:
                                        mem[_18399 + t + 196] = mem[_18399 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18399] % 32:
                                        require ext_code.size(address(_18398))
                                        call address(_18398).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_18399 + 164 len mem[_18399] + 32]
                                    else:
                                        mem[floor32(mem[_18399]) + _18399 + 196] = mem[floor32(mem[_18399]) + _18399 + -(mem[_18399] % 32) + 228 len mem[_18399] % 32]
                                        require ext_code.size(address(_18398))
                                        call address(_18398).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_18399], mem[_18399 + 196 len floor32(mem[_18399]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18399 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18399 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _17966 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18795 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18796 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18796 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18796 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_18796 + 68] = 0
                                    mem[_18796 + 100] = address(_17966)
                                    mem[_18796 + 132] = 128
                                    mem[_18796 + 164] = mem[_18796]
                                    t = 0
                                    while t < mem[_18796]:
                                        mem[_18796 + t + 196] = mem[_18796 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18796] % 32:
                                        require ext_code.size(address(_18795))
                                        call address(_18795).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17966), 128, mem[_18796 + 164 len mem[_18796] + 32]
                                    else:
                                        mem[floor32(mem[_18796]) + _18796 + 196] = mem[floor32(mem[_18796]) + _18796 + -(mem[_18796] % 32) + 228 len mem[_18796] % 32]
                                        require ext_code.size(address(_18795))
                                        call address(_18795).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17966), 128, mem[_18796], mem[_18796 + 196 len floor32(mem[_18796]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18796 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18796 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                else:
                    mem[mem[64]] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
                    require ext_code.size(stor1)
                    call stor1.deposit() with:
                       value s wei
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require idx < mem[(32 * arg1.length) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                    mem[mem[64] + 36] = s
                    require ext_code.size(stor1)
                    call stor1.transfer(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4], s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0]
                    require idx < mem[96]
                    _16006 = mem[(32 * idx) + 128]
                    require idx + 1 < mem[96]
                    _16024 = mem[(32 * idx + 1) + 128]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 32, 37, 0xfe556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                    if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                        if not mem[(32 * idx) + 140 len 20]:
                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                        require idx < mem[(32 * arg1.length) + 128]
                        require idx < mem[96]
                        _16132 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _16152 = mem[(32 * idx + 1) + 128]
                        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 32, 37, 0xfe556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                        if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                            if not mem[(32 * idx) + 140 len 20]:
                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                            require ext_code.size(mem[(32 * idx) + (32 * arg1.length) + 172 len 20])
                            staticcall mem[(32 * idx) + (32 * arg1.length) + 172 len 20].getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if 997 * s / 997 != s:
                                revert with 0, 'ds-math-mul-overflow'
                            if address(_16132) == address(_16132):
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    require idx < mem[96]
                                    if mem[(32 * idx) + 140 len 20] == address(_16006):
                                        if idx >= mem[(32 * arg1.length) + 128] - 1:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _20817 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _20818 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_20818 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_20818 + 36] = 0
                                            mem[_20818 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_20818 + 100] = this.address
                                            mem[_20818 + 132] = 128
                                            mem[_20818 + 164] = mem[_20818]
                                            t = 0
                                            while t < mem[_20818]:
                                                mem[_20818 + t + 196] = mem[_20818 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_20818] % 32:
                                                require ext_code.size(address(_20817))
                                                call address(_20817).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_20818 + 164 len mem[_20818] + 32]
                                            else:
                                                mem[floor32(mem[_20818]) + _20818 + 196] = mem[floor32(mem[_20818]) + _20818 + -(mem[_20818] % 32) + 228 len mem[_20818] % 32]
                                                require ext_code.size(address(_20817))
                                                call address(_20817).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_20818], mem[_20818 + 196 len floor32(mem[_20818]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_20818 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_20818 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require idx + 1 < mem[(32 * arg1.length) + 128]
                                            _20272 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _21440 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _21441 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_21441 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_21441 + 36] = 0
                                            mem[_21441 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_21441 + 100] = address(_20272)
                                            mem[_21441 + 132] = 128
                                            mem[_21441 + 164] = mem[_21441]
                                            t = 0
                                            while t < mem[_21441]:
                                                mem[_21441 + t + 196] = mem[_21441 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_21441] % 32:
                                                require ext_code.size(address(_21440))
                                                call address(_21440).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_20272), 128, mem[_21441 + 164 len mem[_21441] + 32]
                                            else:
                                                mem[floor32(mem[_21441]) + _21441 + 196] = mem[floor32(mem[_21441]) + _21441 + -(mem[_21441] % 32) + 228 len mem[_21441] % 32]
                                                require ext_code.size(address(_21440))
                                                call address(_21440).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_20272), 128, mem[_21441], mem[_21441 + 196 len floor32(mem[_21441]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_21441 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_21441 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        if idx >= mem[(32 * arg1.length) + 128] - 1:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _20820 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _20821 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_20821 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_20821 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_20821 + 68] = 0
                                            mem[_20821 + 100] = this.address
                                            mem[_20821 + 132] = 128
                                            mem[_20821 + 164] = mem[_20821]
                                            t = 0
                                            while t < mem[_20821]:
                                                mem[_20821 + t + 196] = mem[_20821 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_20821] % 32:
                                                require ext_code.size(address(_20820))
                                                call address(_20820).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_20821 + 164 len mem[_20821] + 32]
                                            else:
                                                mem[floor32(mem[_20821]) + _20821 + 196] = mem[floor32(mem[_20821]) + _20821 + -(mem[_20821] % 32) + 228 len mem[_20821] % 32]
                                                require ext_code.size(address(_20820))
                                                call address(_20820).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_20821], mem[_20821 + 196 len floor32(mem[_20821]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_20821 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_20821 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require idx + 1 < mem[(32 * arg1.length) + 128]
                                            _20274 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _21445 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _21446 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_21446 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_21446 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_21446 + 68] = 0
                                            mem[_21446 + 100] = address(_20274)
                                            mem[_21446 + 132] = 128
                                            mem[_21446 + 164] = mem[_21446]
                                            t = 0
                                            while t < mem[_21446]:
                                                mem[_21446 + t + 196] = mem[_21446 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_21446] % 32:
                                                require ext_code.size(address(_21445))
                                                call address(_21445).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_20274), 128, mem[_21446 + 164 len mem[_21446] + 32]
                                            else:
                                                mem[floor32(mem[_21446]) + _21446 + 196] = mem[floor32(mem[_21446]) + _21446 + -(mem[_21446] % 32) + 228 len mem[_21446] % 32]
                                                require ext_code.size(address(_21445))
                                                call address(_21445).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_20274), 128, mem[_21446], mem[_21446 + 196 len floor32(mem[_21446]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_21446 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_21446 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    continue 
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * s * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * s:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                require idx < mem[96]
                                if mem[(32 * idx) + 140 len 20] == address(_16006):
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _22215 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _22216 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_22216 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_22216 + 36] = 0
                                        mem[_22216 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_22216 + 100] = this.address
                                        mem[_22216 + 132] = 128
                                        mem[_22216 + 164] = mem[_22216]
                                        t = 0
                                        while t < mem[_22216]:
                                            mem[_22216 + t + 196] = mem[_22216 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_22216] % 32:
                                            require ext_code.size(address(_22215))
                                            call address(_22215).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_22216 + 164 len mem[_22216] + 32]
                                        else:
                                            mem[floor32(mem[_22216]) + _22216 + 196] = mem[floor32(mem[_22216]) + _22216 + -(mem[_22216] % 32) + 228 len mem[_22216] % 32]
                                            require ext_code.size(address(_22215))
                                            call address(_22215).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_22216], mem[_22216 + 196 len floor32(mem[_22216]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_22216 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_22216 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _21450 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _23010 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _23011 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_23011 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_23011 + 36] = 0
                                        mem[_23011 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_23011 + 100] = address(_21450)
                                        mem[_23011 + 132] = 128
                                        mem[_23011 + 164] = mem[_23011]
                                        t = 0
                                        while t < mem[_23011]:
                                            mem[_23011 + t + 196] = mem[_23011 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_23011] % 32:
                                            require ext_code.size(address(_23010))
                                            call address(_23010).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_21450), 128, mem[_23011 + 164 len mem[_23011] + 32]
                                        else:
                                            mem[floor32(mem[_23011]) + _23011 + 196] = mem[floor32(mem[_23011]) + _23011 + -(mem[_23011] % 32) + 228 len mem[_23011] % 32]
                                            require ext_code.size(address(_23010))
                                            call address(_23010).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_21450), 128, mem[_23011], mem[_23011 + 196 len floor32(mem[_23011]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_23011 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_23011 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _22218 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _22219 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_22219 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_22219 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_22219 + 68] = 0
                                        mem[_22219 + 100] = this.address
                                        mem[_22219 + 132] = 128
                                        mem[_22219 + 164] = mem[_22219]
                                        t = 0
                                        while t < mem[_22219]:
                                            mem[_22219 + t + 196] = mem[_22219 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_22219] % 32:
                                            require ext_code.size(address(_22218))
                                            call address(_22218).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_22219 + 164 len mem[_22219] + 32]
                                        else:
                                            mem[floor32(mem[_22219]) + _22219 + 196] = mem[floor32(mem[_22219]) + _22219 + -(mem[_22219] % 32) + 228 len mem[_22219] % 32]
                                            require ext_code.size(address(_22218))
                                            call address(_22218).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_22219], mem[_22219 + 196 len floor32(mem[_22219]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_22219 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_22219 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _21452 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _23015 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _23016 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_23016 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_23016 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_23016 + 68] = 0
                                        mem[_23016 + 100] = address(_21452)
                                        mem[_23016 + 132] = 128
                                        mem[_23016 + 164] = mem[_23016]
                                        t = 0
                                        while t < mem[_23016]:
                                            mem[_23016 + t + 196] = mem[_23016 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_23016] % 32:
                                            require ext_code.size(address(_23015))
                                            call address(_23015).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_21452), 128, mem[_23016 + 164 len mem[_23016] + 32]
                                        else:
                                            mem[floor32(mem[_23016]) + _23016 + 196] = mem[floor32(mem[_23016]) + _23016 + -(mem[_23016] % 32) + 228 len mem[_23016] % 32]
                                            require ext_code.size(address(_23015))
                                            call address(_23015).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_21452), 128, mem[_23016], mem[_23016 + 196 len floor32(mem[_23016]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_23016 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_23016 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                continue 
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                require idx < mem[96]
                                if mem[(32 * idx) + 140 len 20] == address(_16006):
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _20825 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _20826 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_20826 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_20826 + 36] = 0
                                        mem[_20826 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_20826 + 100] = this.address
                                        mem[_20826 + 132] = 128
                                        mem[_20826 + 164] = mem[_20826]
                                        t = 0
                                        while t < mem[_20826]:
                                            mem[_20826 + t + 196] = mem[_20826 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_20826] % 32:
                                            require ext_code.size(address(_20825))
                                            call address(_20825).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_20826 + 164 len mem[_20826] + 32]
                                        else:
                                            mem[floor32(mem[_20826]) + _20826 + 196] = mem[floor32(mem[_20826]) + _20826 + -(mem[_20826] % 32) + 228 len mem[_20826] % 32]
                                            require ext_code.size(address(_20825))
                                            call address(_20825).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_20826], mem[_20826 + 196 len floor32(mem[_20826]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_20826 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_20826 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _20278 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _21454 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _21455 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_21455 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_21455 + 36] = 0
                                        mem[_21455 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_21455 + 100] = address(_20278)
                                        mem[_21455 + 132] = 128
                                        mem[_21455 + 164] = mem[_21455]
                                        t = 0
                                        while t < mem[_21455]:
                                            mem[_21455 + t + 196] = mem[_21455 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_21455] % 32:
                                            require ext_code.size(address(_21454))
                                            call address(_21454).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_20278), 128, mem[_21455 + 164 len mem[_21455] + 32]
                                        else:
                                            mem[floor32(mem[_21455]) + _21455 + 196] = mem[floor32(mem[_21455]) + _21455 + -(mem[_21455] % 32) + 228 len mem[_21455] % 32]
                                            require ext_code.size(address(_21454))
                                            call address(_21454).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_20278), 128, mem[_21455], mem[_21455 + 196 len floor32(mem[_21455]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_21455 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_21455 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _20828 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _20829 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_20829 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_20829 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_20829 + 68] = 0
                                        mem[_20829 + 100] = this.address
                                        mem[_20829 + 132] = 128
                                        mem[_20829 + 164] = mem[_20829]
                                        t = 0
                                        while t < mem[_20829]:
                                            mem[_20829 + t + 196] = mem[_20829 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_20829] % 32:
                                            require ext_code.size(address(_20828))
                                            call address(_20828).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_20829 + 164 len mem[_20829] + 32]
                                        else:
                                            mem[floor32(mem[_20829]) + _20829 + 196] = mem[floor32(mem[_20829]) + _20829 + -(mem[_20829] % 32) + 228 len mem[_20829] % 32]
                                            require ext_code.size(address(_20828))
                                            call address(_20828).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_20829], mem[_20829 + 196 len floor32(mem[_20829]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_20829 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_20829 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _20280 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _21459 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _21460 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_21460 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_21460 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_21460 + 68] = 0
                                        mem[_21460 + 100] = address(_20280)
                                        mem[_21460 + 132] = 128
                                        mem[_21460 + 164] = mem[_21460]
                                        t = 0
                                        while t < mem[_21460]:
                                            mem[_21460 + t + 196] = mem[_21460 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_21460] % 32:
                                            require ext_code.size(address(_21459))
                                            call address(_21459).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_20280), 128, mem[_21460 + 164 len mem[_21460] + 32]
                                        else:
                                            mem[floor32(mem[_21460]) + _21460 + 196] = mem[floor32(mem[_21460]) + _21460 + -(mem[_21460] % 32) + 228 len mem[_21460] % 32]
                                            require ext_code.size(address(_21459))
                                            call address(_21459).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_20280), 128, mem[_21460], mem[_21460 + 196 len floor32(mem[_21460]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_21460 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_21460 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                continue 
                            require Mask(112, 0, ext_call.return_data[0])
                            if 997 * s * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * s:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                            require idx < mem[96]
                            if mem[(32 * idx) + 140 len 20] == address(_16006):
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _22227 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _22228 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22228 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22228 + 36] = 0
                                    mem[_22228 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_22228 + 100] = this.address
                                    mem[_22228 + 132] = 128
                                    mem[_22228 + 164] = mem[_22228]
                                    t = 0
                                    while t < mem[_22228]:
                                        mem[_22228 + t + 196] = mem[_22228 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_22228] % 32:
                                        require ext_code.size(address(_22227))
                                        call address(_22227).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_22228 + 164 len mem[_22228] + 32]
                                    else:
                                        mem[floor32(mem[_22228]) + _22228 + 196] = mem[floor32(mem[_22228]) + _22228 + -(mem[_22228] % 32) + 228 len mem[_22228] % 32]
                                        require ext_code.size(address(_22227))
                                        call address(_22227).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_22228], mem[_22228 + 196 len floor32(mem[_22228]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_22228 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_22228 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _21464 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _23022 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _23023 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_23023 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_23023 + 36] = 0
                                    mem[_23023 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_23023 + 100] = address(_21464)
                                    mem[_23023 + 132] = 128
                                    mem[_23023 + 164] = mem[_23023]
                                    t = 0
                                    while t < mem[_23023]:
                                        mem[_23023 + t + 196] = mem[_23023 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_23023] % 32:
                                        require ext_code.size(address(_23022))
                                        call address(_23022).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_21464), 128, mem[_23023 + 164 len mem[_23023] + 32]
                                    else:
                                        mem[floor32(mem[_23023]) + _23023 + 196] = mem[floor32(mem[_23023]) + _23023 + -(mem[_23023] % 32) + 228 len mem[_23023] % 32]
                                        require ext_code.size(address(_23022))
                                        call address(_23022).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_21464), 128, mem[_23023], mem[_23023 + 196 len floor32(mem[_23023]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_23023 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_23023 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _22230 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _22231 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22231 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22231 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_22231 + 68] = 0
                                    mem[_22231 + 100] = this.address
                                    mem[_22231 + 132] = 128
                                    mem[_22231 + 164] = mem[_22231]
                                    t = 0
                                    while t < mem[_22231]:
                                        mem[_22231 + t + 196] = mem[_22231 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_22231] % 32:
                                        require ext_code.size(address(_22230))
                                        call address(_22230).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_22231 + 164 len mem[_22231] + 32]
                                    else:
                                        mem[floor32(mem[_22231]) + _22231 + 196] = mem[floor32(mem[_22231]) + _22231 + -(mem[_22231] % 32) + 228 len mem[_22231] % 32]
                                        require ext_code.size(address(_22230))
                                        call address(_22230).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_22231], mem[_22231 + 196 len floor32(mem[_22231]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_22231 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_22231 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _21466 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _23027 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _23028 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_23028 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_23028 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_23028 + 68] = 0
                                    mem[_23028 + 100] = address(_21466)
                                    mem[_23028 + 132] = 128
                                    mem[_23028 + 164] = mem[_23028]
                                    t = 0
                                    while t < mem[_23028]:
                                        mem[_23028 + t + 196] = mem[_23028 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_23028] % 32:
                                        require ext_code.size(address(_23027))
                                        call address(_23027).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_21466), 128, mem[_23028 + 164 len mem[_23028] + 32]
                                    else:
                                        mem[floor32(mem[_23028]) + _23028 + 196] = mem[floor32(mem[_23028]) + _23028 + -(mem[_23028] % 32) + 228 len mem[_23028] % 32]
                                        require ext_code.size(address(_23027))
                                        call address(_23027).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_21466), 128, mem[_23028], mem[_23028 + 196 len floor32(mem[_23028]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_23028 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_23028 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if not mem[(32 * idx + 1) + 140 len 20]:
                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                            require ext_code.size(mem[(32 * idx) + (32 * arg1.length) + 172 len 20])
                            staticcall mem[(32 * idx) + (32 * arg1.length) + 172 len 20].getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if 997 * s / 997 != s:
                                revert with 0, 'ds-math-mul-overflow'
                            if address(_16132) == address(_16152):
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    require idx < mem[96]
                                    if mem[(32 * idx) + 140 len 20] == address(_16006):
                                        if idx >= mem[(32 * arg1.length) + 128] - 1:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _20833 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _20834 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_20834 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_20834 + 36] = 0
                                            mem[_20834 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_20834 + 100] = this.address
                                            mem[_20834 + 132] = 128
                                            mem[_20834 + 164] = mem[_20834]
                                            t = 0
                                            while t < mem[_20834]:
                                                mem[_20834 + t + 196] = mem[_20834 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_20834] % 32:
                                                require ext_code.size(address(_20833))
                                                call address(_20833).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_20834 + 164 len mem[_20834] + 32]
                                            else:
                                                mem[floor32(mem[_20834]) + _20834 + 196] = mem[floor32(mem[_20834]) + _20834 + -(mem[_20834] % 32) + 228 len mem[_20834] % 32]
                                                require ext_code.size(address(_20833))
                                                call address(_20833).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_20834], mem[_20834 + 196 len floor32(mem[_20834]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_20834 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_20834 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require idx + 1 < mem[(32 * arg1.length) + 128]
                                            _20284 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _21468 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _21469 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_21469 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_21469 + 36] = 0
                                            mem[_21469 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_21469 + 100] = address(_20284)
                                            mem[_21469 + 132] = 128
                                            mem[_21469 + 164] = mem[_21469]
                                            t = 0
                                            while t < mem[_21469]:
                                                mem[_21469 + t + 196] = mem[_21469 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_21469] % 32:
                                                require ext_code.size(address(_21468))
                                                call address(_21468).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_20284), 128, mem[_21469 + 164 len mem[_21469] + 32]
                                            else:
                                                mem[floor32(mem[_21469]) + _21469 + 196] = mem[floor32(mem[_21469]) + _21469 + -(mem[_21469] % 32) + 228 len mem[_21469] % 32]
                                                require ext_code.size(address(_21468))
                                                call address(_21468).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_20284), 128, mem[_21469], mem[_21469 + 196 len floor32(mem[_21469]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_21469 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_21469 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        if idx >= mem[(32 * arg1.length) + 128] - 1:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _20836 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _20837 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_20837 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_20837 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_20837 + 68] = 0
                                            mem[_20837 + 100] = this.address
                                            mem[_20837 + 132] = 128
                                            mem[_20837 + 164] = mem[_20837]
                                            t = 0
                                            while t < mem[_20837]:
                                                mem[_20837 + t + 196] = mem[_20837 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_20837] % 32:
                                                require ext_code.size(address(_20836))
                                                call address(_20836).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_20837 + 164 len mem[_20837] + 32]
                                            else:
                                                mem[floor32(mem[_20837]) + _20837 + 196] = mem[floor32(mem[_20837]) + _20837 + -(mem[_20837] % 32) + 228 len mem[_20837] % 32]
                                                require ext_code.size(address(_20836))
                                                call address(_20836).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_20837], mem[_20837 + 196 len floor32(mem[_20837]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_20837 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_20837 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require idx + 1 < mem[(32 * arg1.length) + 128]
                                            _20286 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _21473 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _21474 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_21474 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_21474 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_21474 + 68] = 0
                                            mem[_21474 + 100] = address(_20286)
                                            mem[_21474 + 132] = 128
                                            mem[_21474 + 164] = mem[_21474]
                                            t = 0
                                            while t < mem[_21474]:
                                                mem[_21474 + t + 196] = mem[_21474 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_21474] % 32:
                                                require ext_code.size(address(_21473))
                                                call address(_21473).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_20286), 128, mem[_21474 + 164 len mem[_21474] + 32]
                                            else:
                                                mem[floor32(mem[_21474]) + _21474 + 196] = mem[floor32(mem[_21474]) + _21474 + -(mem[_21474] % 32) + 228 len mem[_21474] % 32]
                                                require ext_code.size(address(_21473))
                                                call address(_21473).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_20286), 128, mem[_21474], mem[_21474 + 196 len floor32(mem[_21474]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_21474 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_21474 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    continue 
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * s * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * s:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                require idx < mem[96]
                                if mem[(32 * idx) + 140 len 20] == address(_16006):
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _22239 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _22240 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_22240 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_22240 + 36] = 0
                                        mem[_22240 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_22240 + 100] = this.address
                                        mem[_22240 + 132] = 128
                                        mem[_22240 + 164] = mem[_22240]
                                        t = 0
                                        while t < mem[_22240]:
                                            mem[_22240 + t + 196] = mem[_22240 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_22240] % 32:
                                            require ext_code.size(address(_22239))
                                            call address(_22239).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_22240 + 164 len mem[_22240] + 32]
                                        else:
                                            mem[floor32(mem[_22240]) + _22240 + 196] = mem[floor32(mem[_22240]) + _22240 + -(mem[_22240] % 32) + 228 len mem[_22240] % 32]
                                            require ext_code.size(address(_22239))
                                            call address(_22239).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_22240], mem[_22240 + 196 len floor32(mem[_22240]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_22240 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_22240 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _21478 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _23034 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _23035 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_23035 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_23035 + 36] = 0
                                        mem[_23035 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_23035 + 100] = address(_21478)
                                        mem[_23035 + 132] = 128
                                        mem[_23035 + 164] = mem[_23035]
                                        t = 0
                                        while t < mem[_23035]:
                                            mem[_23035 + t + 196] = mem[_23035 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_23035] % 32:
                                            require ext_code.size(address(_23034))
                                            call address(_23034).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_21478), 128, mem[_23035 + 164 len mem[_23035] + 32]
                                        else:
                                            mem[floor32(mem[_23035]) + _23035 + 196] = mem[floor32(mem[_23035]) + _23035 + -(mem[_23035] % 32) + 228 len mem[_23035] % 32]
                                            require ext_code.size(address(_23034))
                                            call address(_23034).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_21478), 128, mem[_23035], mem[_23035 + 196 len floor32(mem[_23035]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_23035 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_23035 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _22242 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _22243 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_22243 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_22243 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_22243 + 68] = 0
                                        mem[_22243 + 100] = this.address
                                        mem[_22243 + 132] = 128
                                        mem[_22243 + 164] = mem[_22243]
                                        t = 0
                                        while t < mem[_22243]:
                                            mem[_22243 + t + 196] = mem[_22243 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_22243] % 32:
                                            require ext_code.size(address(_22242))
                                            call address(_22242).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_22243 + 164 len mem[_22243] + 32]
                                        else:
                                            mem[floor32(mem[_22243]) + _22243 + 196] = mem[floor32(mem[_22243]) + _22243 + -(mem[_22243] % 32) + 228 len mem[_22243] % 32]
                                            require ext_code.size(address(_22242))
                                            call address(_22242).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_22243], mem[_22243 + 196 len floor32(mem[_22243]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_22243 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_22243 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _21480 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _23039 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _23040 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_23040 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_23040 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_23040 + 68] = 0
                                        mem[_23040 + 100] = address(_21480)
                                        mem[_23040 + 132] = 128
                                        mem[_23040 + 164] = mem[_23040]
                                        t = 0
                                        while t < mem[_23040]:
                                            mem[_23040 + t + 196] = mem[_23040 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_23040] % 32:
                                            require ext_code.size(address(_23039))
                                            call address(_23039).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_21480), 128, mem[_23040 + 164 len mem[_23040] + 32]
                                        else:
                                            mem[floor32(mem[_23040]) + _23040 + 196] = mem[floor32(mem[_23040]) + _23040 + -(mem[_23040] % 32) + 228 len mem[_23040] % 32]
                                            require ext_code.size(address(_23039))
                                            call address(_23039).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_21480), 128, mem[_23040], mem[_23040 + 196 len floor32(mem[_23040]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_23040 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_23040 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                continue 
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                require idx < mem[96]
                                if mem[(32 * idx) + 140 len 20] == address(_16006):
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _20841 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _20842 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_20842 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_20842 + 36] = 0
                                        mem[_20842 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_20842 + 100] = this.address
                                        mem[_20842 + 132] = 128
                                        mem[_20842 + 164] = mem[_20842]
                                        t = 0
                                        while t < mem[_20842]:
                                            mem[_20842 + t + 196] = mem[_20842 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_20842] % 32:
                                            require ext_code.size(address(_20841))
                                            call address(_20841).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_20842 + 164 len mem[_20842] + 32]
                                        else:
                                            mem[floor32(mem[_20842]) + _20842 + 196] = mem[floor32(mem[_20842]) + _20842 + -(mem[_20842] % 32) + 228 len mem[_20842] % 32]
                                            require ext_code.size(address(_20841))
                                            call address(_20841).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_20842], mem[_20842 + 196 len floor32(mem[_20842]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_20842 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_20842 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _20290 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _21482 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _21483 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_21483 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_21483 + 36] = 0
                                        mem[_21483 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_21483 + 100] = address(_20290)
                                        mem[_21483 + 132] = 128
                                        mem[_21483 + 164] = mem[_21483]
                                        t = 0
                                        while t < mem[_21483]:
                                            mem[_21483 + t + 196] = mem[_21483 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_21483] % 32:
                                            require ext_code.size(address(_21482))
                                            call address(_21482).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_20290), 128, mem[_21483 + 164 len mem[_21483] + 32]
                                        else:
                                            mem[floor32(mem[_21483]) + _21483 + 196] = mem[floor32(mem[_21483]) + _21483 + -(mem[_21483] % 32) + 228 len mem[_21483] % 32]
                                            require ext_code.size(address(_21482))
                                            call address(_21482).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_20290), 128, mem[_21483], mem[_21483 + 196 len floor32(mem[_21483]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_21483 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_21483 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _20844 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _20845 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_20845 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_20845 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_20845 + 68] = 0
                                        mem[_20845 + 100] = this.address
                                        mem[_20845 + 132] = 128
                                        mem[_20845 + 164] = mem[_20845]
                                        t = 0
                                        while t < mem[_20845]:
                                            mem[_20845 + t + 196] = mem[_20845 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_20845] % 32:
                                            require ext_code.size(address(_20844))
                                            call address(_20844).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_20845 + 164 len mem[_20845] + 32]
                                        else:
                                            mem[floor32(mem[_20845]) + _20845 + 196] = mem[floor32(mem[_20845]) + _20845 + -(mem[_20845] % 32) + 228 len mem[_20845] % 32]
                                            require ext_code.size(address(_20844))
                                            call address(_20844).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_20845], mem[_20845 + 196 len floor32(mem[_20845]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_20845 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_20845 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _20292 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _21487 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _21488 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_21488 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_21488 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_21488 + 68] = 0
                                        mem[_21488 + 100] = address(_20292)
                                        mem[_21488 + 132] = 128
                                        mem[_21488 + 164] = mem[_21488]
                                        t = 0
                                        while t < mem[_21488]:
                                            mem[_21488 + t + 196] = mem[_21488 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_21488] % 32:
                                            require ext_code.size(address(_21487))
                                            call address(_21487).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_20292), 128, mem[_21488 + 164 len mem[_21488] + 32]
                                        else:
                                            mem[floor32(mem[_21488]) + _21488 + 196] = mem[floor32(mem[_21488]) + _21488 + -(mem[_21488] % 32) + 228 len mem[_21488] % 32]
                                            require ext_code.size(address(_21487))
                                            call address(_21487).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_20292), 128, mem[_21488], mem[_21488 + 196 len floor32(mem[_21488]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_21488 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_21488 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                continue 
                            require Mask(112, 0, ext_call.return_data[0])
                            if 997 * s * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * s:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                            require idx < mem[96]
                            if mem[(32 * idx) + 140 len 20] == address(_16006):
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _22251 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _22252 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22252 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22252 + 36] = 0
                                    mem[_22252 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_22252 + 100] = this.address
                                    mem[_22252 + 132] = 128
                                    mem[_22252 + 164] = mem[_22252]
                                    t = 0
                                    while t < mem[_22252]:
                                        mem[_22252 + t + 196] = mem[_22252 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_22252] % 32:
                                        require ext_code.size(address(_22251))
                                        call address(_22251).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_22252 + 164 len mem[_22252] + 32]
                                    else:
                                        mem[floor32(mem[_22252]) + _22252 + 196] = mem[floor32(mem[_22252]) + _22252 + -(mem[_22252] % 32) + 228 len mem[_22252] % 32]
                                        require ext_code.size(address(_22251))
                                        call address(_22251).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_22252], mem[_22252 + 196 len floor32(mem[_22252]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_22252 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_22252 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _21492 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _23046 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _23047 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_23047 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_23047 + 36] = 0
                                    mem[_23047 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_23047 + 100] = address(_21492)
                                    mem[_23047 + 132] = 128
                                    mem[_23047 + 164] = mem[_23047]
                                    t = 0
                                    while t < mem[_23047]:
                                        mem[_23047 + t + 196] = mem[_23047 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_23047] % 32:
                                        require ext_code.size(address(_23046))
                                        call address(_23046).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_21492), 128, mem[_23047 + 164 len mem[_23047] + 32]
                                    else:
                                        mem[floor32(mem[_23047]) + _23047 + 196] = mem[floor32(mem[_23047]) + _23047 + -(mem[_23047] % 32) + 228 len mem[_23047] % 32]
                                        require ext_code.size(address(_23046))
                                        call address(_23046).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_21492), 128, mem[_23047], mem[_23047 + 196 len floor32(mem[_23047]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_23047 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_23047 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _22254 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _22255 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22255 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22255 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_22255 + 68] = 0
                                    mem[_22255 + 100] = this.address
                                    mem[_22255 + 132] = 128
                                    mem[_22255 + 164] = mem[_22255]
                                    t = 0
                                    while t < mem[_22255]:
                                        mem[_22255 + t + 196] = mem[_22255 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_22255] % 32:
                                        require ext_code.size(address(_22254))
                                        call address(_22254).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_22255 + 164 len mem[_22255] + 32]
                                    else:
                                        mem[floor32(mem[_22255]) + _22255 + 196] = mem[floor32(mem[_22255]) + _22255 + -(mem[_22255] % 32) + 228 len mem[_22255] % 32]
                                        require ext_code.size(address(_22254))
                                        call address(_22254).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_22255], mem[_22255 + 196 len floor32(mem[_22255]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_22255 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_22255 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _21494 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _23051 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _23052 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_23052 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_23052 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_23052 + 68] = 0
                                    mem[_23052 + 100] = address(_21494)
                                    mem[_23052 + 132] = 128
                                    mem[_23052 + 164] = mem[_23052]
                                    t = 0
                                    while t < mem[_23052]:
                                        mem[_23052 + t + 196] = mem[_23052 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_23052] % 32:
                                        require ext_code.size(address(_23051))
                                        call address(_23051).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_21494), 128, mem[_23052 + 164 len mem[_23052] + 32]
                                    else:
                                        mem[floor32(mem[_23052]) + _23052 + 196] = mem[floor32(mem[_23052]) + _23052 + -(mem[_23052] % 32) + 228 len mem[_23052] % 32]
                                        require ext_code.size(address(_23051))
                                        call address(_23051).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_21494), 128, mem[_23052], mem[_23052 + 196 len floor32(mem[_23052]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_23052 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_23052 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if not mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                        require idx < mem[(32 * arg1.length) + 128]
                        require idx < mem[96]
                        _16134 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _16153 = mem[(32 * idx + 1) + 128]
                        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 32, 37, 0xfe556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                        if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                            if not mem[(32 * idx) + 140 len 20]:
                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                            require ext_code.size(mem[(32 * idx) + (32 * arg1.length) + 172 len 20])
                            staticcall mem[(32 * idx) + (32 * arg1.length) + 172 len 20].getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if 997 * s / 997 != s:
                                revert with 0, 'ds-math-mul-overflow'
                            if address(_16134) == address(_16134):
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    require idx < mem[96]
                                    if mem[(32 * idx) + 140 len 20] == address(_16024):
                                        if idx >= mem[(32 * arg1.length) + 128] - 1:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _20849 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _20850 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_20850 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_20850 + 36] = 0
                                            mem[_20850 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_20850 + 100] = this.address
                                            mem[_20850 + 132] = 128
                                            mem[_20850 + 164] = mem[_20850]
                                            t = 0
                                            while t < mem[_20850]:
                                                mem[_20850 + t + 196] = mem[_20850 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_20850] % 32:
                                                require ext_code.size(address(_20849))
                                                call address(_20849).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_20850 + 164 len mem[_20850] + 32]
                                            else:
                                                mem[floor32(mem[_20850]) + _20850 + 196] = mem[floor32(mem[_20850]) + _20850 + -(mem[_20850] % 32) + 228 len mem[_20850] % 32]
                                                require ext_code.size(address(_20849))
                                                call address(_20849).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_20850], mem[_20850 + 196 len floor32(mem[_20850]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_20850 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_20850 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require idx + 1 < mem[(32 * arg1.length) + 128]
                                            _20296 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _21496 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _21497 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_21497 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_21497 + 36] = 0
                                            mem[_21497 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_21497 + 100] = address(_20296)
                                            mem[_21497 + 132] = 128
                                            mem[_21497 + 164] = mem[_21497]
                                            t = 0
                                            while t < mem[_21497]:
                                                mem[_21497 + t + 196] = mem[_21497 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_21497] % 32:
                                                require ext_code.size(address(_21496))
                                                call address(_21496).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_20296), 128, mem[_21497 + 164 len mem[_21497] + 32]
                                            else:
                                                mem[floor32(mem[_21497]) + _21497 + 196] = mem[floor32(mem[_21497]) + _21497 + -(mem[_21497] % 32) + 228 len mem[_21497] % 32]
                                                require ext_code.size(address(_21496))
                                                call address(_21496).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_20296), 128, mem[_21497], mem[_21497 + 196 len floor32(mem[_21497]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_21497 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_21497 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        if idx >= mem[(32 * arg1.length) + 128] - 1:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _20852 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _20853 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_20853 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_20853 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_20853 + 68] = 0
                                            mem[_20853 + 100] = this.address
                                            mem[_20853 + 132] = 128
                                            mem[_20853 + 164] = mem[_20853]
                                            t = 0
                                            while t < mem[_20853]:
                                                mem[_20853 + t + 196] = mem[_20853 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_20853] % 32:
                                                require ext_code.size(address(_20852))
                                                call address(_20852).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_20853 + 164 len mem[_20853] + 32]
                                            else:
                                                mem[floor32(mem[_20853]) + _20853 + 196] = mem[floor32(mem[_20853]) + _20853 + -(mem[_20853] % 32) + 228 len mem[_20853] % 32]
                                                require ext_code.size(address(_20852))
                                                call address(_20852).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_20853], mem[_20853 + 196 len floor32(mem[_20853]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_20853 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_20853 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require idx + 1 < mem[(32 * arg1.length) + 128]
                                            _20298 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _21501 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _21502 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_21502 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_21502 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_21502 + 68] = 0
                                            mem[_21502 + 100] = address(_20298)
                                            mem[_21502 + 132] = 128
                                            mem[_21502 + 164] = mem[_21502]
                                            t = 0
                                            while t < mem[_21502]:
                                                mem[_21502 + t + 196] = mem[_21502 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_21502] % 32:
                                                require ext_code.size(address(_21501))
                                                call address(_21501).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_20298), 128, mem[_21502 + 164 len mem[_21502] + 32]
                                            else:
                                                mem[floor32(mem[_21502]) + _21502 + 196] = mem[floor32(mem[_21502]) + _21502 + -(mem[_21502] % 32) + 228 len mem[_21502] % 32]
                                                require ext_code.size(address(_21501))
                                                call address(_21501).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_20298), 128, mem[_21502], mem[_21502 + 196 len floor32(mem[_21502]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_21502 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_21502 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    continue 
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * s * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * s:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                require idx < mem[96]
                                if mem[(32 * idx) + 140 len 20] == address(_16024):
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _22263 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _22264 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_22264 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_22264 + 36] = 0
                                        mem[_22264 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_22264 + 100] = this.address
                                        mem[_22264 + 132] = 128
                                        mem[_22264 + 164] = mem[_22264]
                                        t = 0
                                        while t < mem[_22264]:
                                            mem[_22264 + t + 196] = mem[_22264 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_22264] % 32:
                                            require ext_code.size(address(_22263))
                                            call address(_22263).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_22264 + 164 len mem[_22264] + 32]
                                        else:
                                            mem[floor32(mem[_22264]) + _22264 + 196] = mem[floor32(mem[_22264]) + _22264 + -(mem[_22264] % 32) + 228 len mem[_22264] % 32]
                                            require ext_code.size(address(_22263))
                                            call address(_22263).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_22264], mem[_22264 + 196 len floor32(mem[_22264]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_22264 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_22264 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _21506 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _23058 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _23059 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_23059 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_23059 + 36] = 0
                                        mem[_23059 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_23059 + 100] = address(_21506)
                                        mem[_23059 + 132] = 128
                                        mem[_23059 + 164] = mem[_23059]
                                        t = 0
                                        while t < mem[_23059]:
                                            mem[_23059 + t + 196] = mem[_23059 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_23059] % 32:
                                            require ext_code.size(address(_23058))
                                            call address(_23058).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_21506), 128, mem[_23059 + 164 len mem[_23059] + 32]
                                        else:
                                            mem[floor32(mem[_23059]) + _23059 + 196] = mem[floor32(mem[_23059]) + _23059 + -(mem[_23059] % 32) + 228 len mem[_23059] % 32]
                                            require ext_code.size(address(_23058))
                                            call address(_23058).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_21506), 128, mem[_23059], mem[_23059 + 196 len floor32(mem[_23059]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_23059 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_23059 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _22266 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _22267 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_22267 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_22267 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_22267 + 68] = 0
                                        mem[_22267 + 100] = this.address
                                        mem[_22267 + 132] = 128
                                        mem[_22267 + 164] = mem[_22267]
                                        t = 0
                                        while t < mem[_22267]:
                                            mem[_22267 + t + 196] = mem[_22267 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_22267] % 32:
                                            require ext_code.size(address(_22266))
                                            call address(_22266).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_22267 + 164 len mem[_22267] + 32]
                                        else:
                                            mem[floor32(mem[_22267]) + _22267 + 196] = mem[floor32(mem[_22267]) + _22267 + -(mem[_22267] % 32) + 228 len mem[_22267] % 32]
                                            require ext_code.size(address(_22266))
                                            call address(_22266).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_22267], mem[_22267 + 196 len floor32(mem[_22267]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_22267 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_22267 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _21508 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _23063 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _23064 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_23064 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_23064 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_23064 + 68] = 0
                                        mem[_23064 + 100] = address(_21508)
                                        mem[_23064 + 132] = 128
                                        mem[_23064 + 164] = mem[_23064]
                                        t = 0
                                        while t < mem[_23064]:
                                            mem[_23064 + t + 196] = mem[_23064 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_23064] % 32:
                                            require ext_code.size(address(_23063))
                                            call address(_23063).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_21508), 128, mem[_23064 + 164 len mem[_23064] + 32]
                                        else:
                                            mem[floor32(mem[_23064]) + _23064 + 196] = mem[floor32(mem[_23064]) + _23064 + -(mem[_23064] % 32) + 228 len mem[_23064] % 32]
                                            require ext_code.size(address(_23063))
                                            call address(_23063).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_21508), 128, mem[_23064], mem[_23064 + 196 len floor32(mem[_23064]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_23064 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_23064 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                continue 
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                require idx < mem[96]
                                if mem[(32 * idx) + 140 len 20] == address(_16024):
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _20857 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _20858 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_20858 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_20858 + 36] = 0
                                        mem[_20858 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_20858 + 100] = this.address
                                        mem[_20858 + 132] = 128
                                        mem[_20858 + 164] = mem[_20858]
                                        t = 0
                                        while t < mem[_20858]:
                                            mem[_20858 + t + 196] = mem[_20858 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_20858] % 32:
                                            require ext_code.size(address(_20857))
                                            call address(_20857).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_20858 + 164 len mem[_20858] + 32]
                                        else:
                                            mem[floor32(mem[_20858]) + _20858 + 196] = mem[floor32(mem[_20858]) + _20858 + -(mem[_20858] % 32) + 228 len mem[_20858] % 32]
                                            require ext_code.size(address(_20857))
                                            call address(_20857).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_20858], mem[_20858 + 196 len floor32(mem[_20858]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_20858 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_20858 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _20302 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _21510 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _21511 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_21511 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_21511 + 36] = 0
                                        mem[_21511 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_21511 + 100] = address(_20302)
                                        mem[_21511 + 132] = 128
                                        mem[_21511 + 164] = mem[_21511]
                                        t = 0
                                        while t < mem[_21511]:
                                            mem[_21511 + t + 196] = mem[_21511 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_21511] % 32:
                                            require ext_code.size(address(_21510))
                                            call address(_21510).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_20302), 128, mem[_21511 + 164 len mem[_21511] + 32]
                                        else:
                                            mem[floor32(mem[_21511]) + _21511 + 196] = mem[floor32(mem[_21511]) + _21511 + -(mem[_21511] % 32) + 228 len mem[_21511] % 32]
                                            require ext_code.size(address(_21510))
                                            call address(_21510).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_20302), 128, mem[_21511], mem[_21511 + 196 len floor32(mem[_21511]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_21511 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_21511 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _20860 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _20861 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_20861 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_20861 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_20861 + 68] = 0
                                        mem[_20861 + 100] = this.address
                                        mem[_20861 + 132] = 128
                                        mem[_20861 + 164] = mem[_20861]
                                        t = 0
                                        while t < mem[_20861]:
                                            mem[_20861 + t + 196] = mem[_20861 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_20861] % 32:
                                            require ext_code.size(address(_20860))
                                            call address(_20860).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_20861 + 164 len mem[_20861] + 32]
                                        else:
                                            mem[floor32(mem[_20861]) + _20861 + 196] = mem[floor32(mem[_20861]) + _20861 + -(mem[_20861] % 32) + 228 len mem[_20861] % 32]
                                            require ext_code.size(address(_20860))
                                            call address(_20860).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_20861], mem[_20861 + 196 len floor32(mem[_20861]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_20861 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_20861 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _20304 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _21515 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _21516 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_21516 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_21516 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_21516 + 68] = 0
                                        mem[_21516 + 100] = address(_20304)
                                        mem[_21516 + 132] = 128
                                        mem[_21516 + 164] = mem[_21516]
                                        t = 0
                                        while t < mem[_21516]:
                                            mem[_21516 + t + 196] = mem[_21516 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_21516] % 32:
                                            require ext_code.size(address(_21515))
                                            call address(_21515).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_20304), 128, mem[_21516 + 164 len mem[_21516] + 32]
                                        else:
                                            mem[floor32(mem[_21516]) + _21516 + 196] = mem[floor32(mem[_21516]) + _21516 + -(mem[_21516] % 32) + 228 len mem[_21516] % 32]
                                            require ext_code.size(address(_21515))
                                            call address(_21515).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_20304), 128, mem[_21516], mem[_21516 + 196 len floor32(mem[_21516]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_21516 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_21516 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                continue 
                            require Mask(112, 0, ext_call.return_data[0])
                            if 997 * s * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * s:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                            require idx < mem[96]
                            if mem[(32 * idx) + 140 len 20] == address(_16024):
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _22275 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _22276 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22276 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22276 + 36] = 0
                                    mem[_22276 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_22276 + 100] = this.address
                                    mem[_22276 + 132] = 128
                                    mem[_22276 + 164] = mem[_22276]
                                    t = 0
                                    while t < mem[_22276]:
                                        mem[_22276 + t + 196] = mem[_22276 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_22276] % 32:
                                        require ext_code.size(address(_22275))
                                        call address(_22275).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_22276 + 164 len mem[_22276] + 32]
                                    else:
                                        mem[floor32(mem[_22276]) + _22276 + 196] = mem[floor32(mem[_22276]) + _22276 + -(mem[_22276] % 32) + 228 len mem[_22276] % 32]
                                        require ext_code.size(address(_22275))
                                        call address(_22275).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_22276], mem[_22276 + 196 len floor32(mem[_22276]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_22276 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_22276 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _21520 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _23070 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _23071 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_23071 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_23071 + 36] = 0
                                    mem[_23071 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_23071 + 100] = address(_21520)
                                    mem[_23071 + 132] = 128
                                    mem[_23071 + 164] = mem[_23071]
                                    t = 0
                                    while t < mem[_23071]:
                                        mem[_23071 + t + 196] = mem[_23071 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_23071] % 32:
                                        require ext_code.size(address(_23070))
                                        call address(_23070).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_21520), 128, mem[_23071 + 164 len mem[_23071] + 32]
                                    else:
                                        mem[floor32(mem[_23071]) + _23071 + 196] = mem[floor32(mem[_23071]) + _23071 + -(mem[_23071] % 32) + 228 len mem[_23071] % 32]
                                        require ext_code.size(address(_23070))
                                        call address(_23070).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_21520), 128, mem[_23071], mem[_23071 + 196 len floor32(mem[_23071]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_23071 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_23071 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _22278 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _22279 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22279 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22279 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_22279 + 68] = 0
                                    mem[_22279 + 100] = this.address
                                    mem[_22279 + 132] = 128
                                    mem[_22279 + 164] = mem[_22279]
                                    t = 0
                                    while t < mem[_22279]:
                                        mem[_22279 + t + 196] = mem[_22279 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_22279] % 32:
                                        require ext_code.size(address(_22278))
                                        call address(_22278).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_22279 + 164 len mem[_22279] + 32]
                                    else:
                                        mem[floor32(mem[_22279]) + _22279 + 196] = mem[floor32(mem[_22279]) + _22279 + -(mem[_22279] % 32) + 228 len mem[_22279] % 32]
                                        require ext_code.size(address(_22278))
                                        call address(_22278).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_22279], mem[_22279 + 196 len floor32(mem[_22279]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_22279 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_22279 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _21522 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _23075 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _23076 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_23076 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_23076 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_23076 + 68] = 0
                                    mem[_23076 + 100] = address(_21522)
                                    mem[_23076 + 132] = 128
                                    mem[_23076 + 164] = mem[_23076]
                                    t = 0
                                    while t < mem[_23076]:
                                        mem[_23076 + t + 196] = mem[_23076 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_23076] % 32:
                                        require ext_code.size(address(_23075))
                                        call address(_23075).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_21522), 128, mem[_23076 + 164 len mem[_23076] + 32]
                                    else:
                                        mem[floor32(mem[_23076]) + _23076 + 196] = mem[floor32(mem[_23076]) + _23076 + -(mem[_23076] % 32) + 228 len mem[_23076] % 32]
                                        require ext_code.size(address(_23075))
                                        call address(_23075).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_21522), 128, mem[_23076], mem[_23076 + 196 len floor32(mem[_23076]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_23076 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_23076 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if not mem[(32 * idx + 1) + 140 len 20]:
                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                            require ext_code.size(mem[(32 * idx) + (32 * arg1.length) + 172 len 20])
                            staticcall mem[(32 * idx) + (32 * arg1.length) + 172 len 20].getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if 997 * s / 997 != s:
                                revert with 0, 'ds-math-mul-overflow'
                            if address(_16134) == address(_16153):
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    require idx < mem[96]
                                    if mem[(32 * idx) + 140 len 20] == address(_16024):
                                        if idx >= mem[(32 * arg1.length) + 128] - 1:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _20865 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _20866 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_20866 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_20866 + 36] = 0
                                            mem[_20866 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_20866 + 100] = this.address
                                            mem[_20866 + 132] = 128
                                            mem[_20866 + 164] = mem[_20866]
                                            t = 0
                                            while t < mem[_20866]:
                                                mem[_20866 + t + 196] = mem[_20866 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_20866] % 32:
                                                require ext_code.size(address(_20865))
                                                call address(_20865).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_20866 + 164 len mem[_20866] + 32]
                                            else:
                                                mem[floor32(mem[_20866]) + _20866 + 196] = mem[floor32(mem[_20866]) + _20866 + -(mem[_20866] % 32) + 228 len mem[_20866] % 32]
                                                require ext_code.size(address(_20865))
                                                call address(_20865).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_20866], mem[_20866 + 196 len floor32(mem[_20866]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_20866 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_20866 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require idx + 1 < mem[(32 * arg1.length) + 128]
                                            _20308 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _21524 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _21525 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_21525 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_21525 + 36] = 0
                                            mem[_21525 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_21525 + 100] = address(_20308)
                                            mem[_21525 + 132] = 128
                                            mem[_21525 + 164] = mem[_21525]
                                            t = 0
                                            while t < mem[_21525]:
                                                mem[_21525 + t + 196] = mem[_21525 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_21525] % 32:
                                                require ext_code.size(address(_21524))
                                                call address(_21524).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_20308), 128, mem[_21525 + 164 len mem[_21525] + 32]
                                            else:
                                                mem[floor32(mem[_21525]) + _21525 + 196] = mem[floor32(mem[_21525]) + _21525 + -(mem[_21525] % 32) + 228 len mem[_21525] % 32]
                                                require ext_code.size(address(_21524))
                                                call address(_21524).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_20308), 128, mem[_21525], mem[_21525 + 196 len floor32(mem[_21525]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_21525 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_21525 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        if idx >= mem[(32 * arg1.length) + 128] - 1:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _20868 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _20869 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_20869 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_20869 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_20869 + 68] = 0
                                            mem[_20869 + 100] = this.address
                                            mem[_20869 + 132] = 128
                                            mem[_20869 + 164] = mem[_20869]
                                            t = 0
                                            while t < mem[_20869]:
                                                mem[_20869 + t + 196] = mem[_20869 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_20869] % 32:
                                                require ext_code.size(address(_20868))
                                                call address(_20868).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_20869 + 164 len mem[_20869] + 32]
                                            else:
                                                mem[floor32(mem[_20869]) + _20869 + 196] = mem[floor32(mem[_20869]) + _20869 + -(mem[_20869] % 32) + 228 len mem[_20869] % 32]
                                                require ext_code.size(address(_20868))
                                                call address(_20868).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_20869], mem[_20869 + 196 len floor32(mem[_20869]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_20869 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_20869 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require idx + 1 < mem[(32 * arg1.length) + 128]
                                            _20310 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _21529 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _21530 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_21530 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_21530 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_21530 + 68] = 0
                                            mem[_21530 + 100] = address(_20310)
                                            mem[_21530 + 132] = 128
                                            mem[_21530 + 164] = mem[_21530]
                                            t = 0
                                            while t < mem[_21530]:
                                                mem[_21530 + t + 196] = mem[_21530 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_21530] % 32:
                                                require ext_code.size(address(_21529))
                                                call address(_21529).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_20310), 128, mem[_21530 + 164 len mem[_21530] + 32]
                                            else:
                                                mem[floor32(mem[_21530]) + _21530 + 196] = mem[floor32(mem[_21530]) + _21530 + -(mem[_21530] % 32) + 228 len mem[_21530] % 32]
                                                require ext_code.size(address(_21529))
                                                call address(_21529).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_20310), 128, mem[_21530], mem[_21530 + 196 len floor32(mem[_21530]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_21530 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_21530 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    continue 
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * s * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * s:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                require idx < mem[96]
                                if mem[(32 * idx) + 140 len 20] == address(_16024):
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _22287 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _22288 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_22288 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_22288 + 36] = 0
                                        mem[_22288 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_22288 + 100] = this.address
                                        mem[_22288 + 132] = 128
                                        mem[_22288 + 164] = mem[_22288]
                                        t = 0
                                        while t < mem[_22288]:
                                            mem[_22288 + t + 196] = mem[_22288 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_22288] % 32:
                                            require ext_code.size(address(_22287))
                                            call address(_22287).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_22288 + 164 len mem[_22288] + 32]
                                        else:
                                            mem[floor32(mem[_22288]) + _22288 + 196] = mem[floor32(mem[_22288]) + _22288 + -(mem[_22288] % 32) + 228 len mem[_22288] % 32]
                                            require ext_code.size(address(_22287))
                                            call address(_22287).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_22288], mem[_22288 + 196 len floor32(mem[_22288]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_22288 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_22288 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _21534 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _23082 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _23083 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_23083 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_23083 + 36] = 0
                                        mem[_23083 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_23083 + 100] = address(_21534)
                                        mem[_23083 + 132] = 128
                                        mem[_23083 + 164] = mem[_23083]
                                        t = 0
                                        while t < mem[_23083]:
                                            mem[_23083 + t + 196] = mem[_23083 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_23083] % 32:
                                            require ext_code.size(address(_23082))
                                            call address(_23082).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_21534), 128, mem[_23083 + 164 len mem[_23083] + 32]
                                        else:
                                            mem[floor32(mem[_23083]) + _23083 + 196] = mem[floor32(mem[_23083]) + _23083 + -(mem[_23083] % 32) + 228 len mem[_23083] % 32]
                                            require ext_code.size(address(_23082))
                                            call address(_23082).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_21534), 128, mem[_23083], mem[_23083 + 196 len floor32(mem[_23083]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_23083 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_23083 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _22290 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _22291 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_22291 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_22291 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_22291 + 68] = 0
                                        mem[_22291 + 100] = this.address
                                        mem[_22291 + 132] = 128
                                        mem[_22291 + 164] = mem[_22291]
                                        t = 0
                                        while t < mem[_22291]:
                                            mem[_22291 + t + 196] = mem[_22291 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_22291] % 32:
                                            require ext_code.size(address(_22290))
                                            call address(_22290).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_22291 + 164 len mem[_22291] + 32]
                                        else:
                                            mem[floor32(mem[_22291]) + _22291 + 196] = mem[floor32(mem[_22291]) + _22291 + -(mem[_22291] % 32) + 228 len mem[_22291] % 32]
                                            require ext_code.size(address(_22290))
                                            call address(_22290).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_22291], mem[_22291 + 196 len floor32(mem[_22291]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_22291 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_22291 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _21536 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _23087 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _23088 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_23088 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_23088 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_23088 + 68] = 0
                                        mem[_23088 + 100] = address(_21536)
                                        mem[_23088 + 132] = 128
                                        mem[_23088 + 164] = mem[_23088]
                                        t = 0
                                        while t < mem[_23088]:
                                            mem[_23088 + t + 196] = mem[_23088 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_23088] % 32:
                                            require ext_code.size(address(_23087))
                                            call address(_23087).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_21536), 128, mem[_23088 + 164 len mem[_23088] + 32]
                                        else:
                                            mem[floor32(mem[_23088]) + _23088 + 196] = mem[floor32(mem[_23088]) + _23088 + -(mem[_23088] % 32) + 228 len mem[_23088] % 32]
                                            require ext_code.size(address(_23087))
                                            call address(_23087).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_21536), 128, mem[_23088], mem[_23088 + 196 len floor32(mem[_23088]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_23088 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_23088 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                continue 
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                require idx < mem[96]
                                if mem[(32 * idx) + 140 len 20] == address(_16024):
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _20873 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _20874 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_20874 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_20874 + 36] = 0
                                        mem[_20874 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_20874 + 100] = this.address
                                        mem[_20874 + 132] = 128
                                        mem[_20874 + 164] = mem[_20874]
                                        t = 0
                                        while t < mem[_20874]:
                                            mem[_20874 + t + 196] = mem[_20874 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_20874] % 32:
                                            require ext_code.size(address(_20873))
                                            call address(_20873).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_20874 + 164 len mem[_20874] + 32]
                                        else:
                                            mem[floor32(mem[_20874]) + _20874 + 196] = mem[floor32(mem[_20874]) + _20874 + -(mem[_20874] % 32) + 228 len mem[_20874] % 32]
                                            require ext_code.size(address(_20873))
                                            call address(_20873).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_20874], mem[_20874 + 196 len floor32(mem[_20874]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_20874 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_20874 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _20314 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _21538 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _21539 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_21539 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_21539 + 36] = 0
                                        mem[_21539 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_21539 + 100] = address(_20314)
                                        mem[_21539 + 132] = 128
                                        mem[_21539 + 164] = mem[_21539]
                                        t = 0
                                        while t < mem[_21539]:
                                            mem[_21539 + t + 196] = mem[_21539 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_21539] % 32:
                                            require ext_code.size(address(_21538))
                                            call address(_21538).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_20314), 128, mem[_21539 + 164 len mem[_21539] + 32]
                                        else:
                                            mem[floor32(mem[_21539]) + _21539 + 196] = mem[floor32(mem[_21539]) + _21539 + -(mem[_21539] % 32) + 228 len mem[_21539] % 32]
                                            require ext_code.size(address(_21538))
                                            call address(_21538).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_20314), 128, mem[_21539], mem[_21539 + 196 len floor32(mem[_21539]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_21539 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_21539 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _20876 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _20877 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_20877 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_20877 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_20877 + 68] = 0
                                        mem[_20877 + 100] = this.address
                                        mem[_20877 + 132] = 128
                                        mem[_20877 + 164] = mem[_20877]
                                        t = 0
                                        while t < mem[_20877]:
                                            mem[_20877 + t + 196] = mem[_20877 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_20877] % 32:
                                            require ext_code.size(address(_20876))
                                            call address(_20876).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_20877 + 164 len mem[_20877] + 32]
                                        else:
                                            mem[floor32(mem[_20877]) + _20877 + 196] = mem[floor32(mem[_20877]) + _20877 + -(mem[_20877] % 32) + 228 len mem[_20877] % 32]
                                            require ext_code.size(address(_20876))
                                            call address(_20876).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_20877], mem[_20877 + 196 len floor32(mem[_20877]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_20877 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_20877 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _20316 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _21543 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _21544 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_21544 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_21544 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_21544 + 68] = 0
                                        mem[_21544 + 100] = address(_20316)
                                        mem[_21544 + 132] = 128
                                        mem[_21544 + 164] = mem[_21544]
                                        t = 0
                                        while t < mem[_21544]:
                                            mem[_21544 + t + 196] = mem[_21544 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_21544] % 32:
                                            require ext_code.size(address(_21543))
                                            call address(_21543).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_20316), 128, mem[_21544 + 164 len mem[_21544] + 32]
                                        else:
                                            mem[floor32(mem[_21544]) + _21544 + 196] = mem[floor32(mem[_21544]) + _21544 + -(mem[_21544] % 32) + 228 len mem[_21544] % 32]
                                            require ext_code.size(address(_21543))
                                            call address(_21543).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_20316), 128, mem[_21544], mem[_21544 + 196 len floor32(mem[_21544]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_21544 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_21544 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                continue 
                            require Mask(112, 0, ext_call.return_data[0])
                            if 997 * s * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * s:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                            require idx < mem[96]
                            if mem[(32 * idx) + 140 len 20] == address(_16024):
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _22299 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _22300 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22300 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22300 + 36] = 0
                                    mem[_22300 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_22300 + 100] = this.address
                                    mem[_22300 + 132] = 128
                                    mem[_22300 + 164] = mem[_22300]
                                    t = 0
                                    while t < mem[_22300]:
                                        mem[_22300 + t + 196] = mem[_22300 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_22300] % 32:
                                        require ext_code.size(address(_22299))
                                        call address(_22299).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_22300 + 164 len mem[_22300] + 32]
                                    else:
                                        mem[floor32(mem[_22300]) + _22300 + 196] = mem[floor32(mem[_22300]) + _22300 + -(mem[_22300] % 32) + 228 len mem[_22300] % 32]
                                        require ext_code.size(address(_22299))
                                        call address(_22299).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_22300], mem[_22300 + 196 len floor32(mem[_22300]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_22300 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_22300 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _21548 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _23094 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _23095 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_23095 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_23095 + 36] = 0
                                    mem[_23095 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_23095 + 100] = address(_21548)
                                    mem[_23095 + 132] = 128
                                    mem[_23095 + 164] = mem[_23095]
                                    t = 0
                                    while t < mem[_23095]:
                                        mem[_23095 + t + 196] = mem[_23095 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_23095] % 32:
                                        require ext_code.size(address(_23094))
                                        call address(_23094).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_21548), 128, mem[_23095 + 164 len mem[_23095] + 32]
                                    else:
                                        mem[floor32(mem[_23095]) + _23095 + 196] = mem[floor32(mem[_23095]) + _23095 + -(mem[_23095] % 32) + 228 len mem[_23095] % 32]
                                        require ext_code.size(address(_23094))
                                        call address(_23094).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_21548), 128, mem[_23095], mem[_23095 + 196 len floor32(mem[_23095]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_23095 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_23095 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _22302 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _22303 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22303 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22303 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_22303 + 68] = 0
                                    mem[_22303 + 100] = this.address
                                    mem[_22303 + 132] = 128
                                    mem[_22303 + 164] = mem[_22303]
                                    t = 0
                                    while t < mem[_22303]:
                                        mem[_22303 + t + 196] = mem[_22303 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_22303] % 32:
                                        require ext_code.size(address(_22302))
                                        call address(_22302).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_22303 + 164 len mem[_22303] + 32]
                                    else:
                                        mem[floor32(mem[_22303]) + _22303 + 196] = mem[floor32(mem[_22303]) + _22303 + -(mem[_22303] % 32) + 228 len mem[_22303] % 32]
                                        require ext_code.size(address(_22302))
                                        call address(_22302).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_22303], mem[_22303 + 196 len floor32(mem[_22303]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_22303 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_22303 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _21550 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _23099 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _23100 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_23100 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_23100 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_23100 + 68] = 0
                                    mem[_23100 + 100] = address(_21550)
                                    mem[_23100 + 132] = 128
                                    mem[_23100 + 164] = mem[_23100]
                                    t = 0
                                    while t < mem[_23100]:
                                        mem[_23100 + t + 196] = mem[_23100 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_23100] % 32:
                                        require ext_code.size(address(_23099))
                                        call address(_23099).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_21550), 128, mem[_23100 + 164 len mem[_23100] + 32]
                                    else:
                                        mem[floor32(mem[_23100]) + _23100 + 196] = mem[floor32(mem[_23100]) + _23100 + -(mem[_23100] % 32) + 228 len mem[_23100] % 32]
                                        require ext_code.size(address(_23099))
                                        call address(_23099).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_21550), 128, mem[_23100], mem[_23100 + 196 len floor32(mem[_23100]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_23100 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_23100 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
            idx = idx + 1
            s = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
            continue 
    else:
        if stor0 != msg.sender:
            revert with 0, 'W2'
        idx = 0
        s = arg3
        while idx < arg2.length:
            require idx < arg2.length
            require idx < arg1.length
            _7976 = mem[(32 * idx) + 128]
            require idx + 1 < arg1.length
            _7981 = mem[(32 * idx + 1) + 128]
            if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                revert with 0, 
                            32,
                            37,
                            0xfe556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345,
                            mem[(32 * arg1.length) + (32 * arg2.length) + 265 len 27]
            if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                if not mem[(32 * idx) + 140 len 20]:
                    revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                require ext_code.size(mem[(32 * idx) + (32 * arg1.length) + 172 len 20])
                staticcall mem[(32 * idx) + (32 * arg1.length) + 172 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[(32 * arg1.length) + (32 * arg2.length) + 160 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                if 997 * s / 997 != s:
                    revert with 0, 'ds-math-mul-overflow'
                if address(_7976) == address(_7976):
                    if not ext_call.return_data[50 len 14]:
                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[18 len 14]) + (997 * s) < 1000 * ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        if (1000 * ext_call.return_data[18 len 14]) + (997 * s):
                            idx = idx + 1
                            s = 0 / (1000 * ext_call.return_data[18 len 14]) + (997 * s)
                            continue 
                    else:
                        if ext_call.return_data[50 len 14]:
                            if 997 * s * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * s:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * ext_call.return_data[18 len 14]) + (997 * s) < 1000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            if (1000 * ext_call.return_data[18 len 14]) + (997 * s):
                                idx = idx + 1
                                s = 997 * s * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * s)
                                continue 
                else:
                    if not ext_call.return_data[18 len 14]:
                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[50 len 14]) + (997 * s) < 1000 * ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        if (1000 * ext_call.return_data[50 len 14]) + (997 * s):
                            idx = idx + 1
                            s = 0 / (1000 * ext_call.return_data[50 len 14]) + (997 * s)
                            continue 
                    else:
                        if ext_call.return_data[18 len 14]:
                            if 997 * s * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * s:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * ext_call.return_data[50 len 14]) + (997 * s) < 1000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            if (1000 * ext_call.return_data[50 len 14]) + (997 * s):
                                idx = idx + 1
                                s = 997 * s * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * s)
                                continue 
            else:
                if not mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                require ext_code.size(mem[(32 * idx) + (32 * arg1.length) + 172 len 20])
                staticcall mem[(32 * idx) + (32 * arg1.length) + 172 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[(32 * arg1.length) + (32 * arg2.length) + 160 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                if 997 * s / 997 != s:
                    revert with 0, 'ds-math-mul-overflow'
                if address(_7976) == address(_7981):
                    if not ext_call.return_data[50 len 14]:
                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[18 len 14]) + (997 * s) < 1000 * ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        if (1000 * ext_call.return_data[18 len 14]) + (997 * s):
                            idx = idx + 1
                            s = 0 / (1000 * ext_call.return_data[18 len 14]) + (997 * s)
                            continue 
                    else:
                        if ext_call.return_data[50 len 14]:
                            if 997 * s * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * s:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * ext_call.return_data[18 len 14]) + (997 * s) < 1000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            if (1000 * ext_call.return_data[18 len 14]) + (997 * s):
                                idx = idx + 1
                                s = 997 * s * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * s)
                                continue 
                else:
                    if not ext_call.return_data[18 len 14]:
                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[50 len 14]) + (997 * s) < 1000 * ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        if (1000 * ext_call.return_data[50 len 14]) + (997 * s):
                            idx = idx + 1
                            s = 0 / (1000 * ext_call.return_data[50 len 14]) + (997 * s)
                            continue 
                    else:
                        if ext_call.return_data[18 len 14]:
                            if 997 * s * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * s:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * ext_call.return_data[50 len 14]) + (997 * s) < 1000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            if (1000 * ext_call.return_data[50 len 14]) + (997 * s):
                                idx = idx + 1
                                s = 997 * s * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * s)
                                continue 
            revert
        if s < arg4:
            revert with 0, 'R1'
        idx = 0
        s = arg3
        while idx < arg2.length:
            require idx < mem[96]
            if mem[(32 * idx) + 140 len 20] != stor1:
                require idx < mem[96]
                _15931 = mem[(32 * idx) + 128]
                require idx + 1 < mem[96]
                _15939 = mem[(32 * idx + 1) + 128]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 32, 37, 0xfe556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                    require idx < mem[(32 * arg1.length) + 128]
                    require idx < mem[96]
                    _16008 = mem[(32 * idx) + 128]
                    require idx + 1 < mem[96]
                    _16025 = mem[(32 * idx + 1) + 128]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 32, 37, 0xfe556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                    if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                        if not mem[(32 * idx) + 140 len 20]:
                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                        require ext_code.size(mem[(32 * idx) + (32 * arg1.length) + 172 len 20])
                        staticcall mem[(32 * idx) + (32 * arg1.length) + 172 len 20].getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 96
                        if 997 * s / 997 != s:
                            revert with 0, 'ds-math-mul-overflow'
                        if address(_16008) == address(_16008):
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                require idx < mem[96]
                                if mem[(32 * idx) + 140 len 20] == address(_15931):
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17281 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17282 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17282 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17282 + 36] = 0
                                        mem[_17282 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_17282 + 100] = this.address
                                        mem[_17282 + 132] = 128
                                        mem[_17282 + 164] = mem[_17282]
                                        t = 0
                                        while t < mem[_17282]:
                                            mem[_17282 + t + 196] = mem[_17282 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17282] % 32:
                                            require ext_code.size(address(_17281))
                                            call address(_17281).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_17282 + 164 len mem[_17282] + 32]
                                        else:
                                            mem[floor32(mem[_17282]) + _17282 + 196] = mem[floor32(mem[_17282]) + _17282 + -(mem[_17282] % 32) + 228 len mem[_17282] % 32]
                                            require ext_code.size(address(_17281))
                                            call address(_17281).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_17282], mem[_17282 + 196 len floor32(mem[_17282]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17282 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17282 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _17072 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17584 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17585 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17585 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17585 + 36] = 0
                                        mem[_17585 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_17585 + 100] = address(_17072)
                                        mem[_17585 + 132] = 128
                                        mem[_17585 + 164] = mem[_17585]
                                        t = 0
                                        while t < mem[_17585]:
                                            mem[_17585 + t + 196] = mem[_17585 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17585] % 32:
                                            require ext_code.size(address(_17584))
                                            call address(_17584).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17072), 128, mem[_17585 + 164 len mem[_17585] + 32]
                                        else:
                                            mem[floor32(mem[_17585]) + _17585 + 196] = mem[floor32(mem[_17585]) + _17585 + -(mem[_17585] % 32) + 228 len mem[_17585] % 32]
                                            require ext_code.size(address(_17584))
                                            call address(_17584).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17072), 128, mem[_17585], mem[_17585 + 196 len floor32(mem[_17585]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17585 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17585 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17284 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17285 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17285 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17285 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_17285 + 68] = 0
                                        mem[_17285 + 100] = this.address
                                        mem[_17285 + 132] = 128
                                        mem[_17285 + 164] = mem[_17285]
                                        t = 0
                                        while t < mem[_17285]:
                                            mem[_17285 + t + 196] = mem[_17285 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17285] % 32:
                                            require ext_code.size(address(_17284))
                                            call address(_17284).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_17285 + 164 len mem[_17285] + 32]
                                        else:
                                            mem[floor32(mem[_17285]) + _17285 + 196] = mem[floor32(mem[_17285]) + _17285 + -(mem[_17285] % 32) + 228 len mem[_17285] % 32]
                                            require ext_code.size(address(_17284))
                                            call address(_17284).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_17285], mem[_17285 + 196 len floor32(mem[_17285]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17285 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17285 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _17074 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17589 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17590 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17590 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17590 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_17590 + 68] = 0
                                        mem[_17590 + 100] = address(_17074)
                                        mem[_17590 + 132] = 128
                                        mem[_17590 + 164] = mem[_17590]
                                        t = 0
                                        while t < mem[_17590]:
                                            mem[_17590 + t + 196] = mem[_17590 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17590] % 32:
                                            require ext_code.size(address(_17589))
                                            call address(_17589).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17074), 128, mem[_17590 + 164 len mem[_17590] + 32]
                                        else:
                                            mem[floor32(mem[_17590]) + _17590 + 196] = mem[floor32(mem[_17590]) + _17590 + -(mem[_17590] % 32) + 228 len mem[_17590] % 32]
                                            require ext_code.size(address(_17589))
                                            call address(_17589).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17074), 128, mem[_17590], mem[_17590 + 196 len floor32(mem[_17590]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17590 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17590 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                continue 
                            require Mask(112, 0, ext_call.return_data[32])
                            if 997 * s * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * s:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                            require idx < mem[96]
                            if mem[(32 * idx) + 140 len 20] == address(_15931):
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _17991 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _17992 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_17992 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_17992 + 36] = 0
                                    mem[_17992 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    mem[_17992 + 100] = this.address
                                    mem[_17992 + 132] = 128
                                    mem[_17992 + 164] = mem[_17992]
                                    t = 0
                                    while t < mem[_17992]:
                                        mem[_17992 + t + 196] = mem[_17992 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_17992] % 32:
                                        require ext_code.size(address(_17991))
                                        call address(_17991).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_17992 + 164 len mem[_17992] + 32]
                                    else:
                                        mem[floor32(mem[_17992]) + _17992 + 196] = mem[floor32(mem[_17992]) + _17992 + -(mem[_17992] % 32) + 228 len mem[_17992] % 32]
                                        require ext_code.size(address(_17991))
                                        call address(_17991).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_17992], mem[_17992 + 196 len floor32(mem[_17992]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_17992 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_17992 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _17594 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18410 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18411 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18411 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18411 + 36] = 0
                                    mem[_18411 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    mem[_18411 + 100] = address(_17594)
                                    mem[_18411 + 132] = 128
                                    mem[_18411 + 164] = mem[_18411]
                                    t = 0
                                    while t < mem[_18411]:
                                        mem[_18411 + t + 196] = mem[_18411 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18411] % 32:
                                        require ext_code.size(address(_18410))
                                        call address(_18410).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17594), 128, mem[_18411 + 164 len mem[_18411] + 32]
                                    else:
                                        mem[floor32(mem[_18411]) + _18411 + 196] = mem[floor32(mem[_18411]) + _18411 + -(mem[_18411] % 32) + 228 len mem[_18411] % 32]
                                        require ext_code.size(address(_18410))
                                        call address(_18410).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17594), 128, mem[_18411], mem[_18411 + 196 len floor32(mem[_18411]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18411 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18411 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _17994 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _17995 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_17995 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_17995 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    mem[_17995 + 68] = 0
                                    mem[_17995 + 100] = this.address
                                    mem[_17995 + 132] = 128
                                    mem[_17995 + 164] = mem[_17995]
                                    t = 0
                                    while t < mem[_17995]:
                                        mem[_17995 + t + 196] = mem[_17995 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_17995] % 32:
                                        require ext_code.size(address(_17994))
                                        call address(_17994).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_17995 + 164 len mem[_17995] + 32]
                                    else:
                                        mem[floor32(mem[_17995]) + _17995 + 196] = mem[floor32(mem[_17995]) + _17995 + -(mem[_17995] % 32) + 228 len mem[_17995] % 32]
                                        require ext_code.size(address(_17994))
                                        call address(_17994).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_17995], mem[_17995 + 196 len floor32(mem[_17995]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_17995 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_17995 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _17596 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18415 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18416 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18416 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18416 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    mem[_18416 + 68] = 0
                                    mem[_18416 + 100] = address(_17596)
                                    mem[_18416 + 132] = 128
                                    mem[_18416 + 164] = mem[_18416]
                                    t = 0
                                    while t < mem[_18416]:
                                        mem[_18416 + t + 196] = mem[_18416 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18416] % 32:
                                        require ext_code.size(address(_18415))
                                        call address(_18415).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17596), 128, mem[_18416 + 164 len mem[_18416] + 32]
                                    else:
                                        mem[floor32(mem[_18416]) + _18416 + 196] = mem[floor32(mem[_18416]) + _18416 + -(mem[_18416] % 32) + 228 len mem[_18416] % 32]
                                        require ext_code.size(address(_18415))
                                        call address(_18415).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17596), 128, mem[_18416], mem[_18416 + 196 len floor32(mem[_18416]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18416 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18416 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                            continue 
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                            require idx < mem[96]
                            if mem[(32 * idx) + 140 len 20] == address(_15931):
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _17289 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _17290 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_17290 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_17290 + 36] = 0
                                    mem[_17290 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_17290 + 100] = this.address
                                    mem[_17290 + 132] = 128
                                    mem[_17290 + 164] = mem[_17290]
                                    t = 0
                                    while t < mem[_17290]:
                                        mem[_17290 + t + 196] = mem[_17290 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_17290] % 32:
                                        require ext_code.size(address(_17289))
                                        call address(_17289).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_17290 + 164 len mem[_17290] + 32]
                                    else:
                                        mem[floor32(mem[_17290]) + _17290 + 196] = mem[floor32(mem[_17290]) + _17290 + -(mem[_17290] % 32) + 228 len mem[_17290] % 32]
                                        require ext_code.size(address(_17289))
                                        call address(_17289).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_17290], mem[_17290 + 196 len floor32(mem[_17290]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_17290 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_17290 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _17078 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _17598 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _17599 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_17599 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_17599 + 36] = 0
                                    mem[_17599 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_17599 + 100] = address(_17078)
                                    mem[_17599 + 132] = 128
                                    mem[_17599 + 164] = mem[_17599]
                                    t = 0
                                    while t < mem[_17599]:
                                        mem[_17599 + t + 196] = mem[_17599 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_17599] % 32:
                                        require ext_code.size(address(_17598))
                                        call address(_17598).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17078), 128, mem[_17599 + 164 len mem[_17599] + 32]
                                    else:
                                        mem[floor32(mem[_17599]) + _17599 + 196] = mem[floor32(mem[_17599]) + _17599 + -(mem[_17599] % 32) + 228 len mem[_17599] % 32]
                                        require ext_code.size(address(_17598))
                                        call address(_17598).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17078), 128, mem[_17599], mem[_17599 + 196 len floor32(mem[_17599]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_17599 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_17599 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _17292 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _17293 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_17293 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_17293 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_17293 + 68] = 0
                                    mem[_17293 + 100] = this.address
                                    mem[_17293 + 132] = 128
                                    mem[_17293 + 164] = mem[_17293]
                                    t = 0
                                    while t < mem[_17293]:
                                        mem[_17293 + t + 196] = mem[_17293 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_17293] % 32:
                                        require ext_code.size(address(_17292))
                                        call address(_17292).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_17293 + 164 len mem[_17293] + 32]
                                    else:
                                        mem[floor32(mem[_17293]) + _17293 + 196] = mem[floor32(mem[_17293]) + _17293 + -(mem[_17293] % 32) + 228 len mem[_17293] % 32]
                                        require ext_code.size(address(_17292))
                                        call address(_17292).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_17293], mem[_17293 + 196 len floor32(mem[_17293]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_17293 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_17293 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _17080 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _17603 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _17604 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_17604 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_17604 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_17604 + 68] = 0
                                    mem[_17604 + 100] = address(_17080)
                                    mem[_17604 + 132] = 128
                                    mem[_17604 + 164] = mem[_17604]
                                    t = 0
                                    while t < mem[_17604]:
                                        mem[_17604 + t + 196] = mem[_17604 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_17604] % 32:
                                        require ext_code.size(address(_17603))
                                        call address(_17603).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17080), 128, mem[_17604 + 164 len mem[_17604] + 32]
                                    else:
                                        mem[floor32(mem[_17604]) + _17604 + 196] = mem[floor32(mem[_17604]) + _17604 + -(mem[_17604] % 32) + 228 len mem[_17604] % 32]
                                        require ext_code.size(address(_17603))
                                        call address(_17603).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17080), 128, mem[_17604], mem[_17604 + 196 len floor32(mem[_17604]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_17604 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_17604 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                            continue 
                        require Mask(112, 0, ext_call.return_data[0])
                        if 997 * s * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * s:
                            revert with 0, 'ds-math-mul-overflow'
                        if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                            revert with 0, 'ds-math-add-overflow'
                        require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                        require idx < mem[96]
                        if mem[(32 * idx) + 140 len 20] == address(_15931):
                            if idx >= mem[(32 * arg1.length) + 128] - 1:
                                require idx < mem[(32 * arg1.length) + 128]
                                _18003 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                _18004 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_18004 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_18004 + 36] = 0
                                mem[_18004 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                mem[_18004 + 100] = this.address
                                mem[_18004 + 132] = 128
                                mem[_18004 + 164] = mem[_18004]
                                t = 0
                                while t < mem[_18004]:
                                    mem[_18004 + t + 196] = mem[_18004 + t + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_18004] % 32:
                                    require ext_code.size(address(_18003))
                                    call address(_18003).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_18004 + 164 len mem[_18004] + 32]
                                else:
                                    mem[floor32(mem[_18004]) + _18004 + 196] = mem[floor32(mem[_18004]) + _18004 + -(mem[_18004] % 32) + 228 len mem[_18004] % 32]
                                    require ext_code.size(address(_18003))
                                    call address(_18003).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_18004], mem[_18004 + 196 len floor32(mem[_18004]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                    require ext_code.size(stor1)
                                    staticcall stor1.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[_18004 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[_18004 + 36] = ext_call.return_data[0]
                                    require ext_code.size(stor1)
                                    call stor1.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require idx + 1 < mem[(32 * arg1.length) + 128]
                                _17608 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                require idx < mem[(32 * arg1.length) + 128]
                                _18422 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                _18423 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_18423 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_18423 + 36] = 0
                                mem[_18423 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                mem[_18423 + 100] = address(_17608)
                                mem[_18423 + 132] = 128
                                mem[_18423 + 164] = mem[_18423]
                                t = 0
                                while t < mem[_18423]:
                                    mem[_18423 + t + 196] = mem[_18423 + t + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_18423] % 32:
                                    require ext_code.size(address(_18422))
                                    call address(_18422).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17608), 128, mem[_18423 + 164 len mem[_18423] + 32]
                                else:
                                    mem[floor32(mem[_18423]) + _18423 + 196] = mem[floor32(mem[_18423]) + _18423 + -(mem[_18423] % 32) + 228 len mem[_18423] % 32]
                                    require ext_code.size(address(_18422))
                                    call address(_18422).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17608), 128, mem[_18423], mem[_18423 + 196 len floor32(mem[_18423]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                    require ext_code.size(stor1)
                                    staticcall stor1.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[_18423 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[_18423 + 36] = ext_call.return_data[0]
                                    require ext_code.size(stor1)
                                    call stor1.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if idx >= mem[(32 * arg1.length) + 128] - 1:
                                require idx < mem[(32 * arg1.length) + 128]
                                _18006 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                _18007 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_18007 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_18007 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                mem[_18007 + 68] = 0
                                mem[_18007 + 100] = this.address
                                mem[_18007 + 132] = 128
                                mem[_18007 + 164] = mem[_18007]
                                t = 0
                                while t < mem[_18007]:
                                    mem[_18007 + t + 196] = mem[_18007 + t + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_18007] % 32:
                                    require ext_code.size(address(_18006))
                                    call address(_18006).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_18007 + 164 len mem[_18007] + 32]
                                else:
                                    mem[floor32(mem[_18007]) + _18007 + 196] = mem[floor32(mem[_18007]) + _18007 + -(mem[_18007] % 32) + 228 len mem[_18007] % 32]
                                    require ext_code.size(address(_18006))
                                    call address(_18006).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_18007], mem[_18007 + 196 len floor32(mem[_18007]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                    require ext_code.size(stor1)
                                    staticcall stor1.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[_18007 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[_18007 + 36] = ext_call.return_data[0]
                                    require ext_code.size(stor1)
                                    call stor1.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require idx + 1 < mem[(32 * arg1.length) + 128]
                                _17610 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                require idx < mem[(32 * arg1.length) + 128]
                                _18427 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                _18428 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_18428 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_18428 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                mem[_18428 + 68] = 0
                                mem[_18428 + 100] = address(_17610)
                                mem[_18428 + 132] = 128
                                mem[_18428 + 164] = mem[_18428]
                                t = 0
                                while t < mem[_18428]:
                                    mem[_18428 + t + 196] = mem[_18428 + t + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_18428] % 32:
                                    require ext_code.size(address(_18427))
                                    call address(_18427).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17610), 128, mem[_18428 + 164 len mem[_18428] + 32]
                                else:
                                    mem[floor32(mem[_18428]) + _18428 + 196] = mem[floor32(mem[_18428]) + _18428 + -(mem[_18428] % 32) + 228 len mem[_18428] % 32]
                                    require ext_code.size(address(_18427))
                                    call address(_18427).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17610), 128, mem[_18428], mem[_18428 + 196 len floor32(mem[_18428]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                    require ext_code.size(stor1)
                                    staticcall stor1.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[_18428 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[_18428 + 36] = ext_call.return_data[0]
                                    require ext_code.size(stor1)
                                    call stor1.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if not mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                        require ext_code.size(mem[(32 * idx) + (32 * arg1.length) + 172 len 20])
                        staticcall mem[(32 * idx) + (32 * arg1.length) + 172 len 20].getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 96
                        if 997 * s / 997 != s:
                            revert with 0, 'ds-math-mul-overflow'
                        if address(_16008) == address(_16025):
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                require idx < mem[96]
                                if mem[(32 * idx) + 140 len 20] == address(_15931):
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17297 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17298 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17298 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17298 + 36] = 0
                                        mem[_17298 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_17298 + 100] = this.address
                                        mem[_17298 + 132] = 128
                                        mem[_17298 + 164] = mem[_17298]
                                        t = 0
                                        while t < mem[_17298]:
                                            mem[_17298 + t + 196] = mem[_17298 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17298] % 32:
                                            require ext_code.size(address(_17297))
                                            call address(_17297).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_17298 + 164 len mem[_17298] + 32]
                                        else:
                                            mem[floor32(mem[_17298]) + _17298 + 196] = mem[floor32(mem[_17298]) + _17298 + -(mem[_17298] % 32) + 228 len mem[_17298] % 32]
                                            require ext_code.size(address(_17297))
                                            call address(_17297).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_17298], mem[_17298 + 196 len floor32(mem[_17298]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17298 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17298 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _17084 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17612 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17613 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17613 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17613 + 36] = 0
                                        mem[_17613 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_17613 + 100] = address(_17084)
                                        mem[_17613 + 132] = 128
                                        mem[_17613 + 164] = mem[_17613]
                                        t = 0
                                        while t < mem[_17613]:
                                            mem[_17613 + t + 196] = mem[_17613 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17613] % 32:
                                            require ext_code.size(address(_17612))
                                            call address(_17612).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17084), 128, mem[_17613 + 164 len mem[_17613] + 32]
                                        else:
                                            mem[floor32(mem[_17613]) + _17613 + 196] = mem[floor32(mem[_17613]) + _17613 + -(mem[_17613] % 32) + 228 len mem[_17613] % 32]
                                            require ext_code.size(address(_17612))
                                            call address(_17612).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17084), 128, mem[_17613], mem[_17613 + 196 len floor32(mem[_17613]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17613 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17613 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17300 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17301 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17301 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17301 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_17301 + 68] = 0
                                        mem[_17301 + 100] = this.address
                                        mem[_17301 + 132] = 128
                                        mem[_17301 + 164] = mem[_17301]
                                        t = 0
                                        while t < mem[_17301]:
                                            mem[_17301 + t + 196] = mem[_17301 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17301] % 32:
                                            require ext_code.size(address(_17300))
                                            call address(_17300).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_17301 + 164 len mem[_17301] + 32]
                                        else:
                                            mem[floor32(mem[_17301]) + _17301 + 196] = mem[floor32(mem[_17301]) + _17301 + -(mem[_17301] % 32) + 228 len mem[_17301] % 32]
                                            require ext_code.size(address(_17300))
                                            call address(_17300).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_17301], mem[_17301 + 196 len floor32(mem[_17301]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17301 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17301 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _17086 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17617 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17618 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17618 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17618 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_17618 + 68] = 0
                                        mem[_17618 + 100] = address(_17086)
                                        mem[_17618 + 132] = 128
                                        mem[_17618 + 164] = mem[_17618]
                                        t = 0
                                        while t < mem[_17618]:
                                            mem[_17618 + t + 196] = mem[_17618 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17618] % 32:
                                            require ext_code.size(address(_17617))
                                            call address(_17617).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17086), 128, mem[_17618 + 164 len mem[_17618] + 32]
                                        else:
                                            mem[floor32(mem[_17618]) + _17618 + 196] = mem[floor32(mem[_17618]) + _17618 + -(mem[_17618] % 32) + 228 len mem[_17618] % 32]
                                            require ext_code.size(address(_17617))
                                            call address(_17617).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17086), 128, mem[_17618], mem[_17618 + 196 len floor32(mem[_17618]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17618 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17618 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                continue 
                            require Mask(112, 0, ext_call.return_data[32])
                            if 997 * s * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * s:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                            require idx < mem[96]
                            if mem[(32 * idx) + 140 len 20] == address(_15931):
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18015 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18016 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18016 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18016 + 36] = 0
                                    mem[_18016 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    mem[_18016 + 100] = this.address
                                    mem[_18016 + 132] = 128
                                    mem[_18016 + 164] = mem[_18016]
                                    t = 0
                                    while t < mem[_18016]:
                                        mem[_18016 + t + 196] = mem[_18016 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18016] % 32:
                                        require ext_code.size(address(_18015))
                                        call address(_18015).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_18016 + 164 len mem[_18016] + 32]
                                    else:
                                        mem[floor32(mem[_18016]) + _18016 + 196] = mem[floor32(mem[_18016]) + _18016 + -(mem[_18016] % 32) + 228 len mem[_18016] % 32]
                                        require ext_code.size(address(_18015))
                                        call address(_18015).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_18016], mem[_18016 + 196 len floor32(mem[_18016]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18016 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18016 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _17622 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18434 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18435 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18435 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18435 + 36] = 0
                                    mem[_18435 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    mem[_18435 + 100] = address(_17622)
                                    mem[_18435 + 132] = 128
                                    mem[_18435 + 164] = mem[_18435]
                                    t = 0
                                    while t < mem[_18435]:
                                        mem[_18435 + t + 196] = mem[_18435 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18435] % 32:
                                        require ext_code.size(address(_18434))
                                        call address(_18434).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17622), 128, mem[_18435 + 164 len mem[_18435] + 32]
                                    else:
                                        mem[floor32(mem[_18435]) + _18435 + 196] = mem[floor32(mem[_18435]) + _18435 + -(mem[_18435] % 32) + 228 len mem[_18435] % 32]
                                        require ext_code.size(address(_18434))
                                        call address(_18434).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17622), 128, mem[_18435], mem[_18435 + 196 len floor32(mem[_18435]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18435 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18435 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18018 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18019 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18019 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18019 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    mem[_18019 + 68] = 0
                                    mem[_18019 + 100] = this.address
                                    mem[_18019 + 132] = 128
                                    mem[_18019 + 164] = mem[_18019]
                                    t = 0
                                    while t < mem[_18019]:
                                        mem[_18019 + t + 196] = mem[_18019 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18019] % 32:
                                        require ext_code.size(address(_18018))
                                        call address(_18018).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_18019 + 164 len mem[_18019] + 32]
                                    else:
                                        mem[floor32(mem[_18019]) + _18019 + 196] = mem[floor32(mem[_18019]) + _18019 + -(mem[_18019] % 32) + 228 len mem[_18019] % 32]
                                        require ext_code.size(address(_18018))
                                        call address(_18018).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_18019], mem[_18019 + 196 len floor32(mem[_18019]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18019 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18019 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _17624 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18439 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18440 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18440 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18440 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    mem[_18440 + 68] = 0
                                    mem[_18440 + 100] = address(_17624)
                                    mem[_18440 + 132] = 128
                                    mem[_18440 + 164] = mem[_18440]
                                    t = 0
                                    while t < mem[_18440]:
                                        mem[_18440 + t + 196] = mem[_18440 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18440] % 32:
                                        require ext_code.size(address(_18439))
                                        call address(_18439).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17624), 128, mem[_18440 + 164 len mem[_18440] + 32]
                                    else:
                                        mem[floor32(mem[_18440]) + _18440 + 196] = mem[floor32(mem[_18440]) + _18440 + -(mem[_18440] % 32) + 228 len mem[_18440] % 32]
                                        require ext_code.size(address(_18439))
                                        call address(_18439).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17624), 128, mem[_18440], mem[_18440 + 196 len floor32(mem[_18440]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18440 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18440 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                            continue 
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                            require idx < mem[96]
                            if mem[(32 * idx) + 140 len 20] == address(_15931):
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _17305 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _17306 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_17306 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_17306 + 36] = 0
                                    mem[_17306 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_17306 + 100] = this.address
                                    mem[_17306 + 132] = 128
                                    mem[_17306 + 164] = mem[_17306]
                                    t = 0
                                    while t < mem[_17306]:
                                        mem[_17306 + t + 196] = mem[_17306 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_17306] % 32:
                                        require ext_code.size(address(_17305))
                                        call address(_17305).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_17306 + 164 len mem[_17306] + 32]
                                    else:
                                        mem[floor32(mem[_17306]) + _17306 + 196] = mem[floor32(mem[_17306]) + _17306 + -(mem[_17306] % 32) + 228 len mem[_17306] % 32]
                                        require ext_code.size(address(_17305))
                                        call address(_17305).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_17306], mem[_17306 + 196 len floor32(mem[_17306]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_17306 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_17306 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _17090 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _17626 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _17627 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_17627 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_17627 + 36] = 0
                                    mem[_17627 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_17627 + 100] = address(_17090)
                                    mem[_17627 + 132] = 128
                                    mem[_17627 + 164] = mem[_17627]
                                    t = 0
                                    while t < mem[_17627]:
                                        mem[_17627 + t + 196] = mem[_17627 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_17627] % 32:
                                        require ext_code.size(address(_17626))
                                        call address(_17626).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17090), 128, mem[_17627 + 164 len mem[_17627] + 32]
                                    else:
                                        mem[floor32(mem[_17627]) + _17627 + 196] = mem[floor32(mem[_17627]) + _17627 + -(mem[_17627] % 32) + 228 len mem[_17627] % 32]
                                        require ext_code.size(address(_17626))
                                        call address(_17626).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17090), 128, mem[_17627], mem[_17627 + 196 len floor32(mem[_17627]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_17627 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_17627 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _17308 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _17309 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_17309 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_17309 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_17309 + 68] = 0
                                    mem[_17309 + 100] = this.address
                                    mem[_17309 + 132] = 128
                                    mem[_17309 + 164] = mem[_17309]
                                    t = 0
                                    while t < mem[_17309]:
                                        mem[_17309 + t + 196] = mem[_17309 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_17309] % 32:
                                        require ext_code.size(address(_17308))
                                        call address(_17308).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_17309 + 164 len mem[_17309] + 32]
                                    else:
                                        mem[floor32(mem[_17309]) + _17309 + 196] = mem[floor32(mem[_17309]) + _17309 + -(mem[_17309] % 32) + 228 len mem[_17309] % 32]
                                        require ext_code.size(address(_17308))
                                        call address(_17308).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_17309], mem[_17309 + 196 len floor32(mem[_17309]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_17309 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_17309 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _17092 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _17631 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _17632 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_17632 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_17632 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_17632 + 68] = 0
                                    mem[_17632 + 100] = address(_17092)
                                    mem[_17632 + 132] = 128
                                    mem[_17632 + 164] = mem[_17632]
                                    t = 0
                                    while t < mem[_17632]:
                                        mem[_17632 + t + 196] = mem[_17632 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_17632] % 32:
                                        require ext_code.size(address(_17631))
                                        call address(_17631).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17092), 128, mem[_17632 + 164 len mem[_17632] + 32]
                                    else:
                                        mem[floor32(mem[_17632]) + _17632 + 196] = mem[floor32(mem[_17632]) + _17632 + -(mem[_17632] % 32) + 228 len mem[_17632] % 32]
                                        require ext_code.size(address(_17631))
                                        call address(_17631).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17092), 128, mem[_17632], mem[_17632 + 196 len floor32(mem[_17632]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_17632 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_17632 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                            continue 
                        require Mask(112, 0, ext_call.return_data[0])
                        if 997 * s * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * s:
                            revert with 0, 'ds-math-mul-overflow'
                        if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                            revert with 0, 'ds-math-add-overflow'
                        require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                        require idx < mem[96]
                        if mem[(32 * idx) + 140 len 20] == address(_15931):
                            if idx >= mem[(32 * arg1.length) + 128] - 1:
                                require idx < mem[(32 * arg1.length) + 128]
                                _18027 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                _18028 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_18028 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_18028 + 36] = 0
                                mem[_18028 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                mem[_18028 + 100] = this.address
                                mem[_18028 + 132] = 128
                                mem[_18028 + 164] = mem[_18028]
                                t = 0
                                while t < mem[_18028]:
                                    mem[_18028 + t + 196] = mem[_18028 + t + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_18028] % 32:
                                    require ext_code.size(address(_18027))
                                    call address(_18027).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_18028 + 164 len mem[_18028] + 32]
                                else:
                                    mem[floor32(mem[_18028]) + _18028 + 196] = mem[floor32(mem[_18028]) + _18028 + -(mem[_18028] % 32) + 228 len mem[_18028] % 32]
                                    require ext_code.size(address(_18027))
                                    call address(_18027).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_18028], mem[_18028 + 196 len floor32(mem[_18028]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                    require ext_code.size(stor1)
                                    staticcall stor1.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[_18028 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[_18028 + 36] = ext_call.return_data[0]
                                    require ext_code.size(stor1)
                                    call stor1.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require idx + 1 < mem[(32 * arg1.length) + 128]
                                _17636 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                require idx < mem[(32 * arg1.length) + 128]
                                _18446 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                _18447 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_18447 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_18447 + 36] = 0
                                mem[_18447 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                mem[_18447 + 100] = address(_17636)
                                mem[_18447 + 132] = 128
                                mem[_18447 + 164] = mem[_18447]
                                t = 0
                                while t < mem[_18447]:
                                    mem[_18447 + t + 196] = mem[_18447 + t + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_18447] % 32:
                                    require ext_code.size(address(_18446))
                                    call address(_18446).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17636), 128, mem[_18447 + 164 len mem[_18447] + 32]
                                else:
                                    mem[floor32(mem[_18447]) + _18447 + 196] = mem[floor32(mem[_18447]) + _18447 + -(mem[_18447] % 32) + 228 len mem[_18447] % 32]
                                    require ext_code.size(address(_18446))
                                    call address(_18446).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17636), 128, mem[_18447], mem[_18447 + 196 len floor32(mem[_18447]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                    require ext_code.size(stor1)
                                    staticcall stor1.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[_18447 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[_18447 + 36] = ext_call.return_data[0]
                                    require ext_code.size(stor1)
                                    call stor1.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if idx >= mem[(32 * arg1.length) + 128] - 1:
                                require idx < mem[(32 * arg1.length) + 128]
                                _18030 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                _18031 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_18031 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_18031 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                mem[_18031 + 68] = 0
                                mem[_18031 + 100] = this.address
                                mem[_18031 + 132] = 128
                                mem[_18031 + 164] = mem[_18031]
                                t = 0
                                while t < mem[_18031]:
                                    mem[_18031 + t + 196] = mem[_18031 + t + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_18031] % 32:
                                    require ext_code.size(address(_18030))
                                    call address(_18030).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_18031 + 164 len mem[_18031] + 32]
                                else:
                                    mem[floor32(mem[_18031]) + _18031 + 196] = mem[floor32(mem[_18031]) + _18031 + -(mem[_18031] % 32) + 228 len mem[_18031] % 32]
                                    require ext_code.size(address(_18030))
                                    call address(_18030).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_18031], mem[_18031 + 196 len floor32(mem[_18031]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                    require ext_code.size(stor1)
                                    staticcall stor1.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[_18031 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[_18031 + 36] = ext_call.return_data[0]
                                    require ext_code.size(stor1)
                                    call stor1.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require idx + 1 < mem[(32 * arg1.length) + 128]
                                _17638 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                require idx < mem[(32 * arg1.length) + 128]
                                _18451 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                _18452 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_18452 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_18452 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                mem[_18452 + 68] = 0
                                mem[_18452 + 100] = address(_17638)
                                mem[_18452 + 132] = 128
                                mem[_18452 + 164] = mem[_18452]
                                t = 0
                                while t < mem[_18452]:
                                    mem[_18452 + t + 196] = mem[_18452 + t + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_18452] % 32:
                                    require ext_code.size(address(_18451))
                                    call address(_18451).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17638), 128, mem[_18452 + 164 len mem[_18452] + 32]
                                else:
                                    mem[floor32(mem[_18452]) + _18452 + 196] = mem[floor32(mem[_18452]) + _18452 + -(mem[_18452] % 32) + 228 len mem[_18452] % 32]
                                    require ext_code.size(address(_18451))
                                    call address(_18451).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17638), 128, mem[_18452], mem[_18452 + 196 len floor32(mem[_18452]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                    require ext_code.size(stor1)
                                    staticcall stor1.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[_18452 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[_18452 + 36] = ext_call.return_data[0]
                                    require ext_code.size(stor1)
                                    call stor1.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                    require idx < mem[(32 * arg1.length) + 128]
                    require idx < mem[96]
                    _16010 = mem[(32 * idx) + 128]
                    require idx + 1 < mem[96]
                    _16026 = mem[(32 * idx + 1) + 128]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 32, 37, 0xfe556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                    if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                        if not mem[(32 * idx) + 140 len 20]:
                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                        require ext_code.size(mem[(32 * idx) + (32 * arg1.length) + 172 len 20])
                        staticcall mem[(32 * idx) + (32 * arg1.length) + 172 len 20].getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 96
                        if 997 * s / 997 != s:
                            revert with 0, 'ds-math-mul-overflow'
                        if address(_16010) == address(_16010):
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                require idx < mem[96]
                                if mem[(32 * idx) + 140 len 20] == address(_15939):
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17313 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17314 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17314 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17314 + 36] = 0
                                        mem[_17314 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_17314 + 100] = this.address
                                        mem[_17314 + 132] = 128
                                        mem[_17314 + 164] = mem[_17314]
                                        t = 0
                                        while t < mem[_17314]:
                                            mem[_17314 + t + 196] = mem[_17314 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17314] % 32:
                                            require ext_code.size(address(_17313))
                                            call address(_17313).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_17314 + 164 len mem[_17314] + 32]
                                        else:
                                            mem[floor32(mem[_17314]) + _17314 + 196] = mem[floor32(mem[_17314]) + _17314 + -(mem[_17314] % 32) + 228 len mem[_17314] % 32]
                                            require ext_code.size(address(_17313))
                                            call address(_17313).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_17314], mem[_17314 + 196 len floor32(mem[_17314]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17314 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17314 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _17096 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17640 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17641 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17641 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17641 + 36] = 0
                                        mem[_17641 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_17641 + 100] = address(_17096)
                                        mem[_17641 + 132] = 128
                                        mem[_17641 + 164] = mem[_17641]
                                        t = 0
                                        while t < mem[_17641]:
                                            mem[_17641 + t + 196] = mem[_17641 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17641] % 32:
                                            require ext_code.size(address(_17640))
                                            call address(_17640).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17096), 128, mem[_17641 + 164 len mem[_17641] + 32]
                                        else:
                                            mem[floor32(mem[_17641]) + _17641 + 196] = mem[floor32(mem[_17641]) + _17641 + -(mem[_17641] % 32) + 228 len mem[_17641] % 32]
                                            require ext_code.size(address(_17640))
                                            call address(_17640).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17096), 128, mem[_17641], mem[_17641 + 196 len floor32(mem[_17641]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17641 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17641 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17316 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17317 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17317 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17317 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_17317 + 68] = 0
                                        mem[_17317 + 100] = this.address
                                        mem[_17317 + 132] = 128
                                        mem[_17317 + 164] = mem[_17317]
                                        t = 0
                                        while t < mem[_17317]:
                                            mem[_17317 + t + 196] = mem[_17317 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17317] % 32:
                                            require ext_code.size(address(_17316))
                                            call address(_17316).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_17317 + 164 len mem[_17317] + 32]
                                        else:
                                            mem[floor32(mem[_17317]) + _17317 + 196] = mem[floor32(mem[_17317]) + _17317 + -(mem[_17317] % 32) + 228 len mem[_17317] % 32]
                                            require ext_code.size(address(_17316))
                                            call address(_17316).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_17317], mem[_17317 + 196 len floor32(mem[_17317]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17317 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17317 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _17098 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17645 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17646 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17646 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17646 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_17646 + 68] = 0
                                        mem[_17646 + 100] = address(_17098)
                                        mem[_17646 + 132] = 128
                                        mem[_17646 + 164] = mem[_17646]
                                        t = 0
                                        while t < mem[_17646]:
                                            mem[_17646 + t + 196] = mem[_17646 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17646] % 32:
                                            require ext_code.size(address(_17645))
                                            call address(_17645).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17098), 128, mem[_17646 + 164 len mem[_17646] + 32]
                                        else:
                                            mem[floor32(mem[_17646]) + _17646 + 196] = mem[floor32(mem[_17646]) + _17646 + -(mem[_17646] % 32) + 228 len mem[_17646] % 32]
                                            require ext_code.size(address(_17645))
                                            call address(_17645).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17098), 128, mem[_17646], mem[_17646 + 196 len floor32(mem[_17646]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17646 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17646 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                continue 
                            require Mask(112, 0, ext_call.return_data[32])
                            if 997 * s * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * s:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                            require idx < mem[96]
                            if mem[(32 * idx) + 140 len 20] == address(_15939):
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18039 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18040 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18040 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18040 + 36] = 0
                                    mem[_18040 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    mem[_18040 + 100] = this.address
                                    mem[_18040 + 132] = 128
                                    mem[_18040 + 164] = mem[_18040]
                                    t = 0
                                    while t < mem[_18040]:
                                        mem[_18040 + t + 196] = mem[_18040 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18040] % 32:
                                        require ext_code.size(address(_18039))
                                        call address(_18039).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_18040 + 164 len mem[_18040] + 32]
                                    else:
                                        mem[floor32(mem[_18040]) + _18040 + 196] = mem[floor32(mem[_18040]) + _18040 + -(mem[_18040] % 32) + 228 len mem[_18040] % 32]
                                        require ext_code.size(address(_18039))
                                        call address(_18039).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_18040], mem[_18040 + 196 len floor32(mem[_18040]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18040 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18040 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _17650 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18458 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18459 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18459 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18459 + 36] = 0
                                    mem[_18459 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    mem[_18459 + 100] = address(_17650)
                                    mem[_18459 + 132] = 128
                                    mem[_18459 + 164] = mem[_18459]
                                    t = 0
                                    while t < mem[_18459]:
                                        mem[_18459 + t + 196] = mem[_18459 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18459] % 32:
                                        require ext_code.size(address(_18458))
                                        call address(_18458).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17650), 128, mem[_18459 + 164 len mem[_18459] + 32]
                                    else:
                                        mem[floor32(mem[_18459]) + _18459 + 196] = mem[floor32(mem[_18459]) + _18459 + -(mem[_18459] % 32) + 228 len mem[_18459] % 32]
                                        require ext_code.size(address(_18458))
                                        call address(_18458).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17650), 128, mem[_18459], mem[_18459 + 196 len floor32(mem[_18459]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18459 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18459 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18042 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18043 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18043 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18043 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    mem[_18043 + 68] = 0
                                    mem[_18043 + 100] = this.address
                                    mem[_18043 + 132] = 128
                                    mem[_18043 + 164] = mem[_18043]
                                    t = 0
                                    while t < mem[_18043]:
                                        mem[_18043 + t + 196] = mem[_18043 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18043] % 32:
                                        require ext_code.size(address(_18042))
                                        call address(_18042).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_18043 + 164 len mem[_18043] + 32]
                                    else:
                                        mem[floor32(mem[_18043]) + _18043 + 196] = mem[floor32(mem[_18043]) + _18043 + -(mem[_18043] % 32) + 228 len mem[_18043] % 32]
                                        require ext_code.size(address(_18042))
                                        call address(_18042).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_18043], mem[_18043 + 196 len floor32(mem[_18043]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18043 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18043 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _17652 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18463 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18464 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18464 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18464 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    mem[_18464 + 68] = 0
                                    mem[_18464 + 100] = address(_17652)
                                    mem[_18464 + 132] = 128
                                    mem[_18464 + 164] = mem[_18464]
                                    t = 0
                                    while t < mem[_18464]:
                                        mem[_18464 + t + 196] = mem[_18464 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18464] % 32:
                                        require ext_code.size(address(_18463))
                                        call address(_18463).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17652), 128, mem[_18464 + 164 len mem[_18464] + 32]
                                    else:
                                        mem[floor32(mem[_18464]) + _18464 + 196] = mem[floor32(mem[_18464]) + _18464 + -(mem[_18464] % 32) + 228 len mem[_18464] % 32]
                                        require ext_code.size(address(_18463))
                                        call address(_18463).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17652), 128, mem[_18464], mem[_18464 + 196 len floor32(mem[_18464]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18464 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18464 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                            continue 
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                            require idx < mem[96]
                            if mem[(32 * idx) + 140 len 20] == address(_15939):
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _17321 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _17322 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_17322 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_17322 + 36] = 0
                                    mem[_17322 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_17322 + 100] = this.address
                                    mem[_17322 + 132] = 128
                                    mem[_17322 + 164] = mem[_17322]
                                    t = 0
                                    while t < mem[_17322]:
                                        mem[_17322 + t + 196] = mem[_17322 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_17322] % 32:
                                        require ext_code.size(address(_17321))
                                        call address(_17321).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_17322 + 164 len mem[_17322] + 32]
                                    else:
                                        mem[floor32(mem[_17322]) + _17322 + 196] = mem[floor32(mem[_17322]) + _17322 + -(mem[_17322] % 32) + 228 len mem[_17322] % 32]
                                        require ext_code.size(address(_17321))
                                        call address(_17321).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_17322], mem[_17322 + 196 len floor32(mem[_17322]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_17322 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_17322 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _17102 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _17654 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _17655 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_17655 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_17655 + 36] = 0
                                    mem[_17655 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_17655 + 100] = address(_17102)
                                    mem[_17655 + 132] = 128
                                    mem[_17655 + 164] = mem[_17655]
                                    t = 0
                                    while t < mem[_17655]:
                                        mem[_17655 + t + 196] = mem[_17655 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_17655] % 32:
                                        require ext_code.size(address(_17654))
                                        call address(_17654).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17102), 128, mem[_17655 + 164 len mem[_17655] + 32]
                                    else:
                                        mem[floor32(mem[_17655]) + _17655 + 196] = mem[floor32(mem[_17655]) + _17655 + -(mem[_17655] % 32) + 228 len mem[_17655] % 32]
                                        require ext_code.size(address(_17654))
                                        call address(_17654).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17102), 128, mem[_17655], mem[_17655 + 196 len floor32(mem[_17655]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_17655 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_17655 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _17324 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _17325 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_17325 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_17325 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_17325 + 68] = 0
                                    mem[_17325 + 100] = this.address
                                    mem[_17325 + 132] = 128
                                    mem[_17325 + 164] = mem[_17325]
                                    t = 0
                                    while t < mem[_17325]:
                                        mem[_17325 + t + 196] = mem[_17325 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_17325] % 32:
                                        require ext_code.size(address(_17324))
                                        call address(_17324).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_17325 + 164 len mem[_17325] + 32]
                                    else:
                                        mem[floor32(mem[_17325]) + _17325 + 196] = mem[floor32(mem[_17325]) + _17325 + -(mem[_17325] % 32) + 228 len mem[_17325] % 32]
                                        require ext_code.size(address(_17324))
                                        call address(_17324).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_17325], mem[_17325 + 196 len floor32(mem[_17325]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_17325 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_17325 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _17104 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _17659 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _17660 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_17660 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_17660 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_17660 + 68] = 0
                                    mem[_17660 + 100] = address(_17104)
                                    mem[_17660 + 132] = 128
                                    mem[_17660 + 164] = mem[_17660]
                                    t = 0
                                    while t < mem[_17660]:
                                        mem[_17660 + t + 196] = mem[_17660 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_17660] % 32:
                                        require ext_code.size(address(_17659))
                                        call address(_17659).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17104), 128, mem[_17660 + 164 len mem[_17660] + 32]
                                    else:
                                        mem[floor32(mem[_17660]) + _17660 + 196] = mem[floor32(mem[_17660]) + _17660 + -(mem[_17660] % 32) + 228 len mem[_17660] % 32]
                                        require ext_code.size(address(_17659))
                                        call address(_17659).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17104), 128, mem[_17660], mem[_17660 + 196 len floor32(mem[_17660]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_17660 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_17660 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                            continue 
                        require Mask(112, 0, ext_call.return_data[0])
                        if 997 * s * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * s:
                            revert with 0, 'ds-math-mul-overflow'
                        if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                            revert with 0, 'ds-math-add-overflow'
                        require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                        require idx < mem[96]
                        if mem[(32 * idx) + 140 len 20] == address(_15939):
                            if idx >= mem[(32 * arg1.length) + 128] - 1:
                                require idx < mem[(32 * arg1.length) + 128]
                                _18051 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                _18052 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_18052 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_18052 + 36] = 0
                                mem[_18052 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                mem[_18052 + 100] = this.address
                                mem[_18052 + 132] = 128
                                mem[_18052 + 164] = mem[_18052]
                                t = 0
                                while t < mem[_18052]:
                                    mem[_18052 + t + 196] = mem[_18052 + t + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_18052] % 32:
                                    require ext_code.size(address(_18051))
                                    call address(_18051).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_18052 + 164 len mem[_18052] + 32]
                                else:
                                    mem[floor32(mem[_18052]) + _18052 + 196] = mem[floor32(mem[_18052]) + _18052 + -(mem[_18052] % 32) + 228 len mem[_18052] % 32]
                                    require ext_code.size(address(_18051))
                                    call address(_18051).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_18052], mem[_18052 + 196 len floor32(mem[_18052]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                    require ext_code.size(stor1)
                                    staticcall stor1.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[_18052 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[_18052 + 36] = ext_call.return_data[0]
                                    require ext_code.size(stor1)
                                    call stor1.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require idx + 1 < mem[(32 * arg1.length) + 128]
                                _17664 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                require idx < mem[(32 * arg1.length) + 128]
                                _18470 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                _18471 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_18471 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_18471 + 36] = 0
                                mem[_18471 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                mem[_18471 + 100] = address(_17664)
                                mem[_18471 + 132] = 128
                                mem[_18471 + 164] = mem[_18471]
                                t = 0
                                while t < mem[_18471]:
                                    mem[_18471 + t + 196] = mem[_18471 + t + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_18471] % 32:
                                    require ext_code.size(address(_18470))
                                    call address(_18470).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17664), 128, mem[_18471 + 164 len mem[_18471] + 32]
                                else:
                                    mem[floor32(mem[_18471]) + _18471 + 196] = mem[floor32(mem[_18471]) + _18471 + -(mem[_18471] % 32) + 228 len mem[_18471] % 32]
                                    require ext_code.size(address(_18470))
                                    call address(_18470).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17664), 128, mem[_18471], mem[_18471 + 196 len floor32(mem[_18471]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                    require ext_code.size(stor1)
                                    staticcall stor1.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[_18471 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[_18471 + 36] = ext_call.return_data[0]
                                    require ext_code.size(stor1)
                                    call stor1.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if idx >= mem[(32 * arg1.length) + 128] - 1:
                                require idx < mem[(32 * arg1.length) + 128]
                                _18054 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                _18055 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_18055 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_18055 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                mem[_18055 + 68] = 0
                                mem[_18055 + 100] = this.address
                                mem[_18055 + 132] = 128
                                mem[_18055 + 164] = mem[_18055]
                                t = 0
                                while t < mem[_18055]:
                                    mem[_18055 + t + 196] = mem[_18055 + t + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_18055] % 32:
                                    require ext_code.size(address(_18054))
                                    call address(_18054).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_18055 + 164 len mem[_18055] + 32]
                                else:
                                    mem[floor32(mem[_18055]) + _18055 + 196] = mem[floor32(mem[_18055]) + _18055 + -(mem[_18055] % 32) + 228 len mem[_18055] % 32]
                                    require ext_code.size(address(_18054))
                                    call address(_18054).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_18055], mem[_18055 + 196 len floor32(mem[_18055]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                    require ext_code.size(stor1)
                                    staticcall stor1.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[_18055 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[_18055 + 36] = ext_call.return_data[0]
                                    require ext_code.size(stor1)
                                    call stor1.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require idx + 1 < mem[(32 * arg1.length) + 128]
                                _17666 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                require idx < mem[(32 * arg1.length) + 128]
                                _18475 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                _18476 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_18476 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_18476 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                mem[_18476 + 68] = 0
                                mem[_18476 + 100] = address(_17666)
                                mem[_18476 + 132] = 128
                                mem[_18476 + 164] = mem[_18476]
                                t = 0
                                while t < mem[_18476]:
                                    mem[_18476 + t + 196] = mem[_18476 + t + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_18476] % 32:
                                    require ext_code.size(address(_18475))
                                    call address(_18475).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17666), 128, mem[_18476 + 164 len mem[_18476] + 32]
                                else:
                                    mem[floor32(mem[_18476]) + _18476 + 196] = mem[floor32(mem[_18476]) + _18476 + -(mem[_18476] % 32) + 228 len mem[_18476] % 32]
                                    require ext_code.size(address(_18475))
                                    call address(_18475).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17666), 128, mem[_18476], mem[_18476 + 196 len floor32(mem[_18476]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                    require ext_code.size(stor1)
                                    staticcall stor1.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[_18476 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[_18476 + 36] = ext_call.return_data[0]
                                    require ext_code.size(stor1)
                                    call stor1.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if not mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                        require ext_code.size(mem[(32 * idx) + (32 * arg1.length) + 172 len 20])
                        staticcall mem[(32 * idx) + (32 * arg1.length) + 172 len 20].getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 96
                        if 997 * s / 997 != s:
                            revert with 0, 'ds-math-mul-overflow'
                        if address(_16010) == address(_16026):
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                require idx < mem[96]
                                if mem[(32 * idx) + 140 len 20] == address(_15939):
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17329 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17330 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17330 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17330 + 36] = 0
                                        mem[_17330 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_17330 + 100] = this.address
                                        mem[_17330 + 132] = 128
                                        mem[_17330 + 164] = mem[_17330]
                                        t = 0
                                        while t < mem[_17330]:
                                            mem[_17330 + t + 196] = mem[_17330 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17330] % 32:
                                            require ext_code.size(address(_17329))
                                            call address(_17329).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_17330 + 164 len mem[_17330] + 32]
                                        else:
                                            mem[floor32(mem[_17330]) + _17330 + 196] = mem[floor32(mem[_17330]) + _17330 + -(mem[_17330] % 32) + 228 len mem[_17330] % 32]
                                            require ext_code.size(address(_17329))
                                            call address(_17329).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_17330], mem[_17330 + 196 len floor32(mem[_17330]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17330 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17330 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _17108 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17668 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17669 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17669 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17669 + 36] = 0
                                        mem[_17669 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_17669 + 100] = address(_17108)
                                        mem[_17669 + 132] = 128
                                        mem[_17669 + 164] = mem[_17669]
                                        t = 0
                                        while t < mem[_17669]:
                                            mem[_17669 + t + 196] = mem[_17669 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17669] % 32:
                                            require ext_code.size(address(_17668))
                                            call address(_17668).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17108), 128, mem[_17669 + 164 len mem[_17669] + 32]
                                        else:
                                            mem[floor32(mem[_17669]) + _17669 + 196] = mem[floor32(mem[_17669]) + _17669 + -(mem[_17669] % 32) + 228 len mem[_17669] % 32]
                                            require ext_code.size(address(_17668))
                                            call address(_17668).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17108), 128, mem[_17669], mem[_17669 + 196 len floor32(mem[_17669]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17669 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17669 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17332 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17333 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17333 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17333 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_17333 + 68] = 0
                                        mem[_17333 + 100] = this.address
                                        mem[_17333 + 132] = 128
                                        mem[_17333 + 164] = mem[_17333]
                                        t = 0
                                        while t < mem[_17333]:
                                            mem[_17333 + t + 196] = mem[_17333 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17333] % 32:
                                            require ext_code.size(address(_17332))
                                            call address(_17332).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_17333 + 164 len mem[_17333] + 32]
                                        else:
                                            mem[floor32(mem[_17333]) + _17333 + 196] = mem[floor32(mem[_17333]) + _17333 + -(mem[_17333] % 32) + 228 len mem[_17333] % 32]
                                            require ext_code.size(address(_17332))
                                            call address(_17332).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_17333], mem[_17333 + 196 len floor32(mem[_17333]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17333 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17333 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _17110 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17673 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17674 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17674 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17674 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_17674 + 68] = 0
                                        mem[_17674 + 100] = address(_17110)
                                        mem[_17674 + 132] = 128
                                        mem[_17674 + 164] = mem[_17674]
                                        t = 0
                                        while t < mem[_17674]:
                                            mem[_17674 + t + 196] = mem[_17674 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17674] % 32:
                                            require ext_code.size(address(_17673))
                                            call address(_17673).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17110), 128, mem[_17674 + 164 len mem[_17674] + 32]
                                        else:
                                            mem[floor32(mem[_17674]) + _17674 + 196] = mem[floor32(mem[_17674]) + _17674 + -(mem[_17674] % 32) + 228 len mem[_17674] % 32]
                                            require ext_code.size(address(_17673))
                                            call address(_17673).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17110), 128, mem[_17674], mem[_17674 + 196 len floor32(mem[_17674]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17674 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17674 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                continue 
                            require Mask(112, 0, ext_call.return_data[32])
                            if 997 * s * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * s:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                            require idx < mem[96]
                            if mem[(32 * idx) + 140 len 20] == address(_15939):
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18063 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18064 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18064 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18064 + 36] = 0
                                    mem[_18064 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    mem[_18064 + 100] = this.address
                                    mem[_18064 + 132] = 128
                                    mem[_18064 + 164] = mem[_18064]
                                    t = 0
                                    while t < mem[_18064]:
                                        mem[_18064 + t + 196] = mem[_18064 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18064] % 32:
                                        require ext_code.size(address(_18063))
                                        call address(_18063).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_18064 + 164 len mem[_18064] + 32]
                                    else:
                                        mem[floor32(mem[_18064]) + _18064 + 196] = mem[floor32(mem[_18064]) + _18064 + -(mem[_18064] % 32) + 228 len mem[_18064] % 32]
                                        require ext_code.size(address(_18063))
                                        call address(_18063).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_18064], mem[_18064 + 196 len floor32(mem[_18064]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18064 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18064 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _17678 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18482 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18483 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18483 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18483 + 36] = 0
                                    mem[_18483 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    mem[_18483 + 100] = address(_17678)
                                    mem[_18483 + 132] = 128
                                    mem[_18483 + 164] = mem[_18483]
                                    t = 0
                                    while t < mem[_18483]:
                                        mem[_18483 + t + 196] = mem[_18483 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18483] % 32:
                                        require ext_code.size(address(_18482))
                                        call address(_18482).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17678), 128, mem[_18483 + 164 len mem[_18483] + 32]
                                    else:
                                        mem[floor32(mem[_18483]) + _18483 + 196] = mem[floor32(mem[_18483]) + _18483 + -(mem[_18483] % 32) + 228 len mem[_18483] % 32]
                                        require ext_code.size(address(_18482))
                                        call address(_18482).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17678), 128, mem[_18483], mem[_18483 + 196 len floor32(mem[_18483]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18483 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18483 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18066 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18067 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18067 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18067 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    mem[_18067 + 68] = 0
                                    mem[_18067 + 100] = this.address
                                    mem[_18067 + 132] = 128
                                    mem[_18067 + 164] = mem[_18067]
                                    t = 0
                                    while t < mem[_18067]:
                                        mem[_18067 + t + 196] = mem[_18067 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18067] % 32:
                                        require ext_code.size(address(_18066))
                                        call address(_18066).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_18067 + 164 len mem[_18067] + 32]
                                    else:
                                        mem[floor32(mem[_18067]) + _18067 + 196] = mem[floor32(mem[_18067]) + _18067 + -(mem[_18067] % 32) + 228 len mem[_18067] % 32]
                                        require ext_code.size(address(_18066))
                                        call address(_18066).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_18067], mem[_18067 + 196 len floor32(mem[_18067]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18067 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18067 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _17680 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18487 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18488 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18488 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18488 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    mem[_18488 + 68] = 0
                                    mem[_18488 + 100] = address(_17680)
                                    mem[_18488 + 132] = 128
                                    mem[_18488 + 164] = mem[_18488]
                                    t = 0
                                    while t < mem[_18488]:
                                        mem[_18488 + t + 196] = mem[_18488 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18488] % 32:
                                        require ext_code.size(address(_18487))
                                        call address(_18487).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17680), 128, mem[_18488 + 164 len mem[_18488] + 32]
                                    else:
                                        mem[floor32(mem[_18488]) + _18488 + 196] = mem[floor32(mem[_18488]) + _18488 + -(mem[_18488] % 32) + 228 len mem[_18488] % 32]
                                        require ext_code.size(address(_18487))
                                        call address(_18487).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17680), 128, mem[_18488], mem[_18488 + 196 len floor32(mem[_18488]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18488 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18488 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                            continue 
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                            require idx < mem[96]
                            if mem[(32 * idx) + 140 len 20] == address(_15939):
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _17337 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _17338 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_17338 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_17338 + 36] = 0
                                    mem[_17338 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_17338 + 100] = this.address
                                    mem[_17338 + 132] = 128
                                    mem[_17338 + 164] = mem[_17338]
                                    t = 0
                                    while t < mem[_17338]:
                                        mem[_17338 + t + 196] = mem[_17338 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_17338] % 32:
                                        require ext_code.size(address(_17337))
                                        call address(_17337).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_17338 + 164 len mem[_17338] + 32]
                                    else:
                                        mem[floor32(mem[_17338]) + _17338 + 196] = mem[floor32(mem[_17338]) + _17338 + -(mem[_17338] % 32) + 228 len mem[_17338] % 32]
                                        require ext_code.size(address(_17337))
                                        call address(_17337).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_17338], mem[_17338 + 196 len floor32(mem[_17338]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_17338 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_17338 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _17114 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _17682 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _17683 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_17683 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_17683 + 36] = 0
                                    mem[_17683 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_17683 + 100] = address(_17114)
                                    mem[_17683 + 132] = 128
                                    mem[_17683 + 164] = mem[_17683]
                                    t = 0
                                    while t < mem[_17683]:
                                        mem[_17683 + t + 196] = mem[_17683 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_17683] % 32:
                                        require ext_code.size(address(_17682))
                                        call address(_17682).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17114), 128, mem[_17683 + 164 len mem[_17683] + 32]
                                    else:
                                        mem[floor32(mem[_17683]) + _17683 + 196] = mem[floor32(mem[_17683]) + _17683 + -(mem[_17683] % 32) + 228 len mem[_17683] % 32]
                                        require ext_code.size(address(_17682))
                                        call address(_17682).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17114), 128, mem[_17683], mem[_17683 + 196 len floor32(mem[_17683]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_17683 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_17683 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _17340 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _17341 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_17341 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_17341 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_17341 + 68] = 0
                                    mem[_17341 + 100] = this.address
                                    mem[_17341 + 132] = 128
                                    mem[_17341 + 164] = mem[_17341]
                                    t = 0
                                    while t < mem[_17341]:
                                        mem[_17341 + t + 196] = mem[_17341 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_17341] % 32:
                                        require ext_code.size(address(_17340))
                                        call address(_17340).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_17341 + 164 len mem[_17341] + 32]
                                    else:
                                        mem[floor32(mem[_17341]) + _17341 + 196] = mem[floor32(mem[_17341]) + _17341 + -(mem[_17341] % 32) + 228 len mem[_17341] % 32]
                                        require ext_code.size(address(_17340))
                                        call address(_17340).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_17341], mem[_17341 + 196 len floor32(mem[_17341]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_17341 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_17341 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _17116 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _17687 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _17688 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_17688 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_17688 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_17688 + 68] = 0
                                    mem[_17688 + 100] = address(_17116)
                                    mem[_17688 + 132] = 128
                                    mem[_17688 + 164] = mem[_17688]
                                    t = 0
                                    while t < mem[_17688]:
                                        mem[_17688 + t + 196] = mem[_17688 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_17688] % 32:
                                        require ext_code.size(address(_17687))
                                        call address(_17687).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17116), 128, mem[_17688 + 164 len mem[_17688] + 32]
                                    else:
                                        mem[floor32(mem[_17688]) + _17688 + 196] = mem[floor32(mem[_17688]) + _17688 + -(mem[_17688] % 32) + 228 len mem[_17688] % 32]
                                        require ext_code.size(address(_17687))
                                        call address(_17687).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17116), 128, mem[_17688], mem[_17688 + 196 len floor32(mem[_17688]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_17688 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_17688 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                            continue 
                        require Mask(112, 0, ext_call.return_data[0])
                        if 997 * s * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * s:
                            revert with 0, 'ds-math-mul-overflow'
                        if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                            revert with 0, 'ds-math-add-overflow'
                        require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                        require idx < mem[96]
                        if mem[(32 * idx) + 140 len 20] == address(_15939):
                            if idx >= mem[(32 * arg1.length) + 128] - 1:
                                require idx < mem[(32 * arg1.length) + 128]
                                _18075 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                _18076 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_18076 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_18076 + 36] = 0
                                mem[_18076 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                mem[_18076 + 100] = this.address
                                mem[_18076 + 132] = 128
                                mem[_18076 + 164] = mem[_18076]
                                t = 0
                                while t < mem[_18076]:
                                    mem[_18076 + t + 196] = mem[_18076 + t + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_18076] % 32:
                                    require ext_code.size(address(_18075))
                                    call address(_18075).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_18076 + 164 len mem[_18076] + 32]
                                else:
                                    mem[floor32(mem[_18076]) + _18076 + 196] = mem[floor32(mem[_18076]) + _18076 + -(mem[_18076] % 32) + 228 len mem[_18076] % 32]
                                    require ext_code.size(address(_18075))
                                    call address(_18075).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_18076], mem[_18076 + 196 len floor32(mem[_18076]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                    require ext_code.size(stor1)
                                    staticcall stor1.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[_18076 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[_18076 + 36] = ext_call.return_data[0]
                                    require ext_code.size(stor1)
                                    call stor1.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require idx + 1 < mem[(32 * arg1.length) + 128]
                                _17692 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                require idx < mem[(32 * arg1.length) + 128]
                                _18494 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                _18495 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_18495 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_18495 + 36] = 0
                                mem[_18495 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                mem[_18495 + 100] = address(_17692)
                                mem[_18495 + 132] = 128
                                mem[_18495 + 164] = mem[_18495]
                                t = 0
                                while t < mem[_18495]:
                                    mem[_18495 + t + 196] = mem[_18495 + t + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_18495] % 32:
                                    require ext_code.size(address(_18494))
                                    call address(_18494).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17692), 128, mem[_18495 + 164 len mem[_18495] + 32]
                                else:
                                    mem[floor32(mem[_18495]) + _18495 + 196] = mem[floor32(mem[_18495]) + _18495 + -(mem[_18495] % 32) + 228 len mem[_18495] % 32]
                                    require ext_code.size(address(_18494))
                                    call address(_18494).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17692), 128, mem[_18495], mem[_18495 + 196 len floor32(mem[_18495]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                    require ext_code.size(stor1)
                                    staticcall stor1.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[_18495 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[_18495 + 36] = ext_call.return_data[0]
                                    require ext_code.size(stor1)
                                    call stor1.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if idx >= mem[(32 * arg1.length) + 128] - 1:
                                require idx < mem[(32 * arg1.length) + 128]
                                _18078 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                _18079 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_18079 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_18079 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                mem[_18079 + 68] = 0
                                mem[_18079 + 100] = this.address
                                mem[_18079 + 132] = 128
                                mem[_18079 + 164] = mem[_18079]
                                t = 0
                                while t < mem[_18079]:
                                    mem[_18079 + t + 196] = mem[_18079 + t + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_18079] % 32:
                                    require ext_code.size(address(_18078))
                                    call address(_18078).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_18079 + 164 len mem[_18079] + 32]
                                else:
                                    mem[floor32(mem[_18079]) + _18079 + 196] = mem[floor32(mem[_18079]) + _18079 + -(mem[_18079] % 32) + 228 len mem[_18079] % 32]
                                    require ext_code.size(address(_18078))
                                    call address(_18078).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_18079], mem[_18079 + 196 len floor32(mem[_18079]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                    require ext_code.size(stor1)
                                    staticcall stor1.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[_18079 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[_18079 + 36] = ext_call.return_data[0]
                                    require ext_code.size(stor1)
                                    call stor1.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require idx + 1 < mem[(32 * arg1.length) + 128]
                                _17694 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                require idx < mem[(32 * arg1.length) + 128]
                                _18499 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                _18500 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_18500 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_18500 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                mem[_18500 + 68] = 0
                                mem[_18500 + 100] = address(_17694)
                                mem[_18500 + 132] = 128
                                mem[_18500 + 164] = mem[_18500]
                                t = 0
                                while t < mem[_18500]:
                                    mem[_18500 + t + 196] = mem[_18500 + t + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_18500] % 32:
                                    require ext_code.size(address(_18499))
                                    call address(_18499).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17694), 128, mem[_18500 + 164 len mem[_18500] + 32]
                                else:
                                    mem[floor32(mem[_18500]) + _18500 + 196] = mem[floor32(mem[_18500]) + _18500 + -(mem[_18500] % 32) + 228 len mem[_18500] % 32]
                                    require ext_code.size(address(_18499))
                                    call address(_18499).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17694), 128, mem[_18500], mem[_18500 + 196 len floor32(mem[_18500]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                    require ext_code.size(stor1)
                                    staticcall stor1.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[_18500 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[_18500 + 36] = ext_call.return_data[0]
                                    require ext_code.size(stor1)
                                    call stor1.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
            else:
                if idx:
                    require idx < mem[96]
                    _15940 = mem[(32 * idx) + 128]
                    require idx + 1 < mem[96]
                    _15944 = mem[(32 * idx + 1) + 128]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 32, 37, 0xfe556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                    if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                        if not mem[(32 * idx) + 140 len 20]:
                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                        require idx < mem[(32 * arg1.length) + 128]
                        require idx < mem[96]
                        _16027 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _16034 = mem[(32 * idx + 1) + 128]
                        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 32, 37, 0xfe556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                        if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                            if not mem[(32 * idx) + 140 len 20]:
                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                            require ext_code.size(mem[(32 * idx) + (32 * arg1.length) + 172 len 20])
                            staticcall mem[(32 * idx) + (32 * arg1.length) + 172 len 20].getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if 997 * s / 997 != s:
                                revert with 0, 'ds-math-mul-overflow'
                            if address(_16027) == address(_16027):
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    require idx < mem[96]
                                    if mem[(32 * idx) + 140 len 20] == address(_15940):
                                        if idx >= mem[(32 * arg1.length) + 128] - 1:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _17697 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _17698 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_17698 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_17698 + 36] = 0
                                            mem[_17698 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_17698 + 100] = this.address
                                            mem[_17698 + 132] = 128
                                            mem[_17698 + 164] = mem[_17698]
                                            t = 0
                                            while t < mem[_17698]:
                                                mem[_17698 + t + 196] = mem[_17698 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_17698] % 32:
                                                require ext_code.size(address(_17697))
                                                call address(_17697).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_17698 + 164 len mem[_17698] + 32]
                                            else:
                                                mem[floor32(mem[_17698]) + _17698 + 196] = mem[floor32(mem[_17698]) + _17698 + -(mem[_17698] % 32) + 228 len mem[_17698] % 32]
                                                require ext_code.size(address(_17697))
                                                call address(_17697).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_17698], mem[_17698 + 196 len floor32(mem[_17698]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_17698 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_17698 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require idx + 1 < mem[(32 * arg1.length) + 128]
                                            _17344 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _18080 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _18081 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_18081 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_18081 + 36] = 0
                                            mem[_18081 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_18081 + 100] = address(_17344)
                                            mem[_18081 + 132] = 128
                                            mem[_18081 + 164] = mem[_18081]
                                            t = 0
                                            while t < mem[_18081]:
                                                mem[_18081 + t + 196] = mem[_18081 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_18081] % 32:
                                                require ext_code.size(address(_18080))
                                                call address(_18080).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17344), 128, mem[_18081 + 164 len mem[_18081] + 32]
                                            else:
                                                mem[floor32(mem[_18081]) + _18081 + 196] = mem[floor32(mem[_18081]) + _18081 + -(mem[_18081] % 32) + 228 len mem[_18081] % 32]
                                                require ext_code.size(address(_18080))
                                                call address(_18080).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17344), 128, mem[_18081], mem[_18081 + 196 len floor32(mem[_18081]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_18081 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_18081 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        if idx >= mem[(32 * arg1.length) + 128] - 1:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _17700 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _17701 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_17701 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_17701 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_17701 + 68] = 0
                                            mem[_17701 + 100] = this.address
                                            mem[_17701 + 132] = 128
                                            mem[_17701 + 164] = mem[_17701]
                                            t = 0
                                            while t < mem[_17701]:
                                                mem[_17701 + t + 196] = mem[_17701 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_17701] % 32:
                                                require ext_code.size(address(_17700))
                                                call address(_17700).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_17701 + 164 len mem[_17701] + 32]
                                            else:
                                                mem[floor32(mem[_17701]) + _17701 + 196] = mem[floor32(mem[_17701]) + _17701 + -(mem[_17701] % 32) + 228 len mem[_17701] % 32]
                                                require ext_code.size(address(_17700))
                                                call address(_17700).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_17701], mem[_17701 + 196 len floor32(mem[_17701]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_17701 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_17701 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require idx + 1 < mem[(32 * arg1.length) + 128]
                                            _17346 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _18085 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _18086 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_18086 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_18086 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_18086 + 68] = 0
                                            mem[_18086 + 100] = address(_17346)
                                            mem[_18086 + 132] = 128
                                            mem[_18086 + 164] = mem[_18086]
                                            t = 0
                                            while t < mem[_18086]:
                                                mem[_18086 + t + 196] = mem[_18086 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_18086] % 32:
                                                require ext_code.size(address(_18085))
                                                call address(_18085).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17346), 128, mem[_18086 + 164 len mem[_18086] + 32]
                                            else:
                                                mem[floor32(mem[_18086]) + _18086 + 196] = mem[floor32(mem[_18086]) + _18086 + -(mem[_18086] % 32) + 228 len mem[_18086] % 32]
                                                require ext_code.size(address(_18085))
                                                call address(_18085).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17346), 128, mem[_18086], mem[_18086 + 196 len floor32(mem[_18086]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_18086 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_18086 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    continue 
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * s * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * s:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                require idx < mem[96]
                                if mem[(32 * idx) + 140 len 20] == address(_15940):
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _18511 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _18512 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_18512 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_18512 + 36] = 0
                                        mem[_18512 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_18512 + 100] = this.address
                                        mem[_18512 + 132] = 128
                                        mem[_18512 + 164] = mem[_18512]
                                        t = 0
                                        while t < mem[_18512]:
                                            mem[_18512 + t + 196] = mem[_18512 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_18512] % 32:
                                            require ext_code.size(address(_18511))
                                            call address(_18511).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_18512 + 164 len mem[_18512] + 32]
                                        else:
                                            mem[floor32(mem[_18512]) + _18512 + 196] = mem[floor32(mem[_18512]) + _18512 + -(mem[_18512] % 32) + 228 len mem[_18512] % 32]
                                            require ext_code.size(address(_18511))
                                            call address(_18511).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_18512], mem[_18512 + 196 len floor32(mem[_18512]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_18512 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_18512 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _18090 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _18906 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _18907 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_18907 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_18907 + 36] = 0
                                        mem[_18907 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_18907 + 100] = address(_18090)
                                        mem[_18907 + 132] = 128
                                        mem[_18907 + 164] = mem[_18907]
                                        t = 0
                                        while t < mem[_18907]:
                                            mem[_18907 + t + 196] = mem[_18907 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_18907] % 32:
                                            require ext_code.size(address(_18906))
                                            call address(_18906).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_18090), 128, mem[_18907 + 164 len mem[_18907] + 32]
                                        else:
                                            mem[floor32(mem[_18907]) + _18907 + 196] = mem[floor32(mem[_18907]) + _18907 + -(mem[_18907] % 32) + 228 len mem[_18907] % 32]
                                            require ext_code.size(address(_18906))
                                            call address(_18906).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_18090), 128, mem[_18907], mem[_18907 + 196 len floor32(mem[_18907]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_18907 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_18907 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _18514 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _18515 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_18515 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_18515 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_18515 + 68] = 0
                                        mem[_18515 + 100] = this.address
                                        mem[_18515 + 132] = 128
                                        mem[_18515 + 164] = mem[_18515]
                                        t = 0
                                        while t < mem[_18515]:
                                            mem[_18515 + t + 196] = mem[_18515 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_18515] % 32:
                                            require ext_code.size(address(_18514))
                                            call address(_18514).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_18515 + 164 len mem[_18515] + 32]
                                        else:
                                            mem[floor32(mem[_18515]) + _18515 + 196] = mem[floor32(mem[_18515]) + _18515 + -(mem[_18515] % 32) + 228 len mem[_18515] % 32]
                                            require ext_code.size(address(_18514))
                                            call address(_18514).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_18515], mem[_18515 + 196 len floor32(mem[_18515]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_18515 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_18515 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _18092 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _18911 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _18912 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_18912 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_18912 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_18912 + 68] = 0
                                        mem[_18912 + 100] = address(_18092)
                                        mem[_18912 + 132] = 128
                                        mem[_18912 + 164] = mem[_18912]
                                        t = 0
                                        while t < mem[_18912]:
                                            mem[_18912 + t + 196] = mem[_18912 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_18912] % 32:
                                            require ext_code.size(address(_18911))
                                            call address(_18911).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_18092), 128, mem[_18912 + 164 len mem[_18912] + 32]
                                        else:
                                            mem[floor32(mem[_18912]) + _18912 + 196] = mem[floor32(mem[_18912]) + _18912 + -(mem[_18912] % 32) + 228 len mem[_18912] % 32]
                                            require ext_code.size(address(_18911))
                                            call address(_18911).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_18092), 128, mem[_18912], mem[_18912 + 196 len floor32(mem[_18912]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_18912 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_18912 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                continue 
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                require idx < mem[96]
                                if mem[(32 * idx) + 140 len 20] == address(_15940):
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17705 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17706 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17706 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17706 + 36] = 0
                                        mem[_17706 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_17706 + 100] = this.address
                                        mem[_17706 + 132] = 128
                                        mem[_17706 + 164] = mem[_17706]
                                        t = 0
                                        while t < mem[_17706]:
                                            mem[_17706 + t + 196] = mem[_17706 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17706] % 32:
                                            require ext_code.size(address(_17705))
                                            call address(_17705).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_17706 + 164 len mem[_17706] + 32]
                                        else:
                                            mem[floor32(mem[_17706]) + _17706 + 196] = mem[floor32(mem[_17706]) + _17706 + -(mem[_17706] % 32) + 228 len mem[_17706] % 32]
                                            require ext_code.size(address(_17705))
                                            call address(_17705).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_17706], mem[_17706 + 196 len floor32(mem[_17706]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17706 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17706 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _17350 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _18094 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _18095 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_18095 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_18095 + 36] = 0
                                        mem[_18095 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_18095 + 100] = address(_17350)
                                        mem[_18095 + 132] = 128
                                        mem[_18095 + 164] = mem[_18095]
                                        t = 0
                                        while t < mem[_18095]:
                                            mem[_18095 + t + 196] = mem[_18095 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_18095] % 32:
                                            require ext_code.size(address(_18094))
                                            call address(_18094).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17350), 128, mem[_18095 + 164 len mem[_18095] + 32]
                                        else:
                                            mem[floor32(mem[_18095]) + _18095 + 196] = mem[floor32(mem[_18095]) + _18095 + -(mem[_18095] % 32) + 228 len mem[_18095] % 32]
                                            require ext_code.size(address(_18094))
                                            call address(_18094).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17350), 128, mem[_18095], mem[_18095 + 196 len floor32(mem[_18095]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_18095 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_18095 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17708 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17709 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17709 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17709 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_17709 + 68] = 0
                                        mem[_17709 + 100] = this.address
                                        mem[_17709 + 132] = 128
                                        mem[_17709 + 164] = mem[_17709]
                                        t = 0
                                        while t < mem[_17709]:
                                            mem[_17709 + t + 196] = mem[_17709 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17709] % 32:
                                            require ext_code.size(address(_17708))
                                            call address(_17708).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_17709 + 164 len mem[_17709] + 32]
                                        else:
                                            mem[floor32(mem[_17709]) + _17709 + 196] = mem[floor32(mem[_17709]) + _17709 + -(mem[_17709] % 32) + 228 len mem[_17709] % 32]
                                            require ext_code.size(address(_17708))
                                            call address(_17708).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_17709], mem[_17709 + 196 len floor32(mem[_17709]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17709 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17709 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _17352 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _18099 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _18100 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_18100 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_18100 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_18100 + 68] = 0
                                        mem[_18100 + 100] = address(_17352)
                                        mem[_18100 + 132] = 128
                                        mem[_18100 + 164] = mem[_18100]
                                        t = 0
                                        while t < mem[_18100]:
                                            mem[_18100 + t + 196] = mem[_18100 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_18100] % 32:
                                            require ext_code.size(address(_18099))
                                            call address(_18099).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17352), 128, mem[_18100 + 164 len mem[_18100] + 32]
                                        else:
                                            mem[floor32(mem[_18100]) + _18100 + 196] = mem[floor32(mem[_18100]) + _18100 + -(mem[_18100] % 32) + 228 len mem[_18100] % 32]
                                            require ext_code.size(address(_18099))
                                            call address(_18099).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17352), 128, mem[_18100], mem[_18100 + 196 len floor32(mem[_18100]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_18100 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_18100 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                continue 
                            require Mask(112, 0, ext_call.return_data[0])
                            if 997 * s * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * s:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                            require idx < mem[96]
                            if mem[(32 * idx) + 140 len 20] == address(_15940):
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18523 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18524 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18524 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18524 + 36] = 0
                                    mem[_18524 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_18524 + 100] = this.address
                                    mem[_18524 + 132] = 128
                                    mem[_18524 + 164] = mem[_18524]
                                    t = 0
                                    while t < mem[_18524]:
                                        mem[_18524 + t + 196] = mem[_18524 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18524] % 32:
                                        require ext_code.size(address(_18523))
                                        call address(_18523).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_18524 + 164 len mem[_18524] + 32]
                                    else:
                                        mem[floor32(mem[_18524]) + _18524 + 196] = mem[floor32(mem[_18524]) + _18524 + -(mem[_18524] % 32) + 228 len mem[_18524] % 32]
                                        require ext_code.size(address(_18523))
                                        call address(_18523).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_18524], mem[_18524 + 196 len floor32(mem[_18524]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18524 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18524 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _18104 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18918 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18919 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18919 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18919 + 36] = 0
                                    mem[_18919 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_18919 + 100] = address(_18104)
                                    mem[_18919 + 132] = 128
                                    mem[_18919 + 164] = mem[_18919]
                                    t = 0
                                    while t < mem[_18919]:
                                        mem[_18919 + t + 196] = mem[_18919 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18919] % 32:
                                        require ext_code.size(address(_18918))
                                        call address(_18918).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_18104), 128, mem[_18919 + 164 len mem[_18919] + 32]
                                    else:
                                        mem[floor32(mem[_18919]) + _18919 + 196] = mem[floor32(mem[_18919]) + _18919 + -(mem[_18919] % 32) + 228 len mem[_18919] % 32]
                                        require ext_code.size(address(_18918))
                                        call address(_18918).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_18104), 128, mem[_18919], mem[_18919 + 196 len floor32(mem[_18919]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18919 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18919 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18526 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18527 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18527 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18527 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_18527 + 68] = 0
                                    mem[_18527 + 100] = this.address
                                    mem[_18527 + 132] = 128
                                    mem[_18527 + 164] = mem[_18527]
                                    t = 0
                                    while t < mem[_18527]:
                                        mem[_18527 + t + 196] = mem[_18527 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18527] % 32:
                                        require ext_code.size(address(_18526))
                                        call address(_18526).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_18527 + 164 len mem[_18527] + 32]
                                    else:
                                        mem[floor32(mem[_18527]) + _18527 + 196] = mem[floor32(mem[_18527]) + _18527 + -(mem[_18527] % 32) + 228 len mem[_18527] % 32]
                                        require ext_code.size(address(_18526))
                                        call address(_18526).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_18527], mem[_18527 + 196 len floor32(mem[_18527]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18527 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18527 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _18106 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18923 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18924 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18924 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18924 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_18924 + 68] = 0
                                    mem[_18924 + 100] = address(_18106)
                                    mem[_18924 + 132] = 128
                                    mem[_18924 + 164] = mem[_18924]
                                    t = 0
                                    while t < mem[_18924]:
                                        mem[_18924 + t + 196] = mem[_18924 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18924] % 32:
                                        require ext_code.size(address(_18923))
                                        call address(_18923).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_18106), 128, mem[_18924 + 164 len mem[_18924] + 32]
                                    else:
                                        mem[floor32(mem[_18924]) + _18924 + 196] = mem[floor32(mem[_18924]) + _18924 + -(mem[_18924] % 32) + 228 len mem[_18924] % 32]
                                        require ext_code.size(address(_18923))
                                        call address(_18923).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_18106), 128, mem[_18924], mem[_18924 + 196 len floor32(mem[_18924]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18924 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18924 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if not mem[(32 * idx + 1) + 140 len 20]:
                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                            require ext_code.size(mem[(32 * idx) + (32 * arg1.length) + 172 len 20])
                            staticcall mem[(32 * idx) + (32 * arg1.length) + 172 len 20].getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if 997 * s / 997 != s:
                                revert with 0, 'ds-math-mul-overflow'
                            if address(_16027) == address(_16034):
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    require idx < mem[96]
                                    if mem[(32 * idx) + 140 len 20] == address(_15940):
                                        if idx >= mem[(32 * arg1.length) + 128] - 1:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _17713 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _17714 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_17714 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_17714 + 36] = 0
                                            mem[_17714 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_17714 + 100] = this.address
                                            mem[_17714 + 132] = 128
                                            mem[_17714 + 164] = mem[_17714]
                                            t = 0
                                            while t < mem[_17714]:
                                                mem[_17714 + t + 196] = mem[_17714 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_17714] % 32:
                                                require ext_code.size(address(_17713))
                                                call address(_17713).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_17714 + 164 len mem[_17714] + 32]
                                            else:
                                                mem[floor32(mem[_17714]) + _17714 + 196] = mem[floor32(mem[_17714]) + _17714 + -(mem[_17714] % 32) + 228 len mem[_17714] % 32]
                                                require ext_code.size(address(_17713))
                                                call address(_17713).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_17714], mem[_17714 + 196 len floor32(mem[_17714]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_17714 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_17714 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require idx + 1 < mem[(32 * arg1.length) + 128]
                                            _17356 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _18108 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _18109 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_18109 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_18109 + 36] = 0
                                            mem[_18109 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_18109 + 100] = address(_17356)
                                            mem[_18109 + 132] = 128
                                            mem[_18109 + 164] = mem[_18109]
                                            t = 0
                                            while t < mem[_18109]:
                                                mem[_18109 + t + 196] = mem[_18109 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_18109] % 32:
                                                require ext_code.size(address(_18108))
                                                call address(_18108).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17356), 128, mem[_18109 + 164 len mem[_18109] + 32]
                                            else:
                                                mem[floor32(mem[_18109]) + _18109 + 196] = mem[floor32(mem[_18109]) + _18109 + -(mem[_18109] % 32) + 228 len mem[_18109] % 32]
                                                require ext_code.size(address(_18108))
                                                call address(_18108).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17356), 128, mem[_18109], mem[_18109 + 196 len floor32(mem[_18109]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_18109 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_18109 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        if idx >= mem[(32 * arg1.length) + 128] - 1:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _17716 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _17717 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_17717 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_17717 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_17717 + 68] = 0
                                            mem[_17717 + 100] = this.address
                                            mem[_17717 + 132] = 128
                                            mem[_17717 + 164] = mem[_17717]
                                            t = 0
                                            while t < mem[_17717]:
                                                mem[_17717 + t + 196] = mem[_17717 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_17717] % 32:
                                                require ext_code.size(address(_17716))
                                                call address(_17716).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_17717 + 164 len mem[_17717] + 32]
                                            else:
                                                mem[floor32(mem[_17717]) + _17717 + 196] = mem[floor32(mem[_17717]) + _17717 + -(mem[_17717] % 32) + 228 len mem[_17717] % 32]
                                                require ext_code.size(address(_17716))
                                                call address(_17716).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_17717], mem[_17717 + 196 len floor32(mem[_17717]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_17717 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_17717 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require idx + 1 < mem[(32 * arg1.length) + 128]
                                            _17358 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _18113 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _18114 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_18114 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_18114 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_18114 + 68] = 0
                                            mem[_18114 + 100] = address(_17358)
                                            mem[_18114 + 132] = 128
                                            mem[_18114 + 164] = mem[_18114]
                                            t = 0
                                            while t < mem[_18114]:
                                                mem[_18114 + t + 196] = mem[_18114 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_18114] % 32:
                                                require ext_code.size(address(_18113))
                                                call address(_18113).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17358), 128, mem[_18114 + 164 len mem[_18114] + 32]
                                            else:
                                                mem[floor32(mem[_18114]) + _18114 + 196] = mem[floor32(mem[_18114]) + _18114 + -(mem[_18114] % 32) + 228 len mem[_18114] % 32]
                                                require ext_code.size(address(_18113))
                                                call address(_18113).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17358), 128, mem[_18114], mem[_18114 + 196 len floor32(mem[_18114]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_18114 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_18114 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    continue 
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * s * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * s:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                require idx < mem[96]
                                if mem[(32 * idx) + 140 len 20] == address(_15940):
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _18535 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _18536 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_18536 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_18536 + 36] = 0
                                        mem[_18536 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_18536 + 100] = this.address
                                        mem[_18536 + 132] = 128
                                        mem[_18536 + 164] = mem[_18536]
                                        t = 0
                                        while t < mem[_18536]:
                                            mem[_18536 + t + 196] = mem[_18536 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_18536] % 32:
                                            require ext_code.size(address(_18535))
                                            call address(_18535).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_18536 + 164 len mem[_18536] + 32]
                                        else:
                                            mem[floor32(mem[_18536]) + _18536 + 196] = mem[floor32(mem[_18536]) + _18536 + -(mem[_18536] % 32) + 228 len mem[_18536] % 32]
                                            require ext_code.size(address(_18535))
                                            call address(_18535).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_18536], mem[_18536 + 196 len floor32(mem[_18536]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_18536 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_18536 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _18118 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _18930 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _18931 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_18931 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_18931 + 36] = 0
                                        mem[_18931 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_18931 + 100] = address(_18118)
                                        mem[_18931 + 132] = 128
                                        mem[_18931 + 164] = mem[_18931]
                                        t = 0
                                        while t < mem[_18931]:
                                            mem[_18931 + t + 196] = mem[_18931 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_18931] % 32:
                                            require ext_code.size(address(_18930))
                                            call address(_18930).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_18118), 128, mem[_18931 + 164 len mem[_18931] + 32]
                                        else:
                                            mem[floor32(mem[_18931]) + _18931 + 196] = mem[floor32(mem[_18931]) + _18931 + -(mem[_18931] % 32) + 228 len mem[_18931] % 32]
                                            require ext_code.size(address(_18930))
                                            call address(_18930).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_18118), 128, mem[_18931], mem[_18931 + 196 len floor32(mem[_18931]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_18931 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_18931 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _18538 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _18539 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_18539 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_18539 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_18539 + 68] = 0
                                        mem[_18539 + 100] = this.address
                                        mem[_18539 + 132] = 128
                                        mem[_18539 + 164] = mem[_18539]
                                        t = 0
                                        while t < mem[_18539]:
                                            mem[_18539 + t + 196] = mem[_18539 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_18539] % 32:
                                            require ext_code.size(address(_18538))
                                            call address(_18538).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_18539 + 164 len mem[_18539] + 32]
                                        else:
                                            mem[floor32(mem[_18539]) + _18539 + 196] = mem[floor32(mem[_18539]) + _18539 + -(mem[_18539] % 32) + 228 len mem[_18539] % 32]
                                            require ext_code.size(address(_18538))
                                            call address(_18538).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_18539], mem[_18539 + 196 len floor32(mem[_18539]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_18539 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_18539 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _18120 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _18935 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _18936 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_18936 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_18936 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_18936 + 68] = 0
                                        mem[_18936 + 100] = address(_18120)
                                        mem[_18936 + 132] = 128
                                        mem[_18936 + 164] = mem[_18936]
                                        t = 0
                                        while t < mem[_18936]:
                                            mem[_18936 + t + 196] = mem[_18936 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_18936] % 32:
                                            require ext_code.size(address(_18935))
                                            call address(_18935).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_18120), 128, mem[_18936 + 164 len mem[_18936] + 32]
                                        else:
                                            mem[floor32(mem[_18936]) + _18936 + 196] = mem[floor32(mem[_18936]) + _18936 + -(mem[_18936] % 32) + 228 len mem[_18936] % 32]
                                            require ext_code.size(address(_18935))
                                            call address(_18935).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_18120), 128, mem[_18936], mem[_18936 + 196 len floor32(mem[_18936]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_18936 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_18936 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                continue 
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                require idx < mem[96]
                                if mem[(32 * idx) + 140 len 20] == address(_15940):
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17721 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17722 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17722 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17722 + 36] = 0
                                        mem[_17722 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_17722 + 100] = this.address
                                        mem[_17722 + 132] = 128
                                        mem[_17722 + 164] = mem[_17722]
                                        t = 0
                                        while t < mem[_17722]:
                                            mem[_17722 + t + 196] = mem[_17722 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17722] % 32:
                                            require ext_code.size(address(_17721))
                                            call address(_17721).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_17722 + 164 len mem[_17722] + 32]
                                        else:
                                            mem[floor32(mem[_17722]) + _17722 + 196] = mem[floor32(mem[_17722]) + _17722 + -(mem[_17722] % 32) + 228 len mem[_17722] % 32]
                                            require ext_code.size(address(_17721))
                                            call address(_17721).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_17722], mem[_17722 + 196 len floor32(mem[_17722]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17722 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17722 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _17362 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _18122 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _18123 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_18123 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_18123 + 36] = 0
                                        mem[_18123 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_18123 + 100] = address(_17362)
                                        mem[_18123 + 132] = 128
                                        mem[_18123 + 164] = mem[_18123]
                                        t = 0
                                        while t < mem[_18123]:
                                            mem[_18123 + t + 196] = mem[_18123 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_18123] % 32:
                                            require ext_code.size(address(_18122))
                                            call address(_18122).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17362), 128, mem[_18123 + 164 len mem[_18123] + 32]
                                        else:
                                            mem[floor32(mem[_18123]) + _18123 + 196] = mem[floor32(mem[_18123]) + _18123 + -(mem[_18123] % 32) + 228 len mem[_18123] % 32]
                                            require ext_code.size(address(_18122))
                                            call address(_18122).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17362), 128, mem[_18123], mem[_18123 + 196 len floor32(mem[_18123]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_18123 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_18123 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17724 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17725 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17725 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17725 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_17725 + 68] = 0
                                        mem[_17725 + 100] = this.address
                                        mem[_17725 + 132] = 128
                                        mem[_17725 + 164] = mem[_17725]
                                        t = 0
                                        while t < mem[_17725]:
                                            mem[_17725 + t + 196] = mem[_17725 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17725] % 32:
                                            require ext_code.size(address(_17724))
                                            call address(_17724).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_17725 + 164 len mem[_17725] + 32]
                                        else:
                                            mem[floor32(mem[_17725]) + _17725 + 196] = mem[floor32(mem[_17725]) + _17725 + -(mem[_17725] % 32) + 228 len mem[_17725] % 32]
                                            require ext_code.size(address(_17724))
                                            call address(_17724).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_17725], mem[_17725 + 196 len floor32(mem[_17725]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17725 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17725 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _17364 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _18127 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _18128 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_18128 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_18128 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_18128 + 68] = 0
                                        mem[_18128 + 100] = address(_17364)
                                        mem[_18128 + 132] = 128
                                        mem[_18128 + 164] = mem[_18128]
                                        t = 0
                                        while t < mem[_18128]:
                                            mem[_18128 + t + 196] = mem[_18128 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_18128] % 32:
                                            require ext_code.size(address(_18127))
                                            call address(_18127).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17364), 128, mem[_18128 + 164 len mem[_18128] + 32]
                                        else:
                                            mem[floor32(mem[_18128]) + _18128 + 196] = mem[floor32(mem[_18128]) + _18128 + -(mem[_18128] % 32) + 228 len mem[_18128] % 32]
                                            require ext_code.size(address(_18127))
                                            call address(_18127).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17364), 128, mem[_18128], mem[_18128 + 196 len floor32(mem[_18128]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_18128 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_18128 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                continue 
                            require Mask(112, 0, ext_call.return_data[0])
                            if 997 * s * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * s:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                            require idx < mem[96]
                            if mem[(32 * idx) + 140 len 20] == address(_15940):
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18547 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18548 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18548 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18548 + 36] = 0
                                    mem[_18548 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_18548 + 100] = this.address
                                    mem[_18548 + 132] = 128
                                    mem[_18548 + 164] = mem[_18548]
                                    t = 0
                                    while t < mem[_18548]:
                                        mem[_18548 + t + 196] = mem[_18548 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18548] % 32:
                                        require ext_code.size(address(_18547))
                                        call address(_18547).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_18548 + 164 len mem[_18548] + 32]
                                    else:
                                        mem[floor32(mem[_18548]) + _18548 + 196] = mem[floor32(mem[_18548]) + _18548 + -(mem[_18548] % 32) + 228 len mem[_18548] % 32]
                                        require ext_code.size(address(_18547))
                                        call address(_18547).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_18548], mem[_18548 + 196 len floor32(mem[_18548]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18548 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18548 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _18132 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18942 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18943 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18943 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18943 + 36] = 0
                                    mem[_18943 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_18943 + 100] = address(_18132)
                                    mem[_18943 + 132] = 128
                                    mem[_18943 + 164] = mem[_18943]
                                    t = 0
                                    while t < mem[_18943]:
                                        mem[_18943 + t + 196] = mem[_18943 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18943] % 32:
                                        require ext_code.size(address(_18942))
                                        call address(_18942).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_18132), 128, mem[_18943 + 164 len mem[_18943] + 32]
                                    else:
                                        mem[floor32(mem[_18943]) + _18943 + 196] = mem[floor32(mem[_18943]) + _18943 + -(mem[_18943] % 32) + 228 len mem[_18943] % 32]
                                        require ext_code.size(address(_18942))
                                        call address(_18942).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_18132), 128, mem[_18943], mem[_18943 + 196 len floor32(mem[_18943]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18943 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18943 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18550 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18551 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18551 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18551 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_18551 + 68] = 0
                                    mem[_18551 + 100] = this.address
                                    mem[_18551 + 132] = 128
                                    mem[_18551 + 164] = mem[_18551]
                                    t = 0
                                    while t < mem[_18551]:
                                        mem[_18551 + t + 196] = mem[_18551 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18551] % 32:
                                        require ext_code.size(address(_18550))
                                        call address(_18550).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_18551 + 164 len mem[_18551] + 32]
                                    else:
                                        mem[floor32(mem[_18551]) + _18551 + 196] = mem[floor32(mem[_18551]) + _18551 + -(mem[_18551] % 32) + 228 len mem[_18551] % 32]
                                        require ext_code.size(address(_18550))
                                        call address(_18550).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_18551], mem[_18551 + 196 len floor32(mem[_18551]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18551 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18551 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _18134 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18947 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18948 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18948 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18948 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_18948 + 68] = 0
                                    mem[_18948 + 100] = address(_18134)
                                    mem[_18948 + 132] = 128
                                    mem[_18948 + 164] = mem[_18948]
                                    t = 0
                                    while t < mem[_18948]:
                                        mem[_18948 + t + 196] = mem[_18948 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18948] % 32:
                                        require ext_code.size(address(_18947))
                                        call address(_18947).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_18134), 128, mem[_18948 + 164 len mem[_18948] + 32]
                                    else:
                                        mem[floor32(mem[_18948]) + _18948 + 196] = mem[floor32(mem[_18948]) + _18948 + -(mem[_18948] % 32) + 228 len mem[_18948] % 32]
                                        require ext_code.size(address(_18947))
                                        call address(_18947).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_18134), 128, mem[_18948], mem[_18948 + 196 len floor32(mem[_18948]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18948 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18948 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if not mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                        require idx < mem[(32 * arg1.length) + 128]
                        require idx < mem[96]
                        _16029 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _16035 = mem[(32 * idx + 1) + 128]
                        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 32, 37, 0xfe556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                        if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                            if not mem[(32 * idx) + 140 len 20]:
                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                            require ext_code.size(mem[(32 * idx) + (32 * arg1.length) + 172 len 20])
                            staticcall mem[(32 * idx) + (32 * arg1.length) + 172 len 20].getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if 997 * s / 997 != s:
                                revert with 0, 'ds-math-mul-overflow'
                            if address(_16029) == address(_16029):
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    require idx < mem[96]
                                    if mem[(32 * idx) + 140 len 20] == address(_15944):
                                        if idx >= mem[(32 * arg1.length) + 128] - 1:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _17729 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _17730 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_17730 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_17730 + 36] = 0
                                            mem[_17730 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_17730 + 100] = this.address
                                            mem[_17730 + 132] = 128
                                            mem[_17730 + 164] = mem[_17730]
                                            t = 0
                                            while t < mem[_17730]:
                                                mem[_17730 + t + 196] = mem[_17730 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_17730] % 32:
                                                require ext_code.size(address(_17729))
                                                call address(_17729).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_17730 + 164 len mem[_17730] + 32]
                                            else:
                                                mem[floor32(mem[_17730]) + _17730 + 196] = mem[floor32(mem[_17730]) + _17730 + -(mem[_17730] % 32) + 228 len mem[_17730] % 32]
                                                require ext_code.size(address(_17729))
                                                call address(_17729).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_17730], mem[_17730 + 196 len floor32(mem[_17730]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_17730 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_17730 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require idx + 1 < mem[(32 * arg1.length) + 128]
                                            _17368 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _18136 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _18137 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_18137 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_18137 + 36] = 0
                                            mem[_18137 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_18137 + 100] = address(_17368)
                                            mem[_18137 + 132] = 128
                                            mem[_18137 + 164] = mem[_18137]
                                            t = 0
                                            while t < mem[_18137]:
                                                mem[_18137 + t + 196] = mem[_18137 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_18137] % 32:
                                                require ext_code.size(address(_18136))
                                                call address(_18136).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17368), 128, mem[_18137 + 164 len mem[_18137] + 32]
                                            else:
                                                mem[floor32(mem[_18137]) + _18137 + 196] = mem[floor32(mem[_18137]) + _18137 + -(mem[_18137] % 32) + 228 len mem[_18137] % 32]
                                                require ext_code.size(address(_18136))
                                                call address(_18136).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17368), 128, mem[_18137], mem[_18137 + 196 len floor32(mem[_18137]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_18137 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_18137 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        if idx >= mem[(32 * arg1.length) + 128] - 1:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _17732 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _17733 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_17733 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_17733 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_17733 + 68] = 0
                                            mem[_17733 + 100] = this.address
                                            mem[_17733 + 132] = 128
                                            mem[_17733 + 164] = mem[_17733]
                                            t = 0
                                            while t < mem[_17733]:
                                                mem[_17733 + t + 196] = mem[_17733 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_17733] % 32:
                                                require ext_code.size(address(_17732))
                                                call address(_17732).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_17733 + 164 len mem[_17733] + 32]
                                            else:
                                                mem[floor32(mem[_17733]) + _17733 + 196] = mem[floor32(mem[_17733]) + _17733 + -(mem[_17733] % 32) + 228 len mem[_17733] % 32]
                                                require ext_code.size(address(_17732))
                                                call address(_17732).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_17733], mem[_17733 + 196 len floor32(mem[_17733]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_17733 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_17733 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require idx + 1 < mem[(32 * arg1.length) + 128]
                                            _17370 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _18141 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _18142 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_18142 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_18142 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_18142 + 68] = 0
                                            mem[_18142 + 100] = address(_17370)
                                            mem[_18142 + 132] = 128
                                            mem[_18142 + 164] = mem[_18142]
                                            t = 0
                                            while t < mem[_18142]:
                                                mem[_18142 + t + 196] = mem[_18142 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_18142] % 32:
                                                require ext_code.size(address(_18141))
                                                call address(_18141).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17370), 128, mem[_18142 + 164 len mem[_18142] + 32]
                                            else:
                                                mem[floor32(mem[_18142]) + _18142 + 196] = mem[floor32(mem[_18142]) + _18142 + -(mem[_18142] % 32) + 228 len mem[_18142] % 32]
                                                require ext_code.size(address(_18141))
                                                call address(_18141).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17370), 128, mem[_18142], mem[_18142 + 196 len floor32(mem[_18142]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_18142 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_18142 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    continue 
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * s * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * s:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                require idx < mem[96]
                                if mem[(32 * idx) + 140 len 20] == address(_15944):
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _18559 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _18560 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_18560 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_18560 + 36] = 0
                                        mem[_18560 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_18560 + 100] = this.address
                                        mem[_18560 + 132] = 128
                                        mem[_18560 + 164] = mem[_18560]
                                        t = 0
                                        while t < mem[_18560]:
                                            mem[_18560 + t + 196] = mem[_18560 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_18560] % 32:
                                            require ext_code.size(address(_18559))
                                            call address(_18559).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_18560 + 164 len mem[_18560] + 32]
                                        else:
                                            mem[floor32(mem[_18560]) + _18560 + 196] = mem[floor32(mem[_18560]) + _18560 + -(mem[_18560] % 32) + 228 len mem[_18560] % 32]
                                            require ext_code.size(address(_18559))
                                            call address(_18559).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_18560], mem[_18560 + 196 len floor32(mem[_18560]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_18560 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_18560 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _18146 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _18954 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _18955 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_18955 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_18955 + 36] = 0
                                        mem[_18955 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_18955 + 100] = address(_18146)
                                        mem[_18955 + 132] = 128
                                        mem[_18955 + 164] = mem[_18955]
                                        t = 0
                                        while t < mem[_18955]:
                                            mem[_18955 + t + 196] = mem[_18955 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_18955] % 32:
                                            require ext_code.size(address(_18954))
                                            call address(_18954).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_18146), 128, mem[_18955 + 164 len mem[_18955] + 32]
                                        else:
                                            mem[floor32(mem[_18955]) + _18955 + 196] = mem[floor32(mem[_18955]) + _18955 + -(mem[_18955] % 32) + 228 len mem[_18955] % 32]
                                            require ext_code.size(address(_18954))
                                            call address(_18954).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_18146), 128, mem[_18955], mem[_18955 + 196 len floor32(mem[_18955]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_18955 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_18955 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _18562 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _18563 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_18563 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_18563 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_18563 + 68] = 0
                                        mem[_18563 + 100] = this.address
                                        mem[_18563 + 132] = 128
                                        mem[_18563 + 164] = mem[_18563]
                                        t = 0
                                        while t < mem[_18563]:
                                            mem[_18563 + t + 196] = mem[_18563 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_18563] % 32:
                                            require ext_code.size(address(_18562))
                                            call address(_18562).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_18563 + 164 len mem[_18563] + 32]
                                        else:
                                            mem[floor32(mem[_18563]) + _18563 + 196] = mem[floor32(mem[_18563]) + _18563 + -(mem[_18563] % 32) + 228 len mem[_18563] % 32]
                                            require ext_code.size(address(_18562))
                                            call address(_18562).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_18563], mem[_18563 + 196 len floor32(mem[_18563]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_18563 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_18563 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _18148 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _18959 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _18960 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_18960 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_18960 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_18960 + 68] = 0
                                        mem[_18960 + 100] = address(_18148)
                                        mem[_18960 + 132] = 128
                                        mem[_18960 + 164] = mem[_18960]
                                        t = 0
                                        while t < mem[_18960]:
                                            mem[_18960 + t + 196] = mem[_18960 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_18960] % 32:
                                            require ext_code.size(address(_18959))
                                            call address(_18959).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_18148), 128, mem[_18960 + 164 len mem[_18960] + 32]
                                        else:
                                            mem[floor32(mem[_18960]) + _18960 + 196] = mem[floor32(mem[_18960]) + _18960 + -(mem[_18960] % 32) + 228 len mem[_18960] % 32]
                                            require ext_code.size(address(_18959))
                                            call address(_18959).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_18148), 128, mem[_18960], mem[_18960 + 196 len floor32(mem[_18960]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_18960 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_18960 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                continue 
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                require idx < mem[96]
                                if mem[(32 * idx) + 140 len 20] == address(_15944):
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17737 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17738 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17738 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17738 + 36] = 0
                                        mem[_17738 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_17738 + 100] = this.address
                                        mem[_17738 + 132] = 128
                                        mem[_17738 + 164] = mem[_17738]
                                        t = 0
                                        while t < mem[_17738]:
                                            mem[_17738 + t + 196] = mem[_17738 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17738] % 32:
                                            require ext_code.size(address(_17737))
                                            call address(_17737).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_17738 + 164 len mem[_17738] + 32]
                                        else:
                                            mem[floor32(mem[_17738]) + _17738 + 196] = mem[floor32(mem[_17738]) + _17738 + -(mem[_17738] % 32) + 228 len mem[_17738] % 32]
                                            require ext_code.size(address(_17737))
                                            call address(_17737).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_17738], mem[_17738 + 196 len floor32(mem[_17738]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17738 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17738 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _17374 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _18150 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _18151 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_18151 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_18151 + 36] = 0
                                        mem[_18151 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_18151 + 100] = address(_17374)
                                        mem[_18151 + 132] = 128
                                        mem[_18151 + 164] = mem[_18151]
                                        t = 0
                                        while t < mem[_18151]:
                                            mem[_18151 + t + 196] = mem[_18151 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_18151] % 32:
                                            require ext_code.size(address(_18150))
                                            call address(_18150).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17374), 128, mem[_18151 + 164 len mem[_18151] + 32]
                                        else:
                                            mem[floor32(mem[_18151]) + _18151 + 196] = mem[floor32(mem[_18151]) + _18151 + -(mem[_18151] % 32) + 228 len mem[_18151] % 32]
                                            require ext_code.size(address(_18150))
                                            call address(_18150).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17374), 128, mem[_18151], mem[_18151 + 196 len floor32(mem[_18151]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_18151 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_18151 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17740 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17741 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17741 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17741 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_17741 + 68] = 0
                                        mem[_17741 + 100] = this.address
                                        mem[_17741 + 132] = 128
                                        mem[_17741 + 164] = mem[_17741]
                                        t = 0
                                        while t < mem[_17741]:
                                            mem[_17741 + t + 196] = mem[_17741 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17741] % 32:
                                            require ext_code.size(address(_17740))
                                            call address(_17740).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_17741 + 164 len mem[_17741] + 32]
                                        else:
                                            mem[floor32(mem[_17741]) + _17741 + 196] = mem[floor32(mem[_17741]) + _17741 + -(mem[_17741] % 32) + 228 len mem[_17741] % 32]
                                            require ext_code.size(address(_17740))
                                            call address(_17740).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_17741], mem[_17741 + 196 len floor32(mem[_17741]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17741 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17741 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _17376 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _18155 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _18156 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_18156 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_18156 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_18156 + 68] = 0
                                        mem[_18156 + 100] = address(_17376)
                                        mem[_18156 + 132] = 128
                                        mem[_18156 + 164] = mem[_18156]
                                        t = 0
                                        while t < mem[_18156]:
                                            mem[_18156 + t + 196] = mem[_18156 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_18156] % 32:
                                            require ext_code.size(address(_18155))
                                            call address(_18155).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17376), 128, mem[_18156 + 164 len mem[_18156] + 32]
                                        else:
                                            mem[floor32(mem[_18156]) + _18156 + 196] = mem[floor32(mem[_18156]) + _18156 + -(mem[_18156] % 32) + 228 len mem[_18156] % 32]
                                            require ext_code.size(address(_18155))
                                            call address(_18155).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17376), 128, mem[_18156], mem[_18156 + 196 len floor32(mem[_18156]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_18156 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_18156 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                continue 
                            require Mask(112, 0, ext_call.return_data[0])
                            if 997 * s * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * s:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                            require idx < mem[96]
                            if mem[(32 * idx) + 140 len 20] == address(_15944):
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18571 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18572 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18572 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18572 + 36] = 0
                                    mem[_18572 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_18572 + 100] = this.address
                                    mem[_18572 + 132] = 128
                                    mem[_18572 + 164] = mem[_18572]
                                    t = 0
                                    while t < mem[_18572]:
                                        mem[_18572 + t + 196] = mem[_18572 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18572] % 32:
                                        require ext_code.size(address(_18571))
                                        call address(_18571).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_18572 + 164 len mem[_18572] + 32]
                                    else:
                                        mem[floor32(mem[_18572]) + _18572 + 196] = mem[floor32(mem[_18572]) + _18572 + -(mem[_18572] % 32) + 228 len mem[_18572] % 32]
                                        require ext_code.size(address(_18571))
                                        call address(_18571).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_18572], mem[_18572 + 196 len floor32(mem[_18572]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18572 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18572 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _18160 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18966 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18967 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18967 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18967 + 36] = 0
                                    mem[_18967 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_18967 + 100] = address(_18160)
                                    mem[_18967 + 132] = 128
                                    mem[_18967 + 164] = mem[_18967]
                                    t = 0
                                    while t < mem[_18967]:
                                        mem[_18967 + t + 196] = mem[_18967 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18967] % 32:
                                        require ext_code.size(address(_18966))
                                        call address(_18966).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_18160), 128, mem[_18967 + 164 len mem[_18967] + 32]
                                    else:
                                        mem[floor32(mem[_18967]) + _18967 + 196] = mem[floor32(mem[_18967]) + _18967 + -(mem[_18967] % 32) + 228 len mem[_18967] % 32]
                                        require ext_code.size(address(_18966))
                                        call address(_18966).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_18160), 128, mem[_18967], mem[_18967 + 196 len floor32(mem[_18967]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18967 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18967 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18574 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18575 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18575 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18575 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_18575 + 68] = 0
                                    mem[_18575 + 100] = this.address
                                    mem[_18575 + 132] = 128
                                    mem[_18575 + 164] = mem[_18575]
                                    t = 0
                                    while t < mem[_18575]:
                                        mem[_18575 + t + 196] = mem[_18575 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18575] % 32:
                                        require ext_code.size(address(_18574))
                                        call address(_18574).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_18575 + 164 len mem[_18575] + 32]
                                    else:
                                        mem[floor32(mem[_18575]) + _18575 + 196] = mem[floor32(mem[_18575]) + _18575 + -(mem[_18575] % 32) + 228 len mem[_18575] % 32]
                                        require ext_code.size(address(_18574))
                                        call address(_18574).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_18575], mem[_18575 + 196 len floor32(mem[_18575]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18575 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18575 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _18162 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18971 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18972 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18972 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18972 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_18972 + 68] = 0
                                    mem[_18972 + 100] = address(_18162)
                                    mem[_18972 + 132] = 128
                                    mem[_18972 + 164] = mem[_18972]
                                    t = 0
                                    while t < mem[_18972]:
                                        mem[_18972 + t + 196] = mem[_18972 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18972] % 32:
                                        require ext_code.size(address(_18971))
                                        call address(_18971).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_18162), 128, mem[_18972 + 164 len mem[_18972] + 32]
                                    else:
                                        mem[floor32(mem[_18972]) + _18972 + 196] = mem[floor32(mem[_18972]) + _18972 + -(mem[_18972] % 32) + 228 len mem[_18972] % 32]
                                        require ext_code.size(address(_18971))
                                        call address(_18971).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_18162), 128, mem[_18972], mem[_18972 + 196 len floor32(mem[_18972]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18972 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18972 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if not mem[(32 * idx + 1) + 140 len 20]:
                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                            require ext_code.size(mem[(32 * idx) + (32 * arg1.length) + 172 len 20])
                            staticcall mem[(32 * idx) + (32 * arg1.length) + 172 len 20].getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if 997 * s / 997 != s:
                                revert with 0, 'ds-math-mul-overflow'
                            if address(_16029) == address(_16035):
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    require idx < mem[96]
                                    if mem[(32 * idx) + 140 len 20] == address(_15944):
                                        if idx >= mem[(32 * arg1.length) + 128] - 1:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _17745 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _17746 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_17746 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_17746 + 36] = 0
                                            mem[_17746 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_17746 + 100] = this.address
                                            mem[_17746 + 132] = 128
                                            mem[_17746 + 164] = mem[_17746]
                                            t = 0
                                            while t < mem[_17746]:
                                                mem[_17746 + t + 196] = mem[_17746 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_17746] % 32:
                                                require ext_code.size(address(_17745))
                                                call address(_17745).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_17746 + 164 len mem[_17746] + 32]
                                            else:
                                                mem[floor32(mem[_17746]) + _17746 + 196] = mem[floor32(mem[_17746]) + _17746 + -(mem[_17746] % 32) + 228 len mem[_17746] % 32]
                                                require ext_code.size(address(_17745))
                                                call address(_17745).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_17746], mem[_17746 + 196 len floor32(mem[_17746]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_17746 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_17746 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require idx + 1 < mem[(32 * arg1.length) + 128]
                                            _17380 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _18164 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _18165 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_18165 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_18165 + 36] = 0
                                            mem[_18165 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_18165 + 100] = address(_17380)
                                            mem[_18165 + 132] = 128
                                            mem[_18165 + 164] = mem[_18165]
                                            t = 0
                                            while t < mem[_18165]:
                                                mem[_18165 + t + 196] = mem[_18165 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_18165] % 32:
                                                require ext_code.size(address(_18164))
                                                call address(_18164).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17380), 128, mem[_18165 + 164 len mem[_18165] + 32]
                                            else:
                                                mem[floor32(mem[_18165]) + _18165 + 196] = mem[floor32(mem[_18165]) + _18165 + -(mem[_18165] % 32) + 228 len mem[_18165] % 32]
                                                require ext_code.size(address(_18164))
                                                call address(_18164).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_17380), 128, mem[_18165], mem[_18165 + 196 len floor32(mem[_18165]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_18165 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_18165 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        if idx >= mem[(32 * arg1.length) + 128] - 1:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _17748 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _17749 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_17749 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_17749 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_17749 + 68] = 0
                                            mem[_17749 + 100] = this.address
                                            mem[_17749 + 132] = 128
                                            mem[_17749 + 164] = mem[_17749]
                                            t = 0
                                            while t < mem[_17749]:
                                                mem[_17749 + t + 196] = mem[_17749 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_17749] % 32:
                                                require ext_code.size(address(_17748))
                                                call address(_17748).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_17749 + 164 len mem[_17749] + 32]
                                            else:
                                                mem[floor32(mem[_17749]) + _17749 + 196] = mem[floor32(mem[_17749]) + _17749 + -(mem[_17749] % 32) + 228 len mem[_17749] % 32]
                                                require ext_code.size(address(_17748))
                                                call address(_17748).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_17749], mem[_17749 + 196 len floor32(mem[_17749]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_17749 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_17749 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require idx + 1 < mem[(32 * arg1.length) + 128]
                                            _17382 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _18169 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _18170 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_18170 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_18170 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_18170 + 68] = 0
                                            mem[_18170 + 100] = address(_17382)
                                            mem[_18170 + 132] = 128
                                            mem[_18170 + 164] = mem[_18170]
                                            t = 0
                                            while t < mem[_18170]:
                                                mem[_18170 + t + 196] = mem[_18170 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_18170] % 32:
                                                require ext_code.size(address(_18169))
                                                call address(_18169).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17382), 128, mem[_18170 + 164 len mem[_18170] + 32]
                                            else:
                                                mem[floor32(mem[_18170]) + _18170 + 196] = mem[floor32(mem[_18170]) + _18170 + -(mem[_18170] % 32) + 228 len mem[_18170] % 32]
                                                require ext_code.size(address(_18169))
                                                call address(_18169).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_17382), 128, mem[_18170], mem[_18170 + 196 len floor32(mem[_18170]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_18170 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_18170 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    continue 
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * s * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * s:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                require idx < mem[96]
                                if mem[(32 * idx) + 140 len 20] == address(_15944):
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _18583 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _18584 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_18584 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_18584 + 36] = 0
                                        mem[_18584 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_18584 + 100] = this.address
                                        mem[_18584 + 132] = 128
                                        mem[_18584 + 164] = mem[_18584]
                                        t = 0
                                        while t < mem[_18584]:
                                            mem[_18584 + t + 196] = mem[_18584 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_18584] % 32:
                                            require ext_code.size(address(_18583))
                                            call address(_18583).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_18584 + 164 len mem[_18584] + 32]
                                        else:
                                            mem[floor32(mem[_18584]) + _18584 + 196] = mem[floor32(mem[_18584]) + _18584 + -(mem[_18584] % 32) + 228 len mem[_18584] % 32]
                                            require ext_code.size(address(_18583))
                                            call address(_18583).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_18584], mem[_18584 + 196 len floor32(mem[_18584]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_18584 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_18584 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _18174 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _18978 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _18979 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_18979 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_18979 + 36] = 0
                                        mem[_18979 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_18979 + 100] = address(_18174)
                                        mem[_18979 + 132] = 128
                                        mem[_18979 + 164] = mem[_18979]
                                        t = 0
                                        while t < mem[_18979]:
                                            mem[_18979 + t + 196] = mem[_18979 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_18979] % 32:
                                            require ext_code.size(address(_18978))
                                            call address(_18978).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_18174), 128, mem[_18979 + 164 len mem[_18979] + 32]
                                        else:
                                            mem[floor32(mem[_18979]) + _18979 + 196] = mem[floor32(mem[_18979]) + _18979 + -(mem[_18979] % 32) + 228 len mem[_18979] % 32]
                                            require ext_code.size(address(_18978))
                                            call address(_18978).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_18174), 128, mem[_18979], mem[_18979 + 196 len floor32(mem[_18979]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_18979 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_18979 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _18586 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _18587 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_18587 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_18587 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_18587 + 68] = 0
                                        mem[_18587 + 100] = this.address
                                        mem[_18587 + 132] = 128
                                        mem[_18587 + 164] = mem[_18587]
                                        t = 0
                                        while t < mem[_18587]:
                                            mem[_18587 + t + 196] = mem[_18587 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_18587] % 32:
                                            require ext_code.size(address(_18586))
                                            call address(_18586).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_18587 + 164 len mem[_18587] + 32]
                                        else:
                                            mem[floor32(mem[_18587]) + _18587 + 196] = mem[floor32(mem[_18587]) + _18587 + -(mem[_18587] % 32) + 228 len mem[_18587] % 32]
                                            require ext_code.size(address(_18586))
                                            call address(_18586).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_18587], mem[_18587 + 196 len floor32(mem[_18587]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_18587 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_18587 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _18176 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _18983 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _18984 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_18984 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_18984 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_18984 + 68] = 0
                                        mem[_18984 + 100] = address(_18176)
                                        mem[_18984 + 132] = 128
                                        mem[_18984 + 164] = mem[_18984]
                                        t = 0
                                        while t < mem[_18984]:
                                            mem[_18984 + t + 196] = mem[_18984 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_18984] % 32:
                                            require ext_code.size(address(_18983))
                                            call address(_18983).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_18176), 128, mem[_18984 + 164 len mem[_18984] + 32]
                                        else:
                                            mem[floor32(mem[_18984]) + _18984 + 196] = mem[floor32(mem[_18984]) + _18984 + -(mem[_18984] % 32) + 228 len mem[_18984] % 32]
                                            require ext_code.size(address(_18983))
                                            call address(_18983).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_18176), 128, mem[_18984], mem[_18984 + 196 len floor32(mem[_18984]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_18984 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_18984 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                continue 
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                require idx < mem[96]
                                if mem[(32 * idx) + 140 len 20] == address(_15944):
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17753 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17754 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17754 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17754 + 36] = 0
                                        mem[_17754 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_17754 + 100] = this.address
                                        mem[_17754 + 132] = 128
                                        mem[_17754 + 164] = mem[_17754]
                                        t = 0
                                        while t < mem[_17754]:
                                            mem[_17754 + t + 196] = mem[_17754 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17754] % 32:
                                            require ext_code.size(address(_17753))
                                            call address(_17753).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_17754 + 164 len mem[_17754] + 32]
                                        else:
                                            mem[floor32(mem[_17754]) + _17754 + 196] = mem[floor32(mem[_17754]) + _17754 + -(mem[_17754] % 32) + 228 len mem[_17754] % 32]
                                            require ext_code.size(address(_17753))
                                            call address(_17753).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_17754], mem[_17754 + 196 len floor32(mem[_17754]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17754 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17754 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _17386 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _18178 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _18179 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_18179 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_18179 + 36] = 0
                                        mem[_18179 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_18179 + 100] = address(_17386)
                                        mem[_18179 + 132] = 128
                                        mem[_18179 + 164] = mem[_18179]
                                        t = 0
                                        while t < mem[_18179]:
                                            mem[_18179 + t + 196] = mem[_18179 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_18179] % 32:
                                            require ext_code.size(address(_18178))
                                            call address(_18178).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17386), 128, mem[_18179 + 164 len mem[_18179] + 32]
                                        else:
                                            mem[floor32(mem[_18179]) + _18179 + 196] = mem[floor32(mem[_18179]) + _18179 + -(mem[_18179] % 32) + 228 len mem[_18179] % 32]
                                            require ext_code.size(address(_18178))
                                            call address(_18178).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_17386), 128, mem[_18179], mem[_18179 + 196 len floor32(mem[_18179]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_18179 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_18179 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _17756 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _17757 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_17757 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_17757 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_17757 + 68] = 0
                                        mem[_17757 + 100] = this.address
                                        mem[_17757 + 132] = 128
                                        mem[_17757 + 164] = mem[_17757]
                                        t = 0
                                        while t < mem[_17757]:
                                            mem[_17757 + t + 196] = mem[_17757 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_17757] % 32:
                                            require ext_code.size(address(_17756))
                                            call address(_17756).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_17757 + 164 len mem[_17757] + 32]
                                        else:
                                            mem[floor32(mem[_17757]) + _17757 + 196] = mem[floor32(mem[_17757]) + _17757 + -(mem[_17757] % 32) + 228 len mem[_17757] % 32]
                                            require ext_code.size(address(_17756))
                                            call address(_17756).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_17757], mem[_17757 + 196 len floor32(mem[_17757]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_17757 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_17757 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _17388 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _18183 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _18184 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_18184 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_18184 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_18184 + 68] = 0
                                        mem[_18184 + 100] = address(_17388)
                                        mem[_18184 + 132] = 128
                                        mem[_18184 + 164] = mem[_18184]
                                        t = 0
                                        while t < mem[_18184]:
                                            mem[_18184 + t + 196] = mem[_18184 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_18184] % 32:
                                            require ext_code.size(address(_18183))
                                            call address(_18183).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17388), 128, mem[_18184 + 164 len mem[_18184] + 32]
                                        else:
                                            mem[floor32(mem[_18184]) + _18184 + 196] = mem[floor32(mem[_18184]) + _18184 + -(mem[_18184] % 32) + 228 len mem[_18184] % 32]
                                            require ext_code.size(address(_18183))
                                            call address(_18183).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_17388), 128, mem[_18184], mem[_18184 + 196 len floor32(mem[_18184]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_18184 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_18184 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                continue 
                            require Mask(112, 0, ext_call.return_data[0])
                            if 997 * s * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * s:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                            require idx < mem[96]
                            if mem[(32 * idx) + 140 len 20] == address(_15944):
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18595 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18596 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18596 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18596 + 36] = 0
                                    mem[_18596 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_18596 + 100] = this.address
                                    mem[_18596 + 132] = 128
                                    mem[_18596 + 164] = mem[_18596]
                                    t = 0
                                    while t < mem[_18596]:
                                        mem[_18596 + t + 196] = mem[_18596 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18596] % 32:
                                        require ext_code.size(address(_18595))
                                        call address(_18595).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_18596 + 164 len mem[_18596] + 32]
                                    else:
                                        mem[floor32(mem[_18596]) + _18596 + 196] = mem[floor32(mem[_18596]) + _18596 + -(mem[_18596] % 32) + 228 len mem[_18596] % 32]
                                        require ext_code.size(address(_18595))
                                        call address(_18595).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_18596], mem[_18596 + 196 len floor32(mem[_18596]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18596 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18596 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _18188 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18990 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18991 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18991 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18991 + 36] = 0
                                    mem[_18991 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_18991 + 100] = address(_18188)
                                    mem[_18991 + 132] = 128
                                    mem[_18991 + 164] = mem[_18991]
                                    t = 0
                                    while t < mem[_18991]:
                                        mem[_18991 + t + 196] = mem[_18991 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18991] % 32:
                                        require ext_code.size(address(_18990))
                                        call address(_18990).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_18188), 128, mem[_18991 + 164 len mem[_18991] + 32]
                                    else:
                                        mem[floor32(mem[_18991]) + _18991 + 196] = mem[floor32(mem[_18991]) + _18991 + -(mem[_18991] % 32) + 228 len mem[_18991] % 32]
                                        require ext_code.size(address(_18990))
                                        call address(_18990).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_18188), 128, mem[_18991], mem[_18991 + 196 len floor32(mem[_18991]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18991 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18991 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18598 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18599 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18599 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18599 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_18599 + 68] = 0
                                    mem[_18599 + 100] = this.address
                                    mem[_18599 + 132] = 128
                                    mem[_18599 + 164] = mem[_18599]
                                    t = 0
                                    while t < mem[_18599]:
                                        mem[_18599 + t + 196] = mem[_18599 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18599] % 32:
                                        require ext_code.size(address(_18598))
                                        call address(_18598).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_18599 + 164 len mem[_18599] + 32]
                                    else:
                                        mem[floor32(mem[_18599]) + _18599 + 196] = mem[floor32(mem[_18599]) + _18599 + -(mem[_18599] % 32) + 228 len mem[_18599] % 32]
                                        require ext_code.size(address(_18598))
                                        call address(_18598).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_18599], mem[_18599 + 196 len floor32(mem[_18599]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18599 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18599 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _18190 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _18995 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _18996 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_18996 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_18996 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_18996 + 68] = 0
                                    mem[_18996 + 100] = address(_18190)
                                    mem[_18996 + 132] = 128
                                    mem[_18996 + 164] = mem[_18996]
                                    t = 0
                                    while t < mem[_18996]:
                                        mem[_18996 + t + 196] = mem[_18996 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_18996] % 32:
                                        require ext_code.size(address(_18995))
                                        call address(_18995).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_18190), 128, mem[_18996 + 164 len mem[_18996] + 32]
                                    else:
                                        mem[floor32(mem[_18996]) + _18996 + 196] = mem[floor32(mem[_18996]) + _18996 + -(mem[_18996] % 32) + 228 len mem[_18996] % 32]
                                        require ext_code.size(address(_18995))
                                        call address(_18995).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_18190), 128, mem[_18996], mem[_18996 + 196 len floor32(mem[_18996]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_18996 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_18996 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                else:
                    mem[mem[64]] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
                    require ext_code.size(stor1)
                    call stor1.deposit() with:
                       value s wei
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require idx < mem[(32 * arg1.length) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                    mem[mem[64] + 36] = s
                    require ext_code.size(stor1)
                    call stor1.transfer(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4], s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0]
                    require idx < mem[96]
                    _16016 = mem[(32 * idx) + 128]
                    require idx + 1 < mem[96]
                    _16031 = mem[(32 * idx + 1) + 128]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 32, 37, 0xfe556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                    if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                        if not mem[(32 * idx) + 140 len 20]:
                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                        require idx < mem[(32 * arg1.length) + 128]
                        require idx < mem[96]
                        _16144 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _16158 = mem[(32 * idx + 1) + 128]
                        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 32, 37, 0xfe556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                        if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                            if not mem[(32 * idx) + 140 len 20]:
                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                            require ext_code.size(mem[(32 * idx) + (32 * arg1.length) + 172 len 20])
                            staticcall mem[(32 * idx) + (32 * arg1.length) + 172 len 20].getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if 997 * s / 997 != s:
                                revert with 0, 'ds-math-mul-overflow'
                            if address(_16144) == address(_16144):
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    require idx < mem[96]
                                    if mem[(32 * idx) + 140 len 20] == address(_16016):
                                        if idx >= mem[(32 * arg1.length) + 128] - 1:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _21121 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _21122 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_21122 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_21122 + 36] = 0
                                            mem[_21122 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_21122 + 100] = this.address
                                            mem[_21122 + 132] = 128
                                            mem[_21122 + 164] = mem[_21122]
                                            t = 0
                                            while t < mem[_21122]:
                                                mem[_21122 + t + 196] = mem[_21122 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_21122] % 32:
                                                require ext_code.size(address(_21121))
                                                call address(_21121).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_21122 + 164 len mem[_21122] + 32]
                                            else:
                                                mem[floor32(mem[_21122]) + _21122 + 196] = mem[floor32(mem[_21122]) + _21122 + -(mem[_21122] % 32) + 228 len mem[_21122] % 32]
                                                require ext_code.size(address(_21121))
                                                call address(_21121).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_21122], mem[_21122 + 196 len floor32(mem[_21122]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_21122 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_21122 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require idx + 1 < mem[(32 * arg1.length) + 128]
                                            _20528 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _21808 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _21809 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_21809 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_21809 + 36] = 0
                                            mem[_21809 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_21809 + 100] = address(_20528)
                                            mem[_21809 + 132] = 128
                                            mem[_21809 + 164] = mem[_21809]
                                            t = 0
                                            while t < mem[_21809]:
                                                mem[_21809 + t + 196] = mem[_21809 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_21809] % 32:
                                                require ext_code.size(address(_21808))
                                                call address(_21808).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_20528), 128, mem[_21809 + 164 len mem[_21809] + 32]
                                            else:
                                                mem[floor32(mem[_21809]) + _21809 + 196] = mem[floor32(mem[_21809]) + _21809 + -(mem[_21809] % 32) + 228 len mem[_21809] % 32]
                                                require ext_code.size(address(_21808))
                                                call address(_21808).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_20528), 128, mem[_21809], mem[_21809 + 196 len floor32(mem[_21809]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_21809 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_21809 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        if idx >= mem[(32 * arg1.length) + 128] - 1:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _21124 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _21125 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_21125 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_21125 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_21125 + 68] = 0
                                            mem[_21125 + 100] = this.address
                                            mem[_21125 + 132] = 128
                                            mem[_21125 + 164] = mem[_21125]
                                            t = 0
                                            while t < mem[_21125]:
                                                mem[_21125 + t + 196] = mem[_21125 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_21125] % 32:
                                                require ext_code.size(address(_21124))
                                                call address(_21124).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_21125 + 164 len mem[_21125] + 32]
                                            else:
                                                mem[floor32(mem[_21125]) + _21125 + 196] = mem[floor32(mem[_21125]) + _21125 + -(mem[_21125] % 32) + 228 len mem[_21125] % 32]
                                                require ext_code.size(address(_21124))
                                                call address(_21124).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_21125], mem[_21125 + 196 len floor32(mem[_21125]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_21125 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_21125 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require idx + 1 < mem[(32 * arg1.length) + 128]
                                            _20530 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _21813 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _21814 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_21814 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_21814 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_21814 + 68] = 0
                                            mem[_21814 + 100] = address(_20530)
                                            mem[_21814 + 132] = 128
                                            mem[_21814 + 164] = mem[_21814]
                                            t = 0
                                            while t < mem[_21814]:
                                                mem[_21814 + t + 196] = mem[_21814 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_21814] % 32:
                                                require ext_code.size(address(_21813))
                                                call address(_21813).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_20530), 128, mem[_21814 + 164 len mem[_21814] + 32]
                                            else:
                                                mem[floor32(mem[_21814]) + _21814 + 196] = mem[floor32(mem[_21814]) + _21814 + -(mem[_21814] % 32) + 228 len mem[_21814] % 32]
                                                require ext_code.size(address(_21813))
                                                call address(_21813).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_20530), 128, mem[_21814], mem[_21814 + 196 len floor32(mem[_21814]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_21814 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_21814 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    continue 
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * s * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * s:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                require idx < mem[96]
                                if mem[(32 * idx) + 140 len 20] == address(_16016):
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _22599 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _22600 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_22600 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_22600 + 36] = 0
                                        mem[_22600 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_22600 + 100] = this.address
                                        mem[_22600 + 132] = 128
                                        mem[_22600 + 164] = mem[_22600]
                                        t = 0
                                        while t < mem[_22600]:
                                            mem[_22600 + t + 196] = mem[_22600 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_22600] % 32:
                                            require ext_code.size(address(_22599))
                                            call address(_22599).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_22600 + 164 len mem[_22600] + 32]
                                        else:
                                            mem[floor32(mem[_22600]) + _22600 + 196] = mem[floor32(mem[_22600]) + _22600 + -(mem[_22600] % 32) + 228 len mem[_22600] % 32]
                                            require ext_code.size(address(_22599))
                                            call address(_22599).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_22600], mem[_22600 + 196 len floor32(mem[_22600]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_22600 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_22600 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _21818 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _23426 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _23427 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_23427 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_23427 + 36] = 0
                                        mem[_23427 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_23427 + 100] = address(_21818)
                                        mem[_23427 + 132] = 128
                                        mem[_23427 + 164] = mem[_23427]
                                        t = 0
                                        while t < mem[_23427]:
                                            mem[_23427 + t + 196] = mem[_23427 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_23427] % 32:
                                            require ext_code.size(address(_23426))
                                            call address(_23426).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_21818), 128, mem[_23427 + 164 len mem[_23427] + 32]
                                        else:
                                            mem[floor32(mem[_23427]) + _23427 + 196] = mem[floor32(mem[_23427]) + _23427 + -(mem[_23427] % 32) + 228 len mem[_23427] % 32]
                                            require ext_code.size(address(_23426))
                                            call address(_23426).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_21818), 128, mem[_23427], mem[_23427 + 196 len floor32(mem[_23427]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_23427 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_23427 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _22602 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _22603 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_22603 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_22603 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_22603 + 68] = 0
                                        mem[_22603 + 100] = this.address
                                        mem[_22603 + 132] = 128
                                        mem[_22603 + 164] = mem[_22603]
                                        t = 0
                                        while t < mem[_22603]:
                                            mem[_22603 + t + 196] = mem[_22603 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_22603] % 32:
                                            require ext_code.size(address(_22602))
                                            call address(_22602).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_22603 + 164 len mem[_22603] + 32]
                                        else:
                                            mem[floor32(mem[_22603]) + _22603 + 196] = mem[floor32(mem[_22603]) + _22603 + -(mem[_22603] % 32) + 228 len mem[_22603] % 32]
                                            require ext_code.size(address(_22602))
                                            call address(_22602).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_22603], mem[_22603 + 196 len floor32(mem[_22603]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_22603 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_22603 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _21820 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _23431 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _23432 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_23432 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_23432 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_23432 + 68] = 0
                                        mem[_23432 + 100] = address(_21820)
                                        mem[_23432 + 132] = 128
                                        mem[_23432 + 164] = mem[_23432]
                                        t = 0
                                        while t < mem[_23432]:
                                            mem[_23432 + t + 196] = mem[_23432 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_23432] % 32:
                                            require ext_code.size(address(_23431))
                                            call address(_23431).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_21820), 128, mem[_23432 + 164 len mem[_23432] + 32]
                                        else:
                                            mem[floor32(mem[_23432]) + _23432 + 196] = mem[floor32(mem[_23432]) + _23432 + -(mem[_23432] % 32) + 228 len mem[_23432] % 32]
                                            require ext_code.size(address(_23431))
                                            call address(_23431).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_21820), 128, mem[_23432], mem[_23432 + 196 len floor32(mem[_23432]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_23432 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_23432 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                continue 
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                require idx < mem[96]
                                if mem[(32 * idx) + 140 len 20] == address(_16016):
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _21129 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _21130 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_21130 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_21130 + 36] = 0
                                        mem[_21130 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_21130 + 100] = this.address
                                        mem[_21130 + 132] = 128
                                        mem[_21130 + 164] = mem[_21130]
                                        t = 0
                                        while t < mem[_21130]:
                                            mem[_21130 + t + 196] = mem[_21130 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_21130] % 32:
                                            require ext_code.size(address(_21129))
                                            call address(_21129).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_21130 + 164 len mem[_21130] + 32]
                                        else:
                                            mem[floor32(mem[_21130]) + _21130 + 196] = mem[floor32(mem[_21130]) + _21130 + -(mem[_21130] % 32) + 228 len mem[_21130] % 32]
                                            require ext_code.size(address(_21129))
                                            call address(_21129).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_21130], mem[_21130 + 196 len floor32(mem[_21130]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_21130 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_21130 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _20534 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _21822 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _21823 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_21823 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_21823 + 36] = 0
                                        mem[_21823 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_21823 + 100] = address(_20534)
                                        mem[_21823 + 132] = 128
                                        mem[_21823 + 164] = mem[_21823]
                                        t = 0
                                        while t < mem[_21823]:
                                            mem[_21823 + t + 196] = mem[_21823 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_21823] % 32:
                                            require ext_code.size(address(_21822))
                                            call address(_21822).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_20534), 128, mem[_21823 + 164 len mem[_21823] + 32]
                                        else:
                                            mem[floor32(mem[_21823]) + _21823 + 196] = mem[floor32(mem[_21823]) + _21823 + -(mem[_21823] % 32) + 228 len mem[_21823] % 32]
                                            require ext_code.size(address(_21822))
                                            call address(_21822).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_20534), 128, mem[_21823], mem[_21823 + 196 len floor32(mem[_21823]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_21823 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_21823 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _21132 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _21133 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_21133 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_21133 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_21133 + 68] = 0
                                        mem[_21133 + 100] = this.address
                                        mem[_21133 + 132] = 128
                                        mem[_21133 + 164] = mem[_21133]
                                        t = 0
                                        while t < mem[_21133]:
                                            mem[_21133 + t + 196] = mem[_21133 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_21133] % 32:
                                            require ext_code.size(address(_21132))
                                            call address(_21132).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_21133 + 164 len mem[_21133] + 32]
                                        else:
                                            mem[floor32(mem[_21133]) + _21133 + 196] = mem[floor32(mem[_21133]) + _21133 + -(mem[_21133] % 32) + 228 len mem[_21133] % 32]
                                            require ext_code.size(address(_21132))
                                            call address(_21132).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_21133], mem[_21133 + 196 len floor32(mem[_21133]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_21133 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_21133 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _20536 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _21827 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _21828 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_21828 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_21828 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_21828 + 68] = 0
                                        mem[_21828 + 100] = address(_20536)
                                        mem[_21828 + 132] = 128
                                        mem[_21828 + 164] = mem[_21828]
                                        t = 0
                                        while t < mem[_21828]:
                                            mem[_21828 + t + 196] = mem[_21828 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_21828] % 32:
                                            require ext_code.size(address(_21827))
                                            call address(_21827).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_20536), 128, mem[_21828 + 164 len mem[_21828] + 32]
                                        else:
                                            mem[floor32(mem[_21828]) + _21828 + 196] = mem[floor32(mem[_21828]) + _21828 + -(mem[_21828] % 32) + 228 len mem[_21828] % 32]
                                            require ext_code.size(address(_21827))
                                            call address(_21827).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_20536), 128, mem[_21828], mem[_21828 + 196 len floor32(mem[_21828]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_21828 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_21828 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                continue 
                            require Mask(112, 0, ext_call.return_data[0])
                            if 997 * s * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * s:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                            require idx < mem[96]
                            if mem[(32 * idx) + 140 len 20] == address(_16016):
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _22611 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _22612 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22612 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22612 + 36] = 0
                                    mem[_22612 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_22612 + 100] = this.address
                                    mem[_22612 + 132] = 128
                                    mem[_22612 + 164] = mem[_22612]
                                    t = 0
                                    while t < mem[_22612]:
                                        mem[_22612 + t + 196] = mem[_22612 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_22612] % 32:
                                        require ext_code.size(address(_22611))
                                        call address(_22611).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_22612 + 164 len mem[_22612] + 32]
                                    else:
                                        mem[floor32(mem[_22612]) + _22612 + 196] = mem[floor32(mem[_22612]) + _22612 + -(mem[_22612] % 32) + 228 len mem[_22612] % 32]
                                        require ext_code.size(address(_22611))
                                        call address(_22611).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_22612], mem[_22612 + 196 len floor32(mem[_22612]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_22612 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_22612 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _21832 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _23438 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _23439 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_23439 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_23439 + 36] = 0
                                    mem[_23439 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_23439 + 100] = address(_21832)
                                    mem[_23439 + 132] = 128
                                    mem[_23439 + 164] = mem[_23439]
                                    t = 0
                                    while t < mem[_23439]:
                                        mem[_23439 + t + 196] = mem[_23439 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_23439] % 32:
                                        require ext_code.size(address(_23438))
                                        call address(_23438).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_21832), 128, mem[_23439 + 164 len mem[_23439] + 32]
                                    else:
                                        mem[floor32(mem[_23439]) + _23439 + 196] = mem[floor32(mem[_23439]) + _23439 + -(mem[_23439] % 32) + 228 len mem[_23439] % 32]
                                        require ext_code.size(address(_23438))
                                        call address(_23438).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_21832), 128, mem[_23439], mem[_23439 + 196 len floor32(mem[_23439]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_23439 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_23439 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _22614 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _22615 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22615 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22615 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_22615 + 68] = 0
                                    mem[_22615 + 100] = this.address
                                    mem[_22615 + 132] = 128
                                    mem[_22615 + 164] = mem[_22615]
                                    t = 0
                                    while t < mem[_22615]:
                                        mem[_22615 + t + 196] = mem[_22615 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_22615] % 32:
                                        require ext_code.size(address(_22614))
                                        call address(_22614).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_22615 + 164 len mem[_22615] + 32]
                                    else:
                                        mem[floor32(mem[_22615]) + _22615 + 196] = mem[floor32(mem[_22615]) + _22615 + -(mem[_22615] % 32) + 228 len mem[_22615] % 32]
                                        require ext_code.size(address(_22614))
                                        call address(_22614).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_22615], mem[_22615 + 196 len floor32(mem[_22615]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_22615 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_22615 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _21834 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _23443 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _23444 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_23444 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_23444 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_23444 + 68] = 0
                                    mem[_23444 + 100] = address(_21834)
                                    mem[_23444 + 132] = 128
                                    mem[_23444 + 164] = mem[_23444]
                                    t = 0
                                    while t < mem[_23444]:
                                        mem[_23444 + t + 196] = mem[_23444 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_23444] % 32:
                                        require ext_code.size(address(_23443))
                                        call address(_23443).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_21834), 128, mem[_23444 + 164 len mem[_23444] + 32]
                                    else:
                                        mem[floor32(mem[_23444]) + _23444 + 196] = mem[floor32(mem[_23444]) + _23444 + -(mem[_23444] % 32) + 228 len mem[_23444] % 32]
                                        require ext_code.size(address(_23443))
                                        call address(_23443).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_21834), 128, mem[_23444], mem[_23444 + 196 len floor32(mem[_23444]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_23444 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_23444 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if not mem[(32 * idx + 1) + 140 len 20]:
                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                            require ext_code.size(mem[(32 * idx) + (32 * arg1.length) + 172 len 20])
                            staticcall mem[(32 * idx) + (32 * arg1.length) + 172 len 20].getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if 997 * s / 997 != s:
                                revert with 0, 'ds-math-mul-overflow'
                            if address(_16144) == address(_16158):
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    require idx < mem[96]
                                    if mem[(32 * idx) + 140 len 20] == address(_16016):
                                        if idx >= mem[(32 * arg1.length) + 128] - 1:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _21137 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _21138 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_21138 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_21138 + 36] = 0
                                            mem[_21138 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_21138 + 100] = this.address
                                            mem[_21138 + 132] = 128
                                            mem[_21138 + 164] = mem[_21138]
                                            t = 0
                                            while t < mem[_21138]:
                                                mem[_21138 + t + 196] = mem[_21138 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_21138] % 32:
                                                require ext_code.size(address(_21137))
                                                call address(_21137).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_21138 + 164 len mem[_21138] + 32]
                                            else:
                                                mem[floor32(mem[_21138]) + _21138 + 196] = mem[floor32(mem[_21138]) + _21138 + -(mem[_21138] % 32) + 228 len mem[_21138] % 32]
                                                require ext_code.size(address(_21137))
                                                call address(_21137).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_21138], mem[_21138 + 196 len floor32(mem[_21138]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_21138 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_21138 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require idx + 1 < mem[(32 * arg1.length) + 128]
                                            _20540 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _21836 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _21837 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_21837 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_21837 + 36] = 0
                                            mem[_21837 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_21837 + 100] = address(_20540)
                                            mem[_21837 + 132] = 128
                                            mem[_21837 + 164] = mem[_21837]
                                            t = 0
                                            while t < mem[_21837]:
                                                mem[_21837 + t + 196] = mem[_21837 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_21837] % 32:
                                                require ext_code.size(address(_21836))
                                                call address(_21836).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_20540), 128, mem[_21837 + 164 len mem[_21837] + 32]
                                            else:
                                                mem[floor32(mem[_21837]) + _21837 + 196] = mem[floor32(mem[_21837]) + _21837 + -(mem[_21837] % 32) + 228 len mem[_21837] % 32]
                                                require ext_code.size(address(_21836))
                                                call address(_21836).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_20540), 128, mem[_21837], mem[_21837 + 196 len floor32(mem[_21837]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_21837 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_21837 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        if idx >= mem[(32 * arg1.length) + 128] - 1:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _21140 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _21141 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_21141 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_21141 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_21141 + 68] = 0
                                            mem[_21141 + 100] = this.address
                                            mem[_21141 + 132] = 128
                                            mem[_21141 + 164] = mem[_21141]
                                            t = 0
                                            while t < mem[_21141]:
                                                mem[_21141 + t + 196] = mem[_21141 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_21141] % 32:
                                                require ext_code.size(address(_21140))
                                                call address(_21140).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_21141 + 164 len mem[_21141] + 32]
                                            else:
                                                mem[floor32(mem[_21141]) + _21141 + 196] = mem[floor32(mem[_21141]) + _21141 + -(mem[_21141] % 32) + 228 len mem[_21141] % 32]
                                                require ext_code.size(address(_21140))
                                                call address(_21140).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_21141], mem[_21141 + 196 len floor32(mem[_21141]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_21141 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_21141 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require idx + 1 < mem[(32 * arg1.length) + 128]
                                            _20542 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _21841 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _21842 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_21842 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_21842 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_21842 + 68] = 0
                                            mem[_21842 + 100] = address(_20542)
                                            mem[_21842 + 132] = 128
                                            mem[_21842 + 164] = mem[_21842]
                                            t = 0
                                            while t < mem[_21842]:
                                                mem[_21842 + t + 196] = mem[_21842 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_21842] % 32:
                                                require ext_code.size(address(_21841))
                                                call address(_21841).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_20542), 128, mem[_21842 + 164 len mem[_21842] + 32]
                                            else:
                                                mem[floor32(mem[_21842]) + _21842 + 196] = mem[floor32(mem[_21842]) + _21842 + -(mem[_21842] % 32) + 228 len mem[_21842] % 32]
                                                require ext_code.size(address(_21841))
                                                call address(_21841).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_20542), 128, mem[_21842], mem[_21842 + 196 len floor32(mem[_21842]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_21842 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_21842 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    continue 
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * s * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * s:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                require idx < mem[96]
                                if mem[(32 * idx) + 140 len 20] == address(_16016):
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _22623 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _22624 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_22624 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_22624 + 36] = 0
                                        mem[_22624 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_22624 + 100] = this.address
                                        mem[_22624 + 132] = 128
                                        mem[_22624 + 164] = mem[_22624]
                                        t = 0
                                        while t < mem[_22624]:
                                            mem[_22624 + t + 196] = mem[_22624 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_22624] % 32:
                                            require ext_code.size(address(_22623))
                                            call address(_22623).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_22624 + 164 len mem[_22624] + 32]
                                        else:
                                            mem[floor32(mem[_22624]) + _22624 + 196] = mem[floor32(mem[_22624]) + _22624 + -(mem[_22624] % 32) + 228 len mem[_22624] % 32]
                                            require ext_code.size(address(_22623))
                                            call address(_22623).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_22624], mem[_22624 + 196 len floor32(mem[_22624]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_22624 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_22624 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _21846 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _23450 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _23451 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_23451 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_23451 + 36] = 0
                                        mem[_23451 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_23451 + 100] = address(_21846)
                                        mem[_23451 + 132] = 128
                                        mem[_23451 + 164] = mem[_23451]
                                        t = 0
                                        while t < mem[_23451]:
                                            mem[_23451 + t + 196] = mem[_23451 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_23451] % 32:
                                            require ext_code.size(address(_23450))
                                            call address(_23450).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_21846), 128, mem[_23451 + 164 len mem[_23451] + 32]
                                        else:
                                            mem[floor32(mem[_23451]) + _23451 + 196] = mem[floor32(mem[_23451]) + _23451 + -(mem[_23451] % 32) + 228 len mem[_23451] % 32]
                                            require ext_code.size(address(_23450))
                                            call address(_23450).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_21846), 128, mem[_23451], mem[_23451 + 196 len floor32(mem[_23451]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_23451 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_23451 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _22626 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _22627 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_22627 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_22627 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_22627 + 68] = 0
                                        mem[_22627 + 100] = this.address
                                        mem[_22627 + 132] = 128
                                        mem[_22627 + 164] = mem[_22627]
                                        t = 0
                                        while t < mem[_22627]:
                                            mem[_22627 + t + 196] = mem[_22627 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_22627] % 32:
                                            require ext_code.size(address(_22626))
                                            call address(_22626).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_22627 + 164 len mem[_22627] + 32]
                                        else:
                                            mem[floor32(mem[_22627]) + _22627 + 196] = mem[floor32(mem[_22627]) + _22627 + -(mem[_22627] % 32) + 228 len mem[_22627] % 32]
                                            require ext_code.size(address(_22626))
                                            call address(_22626).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_22627], mem[_22627 + 196 len floor32(mem[_22627]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_22627 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_22627 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _21848 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _23455 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _23456 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_23456 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_23456 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_23456 + 68] = 0
                                        mem[_23456 + 100] = address(_21848)
                                        mem[_23456 + 132] = 128
                                        mem[_23456 + 164] = mem[_23456]
                                        t = 0
                                        while t < mem[_23456]:
                                            mem[_23456 + t + 196] = mem[_23456 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_23456] % 32:
                                            require ext_code.size(address(_23455))
                                            call address(_23455).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_21848), 128, mem[_23456 + 164 len mem[_23456] + 32]
                                        else:
                                            mem[floor32(mem[_23456]) + _23456 + 196] = mem[floor32(mem[_23456]) + _23456 + -(mem[_23456] % 32) + 228 len mem[_23456] % 32]
                                            require ext_code.size(address(_23455))
                                            call address(_23455).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_21848), 128, mem[_23456], mem[_23456 + 196 len floor32(mem[_23456]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_23456 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_23456 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                continue 
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                require idx < mem[96]
                                if mem[(32 * idx) + 140 len 20] == address(_16016):
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _21145 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _21146 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_21146 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_21146 + 36] = 0
                                        mem[_21146 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_21146 + 100] = this.address
                                        mem[_21146 + 132] = 128
                                        mem[_21146 + 164] = mem[_21146]
                                        t = 0
                                        while t < mem[_21146]:
                                            mem[_21146 + t + 196] = mem[_21146 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_21146] % 32:
                                            require ext_code.size(address(_21145))
                                            call address(_21145).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_21146 + 164 len mem[_21146] + 32]
                                        else:
                                            mem[floor32(mem[_21146]) + _21146 + 196] = mem[floor32(mem[_21146]) + _21146 + -(mem[_21146] % 32) + 228 len mem[_21146] % 32]
                                            require ext_code.size(address(_21145))
                                            call address(_21145).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_21146], mem[_21146 + 196 len floor32(mem[_21146]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_21146 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_21146 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _20546 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _21850 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _21851 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_21851 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_21851 + 36] = 0
                                        mem[_21851 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_21851 + 100] = address(_20546)
                                        mem[_21851 + 132] = 128
                                        mem[_21851 + 164] = mem[_21851]
                                        t = 0
                                        while t < mem[_21851]:
                                            mem[_21851 + t + 196] = mem[_21851 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_21851] % 32:
                                            require ext_code.size(address(_21850))
                                            call address(_21850).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_20546), 128, mem[_21851 + 164 len mem[_21851] + 32]
                                        else:
                                            mem[floor32(mem[_21851]) + _21851 + 196] = mem[floor32(mem[_21851]) + _21851 + -(mem[_21851] % 32) + 228 len mem[_21851] % 32]
                                            require ext_code.size(address(_21850))
                                            call address(_21850).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_20546), 128, mem[_21851], mem[_21851 + 196 len floor32(mem[_21851]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_21851 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_21851 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _21148 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _21149 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_21149 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_21149 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_21149 + 68] = 0
                                        mem[_21149 + 100] = this.address
                                        mem[_21149 + 132] = 128
                                        mem[_21149 + 164] = mem[_21149]
                                        t = 0
                                        while t < mem[_21149]:
                                            mem[_21149 + t + 196] = mem[_21149 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_21149] % 32:
                                            require ext_code.size(address(_21148))
                                            call address(_21148).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_21149 + 164 len mem[_21149] + 32]
                                        else:
                                            mem[floor32(mem[_21149]) + _21149 + 196] = mem[floor32(mem[_21149]) + _21149 + -(mem[_21149] % 32) + 228 len mem[_21149] % 32]
                                            require ext_code.size(address(_21148))
                                            call address(_21148).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_21149], mem[_21149 + 196 len floor32(mem[_21149]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_21149 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_21149 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _20548 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _21855 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _21856 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_21856 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_21856 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_21856 + 68] = 0
                                        mem[_21856 + 100] = address(_20548)
                                        mem[_21856 + 132] = 128
                                        mem[_21856 + 164] = mem[_21856]
                                        t = 0
                                        while t < mem[_21856]:
                                            mem[_21856 + t + 196] = mem[_21856 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_21856] % 32:
                                            require ext_code.size(address(_21855))
                                            call address(_21855).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_20548), 128, mem[_21856 + 164 len mem[_21856] + 32]
                                        else:
                                            mem[floor32(mem[_21856]) + _21856 + 196] = mem[floor32(mem[_21856]) + _21856 + -(mem[_21856] % 32) + 228 len mem[_21856] % 32]
                                            require ext_code.size(address(_21855))
                                            call address(_21855).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_20548), 128, mem[_21856], mem[_21856 + 196 len floor32(mem[_21856]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_21856 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_21856 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                continue 
                            require Mask(112, 0, ext_call.return_data[0])
                            if 997 * s * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * s:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                            require idx < mem[96]
                            if mem[(32 * idx) + 140 len 20] == address(_16016):
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _22635 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _22636 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22636 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22636 + 36] = 0
                                    mem[_22636 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_22636 + 100] = this.address
                                    mem[_22636 + 132] = 128
                                    mem[_22636 + 164] = mem[_22636]
                                    t = 0
                                    while t < mem[_22636]:
                                        mem[_22636 + t + 196] = mem[_22636 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_22636] % 32:
                                        require ext_code.size(address(_22635))
                                        call address(_22635).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_22636 + 164 len mem[_22636] + 32]
                                    else:
                                        mem[floor32(mem[_22636]) + _22636 + 196] = mem[floor32(mem[_22636]) + _22636 + -(mem[_22636] % 32) + 228 len mem[_22636] % 32]
                                        require ext_code.size(address(_22635))
                                        call address(_22635).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_22636], mem[_22636 + 196 len floor32(mem[_22636]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_22636 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_22636 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _21860 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _23462 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _23463 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_23463 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_23463 + 36] = 0
                                    mem[_23463 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_23463 + 100] = address(_21860)
                                    mem[_23463 + 132] = 128
                                    mem[_23463 + 164] = mem[_23463]
                                    t = 0
                                    while t < mem[_23463]:
                                        mem[_23463 + t + 196] = mem[_23463 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_23463] % 32:
                                        require ext_code.size(address(_23462))
                                        call address(_23462).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_21860), 128, mem[_23463 + 164 len mem[_23463] + 32]
                                    else:
                                        mem[floor32(mem[_23463]) + _23463 + 196] = mem[floor32(mem[_23463]) + _23463 + -(mem[_23463] % 32) + 228 len mem[_23463] % 32]
                                        require ext_code.size(address(_23462))
                                        call address(_23462).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_21860), 128, mem[_23463], mem[_23463 + 196 len floor32(mem[_23463]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_23463 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_23463 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _22638 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _22639 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22639 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22639 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_22639 + 68] = 0
                                    mem[_22639 + 100] = this.address
                                    mem[_22639 + 132] = 128
                                    mem[_22639 + 164] = mem[_22639]
                                    t = 0
                                    while t < mem[_22639]:
                                        mem[_22639 + t + 196] = mem[_22639 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_22639] % 32:
                                        require ext_code.size(address(_22638))
                                        call address(_22638).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_22639 + 164 len mem[_22639] + 32]
                                    else:
                                        mem[floor32(mem[_22639]) + _22639 + 196] = mem[floor32(mem[_22639]) + _22639 + -(mem[_22639] % 32) + 228 len mem[_22639] % 32]
                                        require ext_code.size(address(_22638))
                                        call address(_22638).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_22639], mem[_22639 + 196 len floor32(mem[_22639]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_22639 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_22639 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _21862 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _23467 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _23468 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_23468 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_23468 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_23468 + 68] = 0
                                    mem[_23468 + 100] = address(_21862)
                                    mem[_23468 + 132] = 128
                                    mem[_23468 + 164] = mem[_23468]
                                    t = 0
                                    while t < mem[_23468]:
                                        mem[_23468 + t + 196] = mem[_23468 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_23468] % 32:
                                        require ext_code.size(address(_23467))
                                        call address(_23467).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_21862), 128, mem[_23468 + 164 len mem[_23468] + 32]
                                    else:
                                        mem[floor32(mem[_23468]) + _23468 + 196] = mem[floor32(mem[_23468]) + _23468 + -(mem[_23468] % 32) + 228 len mem[_23468] % 32]
                                        require ext_code.size(address(_23467))
                                        call address(_23467).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_21862), 128, mem[_23468], mem[_23468 + 196 len floor32(mem[_23468]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_23468 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_23468 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if not mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                        require idx < mem[(32 * arg1.length) + 128]
                        require idx < mem[96]
                        _16146 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _16159 = mem[(32 * idx + 1) + 128]
                        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                            revert with 0, 32, 37, 0xfe556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                        if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                            if not mem[(32 * idx) + 140 len 20]:
                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                            require ext_code.size(mem[(32 * idx) + (32 * arg1.length) + 172 len 20])
                            staticcall mem[(32 * idx) + (32 * arg1.length) + 172 len 20].getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if 997 * s / 997 != s:
                                revert with 0, 'ds-math-mul-overflow'
                            if address(_16146) == address(_16146):
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    require idx < mem[96]
                                    if mem[(32 * idx) + 140 len 20] == address(_16031):
                                        if idx >= mem[(32 * arg1.length) + 128] - 1:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _21153 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _21154 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_21154 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_21154 + 36] = 0
                                            mem[_21154 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_21154 + 100] = this.address
                                            mem[_21154 + 132] = 128
                                            mem[_21154 + 164] = mem[_21154]
                                            t = 0
                                            while t < mem[_21154]:
                                                mem[_21154 + t + 196] = mem[_21154 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_21154] % 32:
                                                require ext_code.size(address(_21153))
                                                call address(_21153).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_21154 + 164 len mem[_21154] + 32]
                                            else:
                                                mem[floor32(mem[_21154]) + _21154 + 196] = mem[floor32(mem[_21154]) + _21154 + -(mem[_21154] % 32) + 228 len mem[_21154] % 32]
                                                require ext_code.size(address(_21153))
                                                call address(_21153).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_21154], mem[_21154 + 196 len floor32(mem[_21154]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_21154 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_21154 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require idx + 1 < mem[(32 * arg1.length) + 128]
                                            _20552 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _21864 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _21865 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_21865 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_21865 + 36] = 0
                                            mem[_21865 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_21865 + 100] = address(_20552)
                                            mem[_21865 + 132] = 128
                                            mem[_21865 + 164] = mem[_21865]
                                            t = 0
                                            while t < mem[_21865]:
                                                mem[_21865 + t + 196] = mem[_21865 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_21865] % 32:
                                                require ext_code.size(address(_21864))
                                                call address(_21864).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_20552), 128, mem[_21865 + 164 len mem[_21865] + 32]
                                            else:
                                                mem[floor32(mem[_21865]) + _21865 + 196] = mem[floor32(mem[_21865]) + _21865 + -(mem[_21865] % 32) + 228 len mem[_21865] % 32]
                                                require ext_code.size(address(_21864))
                                                call address(_21864).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_20552), 128, mem[_21865], mem[_21865 + 196 len floor32(mem[_21865]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_21865 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_21865 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        if idx >= mem[(32 * arg1.length) + 128] - 1:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _21156 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _21157 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_21157 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_21157 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_21157 + 68] = 0
                                            mem[_21157 + 100] = this.address
                                            mem[_21157 + 132] = 128
                                            mem[_21157 + 164] = mem[_21157]
                                            t = 0
                                            while t < mem[_21157]:
                                                mem[_21157 + t + 196] = mem[_21157 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_21157] % 32:
                                                require ext_code.size(address(_21156))
                                                call address(_21156).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_21157 + 164 len mem[_21157] + 32]
                                            else:
                                                mem[floor32(mem[_21157]) + _21157 + 196] = mem[floor32(mem[_21157]) + _21157 + -(mem[_21157] % 32) + 228 len mem[_21157] % 32]
                                                require ext_code.size(address(_21156))
                                                call address(_21156).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_21157], mem[_21157 + 196 len floor32(mem[_21157]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_21157 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_21157 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require idx + 1 < mem[(32 * arg1.length) + 128]
                                            _20554 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _21869 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _21870 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_21870 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_21870 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_21870 + 68] = 0
                                            mem[_21870 + 100] = address(_20554)
                                            mem[_21870 + 132] = 128
                                            mem[_21870 + 164] = mem[_21870]
                                            t = 0
                                            while t < mem[_21870]:
                                                mem[_21870 + t + 196] = mem[_21870 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_21870] % 32:
                                                require ext_code.size(address(_21869))
                                                call address(_21869).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_20554), 128, mem[_21870 + 164 len mem[_21870] + 32]
                                            else:
                                                mem[floor32(mem[_21870]) + _21870 + 196] = mem[floor32(mem[_21870]) + _21870 + -(mem[_21870] % 32) + 228 len mem[_21870] % 32]
                                                require ext_code.size(address(_21869))
                                                call address(_21869).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_20554), 128, mem[_21870], mem[_21870 + 196 len floor32(mem[_21870]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_21870 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_21870 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    continue 
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * s * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * s:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                require idx < mem[96]
                                if mem[(32 * idx) + 140 len 20] == address(_16031):
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _22647 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _22648 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_22648 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_22648 + 36] = 0
                                        mem[_22648 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_22648 + 100] = this.address
                                        mem[_22648 + 132] = 128
                                        mem[_22648 + 164] = mem[_22648]
                                        t = 0
                                        while t < mem[_22648]:
                                            mem[_22648 + t + 196] = mem[_22648 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_22648] % 32:
                                            require ext_code.size(address(_22647))
                                            call address(_22647).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_22648 + 164 len mem[_22648] + 32]
                                        else:
                                            mem[floor32(mem[_22648]) + _22648 + 196] = mem[floor32(mem[_22648]) + _22648 + -(mem[_22648] % 32) + 228 len mem[_22648] % 32]
                                            require ext_code.size(address(_22647))
                                            call address(_22647).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_22648], mem[_22648 + 196 len floor32(mem[_22648]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_22648 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_22648 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _21874 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _23474 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _23475 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_23475 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_23475 + 36] = 0
                                        mem[_23475 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_23475 + 100] = address(_21874)
                                        mem[_23475 + 132] = 128
                                        mem[_23475 + 164] = mem[_23475]
                                        t = 0
                                        while t < mem[_23475]:
                                            mem[_23475 + t + 196] = mem[_23475 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_23475] % 32:
                                            require ext_code.size(address(_23474))
                                            call address(_23474).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_21874), 128, mem[_23475 + 164 len mem[_23475] + 32]
                                        else:
                                            mem[floor32(mem[_23475]) + _23475 + 196] = mem[floor32(mem[_23475]) + _23475 + -(mem[_23475] % 32) + 228 len mem[_23475] % 32]
                                            require ext_code.size(address(_23474))
                                            call address(_23474).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_21874), 128, mem[_23475], mem[_23475 + 196 len floor32(mem[_23475]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_23475 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_23475 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _22650 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _22651 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_22651 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_22651 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_22651 + 68] = 0
                                        mem[_22651 + 100] = this.address
                                        mem[_22651 + 132] = 128
                                        mem[_22651 + 164] = mem[_22651]
                                        t = 0
                                        while t < mem[_22651]:
                                            mem[_22651 + t + 196] = mem[_22651 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_22651] % 32:
                                            require ext_code.size(address(_22650))
                                            call address(_22650).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_22651 + 164 len mem[_22651] + 32]
                                        else:
                                            mem[floor32(mem[_22651]) + _22651 + 196] = mem[floor32(mem[_22651]) + _22651 + -(mem[_22651] % 32) + 228 len mem[_22651] % 32]
                                            require ext_code.size(address(_22650))
                                            call address(_22650).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_22651], mem[_22651 + 196 len floor32(mem[_22651]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_22651 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_22651 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _21876 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _23479 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _23480 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_23480 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_23480 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_23480 + 68] = 0
                                        mem[_23480 + 100] = address(_21876)
                                        mem[_23480 + 132] = 128
                                        mem[_23480 + 164] = mem[_23480]
                                        t = 0
                                        while t < mem[_23480]:
                                            mem[_23480 + t + 196] = mem[_23480 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_23480] % 32:
                                            require ext_code.size(address(_23479))
                                            call address(_23479).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_21876), 128, mem[_23480 + 164 len mem[_23480] + 32]
                                        else:
                                            mem[floor32(mem[_23480]) + _23480 + 196] = mem[floor32(mem[_23480]) + _23480 + -(mem[_23480] % 32) + 228 len mem[_23480] % 32]
                                            require ext_code.size(address(_23479))
                                            call address(_23479).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_21876), 128, mem[_23480], mem[_23480 + 196 len floor32(mem[_23480]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_23480 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_23480 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                continue 
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                require idx < mem[96]
                                if mem[(32 * idx) + 140 len 20] == address(_16031):
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _21161 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _21162 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_21162 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_21162 + 36] = 0
                                        mem[_21162 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_21162 + 100] = this.address
                                        mem[_21162 + 132] = 128
                                        mem[_21162 + 164] = mem[_21162]
                                        t = 0
                                        while t < mem[_21162]:
                                            mem[_21162 + t + 196] = mem[_21162 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_21162] % 32:
                                            require ext_code.size(address(_21161))
                                            call address(_21161).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_21162 + 164 len mem[_21162] + 32]
                                        else:
                                            mem[floor32(mem[_21162]) + _21162 + 196] = mem[floor32(mem[_21162]) + _21162 + -(mem[_21162] % 32) + 228 len mem[_21162] % 32]
                                            require ext_code.size(address(_21161))
                                            call address(_21161).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_21162], mem[_21162 + 196 len floor32(mem[_21162]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_21162 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_21162 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _20558 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _21878 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _21879 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_21879 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_21879 + 36] = 0
                                        mem[_21879 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_21879 + 100] = address(_20558)
                                        mem[_21879 + 132] = 128
                                        mem[_21879 + 164] = mem[_21879]
                                        t = 0
                                        while t < mem[_21879]:
                                            mem[_21879 + t + 196] = mem[_21879 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_21879] % 32:
                                            require ext_code.size(address(_21878))
                                            call address(_21878).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_20558), 128, mem[_21879 + 164 len mem[_21879] + 32]
                                        else:
                                            mem[floor32(mem[_21879]) + _21879 + 196] = mem[floor32(mem[_21879]) + _21879 + -(mem[_21879] % 32) + 228 len mem[_21879] % 32]
                                            require ext_code.size(address(_21878))
                                            call address(_21878).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_20558), 128, mem[_21879], mem[_21879 + 196 len floor32(mem[_21879]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_21879 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_21879 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _21164 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _21165 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_21165 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_21165 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_21165 + 68] = 0
                                        mem[_21165 + 100] = this.address
                                        mem[_21165 + 132] = 128
                                        mem[_21165 + 164] = mem[_21165]
                                        t = 0
                                        while t < mem[_21165]:
                                            mem[_21165 + t + 196] = mem[_21165 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_21165] % 32:
                                            require ext_code.size(address(_21164))
                                            call address(_21164).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_21165 + 164 len mem[_21165] + 32]
                                        else:
                                            mem[floor32(mem[_21165]) + _21165 + 196] = mem[floor32(mem[_21165]) + _21165 + -(mem[_21165] % 32) + 228 len mem[_21165] % 32]
                                            require ext_code.size(address(_21164))
                                            call address(_21164).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_21165], mem[_21165 + 196 len floor32(mem[_21165]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_21165 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_21165 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _20560 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _21883 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _21884 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_21884 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_21884 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_21884 + 68] = 0
                                        mem[_21884 + 100] = address(_20560)
                                        mem[_21884 + 132] = 128
                                        mem[_21884 + 164] = mem[_21884]
                                        t = 0
                                        while t < mem[_21884]:
                                            mem[_21884 + t + 196] = mem[_21884 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_21884] % 32:
                                            require ext_code.size(address(_21883))
                                            call address(_21883).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_20560), 128, mem[_21884 + 164 len mem[_21884] + 32]
                                        else:
                                            mem[floor32(mem[_21884]) + _21884 + 196] = mem[floor32(mem[_21884]) + _21884 + -(mem[_21884] % 32) + 228 len mem[_21884] % 32]
                                            require ext_code.size(address(_21883))
                                            call address(_21883).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_20560), 128, mem[_21884], mem[_21884 + 196 len floor32(mem[_21884]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_21884 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_21884 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                continue 
                            require Mask(112, 0, ext_call.return_data[0])
                            if 997 * s * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * s:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                            require idx < mem[96]
                            if mem[(32 * idx) + 140 len 20] == address(_16031):
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _22659 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _22660 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22660 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22660 + 36] = 0
                                    mem[_22660 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_22660 + 100] = this.address
                                    mem[_22660 + 132] = 128
                                    mem[_22660 + 164] = mem[_22660]
                                    t = 0
                                    while t < mem[_22660]:
                                        mem[_22660 + t + 196] = mem[_22660 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_22660] % 32:
                                        require ext_code.size(address(_22659))
                                        call address(_22659).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_22660 + 164 len mem[_22660] + 32]
                                    else:
                                        mem[floor32(mem[_22660]) + _22660 + 196] = mem[floor32(mem[_22660]) + _22660 + -(mem[_22660] % 32) + 228 len mem[_22660] % 32]
                                        require ext_code.size(address(_22659))
                                        call address(_22659).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_22660], mem[_22660 + 196 len floor32(mem[_22660]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_22660 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_22660 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _21888 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _23486 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _23487 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_23487 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_23487 + 36] = 0
                                    mem[_23487 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_23487 + 100] = address(_21888)
                                    mem[_23487 + 132] = 128
                                    mem[_23487 + 164] = mem[_23487]
                                    t = 0
                                    while t < mem[_23487]:
                                        mem[_23487 + t + 196] = mem[_23487 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_23487] % 32:
                                        require ext_code.size(address(_23486))
                                        call address(_23486).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_21888), 128, mem[_23487 + 164 len mem[_23487] + 32]
                                    else:
                                        mem[floor32(mem[_23487]) + _23487 + 196] = mem[floor32(mem[_23487]) + _23487 + -(mem[_23487] % 32) + 228 len mem[_23487] % 32]
                                        require ext_code.size(address(_23486))
                                        call address(_23486).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_21888), 128, mem[_23487], mem[_23487 + 196 len floor32(mem[_23487]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_23487 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_23487 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _22662 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _22663 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22663 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22663 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_22663 + 68] = 0
                                    mem[_22663 + 100] = this.address
                                    mem[_22663 + 132] = 128
                                    mem[_22663 + 164] = mem[_22663]
                                    t = 0
                                    while t < mem[_22663]:
                                        mem[_22663 + t + 196] = mem[_22663 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_22663] % 32:
                                        require ext_code.size(address(_22662))
                                        call address(_22662).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_22663 + 164 len mem[_22663] + 32]
                                    else:
                                        mem[floor32(mem[_22663]) + _22663 + 196] = mem[floor32(mem[_22663]) + _22663 + -(mem[_22663] % 32) + 228 len mem[_22663] % 32]
                                        require ext_code.size(address(_22662))
                                        call address(_22662).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_22663], mem[_22663 + 196 len floor32(mem[_22663]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_22663 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_22663 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _21890 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _23491 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _23492 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_23492 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_23492 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_23492 + 68] = 0
                                    mem[_23492 + 100] = address(_21890)
                                    mem[_23492 + 132] = 128
                                    mem[_23492 + 164] = mem[_23492]
                                    t = 0
                                    while t < mem[_23492]:
                                        mem[_23492 + t + 196] = mem[_23492 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_23492] % 32:
                                        require ext_code.size(address(_23491))
                                        call address(_23491).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_21890), 128, mem[_23492 + 164 len mem[_23492] + 32]
                                    else:
                                        mem[floor32(mem[_23492]) + _23492 + 196] = mem[floor32(mem[_23492]) + _23492 + -(mem[_23492] % 32) + 228 len mem[_23492] % 32]
                                        require ext_code.size(address(_23491))
                                        call address(_23491).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_21890), 128, mem[_23492], mem[_23492 + 196 len floor32(mem[_23492]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_23492 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_23492 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if not mem[(32 * idx + 1) + 140 len 20]:
                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                            require ext_code.size(mem[(32 * idx) + (32 * arg1.length) + 172 len 20])
                            staticcall mem[(32 * idx) + (32 * arg1.length) + 172 len 20].getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            if 997 * s / 997 != s:
                                revert with 0, 'ds-math-mul-overflow'
                            if address(_16146) == address(_16159):
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    require idx < mem[96]
                                    if mem[(32 * idx) + 140 len 20] == address(_16031):
                                        if idx >= mem[(32 * arg1.length) + 128] - 1:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _21169 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _21170 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_21170 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_21170 + 36] = 0
                                            mem[_21170 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_21170 + 100] = this.address
                                            mem[_21170 + 132] = 128
                                            mem[_21170 + 164] = mem[_21170]
                                            t = 0
                                            while t < mem[_21170]:
                                                mem[_21170 + t + 196] = mem[_21170 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_21170] % 32:
                                                require ext_code.size(address(_21169))
                                                call address(_21169).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_21170 + 164 len mem[_21170] + 32]
                                            else:
                                                mem[floor32(mem[_21170]) + _21170 + 196] = mem[floor32(mem[_21170]) + _21170 + -(mem[_21170] % 32) + 228 len mem[_21170] % 32]
                                                require ext_code.size(address(_21169))
                                                call address(_21169).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_21170], mem[_21170 + 196 len floor32(mem[_21170]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_21170 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_21170 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require idx + 1 < mem[(32 * arg1.length) + 128]
                                            _20564 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _21892 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _21893 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_21893 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_21893 + 36] = 0
                                            mem[_21893 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_21893 + 100] = address(_20564)
                                            mem[_21893 + 132] = 128
                                            mem[_21893 + 164] = mem[_21893]
                                            t = 0
                                            while t < mem[_21893]:
                                                mem[_21893 + t + 196] = mem[_21893 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_21893] % 32:
                                                require ext_code.size(address(_21892))
                                                call address(_21892).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_20564), 128, mem[_21893 + 164 len mem[_21893] + 32]
                                            else:
                                                mem[floor32(mem[_21893]) + _21893 + 196] = mem[floor32(mem[_21893]) + _21893 + -(mem[_21893] % 32) + 228 len mem[_21893] % 32]
                                                require ext_code.size(address(_21892))
                                                call address(_21892).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_20564), 128, mem[_21893], mem[_21893 + 196 len floor32(mem[_21893]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_21893 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_21893 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        if idx >= mem[(32 * arg1.length) + 128] - 1:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _21172 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _21173 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_21173 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_21173 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_21173 + 68] = 0
                                            mem[_21173 + 100] = this.address
                                            mem[_21173 + 132] = 128
                                            mem[_21173 + 164] = mem[_21173]
                                            t = 0
                                            while t < mem[_21173]:
                                                mem[_21173 + t + 196] = mem[_21173 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_21173] % 32:
                                                require ext_code.size(address(_21172))
                                                call address(_21172).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_21173 + 164 len mem[_21173] + 32]
                                            else:
                                                mem[floor32(mem[_21173]) + _21173 + 196] = mem[floor32(mem[_21173]) + _21173 + -(mem[_21173] % 32) + 228 len mem[_21173] % 32]
                                                require ext_code.size(address(_21172))
                                                call address(_21172).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_21173], mem[_21173 + 196 len floor32(mem[_21173]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_21173 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_21173 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require idx + 1 < mem[(32 * arg1.length) + 128]
                                            _20566 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                            require idx < mem[(32 * arg1.length) + 128]
                                            _21897 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                            _21898 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_21898 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_21898 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                            mem[_21898 + 68] = 0
                                            mem[_21898 + 100] = address(_20566)
                                            mem[_21898 + 132] = 128
                                            mem[_21898 + 164] = mem[_21898]
                                            t = 0
                                            while t < mem[_21898]:
                                                mem[_21898 + t + 196] = mem[_21898 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_21898] % 32:
                                                require ext_code.size(address(_21897))
                                                call address(_21897).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_20566), 128, mem[_21898 + 164 len mem[_21898] + 32]
                                            else:
                                                mem[floor32(mem[_21898]) + _21898 + 196] = mem[floor32(mem[_21898]) + _21898 + -(mem[_21898] % 32) + 228 len mem[_21898] % 32]
                                                require ext_code.size(address(_21897))
                                                call address(_21897).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                     gas gas_remaining wei
                                                    args 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_20566), 128, mem[_21898], mem[_21898 + 196 len floor32(mem[_21898]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require idx + 1 < mem[96]
                                            if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                                require ext_code.size(stor1)
                                                staticcall stor1.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                mem[_21898 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_21898 + 36] = ext_call.return_data[0]
                                                require ext_code.size(stor1)
                                                call stor1.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                    continue 
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * s * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * s:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                require idx < mem[96]
                                if mem[(32 * idx) + 140 len 20] == address(_16031):
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _22671 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _22672 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_22672 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_22672 + 36] = 0
                                        mem[_22672 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_22672 + 100] = this.address
                                        mem[_22672 + 132] = 128
                                        mem[_22672 + 164] = mem[_22672]
                                        t = 0
                                        while t < mem[_22672]:
                                            mem[_22672 + t + 196] = mem[_22672 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_22672] % 32:
                                            require ext_code.size(address(_22671))
                                            call address(_22671).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_22672 + 164 len mem[_22672] + 32]
                                        else:
                                            mem[floor32(mem[_22672]) + _22672 + 196] = mem[floor32(mem[_22672]) + _22672 + -(mem[_22672] % 32) + 228 len mem[_22672] % 32]
                                            require ext_code.size(address(_22671))
                                            call address(_22671).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(this.address), 128, mem[_22672], mem[_22672 + 196 len floor32(mem[_22672]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_22672 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_22672 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _21902 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _23498 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _23499 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_23499 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_23499 + 36] = 0
                                        mem[_23499 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_23499 + 100] = address(_21902)
                                        mem[_23499 + 132] = 128
                                        mem[_23499 + 164] = mem[_23499]
                                        t = 0
                                        while t < mem[_23499]:
                                            mem[_23499 + t + 196] = mem[_23499 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_23499] % 32:
                                            require ext_code.size(address(_23498))
                                            call address(_23498).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_21902), 128, mem[_23499 + 164 len mem[_23499] + 32]
                                        else:
                                            mem[floor32(mem[_23499]) + _23499 + 196] = mem[floor32(mem[_23499]) + _23499 + -(mem[_23499] % 32) + 228 len mem[_23499] % 32]
                                            require ext_code.size(address(_23498))
                                            call address(_23498).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), address(_21902), 128, mem[_23499], mem[_23499 + 196 len floor32(mem[_23499]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_23499 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_23499 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _22674 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _22675 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_22675 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_22675 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_22675 + 68] = 0
                                        mem[_22675 + 100] = this.address
                                        mem[_22675 + 132] = 128
                                        mem[_22675 + 164] = mem[_22675]
                                        t = 0
                                        while t < mem[_22675]:
                                            mem[_22675 + t + 196] = mem[_22675 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_22675] % 32:
                                            require ext_code.size(address(_22674))
                                            call address(_22674).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_22675 + 164 len mem[_22675] + 32]
                                        else:
                                            mem[floor32(mem[_22675]) + _22675 + 196] = mem[floor32(mem[_22675]) + _22675 + -(mem[_22675] % 32) + 228 len mem[_22675] % 32]
                                            require ext_code.size(address(_22674))
                                            call address(_22674).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(this.address), 128, mem[_22675], mem[_22675 + 196 len floor32(mem[_22675]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_22675 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_22675 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _21904 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _23503 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _23504 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_23504 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_23504 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                        mem[_23504 + 68] = 0
                                        mem[_23504 + 100] = address(_21904)
                                        mem[_23504 + 132] = 128
                                        mem[_23504 + 164] = mem[_23504]
                                        t = 0
                                        while t < mem[_23504]:
                                            mem[_23504 + t + 196] = mem[_23504 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_23504] % 32:
                                            require ext_code.size(address(_23503))
                                            call address(_23503).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_21904), 128, mem[_23504 + 164 len mem[_23504] + 32]
                                        else:
                                            mem[floor32(mem[_23504]) + _23504 + 196] = mem[floor32(mem[_23504]) + _23504 + -(mem[_23504] % 32) + 228 len mem[_23504] % 32]
                                            require ext_code.size(address(_23503))
                                            call address(_23503).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s), 0, address(_21904), 128, mem[_23504], mem[_23504 + 196 len floor32(mem[_23504]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_23504 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_23504 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 997 * s * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * s)
                                continue 
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                require idx < mem[96]
                                if mem[(32 * idx) + 140 len 20] == address(_16031):
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _21177 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _21178 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_21178 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_21178 + 36] = 0
                                        mem[_21178 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_21178 + 100] = this.address
                                        mem[_21178 + 132] = 128
                                        mem[_21178 + 164] = mem[_21178]
                                        t = 0
                                        while t < mem[_21178]:
                                            mem[_21178 + t + 196] = mem[_21178 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_21178] % 32:
                                            require ext_code.size(address(_21177))
                                            call address(_21177).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_21178 + 164 len mem[_21178] + 32]
                                        else:
                                            mem[floor32(mem[_21178]) + _21178 + 196] = mem[floor32(mem[_21178]) + _21178 + -(mem[_21178] % 32) + 228 len mem[_21178] % 32]
                                            require ext_code.size(address(_21177))
                                            call address(_21177).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_21178], mem[_21178 + 196 len floor32(mem[_21178]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_21178 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_21178 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _20570 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _21906 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _21907 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_21907 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_21907 + 36] = 0
                                        mem[_21907 + 68] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_21907 + 100] = address(_20570)
                                        mem[_21907 + 132] = 128
                                        mem[_21907 + 164] = mem[_21907]
                                        t = 0
                                        while t < mem[_21907]:
                                            mem[_21907 + t + 196] = mem[_21907 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_21907] % 32:
                                            require ext_code.size(address(_21906))
                                            call address(_21906).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_20570), 128, mem[_21907 + 164 len mem[_21907] + 32]
                                        else:
                                            mem[floor32(mem[_21907]) + _21907 + 196] = mem[floor32(mem[_21907]) + _21907 + -(mem[_21907] % 32) + 228 len mem[_21907] % 32]
                                            require ext_code.size(address(_21906))
                                            call address(_21906).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_20570), 128, mem[_21907], mem[_21907 + 196 len floor32(mem[_21907]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_21907 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_21907 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if idx >= mem[(32 * arg1.length) + 128] - 1:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _21180 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _21181 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_21181 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_21181 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_21181 + 68] = 0
                                        mem[_21181 + 100] = this.address
                                        mem[_21181 + 132] = 128
                                        mem[_21181 + 164] = mem[_21181]
                                        t = 0
                                        while t < mem[_21181]:
                                            mem[_21181 + t + 196] = mem[_21181 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_21181] % 32:
                                            require ext_code.size(address(_21180))
                                            call address(_21180).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_21181 + 164 len mem[_21181] + 32]
                                        else:
                                            mem[floor32(mem[_21181]) + _21181 + 196] = mem[floor32(mem[_21181]) + _21181 + -(mem[_21181] % 32) + 228 len mem[_21181] % 32]
                                            require ext_code.size(address(_21180))
                                            call address(_21180).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_21181], mem[_21181 + 196 len floor32(mem[_21181]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_21181 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_21181 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require idx + 1 < mem[(32 * arg1.length) + 128]
                                        _20572 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                        require idx < mem[(32 * arg1.length) + 128]
                                        _21911 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                        _21912 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_21912 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_21912 + 36] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                        mem[_21912 + 68] = 0
                                        mem[_21912 + 100] = address(_20572)
                                        mem[_21912 + 132] = 128
                                        mem[_21912 + 164] = mem[_21912]
                                        t = 0
                                        while t < mem[_21912]:
                                            mem[_21912 + t + 196] = mem[_21912 + t + 32]
                                            t = t + 32
                                            continue 
                                        if not mem[_21912] % 32:
                                            require ext_code.size(address(_21911))
                                            call address(_21911).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_20572), 128, mem[_21912 + 164 len mem[_21912] + 32]
                                        else:
                                            mem[floor32(mem[_21912]) + _21912 + 196] = mem[floor32(mem[_21912]) + _21912 + -(mem[_21912] % 32) + 228 len mem[_21912] % 32]
                                            require ext_code.size(address(_21911))
                                            call address(_21911).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_20572), 128, mem[_21912], mem[_21912 + 196 len floor32(mem[_21912]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require idx + 1 < mem[96]
                                        if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                            require ext_code.size(stor1)
                                            staticcall stor1.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[_21912 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_21912 + 36] = ext_call.return_data[0]
                                            require ext_code.size(stor1)
                                            call stor1.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                continue 
                            require Mask(112, 0, ext_call.return_data[0])
                            if 997 * s * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * s:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                            require idx < mem[96]
                            if mem[(32 * idx) + 140 len 20] == address(_16031):
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _22683 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _22684 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22684 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22684 + 36] = 0
                                    mem[_22684 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_22684 + 100] = this.address
                                    mem[_22684 + 132] = 128
                                    mem[_22684 + 164] = mem[_22684]
                                    t = 0
                                    while t < mem[_22684]:
                                        mem[_22684 + t + 196] = mem[_22684 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_22684] % 32:
                                        require ext_code.size(address(_22683))
                                        call address(_22683).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_22684 + 164 len mem[_22684] + 32]
                                    else:
                                        mem[floor32(mem[_22684]) + _22684 + 196] = mem[floor32(mem[_22684]) + _22684 + -(mem[_22684] % 32) + 228 len mem[_22684] % 32]
                                        require ext_code.size(address(_22683))
                                        call address(_22683).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(this.address), 128, mem[_22684], mem[_22684 + 196 len floor32(mem[_22684]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_22684 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_22684 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _21916 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _23510 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _23511 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_23511 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_23511 + 36] = 0
                                    mem[_23511 + 68] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_23511 + 100] = address(_21916)
                                    mem[_23511 + 132] = 128
                                    mem[_23511 + 164] = mem[_23511]
                                    t = 0
                                    while t < mem[_23511]:
                                        mem[_23511 + t + 196] = mem[_23511 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_23511] % 32:
                                        require ext_code.size(address(_23510))
                                        call address(_23510).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_21916), 128, mem[_23511 + 164 len mem[_23511] + 32]
                                    else:
                                        mem[floor32(mem[_23511]) + _23511 + 196] = mem[floor32(mem[_23511]) + _23511 + -(mem[_23511] % 32) + 228 len mem[_23511] % 32]
                                        require ext_code.size(address(_23510))
                                        call address(_23510).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), address(_21916), 128, mem[_23511], mem[_23511 + 196 len floor32(mem[_23511]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_23511 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_23511 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if idx >= mem[(32 * arg1.length) + 128] - 1:
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _22686 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _22687 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22687 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22687 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_22687 + 68] = 0
                                    mem[_22687 + 100] = this.address
                                    mem[_22687 + 132] = 128
                                    mem[_22687 + 164] = mem[_22687]
                                    t = 0
                                    while t < mem[_22687]:
                                        mem[_22687 + t + 196] = mem[_22687 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_22687] % 32:
                                        require ext_code.size(address(_22686))
                                        call address(_22686).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_22687 + 164 len mem[_22687] + 32]
                                    else:
                                        mem[floor32(mem[_22687]) + _22687 + 196] = mem[floor32(mem[_22687]) + _22687 + -(mem[_22687] % 32) + 228 len mem[_22687] % 32]
                                        require ext_code.size(address(_22686))
                                        call address(_22686).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(this.address), 128, mem[_22687], mem[_22687 + 196 len floor32(mem[_22687]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_22687 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_22687 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require idx + 1 < mem[(32 * arg1.length) + 128]
                                    _21918 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _23515 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    _23516 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_23516 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_23516 + 36] = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
                                    mem[_23516 + 68] = 0
                                    mem[_23516 + 100] = address(_21918)
                                    mem[_23516 + 132] = 128
                                    mem[_23516 + 164] = mem[_23516]
                                    t = 0
                                    while t < mem[_23516]:
                                        mem[_23516 + t + 196] = mem[_23516 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_23516] % 32:
                                        require ext_code.size(address(_23515))
                                        call address(_23515).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_21918), 128, mem[_23516 + 164 len mem[_23516] + 32]
                                    else:
                                        mem[floor32(mem[_23516]) + _23516 + 196] = mem[floor32(mem[_23516]) + _23516 + -(mem[_23516] % 32) + 228 len mem[_23516] % 32]
                                        require ext_code.size(address(_23515))
                                        call address(_23515).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s), 0, address(_21918), 128, mem[_23516], mem[_23516 + 196 len floor32(mem[_23516]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    if mem[(32 * idx + 1) + 140 len 20] == stor1:
                                        require ext_code.size(stor1)
                                        staticcall stor1.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[_23516 + 32] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_23516 + 36] = ext_call.return_data[0]
                                        require ext_code.size(stor1)
                                        call stor1.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
            idx = idx + 1
            s = 997 * s * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * s)
            continue 
}



}
