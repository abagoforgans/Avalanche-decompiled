contract main {




// =====================  Runtime code  =====================


#
#  - liquidateS(address arg1, address arg2, address arg3)
#
address stor0;
address stor1;
uint256 stor2;
uint8 stor3;
address comptrollerAddress;
address priceOracleAddress;
uint256 stor6;
uint256 stor7;
uint256 stor8;

function priceOracle() {
    return priceOracleAddress
}

function comptroller() {
    return comptrollerAddress
}

function kill() {
    if stor0 != msg.sender:
        revert with 0, 'Liquidator: Unauthorized'
    selfdestruct(stor0)
}

function _fallback() payable {
    revert
}

function recipientChange() {
    return stor1, stor2, bool(stor3)
}

function setGasThreshold(uint256 arg1) {
    require calldata.size - 4 >= 32
    if stor0 != msg.sender:
        revert with 0, 'Liquidator: Unauthorized'
    stor8 = arg1
}

function initiateRecipientChange(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if stor0 != msg.sender:
        revert with 0, 'Liquidator: Unauthorized'
    stor1 = arg1
    stor2 = block.timestamp + (24 * 3600)
    stor3 = 1
    return arg1
}

function confirmRecipientChange() {
    if stor0 != msg.sender:
        revert with 0, 'Liquidator: Unauthorized'
    if not stor3:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Liquidator: Initiate change first'
    if block.timestamp <= stor2:
        revert with 0, 'Liquidator: Wait longer'
    stor0 = stor1
    emit RecipientChanged(stor1);
    stor1 = 0
    stor2 = 0
    stor3 = 0
}

function withdraw(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if not arg1:
        call stor0 with:
           value eth.balance(this.address) wei
             gas 2300 * is_zero(value) wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        emit RevenueWithdrawn(stor0, address(arg1), eth.balance(this.address));
    else:
        require ext_code.size(arg1)
        staticcall arg1.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(arg1)
        call arg1.0xa9059cbb with:
             gas gas_remaining wei
            args stor0, ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == bool(ext_call.return_data[0])
        emit RevenueWithdrawn(stor0, address(arg1), ext_call.return_data[0]);
}

function setComptroller(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if stor0 != msg.sender:
        revert with 0, 'Liquidator: Unauthorized'
    comptrollerAddress = arg1
    require ext_code.size(arg1)
    staticcall arg1.oracle() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    priceOracleAddress = ext_call.return_data[12 len 20]
    require ext_code.size(comptrollerAddress)
    staticcall comptrollerAddress.closeFactorMantissa() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    stor6 = ext_call.return_data[0]
    require ext_code.size(comptrollerAddress)
    staticcall comptrollerAddress.liquidationIncentiveMantissa() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    stor7 = ext_call.return_data[0]
}

function liquidateSWithPrice(bytes[] arg1, bytes[] arg2, string[] arg3, address arg4, address arg5, address arg6) {
    require calldata.size - 4 >= 192
    require arg1 <= test266151307()
    require arg1 + 35 < calldata.size
    require arg1.length <= test266151307()
    require arg1 + (32 * arg1.length) + 36 <= calldata.size
    require arg2 <= test266151307()
    require arg2 + 35 < calldata.size
    require arg2.length <= test266151307()
    require arg2 + (32 * arg2.length) + 36 <= calldata.size
    require arg3 <= test266151307()
    require arg3 + 35 < calldata.size
    require arg3.length <= test266151307()
    require arg3 + (32 * arg3.length) + 36 <= calldata.size
    require arg4 == arg4
    require arg5 == arg5
    require arg6 == arg6
    require ext_code.size(comptrollerAddress)
    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
            gas gas_remaining wei
           args arg4
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 96
    if not ext_call.return_data[32]:
        require ext_code.size(arg5)
        call arg5.borrowBalanceCurrent(address rg1) with:
             gas gas_remaining wei
            args arg4
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(arg6)
        call arg6.balanceOfUnderlying(address rg1) with:
             gas gas_remaining wei
            args arg4
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require stor7
        require ext_code.size(priceOracleAddress)
        staticcall priceOracleAddress.getUnderlyingPrice(address rg1) with:
                gas gas_remaining wei
               args arg5
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(priceOracleAddress)
        staticcall priceOracleAddress.getUnderlyingPrice(address rg1) with:
                gas gas_remaining wei
               args arg6
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0]
        require ext_code.size(arg6)
        staticcall arg6.underlying() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        if ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 < 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0]:
            if arg5 == arg6:
                require ext_code.size(arg5)
                staticcall arg5.underlying() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                    revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                if ext_call.return_data[12 len 20] >= 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                    require ext_code.size(address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                    staticcall address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    require ext_code.size(address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                    staticcall address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    require ext_code.size(address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                            call address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(13 * ceil32(return_data.size)) + 673 len 5 * ceil32(return_data.size)]
                        else:
                            call address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(13 * ceil32(return_data.size)) + 673 len 5 * ceil32(return_data.size)]
                    else:
                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                            call address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(13 * ceil32(return_data.size)) + 673 len 5 * ceil32(return_data.size)]
                        else:
                            call address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(13 * ceil32(return_data.size)) + 673 len 5 * ceil32(return_data.size)]
                else:
                    if not ext_call.return_data[12 len 20]:
                        revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                    require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                    staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                    staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                            call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(13 * ceil32(return_data.size)) + 673 len 5 * ceil32(return_data.size)]
                        else:
                            call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(13 * ceil32(return_data.size)) + 673 len 5 * ceil32(return_data.size)]
                    else:
                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                            call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(13 * ceil32(return_data.size)) + 673 len 5 * ceil32(return_data.size)]
                        else:
                            call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(13 * ceil32(return_data.size)) + 673 len 5 * ceil32(return_data.size)]
            else:
                if 0x5c0401e81bc07ca70fad469b451682c0d747ef1c == arg6:
                    require ext_code.size(arg5)
                    staticcall arg5.underlying() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                        revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                    if ext_call.return_data[12 len 20] >= 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                        require ext_code.size(address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        staticcall address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        require ext_code.size(address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        staticcall address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        require ext_code.size(address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                            if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                call address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(13 * ceil32(return_data.size)) + 673 len 5 * ceil32(return_data.size)]
                            else:
                                call address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(13 * ceil32(return_data.size)) + 673 len 5 * ceil32(return_data.size)]
                        else:
                            if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                call address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(13 * ceil32(return_data.size)) + 673 len 5 * ceil32(return_data.size)]
                            else:
                                call address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(13 * ceil32(return_data.size)) + 673 len 5 * ceil32(return_data.size)]
                    else:
                        if not ext_call.return_data[12 len 20]:
                            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                        require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                            if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(13 * ceil32(return_data.size)) + 673 len 5 * ceil32(return_data.size)]
                            else:
                                call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(13 * ceil32(return_data.size)) + 673 len 5 * ceil32(return_data.size)]
                        else:
                            if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(13 * ceil32(return_data.size)) + 673 len 5 * ceil32(return_data.size)]
                            else:
                                call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(13 * ceil32(return_data.size)) + 673 len 5 * ceil32(return_data.size)]
                else:
                    if 0x5c0401e81bc07ca70fad469b451682c0d747ef1c == arg5:
                        if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == ext_call.return_data[12 len 20]:
                            revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                        if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 < ext_call.return_data[12 len 20]:
                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            staticcall address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                    gas gas_remaining wei
                            mem[(8 * ceil32(return_data.size)) + 413] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[(10 * ceil32(return_data.size)) + 413] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            staticcall address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                    gas gas_remaining wei
                                   args mem[(10 * ceil32(return_data.size)) + 417 len 16 * ceil32(return_data.size)]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                                if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                                    call address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(12 * ceil32(return_data.size)) + 673 len 20 * ceil32(return_data.size)]
                                else:
                                    call address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(12 * ceil32(return_data.size)) + 673 len 20 * ceil32(return_data.size)]
                            else:
                                if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                                    call address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(12 * ceil32(return_data.size)) + 673 len 20 * ceil32(return_data.size)]
                                else:
                                    call address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(12 * ceil32(return_data.size)) + 673 len 20 * ceil32(return_data.size)]
                        else:
                            if not ext_call.return_data[12 len 20]:
                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                    gas gas_remaining wei
                            mem[(8 * ceil32(return_data.size)) + 413] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[(10 * ceil32(return_data.size)) + 413] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                    gas gas_remaining wei
                                   args mem[(10 * ceil32(return_data.size)) + 417 len 16 * ceil32(return_data.size)]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                                if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                                    call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(12 * ceil32(return_data.size)) + 673 len 20 * ceil32(return_data.size)]
                                else:
                                    call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(12 * ceil32(return_data.size)) + 673 len 20 * ceil32(return_data.size)]
                            else:
                                if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                                    call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(12 * ceil32(return_data.size)) + 673 len 20 * ceil32(return_data.size)]
                                else:
                                    call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(12 * ceil32(return_data.size)) + 673 len 20 * ceil32(return_data.size)]
                    else:
                        require ext_code.size(arg5)
                        staticcall arg5.underlying() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                            revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                        if ext_call.return_data[12 len 20] >= address(ext_call.return_data[0]):
                            if not address(ext_call.return_data[0]):
                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                            if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                            if ext_call.return_data[12 len 20] < address(ext_call.return_data[0]):
                                if not ext_call.return_data[12 len 20]:
                                    revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                            else:
                                if not address(ext_call.return_data[0]):
                                    revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                            if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                            if not address(ext_call.return_data[0]):
                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                            if 100000 * ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0] <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(14 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                                    else:
                                        call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(14 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                                else:
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(14 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                                    else:
                                        call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(14 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                            else:
                                require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).token0() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).token1() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                require ext_code.size(address(ext_call.return_data[0]))
                                if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(15 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                                    else:
                                        call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(15 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                                else:
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(15 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                                    else:
                                        call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(15 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                        else:
                            if not ext_call.return_data[12 len 20]:
                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                            if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                            if ext_call.return_data[12 len 20] < address(ext_call.return_data[0]):
                                if not ext_call.return_data[12 len 20]:
                                    revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                            else:
                                if not address(ext_call.return_data[0]):
                                    revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                            if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                            if not address(ext_call.return_data[0]):
                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                            if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                if 100000 * ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0] <= 985 * Mask(112, 0, ext_call.return_data[0]):
                                    require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(14 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                                        else:
                                            call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(14 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                                    else:
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(14 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                                        else:
                                            call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(14 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                                else:
                                    require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                    staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                            gas gas_remaining wei
                                           args address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).token0() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).token1() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(15 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                                        else:
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(15 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                                    else:
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(15 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                                        else:
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(15 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                            else:
                                if 100000 * ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0] <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                    require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(14 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                                        else:
                                            call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(14 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                                    else:
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(14 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                                        else:
                                            call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(14 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                                else:
                                    require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                    staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                            gas gas_remaining wei
                                           args address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).token0() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).token1() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(15 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                                        else:
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(15 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                                    else:
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, ext_call.return_data[0] * ext_call.return_data[0] * stor6 / 10^18 / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(15 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                                        else:
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(15 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
        else:
            if arg5 == arg6:
                require ext_code.size(arg5)
                staticcall arg5.underlying() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                    revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                if ext_call.return_data[12 len 20] >= 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                    require ext_code.size(address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                    staticcall address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    require ext_code.size(address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                    staticcall address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    require ext_code.size(address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                            call address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(13 * ceil32(return_data.size)) + 673 len 5 * ceil32(return_data.size)]
                        else:
                            call address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(13 * ceil32(return_data.size)) + 673 len 5 * ceil32(return_data.size)]
                    else:
                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                            call address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(13 * ceil32(return_data.size)) + 673 len 5 * ceil32(return_data.size)]
                        else:
                            call address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(13 * ceil32(return_data.size)) + 673 len 5 * ceil32(return_data.size)]
                else:
                    if not ext_call.return_data[12 len 20]:
                        revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                    require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                    staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                    staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                            call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(13 * ceil32(return_data.size)) + 673 len 5 * ceil32(return_data.size)]
                        else:
                            call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(13 * ceil32(return_data.size)) + 673 len 5 * ceil32(return_data.size)]
                    else:
                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                            call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(13 * ceil32(return_data.size)) + 673 len 5 * ceil32(return_data.size)]
                        else:
                            call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(13 * ceil32(return_data.size)) + 673 len 5 * ceil32(return_data.size)]
            else:
                if 0x5c0401e81bc07ca70fad469b451682c0d747ef1c == arg6:
                    require ext_code.size(arg5)
                    staticcall arg5.underlying() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                        revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                    if ext_call.return_data[12 len 20] >= 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                        require ext_code.size(address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        staticcall address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        require ext_code.size(address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        staticcall address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        require ext_code.size(address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                            if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                call address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(13 * ceil32(return_data.size)) + 673 len 5 * ceil32(return_data.size)]
                            else:
                                call address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(13 * ceil32(return_data.size)) + 673 len 5 * ceil32(return_data.size)]
                        else:
                            if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                call address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(13 * ceil32(return_data.size)) + 673 len 5 * ceil32(return_data.size)]
                            else:
                                call address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(13 * ceil32(return_data.size)) + 673 len 5 * ceil32(return_data.size)]
                    else:
                        if not ext_call.return_data[12 len 20]:
                            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                        require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                            if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(13 * ceil32(return_data.size)) + 673 len 5 * ceil32(return_data.size)]
                            else:
                                call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(13 * ceil32(return_data.size)) + 673 len 5 * ceil32(return_data.size)]
                        else:
                            if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(13 * ceil32(return_data.size)) + 673 len 5 * ceil32(return_data.size)]
                            else:
                                call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(13 * ceil32(return_data.size)) + 673 len 5 * ceil32(return_data.size)]
                else:
                    if 0x5c0401e81bc07ca70fad469b451682c0d747ef1c == arg5:
                        if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == ext_call.return_data[12 len 20]:
                            revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                        if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 < ext_call.return_data[12 len 20]:
                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            staticcall address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                    gas gas_remaining wei
                            mem[(8 * ceil32(return_data.size)) + 413] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[(10 * ceil32(return_data.size)) + 413] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            staticcall address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                    gas gas_remaining wei
                                   args mem[(10 * ceil32(return_data.size)) + 417 len 16 * ceil32(return_data.size)]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                                if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                                    call address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(12 * ceil32(return_data.size)) + 673 len 20 * ceil32(return_data.size)]
                                else:
                                    call address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(12 * ceil32(return_data.size)) + 673 len 20 * ceil32(return_data.size)]
                            else:
                                if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                                    call address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(12 * ceil32(return_data.size)) + 673 len 20 * ceil32(return_data.size)]
                                else:
                                    call address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(12 * ceil32(return_data.size)) + 673 len 20 * ceil32(return_data.size)]
                        else:
                            if not ext_call.return_data[12 len 20]:
                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                    gas gas_remaining wei
                            mem[(8 * ceil32(return_data.size)) + 413] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[(10 * ceil32(return_data.size)) + 413] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                    gas gas_remaining wei
                                   args mem[(10 * ceil32(return_data.size)) + 417 len 16 * ceil32(return_data.size)]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                                if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                                    call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(12 * ceil32(return_data.size)) + 673 len 20 * ceil32(return_data.size)]
                                else:
                                    call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(12 * ceil32(return_data.size)) + 673 len 20 * ceil32(return_data.size)]
                            else:
                                if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                                    call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(12 * ceil32(return_data.size)) + 673 len 20 * ceil32(return_data.size)]
                                else:
                                    call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(12 * ceil32(return_data.size)) + 673 len 20 * ceil32(return_data.size)]
                    else:
                        require ext_code.size(arg5)
                        staticcall arg5.underlying() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                            revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                        if ext_call.return_data[12 len 20] >= address(ext_call.return_data[0]):
                            if not address(ext_call.return_data[0]):
                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                            if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                            if ext_call.return_data[12 len 20] < address(ext_call.return_data[0]):
                                if not ext_call.return_data[12 len 20]:
                                    revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                            else:
                                if not address(ext_call.return_data[0]):
                                    revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                            if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                            if not address(ext_call.return_data[0]):
                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                            if 100000 * 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0] <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(14 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                                    else:
                                        call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(14 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                                else:
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(14 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                                    else:
                                        call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(14 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                            else:
                                require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).token0() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).token1() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                require ext_code.size(address(ext_call.return_data[0]))
                                if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(15 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                                    else:
                                        call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(15 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                                else:
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(15 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                                    else:
                                        call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(15 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                        else:
                            if not ext_call.return_data[12 len 20]:
                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                            if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                            if ext_call.return_data[12 len 20] < address(ext_call.return_data[0]):
                                if not ext_call.return_data[12 len 20]:
                                    revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                            else:
                                if not address(ext_call.return_data[0]):
                                    revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                            if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                            if not address(ext_call.return_data[0]):
                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                            if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                if 100000 * 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0] <= 985 * Mask(112, 0, ext_call.return_data[0]):
                                    require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(14 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                                        else:
                                            call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(14 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                                    else:
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(14 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                                        else:
                                            call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(14 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                                else:
                                    require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                    staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                            gas gas_remaining wei
                                           args address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).token0() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).token1() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(15 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                                        else:
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(15 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                                    else:
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(15 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                                        else:
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(15 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                            else:
                                if 100000 * 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0] <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                    require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(14 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                                        else:
                                            call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(14 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                                    else:
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(14 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                                        else:
                                            call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(14 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                                else:
                                    require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                    staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                            gas gas_remaining wei
                                           args address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).token0() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).token1() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(15 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                                        else:
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(15 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                                    else:
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 10^18 * ext_call.return_data[0] / stor7 * ext_call.return_data[0] / ext_call.return_data[0], address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(15 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
                                        else:
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, address(this.address), 128, 96, address(arg4), address(arg5), arg6, mem[(15 * ceil32(return_data.size)) + 862 len 5 * ceil32(return_data.size)]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
}

function liquidate(address arg1, address arg2, address arg3, uint256 arg4) {
    require calldata.size - 4 >= 128
    require arg1 == arg1
    require arg2 == arg2
    require arg3 == arg3
    require ext_code.size(arg3)
    staticcall arg3.underlying() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    if arg2 == arg3:
        require ext_code.size(arg2)
        staticcall arg2.underlying() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
            revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
        if ext_call.return_data[12 len 20] >= 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
            staticcall address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                    gas gas_remaining wei
            mem[(2 * ceil32(return_data.size)) + 413] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            mem[(4 * ceil32(return_data.size)) + 413] = 0xd21220a700000000000000000000000000000000000000000000000000000000
            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
            staticcall address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                    gas gas_remaining wei
                   args mem[(4 * ceil32(return_data.size)) + 417 len 5 * ceil32(return_data.size)]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                mem[(4 * ceil32(return_data.size)) + 417] = arg4
                if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                    mem[(4 * ceil32(return_data.size)) + 449] = arg4
                else:
                    mem[(4 * ceil32(return_data.size)) + 449] = 0
            else:
                mem[(4 * ceil32(return_data.size)) + 417] = 0
                if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                    mem[(4 * ceil32(return_data.size)) + 449] = arg4
                else:
                    mem[(4 * ceil32(return_data.size)) + 449] = 0
            mem[(4 * ceil32(return_data.size)) + 481] = this.address
            mem[(4 * ceil32(return_data.size)) + 513] = 128
            mem[(4 * ceil32(return_data.size)) + 545] = 96
            mem[(4 * ceil32(return_data.size)) + 577 len 96] = address(arg1), address(arg2), arg3
            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
            call address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                 gas gas_remaining wei
                args mem[(4 * ceil32(return_data.size)) + 417 len (7 * ceil32(return_data.size)) + 256]
        else:
            if not ext_call.return_data[12 len 20]:
                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
            staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                    gas gas_remaining wei
            mem[(2 * ceil32(return_data.size)) + 413] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            mem[(4 * ceil32(return_data.size)) + 413] = 0xd21220a700000000000000000000000000000000000000000000000000000000
            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
            staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                    gas gas_remaining wei
                   args mem[(4 * ceil32(return_data.size)) + 417 len 5 * ceil32(return_data.size)]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                mem[(4 * ceil32(return_data.size)) + 417] = arg4
                if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                    mem[(4 * ceil32(return_data.size)) + 449] = arg4
                else:
                    mem[(4 * ceil32(return_data.size)) + 449] = 0
            else:
                mem[(4 * ceil32(return_data.size)) + 417] = 0
                if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                    mem[(4 * ceil32(return_data.size)) + 449] = arg4
                else:
                    mem[(4 * ceil32(return_data.size)) + 449] = 0
            mem[(4 * ceil32(return_data.size)) + 481] = this.address
            mem[(4 * ceil32(return_data.size)) + 513] = 128
            mem[(4 * ceil32(return_data.size)) + 545] = 96
            mem[(4 * ceil32(return_data.size)) + 577 len 96] = address(arg1), address(arg2), arg3
            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
            call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                 gas gas_remaining wei
                args mem[(4 * ceil32(return_data.size)) + 417 len (7 * ceil32(return_data.size)) + 256]
    else:
        if 0x5c0401e81bc07ca70fad469b451682c0d747ef1c == arg3:
            require ext_code.size(arg2)
            staticcall arg2.underlying() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
            if ext_call.return_data[12 len 20] >= 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                staticcall address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                        gas gas_remaining wei
                mem[(2 * ceil32(return_data.size)) + 413] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                mem[(4 * ceil32(return_data.size)) + 413] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                staticcall address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                        gas gas_remaining wei
                       args mem[(4 * ceil32(return_data.size)) + 417 len 5 * ceil32(return_data.size)]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                    mem[(4 * ceil32(return_data.size)) + 417] = arg4
                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                        mem[(4 * ceil32(return_data.size)) + 449] = arg4
                    else:
                        mem[(4 * ceil32(return_data.size)) + 449] = 0
                else:
                    mem[(4 * ceil32(return_data.size)) + 417] = 0
                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                        mem[(4 * ceil32(return_data.size)) + 449] = arg4
                    else:
                        mem[(4 * ceil32(return_data.size)) + 449] = 0
                mem[(4 * ceil32(return_data.size)) + 481] = this.address
                mem[(4 * ceil32(return_data.size)) + 513] = 128
                mem[(4 * ceil32(return_data.size)) + 545] = 96
                mem[(4 * ceil32(return_data.size)) + 577 len 96] = address(arg1), address(arg2), arg3
                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                call address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                     gas gas_remaining wei
                    args mem[(4 * ceil32(return_data.size)) + 417 len (7 * ceil32(return_data.size)) + 256]
            else:
                if not ext_call.return_data[12 len 20]:
                    revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                        gas gas_remaining wei
                mem[(2 * ceil32(return_data.size)) + 413] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                mem[(4 * ceil32(return_data.size)) + 413] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                        gas gas_remaining wei
                       args mem[(4 * ceil32(return_data.size)) + 417 len 5 * ceil32(return_data.size)]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                    mem[(4 * ceil32(return_data.size)) + 417] = arg4
                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                        mem[(4 * ceil32(return_data.size)) + 449] = arg4
                    else:
                        mem[(4 * ceil32(return_data.size)) + 449] = 0
                else:
                    mem[(4 * ceil32(return_data.size)) + 417] = 0
                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                        mem[(4 * ceil32(return_data.size)) + 449] = arg4
                    else:
                        mem[(4 * ceil32(return_data.size)) + 449] = 0
                mem[(4 * ceil32(return_data.size)) + 481] = this.address
                mem[(4 * ceil32(return_data.size)) + 513] = 128
                mem[(4 * ceil32(return_data.size)) + 545] = 96
                mem[(4 * ceil32(return_data.size)) + 577 len 96] = address(arg1), address(arg2), arg3
                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                     gas gas_remaining wei
                    args mem[(4 * ceil32(return_data.size)) + 417 len (7 * ceil32(return_data.size)) + 256]
        else:
            if 0x5c0401e81bc07ca70fad469b451682c0d747ef1c == arg2:
                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == ext_call.return_data[12 len 20]:
                    revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 < ext_call.return_data[12 len 20]:
                    require ext_code.size(address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                    staticcall address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                            gas gas_remaining wei
                    mem[ceil32(return_data.size) + 413] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    mem[(2 * ceil32(return_data.size)) + 413] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                    require ext_code.size(address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                    staticcall address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                            gas gas_remaining wei
                           args mem[(2 * ceil32(return_data.size)) + 417 len ceil32(return_data.size)]
                    mem[(2 * ceil32(return_data.size)) + 413] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                        mem[(4 * ceil32(return_data.size)) + 417] = arg4
                        if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                            mem[(4 * ceil32(return_data.size)) + 449] = arg4
                        else:
                            mem[(4 * ceil32(return_data.size)) + 449] = 0
                    else:
                        mem[(4 * ceil32(return_data.size)) + 417] = 0
                        if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                            mem[(4 * ceil32(return_data.size)) + 449] = arg4
                        else:
                            mem[(4 * ceil32(return_data.size)) + 449] = 0
                    mem[(4 * ceil32(return_data.size)) + 481] = this.address
                    mem[(4 * ceil32(return_data.size)) + 513] = 128
                    mem[(4 * ceil32(return_data.size)) + 545] = 96
                    mem[(4 * ceil32(return_data.size)) + 577 len 96] = address(arg1), address(arg2), arg3
                    require ext_code.size(address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                    call address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                         gas gas_remaining wei
                        args mem[(4 * ceil32(return_data.size)) + 417 len (5 * ceil32(return_data.size)) + 256]
                else:
                    if not ext_call.return_data[12 len 20]:
                        revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                    require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                    staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                            gas gas_remaining wei
                    mem[ceil32(return_data.size) + 413] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    mem[(2 * ceil32(return_data.size)) + 413] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                    require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                    staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                            gas gas_remaining wei
                           args mem[(2 * ceil32(return_data.size)) + 417 len ceil32(return_data.size)]
                    mem[(2 * ceil32(return_data.size)) + 413] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                        mem[(4 * ceil32(return_data.size)) + 417] = arg4
                        if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                            mem[(4 * ceil32(return_data.size)) + 449] = arg4
                        else:
                            mem[(4 * ceil32(return_data.size)) + 449] = 0
                    else:
                        mem[(4 * ceil32(return_data.size)) + 417] = 0
                        if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                            mem[(4 * ceil32(return_data.size)) + 449] = arg4
                        else:
                            mem[(4 * ceil32(return_data.size)) + 449] = 0
                    mem[(4 * ceil32(return_data.size)) + 481] = this.address
                    mem[(4 * ceil32(return_data.size)) + 513] = 128
                    mem[(4 * ceil32(return_data.size)) + 545] = 96
                    mem[(4 * ceil32(return_data.size)) + 577 len 96] = address(arg1), address(arg2), arg3
                    require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                    call address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                         gas gas_remaining wei
                        args mem[(4 * ceil32(return_data.size)) + 417 len (5 * ceil32(return_data.size)) + 256]
            else:
                require ext_code.size(arg2)
                staticcall arg2.underlying() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                    revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                if ext_call.return_data[12 len 20] >= address(ext_call.return_data[0]):
                    if not address(ext_call.return_data[0]):
                        revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                        revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                    if ext_call.return_data[12 len 20] < address(ext_call.return_data[0]):
                        if not ext_call.return_data[12 len 20]:
                            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                        require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                                gas gas_remaining wei
                        mem[(2 * ceil32(return_data.size)) + 285 len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 96
                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                        if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                            mem[(4 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(4 * ceil32(return_data.size)) + 289] = 32
                            mem[(4 * ceil32(return_data.size)) + 321] = 36
                            mem[(4 * ceil32(return_data.size)) + 353] = 'PangolinLibrary: IDENTICAL_ADDRE'
                            mem[(4 * ceil32(return_data.size)) + 385] = 0x5353455300000000000000000000000000000000000000000000000000000000
                            revert with memory
                              from (4 * ceil32(return_data.size)) + 285
                               len (5 * ceil32(return_data.size)) + 132
                        if not address(ext_call.return_data[0]):
                            mem[(4 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(4 * ceil32(return_data.size)) + 289] = 32
                            mem[(4 * ceil32(return_data.size)) + 321] = 29
                            mem[(4 * ceil32(return_data.size)) + 353] = 'PangolinLibrary: ZERO_ADDRESS'
                            revert with memory
                              from (4 * ceil32(return_data.size)) + 285
                               len (5 * ceil32(return_data.size)) + 100
                        mem[(4 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
                        mem[(4 * ceil32(return_data.size)) + 337] = address(ext_call.return_data[0])
                        if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                            _437 = sha3(mem[(4 * ceil32(return_data.size)) + 317 len (5 * ceil32(return_data.size)) + 40])
                            if 100000 * arg4 <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(mem[(4 * ceil32(return_data.size)) + 317 len (5 * ceil32(return_data.size)) + 40]), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                staticcall address(sha3(0, 17269419903419772280, sha3(mem[(4 * ceil32(return_data.size)) + 317 len (5 * ceil32(return_data.size)) + 40]), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                        gas gas_remaining wei
                                mem[(4 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(6 * ceil32(return_data.size)) + 602] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                require ext_code.size(address(sha3(0, 17269419903419772280, _437, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                staticcall address(sha3(0, 17269419903419772280, _437, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                        gas gas_remaining wei
                                       args mem[(6 * ceil32(return_data.size)) + 606 len 8 * ceil32(return_data.size)]
                                mem[(6 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 606] = arg4
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        mem[(8 * ceil32(return_data.size)) + 638] = arg4
                                    else:
                                        mem[(8 * ceil32(return_data.size)) + 638] = 0
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 606] = 0
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        mem[(8 * ceil32(return_data.size)) + 638] = arg4
                                    else:
                                        mem[(8 * ceil32(return_data.size)) + 638] = 0
                                mem[(8 * ceil32(return_data.size)) + 670] = this.address
                                mem[(8 * ceil32(return_data.size)) + 702] = 128
                                mem[(8 * ceil32(return_data.size)) + 734] = 96
                                mem[(8 * ceil32(return_data.size)) + 766 len 96] = address(arg1), address(arg2), arg3
                                require ext_code.size(address(sha3(0, 17269419903419772280, _437, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                call address(sha3(0, 17269419903419772280, _437, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 606 len (13 * ceil32(return_data.size)) + 256]
                            else:
                                mem[(4 * ceil32(return_data.size)) + 478] = address(ext_call.return_data[0])
                                mem[(4 * ceil32(return_data.size)) + 510] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(6 * ceil32(return_data.size)) + 506] = arg1
                                mem[(6 * ceil32(return_data.size)) + 538] = arg2
                                mem[(6 * ceil32(return_data.size)) + 570] = arg3
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).token0() with:
                                        gas gas_remaining wei
                                mem[(6 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).token1() with:
                                        gas gas_remaining wei
                                mem[(7 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(9 * ceil32(return_data.size)) + 602] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                    mem[(9 * ceil32(return_data.size)) + 606] = arg4
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        mem[(9 * ceil32(return_data.size)) + 638] = arg4
                                        mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(9 * ceil32(return_data.size)) + 702] = 128
                                        mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                        mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                        if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                            mem[(18 * ceil32(return_data.size)) + 862] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args arg4, arg4, address(this.address), Array(len=(8 * ceil32(return_data.size)) + 96, data=mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3])
                                    else:
                                        mem[(9 * ceil32(return_data.size)) + 638] = 0
                                        mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(9 * ceil32(return_data.size)) + 702] = 128
                                        mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                        mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                        if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                            mem[(18 * ceil32(return_data.size)) + 862] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args arg4, 0, address(this.address), 128, (8 * ceil32(return_data.size)) + 96, mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3]
                                else:
                                    mem[(9 * ceil32(return_data.size)) + 606] = 0
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        mem[(9 * ceil32(return_data.size)) + 638] = arg4
                                        mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(9 * ceil32(return_data.size)) + 702] = 128
                                        mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                        mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                        if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                            mem[(18 * ceil32(return_data.size)) + 862] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, arg4, address(this.address), 128, (8 * ceil32(return_data.size)) + 96, mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3]
                                    else:
                                        mem[(9 * ceil32(return_data.size)) + 638] = 0
                                        mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(9 * ceil32(return_data.size)) + 702] = 128
                                        mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                        mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                        if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                            mem[(18 * ceil32(return_data.size)) + 862] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 0, address(this.address), 128, (8 * ceil32(return_data.size)) + 96, mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3]
                        else:
                            _441 = sha3(mem[(4 * ceil32(return_data.size)) + 317 len (5 * ceil32(return_data.size)) + 40])
                            if 100000 * arg4 <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(mem[(4 * ceil32(return_data.size)) + 317 len (5 * ceil32(return_data.size)) + 40]), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                staticcall address(sha3(0, 17269419903419772280, sha3(mem[(4 * ceil32(return_data.size)) + 317 len (5 * ceil32(return_data.size)) + 40]), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                        gas gas_remaining wei
                                mem[(4 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(6 * ceil32(return_data.size)) + 602] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                require ext_code.size(address(sha3(0, 17269419903419772280, _441, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                staticcall address(sha3(0, 17269419903419772280, _441, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                        gas gas_remaining wei
                                       args mem[(6 * ceil32(return_data.size)) + 606 len 8 * ceil32(return_data.size)]
                                mem[(6 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 606] = arg4
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        mem[(8 * ceil32(return_data.size)) + 638] = arg4
                                    else:
                                        mem[(8 * ceil32(return_data.size)) + 638] = 0
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 606] = 0
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        mem[(8 * ceil32(return_data.size)) + 638] = arg4
                                    else:
                                        mem[(8 * ceil32(return_data.size)) + 638] = 0
                                mem[(8 * ceil32(return_data.size)) + 670] = this.address
                                mem[(8 * ceil32(return_data.size)) + 702] = 128
                                mem[(8 * ceil32(return_data.size)) + 734] = 96
                                mem[(8 * ceil32(return_data.size)) + 766 len 96] = address(arg1), address(arg2), arg3
                                require ext_code.size(address(sha3(0, 17269419903419772280, _441, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                call address(sha3(0, 17269419903419772280, _441, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 606 len (13 * ceil32(return_data.size)) + 256]
                            else:
                                mem[(4 * ceil32(return_data.size)) + 478] = address(ext_call.return_data[0])
                                mem[(4 * ceil32(return_data.size)) + 510] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(6 * ceil32(return_data.size)) + 506] = arg1
                                mem[(6 * ceil32(return_data.size)) + 538] = arg2
                                mem[(6 * ceil32(return_data.size)) + 570] = arg3
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).token0() with:
                                        gas gas_remaining wei
                                mem[(6 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).token1() with:
                                        gas gas_remaining wei
                                mem[(7 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(9 * ceil32(return_data.size)) + 602] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                    mem[(9 * ceil32(return_data.size)) + 606] = arg4
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        mem[(9 * ceil32(return_data.size)) + 638] = arg4
                                        mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(9 * ceil32(return_data.size)) + 702] = 128
                                        mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                        mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                        if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                            mem[(18 * ceil32(return_data.size)) + 862] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args arg4, arg4, address(this.address), Array(len=(8 * ceil32(return_data.size)) + 96, data=mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3])
                                    else:
                                        mem[(9 * ceil32(return_data.size)) + 638] = 0
                                        mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(9 * ceil32(return_data.size)) + 702] = 128
                                        mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                        mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                        if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                            mem[(18 * ceil32(return_data.size)) + 862] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args arg4, 0, address(this.address), 128, (8 * ceil32(return_data.size)) + 96, mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3]
                                else:
                                    mem[(9 * ceil32(return_data.size)) + 606] = 0
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        mem[(9 * ceil32(return_data.size)) + 638] = arg4
                                        mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(9 * ceil32(return_data.size)) + 702] = 128
                                        mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                        mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                        if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                            mem[(18 * ceil32(return_data.size)) + 862] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, arg4, address(this.address), 128, (8 * ceil32(return_data.size)) + 96, mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3]
                                    else:
                                        mem[(9 * ceil32(return_data.size)) + 638] = 0
                                        mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(9 * ceil32(return_data.size)) + 702] = 128
                                        mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                        mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                        if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                            mem[(18 * ceil32(return_data.size)) + 862] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 0, address(this.address), 128, (8 * ceil32(return_data.size)) + 96, mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3]
                    else:
                        if not address(ext_call.return_data[0]):
                            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                        require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                                gas gas_remaining wei
                        mem[(2 * ceil32(return_data.size)) + 285 len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 96
                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                        if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                            mem[(4 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(4 * ceil32(return_data.size)) + 289] = 32
                            mem[(4 * ceil32(return_data.size)) + 321] = 36
                            mem[(4 * ceil32(return_data.size)) + 353] = 'PangolinLibrary: IDENTICAL_ADDRE'
                            mem[(4 * ceil32(return_data.size)) + 385] = 0x5353455300000000000000000000000000000000000000000000000000000000
                            revert with memory
                              from (4 * ceil32(return_data.size)) + 285
                               len (5 * ceil32(return_data.size)) + 132
                        if not address(ext_call.return_data[0]):
                            mem[(4 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(4 * ceil32(return_data.size)) + 289] = 32
                            mem[(4 * ceil32(return_data.size)) + 321] = 29
                            mem[(4 * ceil32(return_data.size)) + 353] = 'PangolinLibrary: ZERO_ADDRESS'
                            revert with memory
                              from (4 * ceil32(return_data.size)) + 285
                               len (5 * ceil32(return_data.size)) + 100
                        mem[(4 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
                        mem[(4 * ceil32(return_data.size)) + 337] = address(ext_call.return_data[0])
                        if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                            _445 = sha3(mem[(4 * ceil32(return_data.size)) + 317 len (5 * ceil32(return_data.size)) + 40])
                            if 100000 * arg4 <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(mem[(4 * ceil32(return_data.size)) + 317 len (5 * ceil32(return_data.size)) + 40]), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                staticcall address(sha3(0, 17269419903419772280, sha3(mem[(4 * ceil32(return_data.size)) + 317 len (5 * ceil32(return_data.size)) + 40]), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                        gas gas_remaining wei
                                mem[(4 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(6 * ceil32(return_data.size)) + 602] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                require ext_code.size(address(sha3(0, 17269419903419772280, _445, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                staticcall address(sha3(0, 17269419903419772280, _445, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                        gas gas_remaining wei
                                       args mem[(6 * ceil32(return_data.size)) + 606 len 8 * ceil32(return_data.size)]
                                mem[(6 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 606] = arg4
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        mem[(8 * ceil32(return_data.size)) + 638] = arg4
                                    else:
                                        mem[(8 * ceil32(return_data.size)) + 638] = 0
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 606] = 0
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        mem[(8 * ceil32(return_data.size)) + 638] = arg4
                                    else:
                                        mem[(8 * ceil32(return_data.size)) + 638] = 0
                                mem[(8 * ceil32(return_data.size)) + 670] = this.address
                                mem[(8 * ceil32(return_data.size)) + 702] = 128
                                mem[(8 * ceil32(return_data.size)) + 734] = 96
                                mem[(8 * ceil32(return_data.size)) + 766 len 96] = address(arg1), address(arg2), arg3
                                require ext_code.size(address(sha3(0, 17269419903419772280, _445, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                call address(sha3(0, 17269419903419772280, _445, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 606 len (13 * ceil32(return_data.size)) + 256]
                            else:
                                mem[(4 * ceil32(return_data.size)) + 478] = address(ext_call.return_data[0])
                                mem[(4 * ceil32(return_data.size)) + 510] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(6 * ceil32(return_data.size)) + 506] = arg1
                                mem[(6 * ceil32(return_data.size)) + 538] = arg2
                                mem[(6 * ceil32(return_data.size)) + 570] = arg3
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).token0() with:
                                        gas gas_remaining wei
                                mem[(6 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).token1() with:
                                        gas gas_remaining wei
                                mem[(7 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(9 * ceil32(return_data.size)) + 602] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                    mem[(9 * ceil32(return_data.size)) + 606] = arg4
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        mem[(9 * ceil32(return_data.size)) + 638] = arg4
                                        mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(9 * ceil32(return_data.size)) + 702] = 128
                                        mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                        mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                        if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                            mem[(18 * ceil32(return_data.size)) + 862] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args arg4, arg4, address(this.address), Array(len=(8 * ceil32(return_data.size)) + 96, data=mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3])
                                    else:
                                        mem[(9 * ceil32(return_data.size)) + 638] = 0
                                        mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(9 * ceil32(return_data.size)) + 702] = 128
                                        mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                        mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                        if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                            mem[(18 * ceil32(return_data.size)) + 862] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args arg4, 0, address(this.address), 128, (8 * ceil32(return_data.size)) + 96, mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3]
                                else:
                                    mem[(9 * ceil32(return_data.size)) + 606] = 0
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        mem[(9 * ceil32(return_data.size)) + 638] = arg4
                                        mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(9 * ceil32(return_data.size)) + 702] = 128
                                        mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                        mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                        if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                            mem[(18 * ceil32(return_data.size)) + 862] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, arg4, address(this.address), 128, (8 * ceil32(return_data.size)) + 96, mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3]
                                    else:
                                        mem[(9 * ceil32(return_data.size)) + 638] = 0
                                        mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(9 * ceil32(return_data.size)) + 702] = 128
                                        mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                        mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                        if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                            mem[(18 * ceil32(return_data.size)) + 862] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 0, address(this.address), 128, (8 * ceil32(return_data.size)) + 96, mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3]
                        else:
                            _449 = sha3(mem[(4 * ceil32(return_data.size)) + 317 len (5 * ceil32(return_data.size)) + 40])
                            if 100000 * arg4 <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(mem[(4 * ceil32(return_data.size)) + 317 len (5 * ceil32(return_data.size)) + 40]), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                staticcall address(sha3(0, 17269419903419772280, sha3(mem[(4 * ceil32(return_data.size)) + 317 len (5 * ceil32(return_data.size)) + 40]), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                        gas gas_remaining wei
                                mem[(4 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(6 * ceil32(return_data.size)) + 602] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                require ext_code.size(address(sha3(0, 17269419903419772280, _449, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                staticcall address(sha3(0, 17269419903419772280, _449, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                        gas gas_remaining wei
                                       args mem[(6 * ceil32(return_data.size)) + 606 len 8 * ceil32(return_data.size)]
                                mem[(6 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 606] = arg4
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        mem[(8 * ceil32(return_data.size)) + 638] = arg4
                                    else:
                                        mem[(8 * ceil32(return_data.size)) + 638] = 0
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 606] = 0
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        mem[(8 * ceil32(return_data.size)) + 638] = arg4
                                    else:
                                        mem[(8 * ceil32(return_data.size)) + 638] = 0
                                mem[(8 * ceil32(return_data.size)) + 670] = this.address
                                mem[(8 * ceil32(return_data.size)) + 702] = 128
                                mem[(8 * ceil32(return_data.size)) + 734] = 96
                                mem[(8 * ceil32(return_data.size)) + 766 len 96] = address(arg1), address(arg2), arg3
                                require ext_code.size(address(sha3(0, 17269419903419772280, _449, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                call address(sha3(0, 17269419903419772280, _449, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 606 len (13 * ceil32(return_data.size)) + 256]
                            else:
                                mem[(4 * ceil32(return_data.size)) + 478] = address(ext_call.return_data[0])
                                mem[(4 * ceil32(return_data.size)) + 510] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                        gas gas_remaining wei
                                       args address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(6 * ceil32(return_data.size)) + 506] = arg1
                                mem[(6 * ceil32(return_data.size)) + 538] = arg2
                                mem[(6 * ceil32(return_data.size)) + 570] = arg3
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).token0() with:
                                        gas gas_remaining wei
                                mem[(6 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).token1() with:
                                        gas gas_remaining wei
                                mem[(7 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[(9 * ceil32(return_data.size)) + 602] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                    mem[(9 * ceil32(return_data.size)) + 606] = arg4
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        mem[(9 * ceil32(return_data.size)) + 638] = arg4
                                        mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(9 * ceil32(return_data.size)) + 702] = 128
                                        mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                        mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                        if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                            mem[(18 * ceil32(return_data.size)) + 862] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args arg4, arg4, address(this.address), Array(len=(8 * ceil32(return_data.size)) + 96, data=mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3])
                                    else:
                                        mem[(9 * ceil32(return_data.size)) + 638] = 0
                                        mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(9 * ceil32(return_data.size)) + 702] = 128
                                        mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                        mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                        if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                            mem[(18 * ceil32(return_data.size)) + 862] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args arg4, 0, address(this.address), 128, (8 * ceil32(return_data.size)) + 96, mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3]
                                else:
                                    mem[(9 * ceil32(return_data.size)) + 606] = 0
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        mem[(9 * ceil32(return_data.size)) + 638] = arg4
                                        mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(9 * ceil32(return_data.size)) + 702] = 128
                                        mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                        mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                        if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                            mem[(18 * ceil32(return_data.size)) + 862] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, arg4, address(this.address), 128, (8 * ceil32(return_data.size)) + 96, mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3]
                                    else:
                                        mem[(9 * ceil32(return_data.size)) + 638] = 0
                                        mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                        mem[(9 * ceil32(return_data.size)) + 702] = 128
                                        mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                        mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                        if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                            mem[(18 * ceil32(return_data.size)) + 862] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, 0, address(this.address), 128, (8 * ceil32(return_data.size)) + 96, mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3]
                else:
                    if not ext_call.return_data[12 len 20]:
                        revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                        revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                    if ext_call.return_data[12 len 20] < address(ext_call.return_data[0]):
                        if not ext_call.return_data[12 len 20]:
                            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                        require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                                gas gas_remaining wei
                        mem[(2 * ceil32(return_data.size)) + 285 len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 96
                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                        if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                            mem[(4 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(4 * ceil32(return_data.size)) + 289] = 32
                            mem[(4 * ceil32(return_data.size)) + 321] = 36
                            mem[(4 * ceil32(return_data.size)) + 353] = 'PangolinLibrary: IDENTICAL_ADDRE'
                            mem[(4 * ceil32(return_data.size)) + 385] = 0x5353455300000000000000000000000000000000000000000000000000000000
                            revert with memory
                              from (4 * ceil32(return_data.size)) + 285
                               len (5 * ceil32(return_data.size)) + 132
                        if not address(ext_call.return_data[0]):
                            mem[(4 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(4 * ceil32(return_data.size)) + 289] = 32
                            mem[(4 * ceil32(return_data.size)) + 321] = 29
                            mem[(4 * ceil32(return_data.size)) + 353] = 'PangolinLibrary: ZERO_ADDRESS'
                            revert with memory
                              from (4 * ceil32(return_data.size)) + 285
                               len (5 * ceil32(return_data.size)) + 100
                        mem[(4 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
                        mem[(4 * ceil32(return_data.size)) + 337] = address(ext_call.return_data[0])
                        if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                            if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                                _405 = sha3(mem[(4 * ceil32(return_data.size)) + 317 len (5 * ceil32(return_data.size)) + 40])
                                if 100000 * arg4 <= 985 * Mask(112, 0, ext_call.return_data[0]):
                                    require ext_code.size(address(sha3(0, 17269419903419772280, sha3(mem[(4 * ceil32(return_data.size)) + 317 len (5 * ceil32(return_data.size)) + 40]), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    staticcall address(sha3(0, 17269419903419772280, sha3(mem[(4 * ceil32(return_data.size)) + 317 len (5 * ceil32(return_data.size)) + 40]), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                            gas gas_remaining wei
                                    mem[(4 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(6 * ceil32(return_data.size)) + 602] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(address(sha3(0, 17269419903419772280, _405, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    staticcall address(sha3(0, 17269419903419772280, _405, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                            gas gas_remaining wei
                                           args mem[(6 * ceil32(return_data.size)) + 606 len 8 * ceil32(return_data.size)]
                                    mem[(6 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        mem[(8 * ceil32(return_data.size)) + 606] = arg4
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            mem[(8 * ceil32(return_data.size)) + 638] = arg4
                                        else:
                                            mem[(8 * ceil32(return_data.size)) + 638] = 0
                                    else:
                                        mem[(8 * ceil32(return_data.size)) + 606] = 0
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            mem[(8 * ceil32(return_data.size)) + 638] = arg4
                                        else:
                                            mem[(8 * ceil32(return_data.size)) + 638] = 0
                                    mem[(8 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(8 * ceil32(return_data.size)) + 702] = 128
                                    mem[(8 * ceil32(return_data.size)) + 734] = 96
                                    mem[(8 * ceil32(return_data.size)) + 766 len 96] = address(arg1), address(arg2), arg3
                                    require ext_code.size(address(sha3(0, 17269419903419772280, _405, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    call address(sha3(0, 17269419903419772280, _405, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 606 len (13 * ceil32(return_data.size)) + 256]
                                else:
                                    mem[(4 * ceil32(return_data.size)) + 478] = address(ext_call.return_data[0])
                                    mem[(4 * ceil32(return_data.size)) + 510] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                    staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                            gas gas_remaining wei
                                           args address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(6 * ceil32(return_data.size)) + 506] = arg1
                                    mem[(6 * ceil32(return_data.size)) + 538] = arg2
                                    mem[(6 * ceil32(return_data.size)) + 570] = arg3
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).token0() with:
                                            gas gas_remaining wei
                                    mem[(6 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).token1() with:
                                            gas gas_remaining wei
                                    mem[(7 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(9 * ceil32(return_data.size)) + 602] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        mem[(9 * ceil32(return_data.size)) + 606] = arg4
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            mem[(9 * ceil32(return_data.size)) + 638] = arg4
                                            mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                            mem[(9 * ceil32(return_data.size)) + 702] = 128
                                            mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                            mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                            if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                                mem[(18 * ceil32(return_data.size)) + 862] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args arg4, arg4, address(this.address), Array(len=(8 * ceil32(return_data.size)) + 96, data=mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3])
                                        else:
                                            mem[(9 * ceil32(return_data.size)) + 638] = 0
                                            mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                            mem[(9 * ceil32(return_data.size)) + 702] = 128
                                            mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                            mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                            if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                                mem[(18 * ceil32(return_data.size)) + 862] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args arg4, 0, address(this.address), 128, (8 * ceil32(return_data.size)) + 96, mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3]
                                    else:
                                        mem[(9 * ceil32(return_data.size)) + 606] = 0
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            mem[(9 * ceil32(return_data.size)) + 638] = arg4
                                            mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                            mem[(9 * ceil32(return_data.size)) + 702] = 128
                                            mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                            mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                            if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                                mem[(18 * ceil32(return_data.size)) + 862] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, arg4, address(this.address), 128, (8 * ceil32(return_data.size)) + 96, mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3]
                                        else:
                                            mem[(9 * ceil32(return_data.size)) + 638] = 0
                                            mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                            mem[(9 * ceil32(return_data.size)) + 702] = 128
                                            mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                            mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                            if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                                mem[(18 * ceil32(return_data.size)) + 862] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, address(this.address), 128, (8 * ceil32(return_data.size)) + 96, mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3]
                            else:
                                _409 = sha3(mem[(4 * ceil32(return_data.size)) + 317 len (5 * ceil32(return_data.size)) + 40])
                                if 100000 * arg4 <= 985 * Mask(112, 0, ext_call.return_data[0]):
                                    require ext_code.size(address(sha3(0, 17269419903419772280, sha3(mem[(4 * ceil32(return_data.size)) + 317 len (5 * ceil32(return_data.size)) + 40]), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    staticcall address(sha3(0, 17269419903419772280, sha3(mem[(4 * ceil32(return_data.size)) + 317 len (5 * ceil32(return_data.size)) + 40]), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                            gas gas_remaining wei
                                    mem[(4 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(6 * ceil32(return_data.size)) + 602] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(address(sha3(0, 17269419903419772280, _409, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    staticcall address(sha3(0, 17269419903419772280, _409, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                            gas gas_remaining wei
                                           args mem[(6 * ceil32(return_data.size)) + 606 len 8 * ceil32(return_data.size)]
                                    mem[(6 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        mem[(8 * ceil32(return_data.size)) + 606] = arg4
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            mem[(8 * ceil32(return_data.size)) + 638] = arg4
                                        else:
                                            mem[(8 * ceil32(return_data.size)) + 638] = 0
                                    else:
                                        mem[(8 * ceil32(return_data.size)) + 606] = 0
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            mem[(8 * ceil32(return_data.size)) + 638] = arg4
                                        else:
                                            mem[(8 * ceil32(return_data.size)) + 638] = 0
                                    mem[(8 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(8 * ceil32(return_data.size)) + 702] = 128
                                    mem[(8 * ceil32(return_data.size)) + 734] = 96
                                    mem[(8 * ceil32(return_data.size)) + 766 len 96] = address(arg1), address(arg2), arg3
                                    require ext_code.size(address(sha3(0, 17269419903419772280, _409, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    call address(sha3(0, 17269419903419772280, _409, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 606 len (13 * ceil32(return_data.size)) + 256]
                                else:
                                    mem[(4 * ceil32(return_data.size)) + 478] = address(ext_call.return_data[0])
                                    mem[(4 * ceil32(return_data.size)) + 510] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                    staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                            gas gas_remaining wei
                                           args address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(6 * ceil32(return_data.size)) + 506] = arg1
                                    mem[(6 * ceil32(return_data.size)) + 538] = arg2
                                    mem[(6 * ceil32(return_data.size)) + 570] = arg3
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).token0() with:
                                            gas gas_remaining wei
                                    mem[(6 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).token1() with:
                                            gas gas_remaining wei
                                    mem[(7 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(9 * ceil32(return_data.size)) + 602] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        mem[(9 * ceil32(return_data.size)) + 606] = arg4
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            mem[(9 * ceil32(return_data.size)) + 638] = arg4
                                            mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                            mem[(9 * ceil32(return_data.size)) + 702] = 128
                                            mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                            mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                            if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                                mem[(18 * ceil32(return_data.size)) + 862] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args arg4, arg4, address(this.address), Array(len=(8 * ceil32(return_data.size)) + 96, data=mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3])
                                        else:
                                            mem[(9 * ceil32(return_data.size)) + 638] = 0
                                            mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                            mem[(9 * ceil32(return_data.size)) + 702] = 128
                                            mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                            mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                            if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                                mem[(18 * ceil32(return_data.size)) + 862] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args arg4, 0, address(this.address), 128, (8 * ceil32(return_data.size)) + 96, mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3]
                                    else:
                                        mem[(9 * ceil32(return_data.size)) + 606] = 0
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            mem[(9 * ceil32(return_data.size)) + 638] = arg4
                                            mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                            mem[(9 * ceil32(return_data.size)) + 702] = 128
                                            mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                            mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                            if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                                mem[(18 * ceil32(return_data.size)) + 862] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, arg4, address(this.address), 128, (8 * ceil32(return_data.size)) + 96, mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3]
                                        else:
                                            mem[(9 * ceil32(return_data.size)) + 638] = 0
                                            mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                            mem[(9 * ceil32(return_data.size)) + 702] = 128
                                            mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                            mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                            if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                                mem[(18 * ceil32(return_data.size)) + 862] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, address(this.address), 128, (8 * ceil32(return_data.size)) + 96, mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3]
                        else:
                            if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                                _413 = sha3(mem[(4 * ceil32(return_data.size)) + 317 len (5 * ceil32(return_data.size)) + 40])
                                if 100000 * arg4 <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                    require ext_code.size(address(sha3(0, 17269419903419772280, sha3(mem[(4 * ceil32(return_data.size)) + 317 len (5 * ceil32(return_data.size)) + 40]), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    staticcall address(sha3(0, 17269419903419772280, sha3(mem[(4 * ceil32(return_data.size)) + 317 len (5 * ceil32(return_data.size)) + 40]), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                            gas gas_remaining wei
                                    mem[(4 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(6 * ceil32(return_data.size)) + 602] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(address(sha3(0, 17269419903419772280, _413, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    staticcall address(sha3(0, 17269419903419772280, _413, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                            gas gas_remaining wei
                                           args mem[(6 * ceil32(return_data.size)) + 606 len 8 * ceil32(return_data.size)]
                                    mem[(6 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        mem[(8 * ceil32(return_data.size)) + 606] = arg4
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            mem[(8 * ceil32(return_data.size)) + 638] = arg4
                                        else:
                                            mem[(8 * ceil32(return_data.size)) + 638] = 0
                                    else:
                                        mem[(8 * ceil32(return_data.size)) + 606] = 0
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            mem[(8 * ceil32(return_data.size)) + 638] = arg4
                                        else:
                                            mem[(8 * ceil32(return_data.size)) + 638] = 0
                                    mem[(8 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(8 * ceil32(return_data.size)) + 702] = 128
                                    mem[(8 * ceil32(return_data.size)) + 734] = 96
                                    mem[(8 * ceil32(return_data.size)) + 766 len 96] = address(arg1), address(arg2), arg3
                                    require ext_code.size(address(sha3(0, 17269419903419772280, _413, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    call address(sha3(0, 17269419903419772280, _413, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 606 len (13 * ceil32(return_data.size)) + 256]
                                else:
                                    mem[(4 * ceil32(return_data.size)) + 478] = address(ext_call.return_data[0])
                                    mem[(4 * ceil32(return_data.size)) + 510] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                    staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                            gas gas_remaining wei
                                           args address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(6 * ceil32(return_data.size)) + 506] = arg1
                                    mem[(6 * ceil32(return_data.size)) + 538] = arg2
                                    mem[(6 * ceil32(return_data.size)) + 570] = arg3
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).token0() with:
                                            gas gas_remaining wei
                                    mem[(6 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).token1() with:
                                            gas gas_remaining wei
                                    mem[(7 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(9 * ceil32(return_data.size)) + 602] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        mem[(9 * ceil32(return_data.size)) + 606] = arg4
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            mem[(9 * ceil32(return_data.size)) + 638] = arg4
                                            mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                            mem[(9 * ceil32(return_data.size)) + 702] = 128
                                            mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                            mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                            if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                                mem[(18 * ceil32(return_data.size)) + 862] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args arg4, arg4, address(this.address), Array(len=(8 * ceil32(return_data.size)) + 96, data=mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3])
                                        else:
                                            mem[(9 * ceil32(return_data.size)) + 638] = 0
                                            mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                            mem[(9 * ceil32(return_data.size)) + 702] = 128
                                            mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                            mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                            if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                                mem[(18 * ceil32(return_data.size)) + 862] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args arg4, 0, address(this.address), 128, (8 * ceil32(return_data.size)) + 96, mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3]
                                    else:
                                        mem[(9 * ceil32(return_data.size)) + 606] = 0
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            mem[(9 * ceil32(return_data.size)) + 638] = arg4
                                            mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                            mem[(9 * ceil32(return_data.size)) + 702] = 128
                                            mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                            mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                            if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                                mem[(18 * ceil32(return_data.size)) + 862] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, arg4, address(this.address), 128, (8 * ceil32(return_data.size)) + 96, mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3]
                                        else:
                                            mem[(9 * ceil32(return_data.size)) + 638] = 0
                                            mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                            mem[(9 * ceil32(return_data.size)) + 702] = 128
                                            mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                            mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                            if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                                mem[(18 * ceil32(return_data.size)) + 862] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, address(this.address), 128, (8 * ceil32(return_data.size)) + 96, mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3]
                            else:
                                _417 = sha3(mem[(4 * ceil32(return_data.size)) + 317 len (5 * ceil32(return_data.size)) + 40])
                                if 100000 * arg4 <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                    require ext_code.size(address(sha3(0, 17269419903419772280, sha3(mem[(4 * ceil32(return_data.size)) + 317 len (5 * ceil32(return_data.size)) + 40]), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    staticcall address(sha3(0, 17269419903419772280, sha3(mem[(4 * ceil32(return_data.size)) + 317 len (5 * ceil32(return_data.size)) + 40]), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                            gas gas_remaining wei
                                    mem[(4 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(6 * ceil32(return_data.size)) + 602] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(address(sha3(0, 17269419903419772280, _417, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    staticcall address(sha3(0, 17269419903419772280, _417, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                            gas gas_remaining wei
                                           args mem[(6 * ceil32(return_data.size)) + 606 len 8 * ceil32(return_data.size)]
                                    mem[(6 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        mem[(8 * ceil32(return_data.size)) + 606] = arg4
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            mem[(8 * ceil32(return_data.size)) + 638] = arg4
                                        else:
                                            mem[(8 * ceil32(return_data.size)) + 638] = 0
                                    else:
                                        mem[(8 * ceil32(return_data.size)) + 606] = 0
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            mem[(8 * ceil32(return_data.size)) + 638] = arg4
                                        else:
                                            mem[(8 * ceil32(return_data.size)) + 638] = 0
                                    mem[(8 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(8 * ceil32(return_data.size)) + 702] = 128
                                    mem[(8 * ceil32(return_data.size)) + 734] = 96
                                    mem[(8 * ceil32(return_data.size)) + 766 len 96] = address(arg1), address(arg2), arg3
                                    require ext_code.size(address(sha3(0, 17269419903419772280, _417, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    call address(sha3(0, 17269419903419772280, _417, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 606 len (13 * ceil32(return_data.size)) + 256]
                                else:
                                    mem[(4 * ceil32(return_data.size)) + 478] = address(ext_call.return_data[0])
                                    mem[(4 * ceil32(return_data.size)) + 510] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                    staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                            gas gas_remaining wei
                                           args address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(6 * ceil32(return_data.size)) + 506] = arg1
                                    mem[(6 * ceil32(return_data.size)) + 538] = arg2
                                    mem[(6 * ceil32(return_data.size)) + 570] = arg3
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).token0() with:
                                            gas gas_remaining wei
                                    mem[(6 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).token1() with:
                                            gas gas_remaining wei
                                    mem[(7 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(9 * ceil32(return_data.size)) + 602] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        mem[(9 * ceil32(return_data.size)) + 606] = arg4
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            mem[(9 * ceil32(return_data.size)) + 638] = arg4
                                            mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                            mem[(9 * ceil32(return_data.size)) + 702] = 128
                                            mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                            mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                            if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                                mem[(18 * ceil32(return_data.size)) + 862] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args arg4, arg4, address(this.address), Array(len=(8 * ceil32(return_data.size)) + 96, data=mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3])
                                        else:
                                            mem[(9 * ceil32(return_data.size)) + 638] = 0
                                            mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                            mem[(9 * ceil32(return_data.size)) + 702] = 128
                                            mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                            mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                            if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                                mem[(18 * ceil32(return_data.size)) + 862] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args arg4, 0, address(this.address), 128, (8 * ceil32(return_data.size)) + 96, mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3]
                                    else:
                                        mem[(9 * ceil32(return_data.size)) + 606] = 0
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            mem[(9 * ceil32(return_data.size)) + 638] = arg4
                                            mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                            mem[(9 * ceil32(return_data.size)) + 702] = 128
                                            mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                            mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                            if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                                mem[(18 * ceil32(return_data.size)) + 862] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, arg4, address(this.address), 128, (8 * ceil32(return_data.size)) + 96, mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3]
                                        else:
                                            mem[(9 * ceil32(return_data.size)) + 638] = 0
                                            mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                            mem[(9 * ceil32(return_data.size)) + 702] = 128
                                            mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                            mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                            if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                                mem[(18 * ceil32(return_data.size)) + 862] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, address(this.address), 128, (8 * ceil32(return_data.size)) + 96, mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3]
                    else:
                        if not address(ext_call.return_data[0]):
                            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                        require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                                gas gas_remaining wei
                        mem[(2 * ceil32(return_data.size)) + 285 len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 96
                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                        if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                            mem[(4 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(4 * ceil32(return_data.size)) + 289] = 32
                            mem[(4 * ceil32(return_data.size)) + 321] = 36
                            mem[(4 * ceil32(return_data.size)) + 353] = 'PangolinLibrary: IDENTICAL_ADDRE'
                            mem[(4 * ceil32(return_data.size)) + 385] = 0x5353455300000000000000000000000000000000000000000000000000000000
                            revert with memory
                              from (4 * ceil32(return_data.size)) + 285
                               len (5 * ceil32(return_data.size)) + 132
                        if not address(ext_call.return_data[0]):
                            mem[(4 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(4 * ceil32(return_data.size)) + 289] = 32
                            mem[(4 * ceil32(return_data.size)) + 321] = 29
                            mem[(4 * ceil32(return_data.size)) + 353] = 'PangolinLibrary: ZERO_ADDRESS'
                            revert with memory
                              from (4 * ceil32(return_data.size)) + 285
                               len (5 * ceil32(return_data.size)) + 100
                        mem[(4 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
                        mem[(4 * ceil32(return_data.size)) + 337] = address(ext_call.return_data[0])
                        if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                            if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                                _421 = sha3(mem[(4 * ceil32(return_data.size)) + 317 len (5 * ceil32(return_data.size)) + 40])
                                if 100000 * arg4 <= 985 * Mask(112, 0, ext_call.return_data[0]):
                                    require ext_code.size(address(sha3(0, 17269419903419772280, sha3(mem[(4 * ceil32(return_data.size)) + 317 len (5 * ceil32(return_data.size)) + 40]), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    staticcall address(sha3(0, 17269419903419772280, sha3(mem[(4 * ceil32(return_data.size)) + 317 len (5 * ceil32(return_data.size)) + 40]), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                            gas gas_remaining wei
                                    mem[(4 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(6 * ceil32(return_data.size)) + 602] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(address(sha3(0, 17269419903419772280, _421, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    staticcall address(sha3(0, 17269419903419772280, _421, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                            gas gas_remaining wei
                                           args mem[(6 * ceil32(return_data.size)) + 606 len 8 * ceil32(return_data.size)]
                                    mem[(6 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        mem[(8 * ceil32(return_data.size)) + 606] = arg4
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            mem[(8 * ceil32(return_data.size)) + 638] = arg4
                                        else:
                                            mem[(8 * ceil32(return_data.size)) + 638] = 0
                                    else:
                                        mem[(8 * ceil32(return_data.size)) + 606] = 0
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            mem[(8 * ceil32(return_data.size)) + 638] = arg4
                                        else:
                                            mem[(8 * ceil32(return_data.size)) + 638] = 0
                                    mem[(8 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(8 * ceil32(return_data.size)) + 702] = 128
                                    mem[(8 * ceil32(return_data.size)) + 734] = 96
                                    mem[(8 * ceil32(return_data.size)) + 766 len 96] = address(arg1), address(arg2), arg3
                                    require ext_code.size(address(sha3(0, 17269419903419772280, _421, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    call address(sha3(0, 17269419903419772280, _421, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 606 len (13 * ceil32(return_data.size)) + 256]
                                else:
                                    mem[(4 * ceil32(return_data.size)) + 478] = address(ext_call.return_data[0])
                                    mem[(4 * ceil32(return_data.size)) + 510] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                    staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                            gas gas_remaining wei
                                           args address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(6 * ceil32(return_data.size)) + 506] = arg1
                                    mem[(6 * ceil32(return_data.size)) + 538] = arg2
                                    mem[(6 * ceil32(return_data.size)) + 570] = arg3
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).token0() with:
                                            gas gas_remaining wei
                                    mem[(6 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).token1() with:
                                            gas gas_remaining wei
                                    mem[(7 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(9 * ceil32(return_data.size)) + 602] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        mem[(9 * ceil32(return_data.size)) + 606] = arg4
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            mem[(9 * ceil32(return_data.size)) + 638] = arg4
                                            mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                            mem[(9 * ceil32(return_data.size)) + 702] = 128
                                            mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                            mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                            if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                                mem[(18 * ceil32(return_data.size)) + 862] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args arg4, arg4, address(this.address), Array(len=(8 * ceil32(return_data.size)) + 96, data=mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3])
                                        else:
                                            mem[(9 * ceil32(return_data.size)) + 638] = 0
                                            mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                            mem[(9 * ceil32(return_data.size)) + 702] = 128
                                            mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                            mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                            if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                                mem[(18 * ceil32(return_data.size)) + 862] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args arg4, 0, address(this.address), 128, (8 * ceil32(return_data.size)) + 96, mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3]
                                    else:
                                        mem[(9 * ceil32(return_data.size)) + 606] = 0
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            mem[(9 * ceil32(return_data.size)) + 638] = arg4
                                            mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                            mem[(9 * ceil32(return_data.size)) + 702] = 128
                                            mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                            mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                            if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                                mem[(18 * ceil32(return_data.size)) + 862] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, arg4, address(this.address), 128, (8 * ceil32(return_data.size)) + 96, mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3]
                                        else:
                                            mem[(9 * ceil32(return_data.size)) + 638] = 0
                                            mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                            mem[(9 * ceil32(return_data.size)) + 702] = 128
                                            mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                            mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                            if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                                mem[(18 * ceil32(return_data.size)) + 862] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, address(this.address), 128, (8 * ceil32(return_data.size)) + 96, mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3]
                            else:
                                _425 = sha3(mem[(4 * ceil32(return_data.size)) + 317 len (5 * ceil32(return_data.size)) + 40])
                                if 100000 * arg4 <= 985 * Mask(112, 0, ext_call.return_data[0]):
                                    require ext_code.size(address(sha3(0, 17269419903419772280, sha3(mem[(4 * ceil32(return_data.size)) + 317 len (5 * ceil32(return_data.size)) + 40]), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    staticcall address(sha3(0, 17269419903419772280, sha3(mem[(4 * ceil32(return_data.size)) + 317 len (5 * ceil32(return_data.size)) + 40]), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                            gas gas_remaining wei
                                    mem[(4 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(6 * ceil32(return_data.size)) + 602] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(address(sha3(0, 17269419903419772280, _425, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    staticcall address(sha3(0, 17269419903419772280, _425, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                            gas gas_remaining wei
                                           args mem[(6 * ceil32(return_data.size)) + 606 len 8 * ceil32(return_data.size)]
                                    mem[(6 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        mem[(8 * ceil32(return_data.size)) + 606] = arg4
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            mem[(8 * ceil32(return_data.size)) + 638] = arg4
                                        else:
                                            mem[(8 * ceil32(return_data.size)) + 638] = 0
                                    else:
                                        mem[(8 * ceil32(return_data.size)) + 606] = 0
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            mem[(8 * ceil32(return_data.size)) + 638] = arg4
                                        else:
                                            mem[(8 * ceil32(return_data.size)) + 638] = 0
                                    mem[(8 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(8 * ceil32(return_data.size)) + 702] = 128
                                    mem[(8 * ceil32(return_data.size)) + 734] = 96
                                    mem[(8 * ceil32(return_data.size)) + 766 len 96] = address(arg1), address(arg2), arg3
                                    require ext_code.size(address(sha3(0, 17269419903419772280, _425, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    call address(sha3(0, 17269419903419772280, _425, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 606 len (13 * ceil32(return_data.size)) + 256]
                                else:
                                    mem[(4 * ceil32(return_data.size)) + 478] = address(ext_call.return_data[0])
                                    mem[(4 * ceil32(return_data.size)) + 510] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                    staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                            gas gas_remaining wei
                                           args address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(6 * ceil32(return_data.size)) + 506] = arg1
                                    mem[(6 * ceil32(return_data.size)) + 538] = arg2
                                    mem[(6 * ceil32(return_data.size)) + 570] = arg3
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).token0() with:
                                            gas gas_remaining wei
                                    mem[(6 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).token1() with:
                                            gas gas_remaining wei
                                    mem[(7 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(9 * ceil32(return_data.size)) + 602] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        mem[(9 * ceil32(return_data.size)) + 606] = arg4
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            mem[(9 * ceil32(return_data.size)) + 638] = arg4
                                            mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                            mem[(9 * ceil32(return_data.size)) + 702] = 128
                                            mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                            mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                            if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                                mem[(18 * ceil32(return_data.size)) + 862] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args arg4, arg4, address(this.address), Array(len=(8 * ceil32(return_data.size)) + 96, data=mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3])
                                        else:
                                            mem[(9 * ceil32(return_data.size)) + 638] = 0
                                            mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                            mem[(9 * ceil32(return_data.size)) + 702] = 128
                                            mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                            mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                            if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                                mem[(18 * ceil32(return_data.size)) + 862] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args arg4, 0, address(this.address), 128, (8 * ceil32(return_data.size)) + 96, mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3]
                                    else:
                                        mem[(9 * ceil32(return_data.size)) + 606] = 0
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            mem[(9 * ceil32(return_data.size)) + 638] = arg4
                                            mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                            mem[(9 * ceil32(return_data.size)) + 702] = 128
                                            mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                            mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                            if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                                mem[(18 * ceil32(return_data.size)) + 862] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, arg4, address(this.address), 128, (8 * ceil32(return_data.size)) + 96, mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3]
                                        else:
                                            mem[(9 * ceil32(return_data.size)) + 638] = 0
                                            mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                            mem[(9 * ceil32(return_data.size)) + 702] = 128
                                            mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                            mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                            if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                                mem[(18 * ceil32(return_data.size)) + 862] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, address(this.address), 128, (8 * ceil32(return_data.size)) + 96, mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3]
                        else:
                            if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                                _429 = sha3(mem[(4 * ceil32(return_data.size)) + 317 len (5 * ceil32(return_data.size)) + 40])
                                if 100000 * arg4 <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                    require ext_code.size(address(sha3(0, 17269419903419772280, sha3(mem[(4 * ceil32(return_data.size)) + 317 len (5 * ceil32(return_data.size)) + 40]), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    staticcall address(sha3(0, 17269419903419772280, sha3(mem[(4 * ceil32(return_data.size)) + 317 len (5 * ceil32(return_data.size)) + 40]), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                            gas gas_remaining wei
                                    mem[(4 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(6 * ceil32(return_data.size)) + 602] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(address(sha3(0, 17269419903419772280, _429, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    staticcall address(sha3(0, 17269419903419772280, _429, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                            gas gas_remaining wei
                                           args mem[(6 * ceil32(return_data.size)) + 606 len 8 * ceil32(return_data.size)]
                                    mem[(6 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        mem[(8 * ceil32(return_data.size)) + 606] = arg4
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            mem[(8 * ceil32(return_data.size)) + 638] = arg4
                                        else:
                                            mem[(8 * ceil32(return_data.size)) + 638] = 0
                                    else:
                                        mem[(8 * ceil32(return_data.size)) + 606] = 0
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            mem[(8 * ceil32(return_data.size)) + 638] = arg4
                                        else:
                                            mem[(8 * ceil32(return_data.size)) + 638] = 0
                                    mem[(8 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(8 * ceil32(return_data.size)) + 702] = 128
                                    mem[(8 * ceil32(return_data.size)) + 734] = 96
                                    mem[(8 * ceil32(return_data.size)) + 766 len 96] = address(arg1), address(arg2), arg3
                                    require ext_code.size(address(sha3(0, 17269419903419772280, _429, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    call address(sha3(0, 17269419903419772280, _429, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 606 len (13 * ceil32(return_data.size)) + 256]
                                else:
                                    mem[(4 * ceil32(return_data.size)) + 478] = address(ext_call.return_data[0])
                                    mem[(4 * ceil32(return_data.size)) + 510] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                    staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                            gas gas_remaining wei
                                           args address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(6 * ceil32(return_data.size)) + 506] = arg1
                                    mem[(6 * ceil32(return_data.size)) + 538] = arg2
                                    mem[(6 * ceil32(return_data.size)) + 570] = arg3
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).token0() with:
                                            gas gas_remaining wei
                                    mem[(6 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).token1() with:
                                            gas gas_remaining wei
                                    mem[(7 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(9 * ceil32(return_data.size)) + 602] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        mem[(9 * ceil32(return_data.size)) + 606] = arg4
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            mem[(9 * ceil32(return_data.size)) + 638] = arg4
                                            mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                            mem[(9 * ceil32(return_data.size)) + 702] = 128
                                            mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                            mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                            if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                                mem[(18 * ceil32(return_data.size)) + 862] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args arg4, arg4, address(this.address), Array(len=(8 * ceil32(return_data.size)) + 96, data=mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3])
                                        else:
                                            mem[(9 * ceil32(return_data.size)) + 638] = 0
                                            mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                            mem[(9 * ceil32(return_data.size)) + 702] = 128
                                            mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                            mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                            if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                                mem[(18 * ceil32(return_data.size)) + 862] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args arg4, 0, address(this.address), 128, (8 * ceil32(return_data.size)) + 96, mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3]
                                    else:
                                        mem[(9 * ceil32(return_data.size)) + 606] = 0
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            mem[(9 * ceil32(return_data.size)) + 638] = arg4
                                            mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                            mem[(9 * ceil32(return_data.size)) + 702] = 128
                                            mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                            mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                            if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                                mem[(18 * ceil32(return_data.size)) + 862] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, arg4, address(this.address), 128, (8 * ceil32(return_data.size)) + 96, mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3]
                                        else:
                                            mem[(9 * ceil32(return_data.size)) + 638] = 0
                                            mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                            mem[(9 * ceil32(return_data.size)) + 702] = 128
                                            mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                            mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                            if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                                mem[(18 * ceil32(return_data.size)) + 862] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, address(this.address), 128, (8 * ceil32(return_data.size)) + 96, mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3]
                            else:
                                _433 = sha3(mem[(4 * ceil32(return_data.size)) + 317 len (5 * ceil32(return_data.size)) + 40])
                                if 100000 * arg4 <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                    require ext_code.size(address(sha3(0, 17269419903419772280, sha3(mem[(4 * ceil32(return_data.size)) + 317 len (5 * ceil32(return_data.size)) + 40]), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    staticcall address(sha3(0, 17269419903419772280, sha3(mem[(4 * ceil32(return_data.size)) + 317 len (5 * ceil32(return_data.size)) + 40]), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                            gas gas_remaining wei
                                    mem[(4 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(6 * ceil32(return_data.size)) + 602] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(address(sha3(0, 17269419903419772280, _433, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    staticcall address(sha3(0, 17269419903419772280, _433, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                            gas gas_remaining wei
                                           args mem[(6 * ceil32(return_data.size)) + 606 len 8 * ceil32(return_data.size)]
                                    mem[(6 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        mem[(8 * ceil32(return_data.size)) + 606] = arg4
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            mem[(8 * ceil32(return_data.size)) + 638] = arg4
                                        else:
                                            mem[(8 * ceil32(return_data.size)) + 638] = 0
                                    else:
                                        mem[(8 * ceil32(return_data.size)) + 606] = 0
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            mem[(8 * ceil32(return_data.size)) + 638] = arg4
                                        else:
                                            mem[(8 * ceil32(return_data.size)) + 638] = 0
                                    mem[(8 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(8 * ceil32(return_data.size)) + 702] = 128
                                    mem[(8 * ceil32(return_data.size)) + 734] = 96
                                    mem[(8 * ceil32(return_data.size)) + 766 len 96] = address(arg1), address(arg2), arg3
                                    require ext_code.size(address(sha3(0, 17269419903419772280, _433, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    call address(sha3(0, 17269419903419772280, _433, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 606 len (13 * ceil32(return_data.size)) + 256]
                                else:
                                    mem[(4 * ceil32(return_data.size)) + 478] = address(ext_call.return_data[0])
                                    mem[(4 * ceil32(return_data.size)) + 510] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                    staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                            gas gas_remaining wei
                                           args address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(6 * ceil32(return_data.size)) + 506] = arg1
                                    mem[(6 * ceil32(return_data.size)) + 538] = arg2
                                    mem[(6 * ceil32(return_data.size)) + 570] = arg3
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).token0() with:
                                            gas gas_remaining wei
                                    mem[(6 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    staticcall address(ext_call.return_data[0]).token1() with:
                                            gas gas_remaining wei
                                    mem[(7 * ceil32(return_data.size)) + 602] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(9 * ceil32(return_data.size)) + 602] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                        mem[(9 * ceil32(return_data.size)) + 606] = arg4
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            mem[(9 * ceil32(return_data.size)) + 638] = arg4
                                            mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                            mem[(9 * ceil32(return_data.size)) + 702] = 128
                                            mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                            mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                            if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                                mem[(18 * ceil32(return_data.size)) + 862] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args arg4, arg4, address(this.address), Array(len=(8 * ceil32(return_data.size)) + 96, data=mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3])
                                        else:
                                            mem[(9 * ceil32(return_data.size)) + 638] = 0
                                            mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                            mem[(9 * ceil32(return_data.size)) + 702] = 128
                                            mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                            mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                            if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                                mem[(18 * ceil32(return_data.size)) + 862] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args arg4, 0, address(this.address), 128, (8 * ceil32(return_data.size)) + 96, mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3]
                                    else:
                                        mem[(9 * ceil32(return_data.size)) + 606] = 0
                                        if ext_call.return_data[12 len 20] == address(ext_call.return_data[0]):
                                            mem[(9 * ceil32(return_data.size)) + 638] = arg4
                                            mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                            mem[(9 * ceil32(return_data.size)) + 702] = 128
                                            mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                            mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                            if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                                mem[(18 * ceil32(return_data.size)) + 862] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, arg4, address(this.address), 128, (8 * ceil32(return_data.size)) + 96, mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3]
                                        else:
                                            mem[(9 * ceil32(return_data.size)) + 638] = 0
                                            mem[(9 * ceil32(return_data.size)) + 670] = this.address
                                            mem[(9 * ceil32(return_data.size)) + 702] = 128
                                            mem[(9 * ceil32(return_data.size)) + 734] = (8 * ceil32(return_data.size)) + 96
                                            mem[(9 * ceil32(return_data.size)) + 766 len ceil32(8 * ceil32(return_data.size)) + 3] = mem[(6 * ceil32(return_data.size)) + 506 len ceil32(8 * ceil32(return_data.size)) + 3]
                                            if ceil32(8 * ceil32(return_data.size)) + 3 > (8 * ceil32(return_data.size)) + 96:
                                                mem[(18 * ceil32(return_data.size)) + 862] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                                 gas gas_remaining wei
                                                args 0, 0, address(this.address), 128, (8 * ceil32(return_data.size)) + 96, mem[(9 * ceil32(return_data.size)) + 766 len (5 * ceil32(return_data.size)) + ceil32(8 * ceil32(return_data.size)) + 3]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function pangolinCall(address arg1, uint256 arg2, uint256 arg3, bytes arg4) {
    require calldata.size - 4 >= 128
    require arg1 == arg1
    require arg4 <= test266151307()
    require arg4 + 35 < calldata.size
    require arg4.length <= test266151307()
    require arg4 + arg4.length + 36 <= calldata.size
    require arg4.length >= 96
    require cd[(arg4 + 36)] == address(cd[(arg4 + 36)])
    require cd[(arg4 + 68)] == address(cd[(arg4 + 68)])
    require cd[(arg4 + 100)] == address(cd[(arg4 + 100)])
    require ext_code.size(msg.sender)
    staticcall msg.sender.token0() with:
            gas gas_remaining wei
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(msg.sender)
    staticcall msg.sender.token1() with:
            gas gas_remaining wei
    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    mem[(2 * ceil32(return_data.size)) + 100] = address(ext_call.return_data[0])
    mem[(2 * ceil32(return_data.size)) + 132] = address(ext_call.return_data[0])
    require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
    staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
            gas gas_remaining wei
           args address(ext_call.return_data[0]), address(ext_call.return_data[0])
    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require msg.sender == ext_call.return_data[12 len 20]
    if address(cd[(arg4 + 68)]) == address(cd[(arg4 + 100)]):
        require ext_code.size(address(ext_call.return_data[0]))
        if arg2:
            call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                 gas gas_remaining wei
                args address(cd[(arg4 + 68)]), arg2
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == bool(ext_call.return_data[0])
            require ext_code.size(address(cd[(arg4 + 68)]))
            call address(cd[(arg4 + 68)]).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                 gas gas_remaining wei
                args address(cd[(arg4 + 36)]), arg2, address(cd[(arg4 + 100)])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(address(cd[(arg4 + 100)]))
            staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(address(cd[(arg4 + 100)]))
            call address(cd[(arg4 + 100)]).redeem(uint256 rg1) with:
                 gas gas_remaining wei
                args ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(address(ext_call.return_data[0]))
            call address(ext_call.return_data[0]).0xa9059cbb with:
                 gas gas_remaining wei
                args msg.sender, (1000 * arg2 / 997) + 1
        else:
            call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                 gas gas_remaining wei
                args address(cd[(arg4 + 68)]), arg3
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == bool(ext_call.return_data[0])
            require ext_code.size(address(cd[(arg4 + 68)]))
            call address(cd[(arg4 + 68)]).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                 gas gas_remaining wei
                args address(cd[(arg4 + 36)]), arg3, address(cd[(arg4 + 100)])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(address(cd[(arg4 + 100)]))
            staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(address(cd[(arg4 + 100)]))
            call address(cd[(arg4 + 100)]).redeem(uint256 rg1) with:
                 gas gas_remaining wei
                args ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(address(ext_call.return_data[0]))
            call address(ext_call.return_data[0]).0xa9059cbb with:
                 gas gas_remaining wei
                args msg.sender, (1000 * arg3 / 997) + 1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == bool(ext_call.return_data[0])
    else:
        if 0x5c0401e81bc07ca70fad469b451682c0d747ef1c == address(cd[(arg4 + 68)]):
            require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
            if arg2:
                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x2e1a7d4d with:
                     gas gas_remaining wei
                    args arg2
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(address(cd[(arg4 + 68)]))
                call address(cd[(arg4 + 68)]).liquidateBorrow(address rg1, address rg2) with:
                   value arg2 wei
                     gas gas_remaining wei
                    args address(cd[(arg4 + 36)]), address(cd[(arg4 + 100)])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(address(cd[(arg4 + 100)]))
                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(address(cd[(arg4 + 100)]))
                call address(cd[(arg4 + 100)]).redeem(uint256 rg1) with:
                     gas gas_remaining wei
                    args ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                    revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 < address(ext_call.return_data[0]):
                    if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                        revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                    if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 < address(ext_call.return_data[0]):
                        require ext_code.size(address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        staticcall address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                                gas gas_remaining wei
                    else:
                        if not address(ext_call.return_data[0]):
                            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                        require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                                gas gas_remaining wei
                    mem[(7 * ceil32(return_data.size)) + 285 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                    if arg2 <= 0:
                        mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[(8 * ceil32(return_data.size)) + 289] = 32
                        mem[(8 * ceil32(return_data.size)) + 321] = 43
                        mem[(8 * ceil32(return_data.size)) + 353] = 'PangolinLibrary: INSUFFICIENT_OU'
                        mem[(8 * ceil32(return_data.size)) + 385] = 0x545055545f414d4f554e54000000000000000000000000000000000000000000
                        revert with memory
                          from (8 * ceil32(return_data.size)) + 285
                           len ceil32(return_data.size) + 132
                    if ext_call.return_data[50 len 14] <= 0:
                        mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[(8 * ceil32(return_data.size)) + 289] = 32
                        mem[(8 * ceil32(return_data.size)) + 321] = 39
                        mem[(8 * ceil32(return_data.size)) + 353] = 'PangolinLibrary: INSUFFICIENT_LI'
                        mem[(8 * ceil32(return_data.size)) + 385] = 'QUIDITY' << 200
                        revert with memory
                          from (8 * ceil32(return_data.size)) + 285
                           len ceil32(return_data.size) + 132
                    if ext_call.return_data[18 len 14] <= 0:
                        mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[(8 * ceil32(return_data.size)) + 289] = 32
                        mem[(8 * ceil32(return_data.size)) + 321] = 39
                        mem[(8 * ceil32(return_data.size)) + 353] = 'PangolinLibrary: INSUFFICIENT_LI'
                        mem[(8 * ceil32(return_data.size)) + 385] = 'QUIDITY' << 200
                        revert with memory
                          from (8 * ceil32(return_data.size)) + 285
                           len ceil32(return_data.size) + 132
                    if not arg2:
                        if ext_call.return_data[18 len 14] - arg2 > ext_call.return_data[18 len 14]:
                            mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 289] = 32
                            mem[(8 * ceil32(return_data.size)) + 321] = 21
                            mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-sub-underflow' << 88
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 285
                               len ceil32(return_data.size) + 100
                        if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / 997 != ext_call.return_data[18 len 14] - arg2:
                            mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 289] = 32
                            mem[(8 * ceil32(return_data.size)) + 321] = 20
                            mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-mul-overflow' << 96
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 285
                               len ceil32(return_data.size) + 100
                        require (997 * ext_call.return_data[18 len 14]) - (997 * arg2)
                        if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                            mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 289] = 32
                            mem[(8 * ceil32(return_data.size)) + 321] = 20
                            mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-add-overflow' << 96
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 285
                               len ceil32(return_data.size) + 100
                        mem[(8 * ceil32(return_data.size)) + 289] = msg.sender
                        mem[(8 * ceil32(return_data.size)) + 321] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                    else:
                        require arg2
                        if ext_call.return_data[50 len 14] * arg2 / arg2 != ext_call.return_data[50 len 14]:
                            mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 289] = 32
                            mem[(8 * ceil32(return_data.size)) + 321] = 20
                            mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-mul-overflow' << 96
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 285
                               len ceil32(return_data.size) + 100
                        if 1000 * ext_call.return_data[50 len 14] * arg2 / 1000 != ext_call.return_data[50 len 14] * arg2:
                            mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 289] = 32
                            mem[(8 * ceil32(return_data.size)) + 321] = 20
                            mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-mul-overflow' << 96
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 285
                               len ceil32(return_data.size) + 100
                        if ext_call.return_data[18 len 14] - arg2 > ext_call.return_data[18 len 14]:
                            mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 289] = 32
                            mem[(8 * ceil32(return_data.size)) + 321] = 21
                            mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-sub-underflow' << 88
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 285
                               len ceil32(return_data.size) + 100
                        if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / 997 != ext_call.return_data[18 len 14] - arg2:
                            mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 289] = 32
                            mem[(8 * ceil32(return_data.size)) + 321] = 20
                            mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-mul-overflow' << 96
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 285
                               len ceil32(return_data.size) + 100
                        require (997 * ext_call.return_data[18 len 14]) - (997 * arg2)
                        if (1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                            mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 289] = 32
                            mem[(8 * ceil32(return_data.size)) + 321] = 20
                            mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-add-overflow' << 96
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 285
                               len ceil32(return_data.size) + 100
                        mem[(8 * ceil32(return_data.size)) + 289] = msg.sender
                        mem[(8 * ceil32(return_data.size)) + 321] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                else:
                    if not address(ext_call.return_data[0]):
                        revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                    if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                        revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                    if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 < address(ext_call.return_data[0]):
                        require ext_code.size(address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        staticcall address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                                gas gas_remaining wei
                    else:
                        if not address(ext_call.return_data[0]):
                            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                        require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                                gas gas_remaining wei
                    mem[(7 * ceil32(return_data.size)) + 285 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                    if arg2 <= 0:
                        mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[(8 * ceil32(return_data.size)) + 289] = 32
                        mem[(8 * ceil32(return_data.size)) + 321] = 43
                        mem[(8 * ceil32(return_data.size)) + 353] = 'PangolinLibrary: INSUFFICIENT_OU'
                        mem[(8 * ceil32(return_data.size)) + 385] = 0x545055545f414d4f554e54000000000000000000000000000000000000000000
                        revert with memory
                          from (8 * ceil32(return_data.size)) + 285
                           len ceil32(return_data.size) + 132
                    if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 289] = 32
                            mem[(8 * ceil32(return_data.size)) + 321] = 39
                            mem[(8 * ceil32(return_data.size)) + 353] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 385] = 'QUIDITY' << 200
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 285
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 289] = 32
                            mem[(8 * ceil32(return_data.size)) + 321] = 39
                            mem[(8 * ceil32(return_data.size)) + 353] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 385] = 'QUIDITY' << 200
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 285
                               len ceil32(return_data.size) + 132
                        if not arg2:
                            if ext_call.return_data[18 len 14] - arg2 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 289] = 32
                                mem[(8 * ceil32(return_data.size)) + 321] = 21
                                mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-sub-underflow' << 88
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 285
                                   len ceil32(return_data.size) + 100
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / 997 != ext_call.return_data[18 len 14] - arg2:
                                mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 289] = 32
                                mem[(8 * ceil32(return_data.size)) + 321] = 20
                                mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-mul-overflow' << 96
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 285
                                   len ceil32(return_data.size) + 100
                            require (997 * ext_call.return_data[18 len 14]) - (997 * arg2)
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 289] = 32
                                mem[(8 * ceil32(return_data.size)) + 321] = 20
                                mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-add-overflow' << 96
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 285
                                   len ceil32(return_data.size) + 100
                            mem[(8 * ceil32(return_data.size)) + 289] = msg.sender
                            mem[(8 * ceil32(return_data.size)) + 321] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                        else:
                            require arg2
                            if ext_call.return_data[50 len 14] * arg2 / arg2 != ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 289] = 32
                                mem[(8 * ceil32(return_data.size)) + 321] = 20
                                mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-mul-overflow' << 96
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 285
                                   len ceil32(return_data.size) + 100
                            if 1000 * ext_call.return_data[50 len 14] * arg2 / 1000 != ext_call.return_data[50 len 14] * arg2:
                                mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 289] = 32
                                mem[(8 * ceil32(return_data.size)) + 321] = 20
                                mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-mul-overflow' << 96
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 285
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] - arg2 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 289] = 32
                                mem[(8 * ceil32(return_data.size)) + 321] = 21
                                mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-sub-underflow' << 88
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 285
                                   len ceil32(return_data.size) + 100
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / 997 != ext_call.return_data[18 len 14] - arg2:
                                mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 289] = 32
                                mem[(8 * ceil32(return_data.size)) + 321] = 20
                                mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-mul-overflow' << 96
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 285
                                   len ceil32(return_data.size) + 100
                            require (997 * ext_call.return_data[18 len 14]) - (997 * arg2)
                            if (1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 289] = 32
                                mem[(8 * ceil32(return_data.size)) + 321] = 20
                                mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-add-overflow' << 96
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 285
                                   len ceil32(return_data.size) + 100
                            mem[(8 * ceil32(return_data.size)) + 289] = msg.sender
                            mem[(8 * ceil32(return_data.size)) + 321] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 289] = 32
                            mem[(8 * ceil32(return_data.size)) + 321] = 39
                            mem[(8 * ceil32(return_data.size)) + 353] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 385] = 'QUIDITY' << 200
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 285
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 289] = 32
                            mem[(8 * ceil32(return_data.size)) + 321] = 39
                            mem[(8 * ceil32(return_data.size)) + 353] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 385] = 'QUIDITY' << 200
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 285
                               len ceil32(return_data.size) + 132
                        if not arg2:
                            if ext_call.return_data[50 len 14] - arg2 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 289] = 32
                                mem[(8 * ceil32(return_data.size)) + 321] = 21
                                mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-sub-underflow' << 88
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 285
                                   len ceil32(return_data.size) + 100
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / 997 != ext_call.return_data[50 len 14] - arg2:
                                mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 289] = 32
                                mem[(8 * ceil32(return_data.size)) + 321] = 20
                                mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-mul-overflow' << 96
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 285
                                   len ceil32(return_data.size) + 100
                            require (997 * ext_call.return_data[50 len 14]) - (997 * arg2)
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 289] = 32
                                mem[(8 * ceil32(return_data.size)) + 321] = 20
                                mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-add-overflow' << 96
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 285
                                   len ceil32(return_data.size) + 100
                            mem[(8 * ceil32(return_data.size)) + 289] = msg.sender
                            mem[(8 * ceil32(return_data.size)) + 321] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                        else:
                            require arg2
                            if ext_call.return_data[18 len 14] * arg2 / arg2 != ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 289] = 32
                                mem[(8 * ceil32(return_data.size)) + 321] = 20
                                mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-mul-overflow' << 96
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 285
                                   len ceil32(return_data.size) + 100
                            if 1000 * ext_call.return_data[18 len 14] * arg2 / 1000 != ext_call.return_data[18 len 14] * arg2:
                                mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 289] = 32
                                mem[(8 * ceil32(return_data.size)) + 321] = 20
                                mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-mul-overflow' << 96
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 285
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] - arg2 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 289] = 32
                                mem[(8 * ceil32(return_data.size)) + 321] = 21
                                mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-sub-underflow' << 88
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 285
                                   len ceil32(return_data.size) + 100
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / 997 != ext_call.return_data[50 len 14] - arg2:
                                mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 289] = 32
                                mem[(8 * ceil32(return_data.size)) + 321] = 20
                                mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-mul-overflow' << 96
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 285
                                   len ceil32(return_data.size) + 100
                            require (997 * ext_call.return_data[50 len 14]) - (997 * arg2)
                            if (1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 289] = 32
                                mem[(8 * ceil32(return_data.size)) + 321] = 20
                                mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-add-overflow' << 96
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 285
                                   len ceil32(return_data.size) + 100
                            mem[(8 * ceil32(return_data.size)) + 289] = msg.sender
                            mem[(8 * ceil32(return_data.size)) + 321] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
            else:
                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x2e1a7d4d with:
                     gas gas_remaining wei
                    args arg3
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(address(cd[(arg4 + 68)]))
                call address(cd[(arg4 + 68)]).liquidateBorrow(address rg1, address rg2) with:
                   value arg3 wei
                     gas gas_remaining wei
                    args address(cd[(arg4 + 36)]), address(cd[(arg4 + 100)])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(address(cd[(arg4 + 100)]))
                staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(address(cd[(arg4 + 100)]))
                call address(cd[(arg4 + 100)]).redeem(uint256 rg1) with:
                     gas gas_remaining wei
                    args ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                    revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 < address(ext_call.return_data[0]):
                    if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                        revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                    if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 < address(ext_call.return_data[0]):
                        require ext_code.size(address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        staticcall address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                                gas gas_remaining wei
                    else:
                        if not address(ext_call.return_data[0]):
                            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                        require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                                gas gas_remaining wei
                    mem[(7 * ceil32(return_data.size)) + 285 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                    if arg3 <= 0:
                        mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[(8 * ceil32(return_data.size)) + 289] = 32
                        mem[(8 * ceil32(return_data.size)) + 321] = 43
                        mem[(8 * ceil32(return_data.size)) + 353] = 'PangolinLibrary: INSUFFICIENT_OU'
                        mem[(8 * ceil32(return_data.size)) + 385] = 0x545055545f414d4f554e54000000000000000000000000000000000000000000
                        revert with memory
                          from (8 * ceil32(return_data.size)) + 285
                           len ceil32(return_data.size) + 132
                    if ext_call.return_data[50 len 14] <= 0:
                        mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[(8 * ceil32(return_data.size)) + 289] = 32
                        mem[(8 * ceil32(return_data.size)) + 321] = 39
                        mem[(8 * ceil32(return_data.size)) + 353] = 'PangolinLibrary: INSUFFICIENT_LI'
                        mem[(8 * ceil32(return_data.size)) + 385] = 'QUIDITY' << 200
                        revert with memory
                          from (8 * ceil32(return_data.size)) + 285
                           len ceil32(return_data.size) + 132
                    if ext_call.return_data[18 len 14] <= 0:
                        mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[(8 * ceil32(return_data.size)) + 289] = 32
                        mem[(8 * ceil32(return_data.size)) + 321] = 39
                        mem[(8 * ceil32(return_data.size)) + 353] = 'PangolinLibrary: INSUFFICIENT_LI'
                        mem[(8 * ceil32(return_data.size)) + 385] = 'QUIDITY' << 200
                        revert with memory
                          from (8 * ceil32(return_data.size)) + 285
                           len ceil32(return_data.size) + 132
                    if not arg3:
                        if ext_call.return_data[18 len 14] - arg3 > ext_call.return_data[18 len 14]:
                            mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 289] = 32
                            mem[(8 * ceil32(return_data.size)) + 321] = 21
                            mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-sub-underflow' << 88
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 285
                               len ceil32(return_data.size) + 100
                        if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / 997 != ext_call.return_data[18 len 14] - arg3:
                            mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 289] = 32
                            mem[(8 * ceil32(return_data.size)) + 321] = 20
                            mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-mul-overflow' << 96
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 285
                               len ceil32(return_data.size) + 100
                        require (997 * ext_call.return_data[18 len 14]) - (997 * arg3)
                        if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                            mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 289] = 32
                            mem[(8 * ceil32(return_data.size)) + 321] = 20
                            mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-add-overflow' << 96
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 285
                               len ceil32(return_data.size) + 100
                        mem[(8 * ceil32(return_data.size)) + 289] = msg.sender
                        mem[(8 * ceil32(return_data.size)) + 321] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                    else:
                        require arg3
                        if ext_call.return_data[50 len 14] * arg3 / arg3 != ext_call.return_data[50 len 14]:
                            mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 289] = 32
                            mem[(8 * ceil32(return_data.size)) + 321] = 20
                            mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-mul-overflow' << 96
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 285
                               len ceil32(return_data.size) + 100
                        if 1000 * ext_call.return_data[50 len 14] * arg3 / 1000 != ext_call.return_data[50 len 14] * arg3:
                            mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 289] = 32
                            mem[(8 * ceil32(return_data.size)) + 321] = 20
                            mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-mul-overflow' << 96
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 285
                               len ceil32(return_data.size) + 100
                        if ext_call.return_data[18 len 14] - arg3 > ext_call.return_data[18 len 14]:
                            mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 289] = 32
                            mem[(8 * ceil32(return_data.size)) + 321] = 21
                            mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-sub-underflow' << 88
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 285
                               len ceil32(return_data.size) + 100
                        if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / 997 != ext_call.return_data[18 len 14] - arg3:
                            mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 289] = 32
                            mem[(8 * ceil32(return_data.size)) + 321] = 20
                            mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-mul-overflow' << 96
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 285
                               len ceil32(return_data.size) + 100
                        require (997 * ext_call.return_data[18 len 14]) - (997 * arg3)
                        if (1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                            mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 289] = 32
                            mem[(8 * ceil32(return_data.size)) + 321] = 20
                            mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-add-overflow' << 96
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 285
                               len ceil32(return_data.size) + 100
                        mem[(8 * ceil32(return_data.size)) + 289] = msg.sender
                        mem[(8 * ceil32(return_data.size)) + 321] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                else:
                    if not address(ext_call.return_data[0]):
                        revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                    if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                        revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                    if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 < address(ext_call.return_data[0]):
                        require ext_code.size(address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        staticcall address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                                gas gas_remaining wei
                    else:
                        if not address(ext_call.return_data[0]):
                            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                        require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                                gas gas_remaining wei
                    mem[(7 * ceil32(return_data.size)) + 285 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                    if arg3 <= 0:
                        mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[(8 * ceil32(return_data.size)) + 289] = 32
                        mem[(8 * ceil32(return_data.size)) + 321] = 43
                        mem[(8 * ceil32(return_data.size)) + 353] = 'PangolinLibrary: INSUFFICIENT_OU'
                        mem[(8 * ceil32(return_data.size)) + 385] = 0x545055545f414d4f554e54000000000000000000000000000000000000000000
                        revert with memory
                          from (8 * ceil32(return_data.size)) + 285
                           len ceil32(return_data.size) + 132
                    if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 289] = 32
                            mem[(8 * ceil32(return_data.size)) + 321] = 39
                            mem[(8 * ceil32(return_data.size)) + 353] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 385] = 'QUIDITY' << 200
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 285
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 289] = 32
                            mem[(8 * ceil32(return_data.size)) + 321] = 39
                            mem[(8 * ceil32(return_data.size)) + 353] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 385] = 'QUIDITY' << 200
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 285
                               len ceil32(return_data.size) + 132
                        if not arg3:
                            if ext_call.return_data[18 len 14] - arg3 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 289] = 32
                                mem[(8 * ceil32(return_data.size)) + 321] = 21
                                mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-sub-underflow' << 88
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 285
                                   len ceil32(return_data.size) + 100
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / 997 != ext_call.return_data[18 len 14] - arg3:
                                mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 289] = 32
                                mem[(8 * ceil32(return_data.size)) + 321] = 20
                                mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-mul-overflow' << 96
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 285
                                   len ceil32(return_data.size) + 100
                            require (997 * ext_call.return_data[18 len 14]) - (997 * arg3)
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 289] = 32
                                mem[(8 * ceil32(return_data.size)) + 321] = 20
                                mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-add-overflow' << 96
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 285
                                   len ceil32(return_data.size) + 100
                            mem[(8 * ceil32(return_data.size)) + 289] = msg.sender
                            mem[(8 * ceil32(return_data.size)) + 321] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                        else:
                            require arg3
                            if ext_call.return_data[50 len 14] * arg3 / arg3 != ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 289] = 32
                                mem[(8 * ceil32(return_data.size)) + 321] = 20
                                mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-mul-overflow' << 96
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 285
                                   len ceil32(return_data.size) + 100
                            if 1000 * ext_call.return_data[50 len 14] * arg3 / 1000 != ext_call.return_data[50 len 14] * arg3:
                                mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 289] = 32
                                mem[(8 * ceil32(return_data.size)) + 321] = 20
                                mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-mul-overflow' << 96
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 285
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] - arg3 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 289] = 32
                                mem[(8 * ceil32(return_data.size)) + 321] = 21
                                mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-sub-underflow' << 88
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 285
                                   len ceil32(return_data.size) + 100
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / 997 != ext_call.return_data[18 len 14] - arg3:
                                mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 289] = 32
                                mem[(8 * ceil32(return_data.size)) + 321] = 20
                                mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-mul-overflow' << 96
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 285
                                   len ceil32(return_data.size) + 100
                            require (997 * ext_call.return_data[18 len 14]) - (997 * arg3)
                            if (1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 289] = 32
                                mem[(8 * ceil32(return_data.size)) + 321] = 20
                                mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-add-overflow' << 96
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 285
                                   len ceil32(return_data.size) + 100
                            mem[(8 * ceil32(return_data.size)) + 289] = msg.sender
                            mem[(8 * ceil32(return_data.size)) + 321] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 289] = 32
                            mem[(8 * ceil32(return_data.size)) + 321] = 39
                            mem[(8 * ceil32(return_data.size)) + 353] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 385] = 'QUIDITY' << 200
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 285
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 289] = 32
                            mem[(8 * ceil32(return_data.size)) + 321] = 39
                            mem[(8 * ceil32(return_data.size)) + 353] = 'PangolinLibrary: INSUFFICIENT_LI'
                            mem[(8 * ceil32(return_data.size)) + 385] = 'QUIDITY' << 200
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 285
                               len ceil32(return_data.size) + 132
                        if not arg3:
                            if ext_call.return_data[50 len 14] - arg3 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 289] = 32
                                mem[(8 * ceil32(return_data.size)) + 321] = 21
                                mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-sub-underflow' << 88
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 285
                                   len ceil32(return_data.size) + 100
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / 997 != ext_call.return_data[50 len 14] - arg3:
                                mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 289] = 32
                                mem[(8 * ceil32(return_data.size)) + 321] = 20
                                mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-mul-overflow' << 96
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 285
                                   len ceil32(return_data.size) + 100
                            require (997 * ext_call.return_data[50 len 14]) - (997 * arg3)
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 289] = 32
                                mem[(8 * ceil32(return_data.size)) + 321] = 20
                                mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-add-overflow' << 96
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 285
                                   len ceil32(return_data.size) + 100
                            mem[(8 * ceil32(return_data.size)) + 289] = msg.sender
                            mem[(8 * ceil32(return_data.size)) + 321] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                        else:
                            require arg3
                            if ext_call.return_data[18 len 14] * arg3 / arg3 != ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 289] = 32
                                mem[(8 * ceil32(return_data.size)) + 321] = 20
                                mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-mul-overflow' << 96
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 285
                                   len ceil32(return_data.size) + 100
                            if 1000 * ext_call.return_data[18 len 14] * arg3 / 1000 != ext_call.return_data[18 len 14] * arg3:
                                mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 289] = 32
                                mem[(8 * ceil32(return_data.size)) + 321] = 20
                                mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-mul-overflow' << 96
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 285
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] - arg3 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 289] = 32
                                mem[(8 * ceil32(return_data.size)) + 321] = 21
                                mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-sub-underflow' << 88
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 285
                                   len ceil32(return_data.size) + 100
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / 997 != ext_call.return_data[50 len 14] - arg3:
                                mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 289] = 32
                                mem[(8 * ceil32(return_data.size)) + 321] = 20
                                mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-mul-overflow' << 96
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 285
                                   len ceil32(return_data.size) + 100
                            require (997 * ext_call.return_data[50 len 14]) - (997 * arg3)
                            if (1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 285] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 289] = 32
                                mem[(8 * ceil32(return_data.size)) + 321] = 20
                                mem[(8 * ceil32(return_data.size)) + 353] = 'ds-math-add-overflow' << 96
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 285
                                   len ceil32(return_data.size) + 100
                            mem[(8 * ceil32(return_data.size)) + 289] = msg.sender
                            mem[(8 * ceil32(return_data.size)) + 321] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
            require ext_code.size(address(ext_call.return_data[0]))
            call address(ext_call.return_data[0]).0xa9059cbb with:
                 gas gas_remaining wei
                args mem[(8 * ceil32(return_data.size)) + 289 len ceil32(return_data.size) + 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == bool(ext_call.return_data[0])
        else:
            if 0x5c0401e81bc07ca70fad469b451682c0d747ef1c == address(cd[(arg4 + 100)]):
                require ext_code.size(address(ext_call.return_data[0]))
                if arg2:
                    call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args address(cd[(arg4 + 68)]), arg2
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require ext_code.size(address(cd[(arg4 + 68)]))
                    call address(cd[(arg4 + 68)]).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                         gas gas_remaining wei
                        args address(cd[(arg4 + 36)]), arg2, address(cd[(arg4 + 100)])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(address(cd[(arg4 + 100)]))
                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(address(cd[(arg4 + 100)]))
                    call address(cd[(arg4 + 100)]).redeem(uint256 rg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.deposit() with:
                       value eth.balance(this.address) wei
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if address(ext_call.return_data[0]) == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                        revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                    if address(ext_call.return_data[0]) >= 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                        if address(ext_call.return_data[0]) == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                            revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                        if address(ext_call.return_data[0]) >= 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            staticcall address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                                    gas gas_remaining wei
                        else:
                            if not address(ext_call.return_data[0]):
                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                                    gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 96
                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                        if arg2 <= 0:
                            revert with 0, 'PangolinLibrary: INSUFFICIENT_OUTPUT_AMOUNT'
                        if address(ext_call.return_data[0]) == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                            if not arg2:
                                if ext_call.return_data[18 len 14] - arg2 > ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / 997 != ext_call.return_data[18 len 14] - arg2:
                                    revert with 0, 'ds-math-mul-overflow'
                                require (997 * ext_call.return_data[18 len 14]) - (997 * arg2)
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 0, 'ds-math-add-overflow'
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                            else:
                                require arg2
                                if ext_call.return_data[50 len 14] * arg2 / arg2 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / 1000 != ext_call.return_data[50 len 14] * arg2:
                                    revert with 0, 'ds-math-mul-overflow'
                                if ext_call.return_data[18 len 14] - arg2 > ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / 997 != ext_call.return_data[18 len 14] - arg2:
                                    revert with 0, 'ds-math-mul-overflow'
                                require (997 * ext_call.return_data[18 len 14]) - (997 * arg2)
                                if (1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 0, 'ds-math-add-overflow'
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                        else:
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                            if not arg2:
                                if ext_call.return_data[50 len 14] - arg2 > ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / 997 != ext_call.return_data[50 len 14] - arg2:
                                    revert with 0, 'ds-math-mul-overflow'
                                require (997 * ext_call.return_data[50 len 14]) - (997 * arg2)
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 0, 'ds-math-add-overflow'
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                            else:
                                require arg2
                                if ext_call.return_data[18 len 14] * arg2 / arg2 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / 1000 != ext_call.return_data[18 len 14] * arg2:
                                    revert with 0, 'ds-math-mul-overflow'
                                if ext_call.return_data[50 len 14] - arg2 > ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / 997 != ext_call.return_data[50 len 14] - arg2:
                                    revert with 0, 'ds-math-mul-overflow'
                                require (997 * ext_call.return_data[50 len 14]) - (997 * arg2)
                                if (1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 0, 'ds-math-add-overflow'
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                    else:
                        if not address(ext_call.return_data[0]):
                            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                        if address(ext_call.return_data[0]) == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                            revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                        if address(ext_call.return_data[0]) >= 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            staticcall address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                                    gas gas_remaining wei
                        else:
                            if not address(ext_call.return_data[0]):
                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                                    gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 96
                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                        if arg2 <= 0:
                            revert with 0, 'PangolinLibrary: INSUFFICIENT_OUTPUT_AMOUNT'
                        if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                            if not arg2:
                                if ext_call.return_data[18 len 14] - arg2 > ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / 997 != ext_call.return_data[18 len 14] - arg2:
                                    revert with 0, 'ds-math-mul-overflow'
                                require (997 * ext_call.return_data[18 len 14]) - (997 * arg2)
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 0, 'ds-math-add-overflow'
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                            else:
                                require arg2
                                if ext_call.return_data[50 len 14] * arg2 / arg2 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / 1000 != ext_call.return_data[50 len 14] * arg2:
                                    revert with 0, 'ds-math-mul-overflow'
                                if ext_call.return_data[18 len 14] - arg2 > ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / 997 != ext_call.return_data[18 len 14] - arg2:
                                    revert with 0, 'ds-math-mul-overflow'
                                require (997 * ext_call.return_data[18 len 14]) - (997 * arg2)
                                if (1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 0, 'ds-math-add-overflow'
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                        else:
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                            if not arg2:
                                if ext_call.return_data[50 len 14] - arg2 > ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / 997 != ext_call.return_data[50 len 14] - arg2:
                                    revert with 0, 'ds-math-mul-overflow'
                                require (997 * ext_call.return_data[50 len 14]) - (997 * arg2)
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 0, 'ds-math-add-overflow'
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                            else:
                                require arg2
                                if ext_call.return_data[18 len 14] * arg2 / arg2 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / 1000 != ext_call.return_data[18 len 14] * arg2:
                                    revert with 0, 'ds-math-mul-overflow'
                                if ext_call.return_data[50 len 14] - arg2 > ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / 997 != ext_call.return_data[50 len 14] - arg2:
                                    revert with 0, 'ds-math-mul-overflow'
                                require (997 * ext_call.return_data[50 len 14]) - (997 * arg2)
                                if (1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 0, 'ds-math-add-overflow'
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                else:
                    call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args address(cd[(arg4 + 68)]), arg3
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require ext_code.size(address(cd[(arg4 + 68)]))
                    call address(cd[(arg4 + 68)]).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                         gas gas_remaining wei
                        args address(cd[(arg4 + 36)]), arg3, address(cd[(arg4 + 100)])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(address(cd[(arg4 + 100)]))
                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(address(cd[(arg4 + 100)]))
                    call address(cd[(arg4 + 100)]).redeem(uint256 rg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.deposit() with:
                       value eth.balance(this.address) wei
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if address(ext_call.return_data[0]) == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                        revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                    if address(ext_call.return_data[0]) >= 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                        if address(ext_call.return_data[0]) == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                            revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                        if address(ext_call.return_data[0]) >= 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            staticcall address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                                    gas gas_remaining wei
                        else:
                            if not address(ext_call.return_data[0]):
                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                                    gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 96
                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                        if arg3 <= 0:
                            revert with 0, 'PangolinLibrary: INSUFFICIENT_OUTPUT_AMOUNT'
                        if address(ext_call.return_data[0]) == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                            if not arg3:
                                if ext_call.return_data[18 len 14] - arg3 > ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / 997 != ext_call.return_data[18 len 14] - arg3:
                                    revert with 0, 'ds-math-mul-overflow'
                                require (997 * ext_call.return_data[18 len 14]) - (997 * arg3)
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 0, 'ds-math-add-overflow'
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                            else:
                                require arg3
                                if ext_call.return_data[50 len 14] * arg3 / arg3 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / 1000 != ext_call.return_data[50 len 14] * arg3:
                                    revert with 0, 'ds-math-mul-overflow'
                                if ext_call.return_data[18 len 14] - arg3 > ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / 997 != ext_call.return_data[18 len 14] - arg3:
                                    revert with 0, 'ds-math-mul-overflow'
                                require (997 * ext_call.return_data[18 len 14]) - (997 * arg3)
                                if (1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 0, 'ds-math-add-overflow'
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                        else:
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                            if not arg3:
                                if ext_call.return_data[50 len 14] - arg3 > ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / 997 != ext_call.return_data[50 len 14] - arg3:
                                    revert with 0, 'ds-math-mul-overflow'
                                require (997 * ext_call.return_data[50 len 14]) - (997 * arg3)
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 0, 'ds-math-add-overflow'
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                            else:
                                require arg3
                                if ext_call.return_data[18 len 14] * arg3 / arg3 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / 1000 != ext_call.return_data[18 len 14] * arg3:
                                    revert with 0, 'ds-math-mul-overflow'
                                if ext_call.return_data[50 len 14] - arg3 > ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / 997 != ext_call.return_data[50 len 14] - arg3:
                                    revert with 0, 'ds-math-mul-overflow'
                                require (997 * ext_call.return_data[50 len 14]) - (997 * arg3)
                                if (1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 0, 'ds-math-add-overflow'
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                    else:
                        if not address(ext_call.return_data[0]):
                            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                        if address(ext_call.return_data[0]) == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                            revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                        if address(ext_call.return_data[0]) >= 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            staticcall address(sha3(0, 17269419903419772280, sha3(12907147938406234195, address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                                    gas gas_remaining wei
                        else:
                            if not address(ext_call.return_data[0]):
                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                                    gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 96
                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                        if arg3 <= 0:
                            revert with 0, 'PangolinLibrary: INSUFFICIENT_OUTPUT_AMOUNT'
                        if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                            if not arg3:
                                if ext_call.return_data[18 len 14] - arg3 > ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / 997 != ext_call.return_data[18 len 14] - arg3:
                                    revert with 0, 'ds-math-mul-overflow'
                                require (997 * ext_call.return_data[18 len 14]) - (997 * arg3)
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 0, 'ds-math-add-overflow'
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                            else:
                                require arg3
                                if ext_call.return_data[50 len 14] * arg3 / arg3 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / 1000 != ext_call.return_data[50 len 14] * arg3:
                                    revert with 0, 'ds-math-mul-overflow'
                                if ext_call.return_data[18 len 14] - arg3 > ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / 997 != ext_call.return_data[18 len 14] - arg3:
                                    revert with 0, 'ds-math-mul-overflow'
                                require (997 * ext_call.return_data[18 len 14]) - (997 * arg3)
                                if (1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 0, 'ds-math-add-overflow'
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                        else:
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                            if not arg3:
                                if ext_call.return_data[50 len 14] - arg3 > ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / 997 != ext_call.return_data[50 len 14] - arg3:
                                    revert with 0, 'ds-math-mul-overflow'
                                require (997 * ext_call.return_data[50 len 14]) - (997 * arg3)
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 0, 'ds-math-add-overflow'
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                            else:
                                require arg3
                                if ext_call.return_data[18 len 14] * arg3 / arg3 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / 1000 != ext_call.return_data[18 len 14] * arg3:
                                    revert with 0, 'ds-math-mul-overflow'
                                if ext_call.return_data[50 len 14] - arg3 > ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-sub-underflow'
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / 997 != ext_call.return_data[50 len 14] - arg3:
                                    revert with 0, 'ds-math-mul-overflow'
                                require (997 * ext_call.return_data[50 len 14]) - (997 * arg3)
                                if (1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 0, 'ds-math-add-overflow'
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
            else:
                mem[(4 * ceil32(return_data.size)) + 100] = address(cd[(arg4 + 68)])
                if not arg2:
                    mem[(4 * ceil32(return_data.size)) + 132] = arg3
                    require ext_code.size(address(ext_call.return_data[0]))
                    call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args address(cd[(arg4 + 68)]), arg3
                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    mem[(6 * ceil32(return_data.size)) + 100] = address(cd[(arg4 + 36)])
                    mem[(6 * ceil32(return_data.size)) + 132] = arg3
                    mem[(6 * ceil32(return_data.size)) + 164] = address(cd[(arg4 + 100)])
                    require ext_code.size(address(cd[(arg4 + 68)]))
                    call address(cd[(arg4 + 68)]).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                         gas gas_remaining wei
                        args address(cd[(arg4 + 36)]), arg3, address(cd[(arg4 + 100)])
                    mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[(7 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(address(cd[(arg4 + 100)]))
                    call address(cd[(arg4 + 100)]).balanceOfUnderlying(address rg1) with:
                         gas gas_remaining wei
                        args this.address
                    mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[(8 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(address(cd[(arg4 + 100)]))
                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[(10 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                    require ext_code.size(address(cd[(arg4 + 100)]))
                    call address(cd[(arg4 + 100)]).redeem(uint256 rg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    mem[(10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(address(cd[(arg4 + 100)]))
                    staticcall address(cd[(arg4 + 100)]).underlying() with:
                            gas gas_remaining wei
                    mem[(11 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                    if not address(ext_call.return_data[0]):
                        revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                    if not address(ext_call.return_data[0]):
                        revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                    mem[(12 * ceil32(return_data.size)) + 128] = address(ext_call.return_data[0])
                    mem[(12 * ceil32(return_data.size)) + 148] = address(ext_call.return_data[0])
                    mem[(12 * ceil32(return_data.size)) + 96] = 40
                    mem[(12 * ceil32(return_data.size)) + 200] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[(12 * ceil32(return_data.size)) + 201] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                    mem[(12 * ceil32(return_data.size)) + 221] = sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0]))
                    mem[(12 * ceil32(return_data.size)) + 253] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                    mem[(12 * ceil32(return_data.size)) + 168] = 85
                    require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                    staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                            gas gas_remaining wei
                    mem[(12 * ceil32(return_data.size)) + 285 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                    if arg3 <= 0:
                        revert with 0, 'PangolinLibrary: INSUFFICIENT_OUTPUT_AMOUNT'
                    if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                        if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                            if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                if ext_call.return_data[50 len 14] <= 0:
                                    revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                                if ext_call.return_data[18 len 14] <= 0:
                                    revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                                if not arg3:
                                    if ext_call.return_data[18 len 14] - arg3 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'ds-math-sub-underflow'
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / 997 != ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 'ds-math-mul-overflow'
                                    require (997 * ext_call.return_data[18 len 14]) - (997 * arg3)
                                    if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                        revert with 0, 'ds-math-add-overflow'
                                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(13 * ceil32(return_data.size)) + 289] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[(13 * ceil32(return_data.size)) + 321] = ext_call.return_data[0]
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, ext_call.return_data[0]
                                        mem[(13 * ceil32(return_data.size)) + 285] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 285] = 2
                                        mem[(15 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 349] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 381] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(15 * ceil32(return_data.size)) + 385] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(15 * ceil32(return_data.size)) + 417] = ext_call.return_data[0]
                                        mem[(15 * ceil32(return_data.size)) + 449] = 160
                                        mem[(15 * ceil32(return_data.size)) + 545] = 2
                                        idx = 0
                                        s = (15 * ceil32(return_data.size)) + 577
                                        t = (15 * ceil32(return_data.size)) + 317
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(15 * ceil32(return_data.size)) + 481] = this.address
                                        mem[(15 * ceil32(return_data.size)) + 513] = block.timestamp + 60
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(15 * ceil32(return_data.size)) + 577 len 64]), address(this.address), block.timestamp + 60
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(15 * ceil32(return_data.size)) + 381 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (16 * ceil32(return_data.size)) + 381
                                        require return_data.size >= 32
                                        _2589 = mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (15 * ceil32(return_data.size)) + return_data.size + 381 > (15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 412
                                        _2621 = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381]
                                        require mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381] <= test266151307()
                                        require (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381]) + 32 >= 0 and (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381]) + 413 <= test266151307()
                                        mem[64] = (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381]) + 413
                                        mem[(16 * ceil32(return_data.size)) + 381] = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381]
                                        require return_data.size >= _2589 + (32 * _2621) + 32
                                        mem[(16 * ceil32(return_data.size)) + 413 len 32 * _2621] = mem[(15 * ceil32(return_data.size)) + _2589 + 413 len 32 * _2621]
                                        mem[mem[64] + 4] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3069 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3069] == bool(mem[_3069])
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3197 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3197] == bool(mem[_3197])
                                else:
                                    require arg3
                                    if ext_call.return_data[50 len 14] * arg3 / arg3 != ext_call.return_data[50 len 14]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * ext_call.return_data[50 len 14] * arg3 / 1000 != ext_call.return_data[50 len 14] * arg3:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if ext_call.return_data[18 len 14] - arg3 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'ds-math-sub-underflow'
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / 997 != ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 'ds-math-mul-overflow'
                                    require (997 * ext_call.return_data[18 len 14]) - (997 * arg3)
                                    if (1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                        revert with 0, 'ds-math-add-overflow'
                                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(13 * ceil32(return_data.size)) + 289] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[(13 * ceil32(return_data.size)) + 321] = ext_call.return_data[0]
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, ext_call.return_data[0]
                                        mem[(13 * ceil32(return_data.size)) + 285] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 285] = 2
                                        mem[(15 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 349] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 381] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(15 * ceil32(return_data.size)) + 385] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(15 * ceil32(return_data.size)) + 417] = ext_call.return_data[0]
                                        mem[(15 * ceil32(return_data.size)) + 449] = 160
                                        mem[(15 * ceil32(return_data.size)) + 545] = 2
                                        idx = 0
                                        s = (15 * ceil32(return_data.size)) + 577
                                        t = (15 * ceil32(return_data.size)) + 317
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(15 * ceil32(return_data.size)) + 481] = this.address
                                        mem[(15 * ceil32(return_data.size)) + 513] = block.timestamp + 60
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(15 * ceil32(return_data.size)) + 577 len 64]), address(this.address), block.timestamp + 60
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(15 * ceil32(return_data.size)) + 381 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (16 * ceil32(return_data.size)) + 381
                                        require return_data.size >= 32
                                        _2590 = mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (15 * ceil32(return_data.size)) + return_data.size + 381 > (15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 412
                                        _2622 = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381]
                                        require mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381] <= test266151307()
                                        require (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381]) + 32 >= 0 and (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381]) + 413 <= test266151307()
                                        mem[64] = (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381]) + 413
                                        mem[(16 * ceil32(return_data.size)) + 381] = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381]
                                        require return_data.size >= _2590 + (32 * _2622) + 32
                                        mem[(16 * ceil32(return_data.size)) + 413 len 32 * _2622] = mem[(15 * ceil32(return_data.size)) + _2590 + 413 len 32 * _2622]
                                        mem[mem[64] + 4] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3070 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3070] == bool(mem[_3070])
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3198 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3198] == bool(mem[_3198])
                            else:
                                if ext_call.return_data[18 len 14] <= 0:
                                    revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                                if ext_call.return_data[50 len 14] <= 0:
                                    revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                                if not arg3:
                                    if ext_call.return_data[50 len 14] - arg3 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'ds-math-sub-underflow'
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / 997 != ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 'ds-math-mul-overflow'
                                    require (997 * ext_call.return_data[50 len 14]) - (997 * arg3)
                                    if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                        revert with 0, 'ds-math-add-overflow'
                                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(13 * ceil32(return_data.size)) + 289] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[(13 * ceil32(return_data.size)) + 321] = ext_call.return_data[0]
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, ext_call.return_data[0]
                                        mem[(13 * ceil32(return_data.size)) + 285] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 285] = 2
                                        mem[(15 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 349] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 381] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(15 * ceil32(return_data.size)) + 385] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(15 * ceil32(return_data.size)) + 417] = ext_call.return_data[0]
                                        mem[(15 * ceil32(return_data.size)) + 449] = 160
                                        mem[(15 * ceil32(return_data.size)) + 545] = 2
                                        idx = 0
                                        s = (15 * ceil32(return_data.size)) + 577
                                        t = (15 * ceil32(return_data.size)) + 317
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(15 * ceil32(return_data.size)) + 481] = this.address
                                        mem[(15 * ceil32(return_data.size)) + 513] = block.timestamp + 60
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(15 * ceil32(return_data.size)) + 577 len 64]), address(this.address), block.timestamp + 60
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(15 * ceil32(return_data.size)) + 381 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (16 * ceil32(return_data.size)) + 381
                                        require return_data.size >= 32
                                        _2591 = mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (15 * ceil32(return_data.size)) + return_data.size + 381 > (15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 412
                                        _2623 = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381]
                                        require mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381] <= test266151307()
                                        require (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381]) + 32 >= 0 and (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381]) + 413 <= test266151307()
                                        mem[64] = (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381]) + 413
                                        mem[(16 * ceil32(return_data.size)) + 381] = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381]
                                        require return_data.size >= _2591 + (32 * _2623) + 32
                                        mem[(16 * ceil32(return_data.size)) + 413 len 32 * _2623] = mem[(15 * ceil32(return_data.size)) + _2591 + 413 len 32 * _2623]
                                        mem[mem[64] + 4] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3071 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3071] == bool(mem[_3071])
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3199 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3199] == bool(mem[_3199])
                                else:
                                    require arg3
                                    if ext_call.return_data[18 len 14] * arg3 / arg3 != ext_call.return_data[18 len 14]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * ext_call.return_data[18 len 14] * arg3 / 1000 != ext_call.return_data[18 len 14] * arg3:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if ext_call.return_data[50 len 14] - arg3 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'ds-math-sub-underflow'
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / 997 != ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 'ds-math-mul-overflow'
                                    require (997 * ext_call.return_data[50 len 14]) - (997 * arg3)
                                    if (1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                        revert with 0, 'ds-math-add-overflow'
                                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(13 * ceil32(return_data.size)) + 289] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[(13 * ceil32(return_data.size)) + 321] = ext_call.return_data[0]
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, ext_call.return_data[0]
                                        mem[(13 * ceil32(return_data.size)) + 285] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 285] = 2
                                        mem[(15 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 349] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 381] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(15 * ceil32(return_data.size)) + 385] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(15 * ceil32(return_data.size)) + 417] = ext_call.return_data[0]
                                        mem[(15 * ceil32(return_data.size)) + 449] = 160
                                        mem[(15 * ceil32(return_data.size)) + 545] = 2
                                        idx = 0
                                        s = (15 * ceil32(return_data.size)) + 577
                                        t = (15 * ceil32(return_data.size)) + 317
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(15 * ceil32(return_data.size)) + 481] = this.address
                                        mem[(15 * ceil32(return_data.size)) + 513] = block.timestamp + 60
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(15 * ceil32(return_data.size)) + 577 len 64]), address(this.address), block.timestamp + 60
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(15 * ceil32(return_data.size)) + 381 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (16 * ceil32(return_data.size)) + 381
                                        require return_data.size >= 32
                                        _2592 = mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (15 * ceil32(return_data.size)) + return_data.size + 381 > (15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 412
                                        _2624 = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381]
                                        require mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381] <= test266151307()
                                        require (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381]) + 32 >= 0 and (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381]) + 413 <= test266151307()
                                        mem[64] = (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381]) + 413
                                        mem[(16 * ceil32(return_data.size)) + 381] = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381]
                                        require return_data.size >= _2592 + (32 * _2624) + 32
                                        mem[(16 * ceil32(return_data.size)) + 413 len 32 * _2624] = mem[(15 * ceil32(return_data.size)) + _2592 + 413 len 32 * _2624]
                                        mem[mem[64] + 4] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3072 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3072] == bool(mem[_3072])
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3200 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3200] == bool(mem[_3200])
                        else:
                            if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                if ext_call.return_data[50 len 14] <= 0:
                                    revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                                if ext_call.return_data[18 len 14] <= 0:
                                    revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                                if not arg3:
                                    if ext_call.return_data[18 len 14] - arg3 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'ds-math-sub-underflow'
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / 997 != ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 'ds-math-mul-overflow'
                                    require (997 * ext_call.return_data[18 len 14]) - (997 * arg3)
                                    if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                        revert with 0, 'ds-math-add-overflow'
                                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(13 * ceil32(return_data.size)) + 289] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[(13 * ceil32(return_data.size)) + 321] = ext_call.return_data[0]
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, ext_call.return_data[0]
                                        mem[(13 * ceil32(return_data.size)) + 285] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 285] = 2
                                        mem[(15 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 349] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 381] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(15 * ceil32(return_data.size)) + 385] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(15 * ceil32(return_data.size)) + 417] = ext_call.return_data[0]
                                        mem[(15 * ceil32(return_data.size)) + 449] = 160
                                        mem[(15 * ceil32(return_data.size)) + 545] = 2
                                        idx = 0
                                        s = (15 * ceil32(return_data.size)) + 577
                                        t = (15 * ceil32(return_data.size)) + 317
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(15 * ceil32(return_data.size)) + 481] = this.address
                                        mem[(15 * ceil32(return_data.size)) + 513] = block.timestamp + 60
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(15 * ceil32(return_data.size)) + 577 len 64]), address(this.address), block.timestamp + 60
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(15 * ceil32(return_data.size)) + 381 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (16 * ceil32(return_data.size)) + 381
                                        require return_data.size >= 32
                                        _2593 = mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (15 * ceil32(return_data.size)) + return_data.size + 381 > (15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 412
                                        _2625 = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381]
                                        require mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381] <= test266151307()
                                        require (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381]) + 32 >= 0 and (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381]) + 413 <= test266151307()
                                        mem[64] = (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381]) + 413
                                        mem[(16 * ceil32(return_data.size)) + 381] = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381]
                                        require return_data.size >= _2593 + (32 * _2625) + 32
                                        mem[(16 * ceil32(return_data.size)) + 413 len 32 * _2625] = mem[(15 * ceil32(return_data.size)) + _2593 + 413 len 32 * _2625]
                                        mem[mem[64] + 4] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3073 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3073] == bool(mem[_3073])
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3201 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3201] == bool(mem[_3201])
                                else:
                                    require arg3
                                    if ext_call.return_data[50 len 14] * arg3 / arg3 != ext_call.return_data[50 len 14]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * ext_call.return_data[50 len 14] * arg3 / 1000 != ext_call.return_data[50 len 14] * arg3:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if ext_call.return_data[18 len 14] - arg3 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'ds-math-sub-underflow'
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / 997 != ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 'ds-math-mul-overflow'
                                    require (997 * ext_call.return_data[18 len 14]) - (997 * arg3)
                                    if (1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                        revert with 0, 'ds-math-add-overflow'
                                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(13 * ceil32(return_data.size)) + 289] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[(13 * ceil32(return_data.size)) + 321] = ext_call.return_data[0]
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, ext_call.return_data[0]
                                        mem[(13 * ceil32(return_data.size)) + 285] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 285] = 2
                                        mem[(15 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 349] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 381] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(15 * ceil32(return_data.size)) + 385] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(15 * ceil32(return_data.size)) + 417] = ext_call.return_data[0]
                                        mem[(15 * ceil32(return_data.size)) + 449] = 160
                                        mem[(15 * ceil32(return_data.size)) + 545] = 2
                                        idx = 0
                                        s = (15 * ceil32(return_data.size)) + 577
                                        t = (15 * ceil32(return_data.size)) + 317
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(15 * ceil32(return_data.size)) + 481] = this.address
                                        mem[(15 * ceil32(return_data.size)) + 513] = block.timestamp + 60
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(15 * ceil32(return_data.size)) + 577 len 64]), address(this.address), block.timestamp + 60
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(15 * ceil32(return_data.size)) + 381 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (16 * ceil32(return_data.size)) + 381
                                        require return_data.size >= 32
                                        _2594 = mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (15 * ceil32(return_data.size)) + return_data.size + 381 > (15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 412
                                        _2626 = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381]
                                        require mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381] <= test266151307()
                                        require (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381]) + 32 >= 0 and (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381]) + 413 <= test266151307()
                                        mem[64] = (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381]) + 413
                                        mem[(16 * ceil32(return_data.size)) + 381] = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381]
                                        require return_data.size >= _2594 + (32 * _2626) + 32
                                        mem[(16 * ceil32(return_data.size)) + 413 len 32 * _2626] = mem[(15 * ceil32(return_data.size)) + _2594 + 413 len 32 * _2626]
                                        mem[mem[64] + 4] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3074 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3074] == bool(mem[_3074])
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3202 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3202] == bool(mem[_3202])
                            else:
                                if ext_call.return_data[18 len 14] <= 0:
                                    revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                                if ext_call.return_data[50 len 14] <= 0:
                                    revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                                if not arg3:
                                    if ext_call.return_data[50 len 14] - arg3 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'ds-math-sub-underflow'
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / 997 != ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 'ds-math-mul-overflow'
                                    require (997 * ext_call.return_data[50 len 14]) - (997 * arg3)
                                    if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                        revert with 0, 'ds-math-add-overflow'
                                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(13 * ceil32(return_data.size)) + 289] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[(13 * ceil32(return_data.size)) + 321] = ext_call.return_data[0]
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, ext_call.return_data[0]
                                        mem[(13 * ceil32(return_data.size)) + 285] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 285] = 2
                                        mem[(15 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 349] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 381] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(15 * ceil32(return_data.size)) + 385] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(15 * ceil32(return_data.size)) + 417] = ext_call.return_data[0]
                                        mem[(15 * ceil32(return_data.size)) + 449] = 160
                                        mem[(15 * ceil32(return_data.size)) + 545] = 2
                                        idx = 0
                                        s = (15 * ceil32(return_data.size)) + 577
                                        t = (15 * ceil32(return_data.size)) + 317
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(15 * ceil32(return_data.size)) + 481] = this.address
                                        mem[(15 * ceil32(return_data.size)) + 513] = block.timestamp + 60
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(15 * ceil32(return_data.size)) + 577 len 64]), address(this.address), block.timestamp + 60
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(15 * ceil32(return_data.size)) + 381 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (16 * ceil32(return_data.size)) + 381
                                        require return_data.size >= 32
                                        _2595 = mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (15 * ceil32(return_data.size)) + return_data.size + 381 > (15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 412
                                        _2627 = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381]
                                        require mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381] <= test266151307()
                                        require (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381]) + 32 >= 0 and (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381]) + 413 <= test266151307()
                                        mem[64] = (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381]) + 413
                                        mem[(16 * ceil32(return_data.size)) + 381] = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381]
                                        require return_data.size >= _2595 + (32 * _2627) + 32
                                        mem[(16 * ceil32(return_data.size)) + 413 len 32 * _2627] = mem[(15 * ceil32(return_data.size)) + _2595 + 413 len 32 * _2627]
                                        mem[mem[64] + 4] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3075 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3075] == bool(mem[_3075])
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3203 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3203] == bool(mem[_3203])
                                else:
                                    require arg3
                                    if ext_call.return_data[18 len 14] * arg3 / arg3 != ext_call.return_data[18 len 14]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * ext_call.return_data[18 len 14] * arg3 / 1000 != ext_call.return_data[18 len 14] * arg3:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if ext_call.return_data[50 len 14] - arg3 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'ds-math-sub-underflow'
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / 997 != ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 'ds-math-mul-overflow'
                                    require (997 * ext_call.return_data[50 len 14]) - (997 * arg3)
                                    if (1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                        revert with 0, 'ds-math-add-overflow'
                                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(13 * ceil32(return_data.size)) + 289] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[(13 * ceil32(return_data.size)) + 321] = ext_call.return_data[0]
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, ext_call.return_data[0]
                                        mem[(13 * ceil32(return_data.size)) + 285] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 285] = 2
                                        mem[(15 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 349] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 381] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(15 * ceil32(return_data.size)) + 385] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(15 * ceil32(return_data.size)) + 417] = ext_call.return_data[0]
                                        mem[(15 * ceil32(return_data.size)) + 449] = 160
                                        mem[(15 * ceil32(return_data.size)) + 545] = 2
                                        idx = 0
                                        s = (15 * ceil32(return_data.size)) + 577
                                        t = (15 * ceil32(return_data.size)) + 317
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(15 * ceil32(return_data.size)) + 481] = this.address
                                        mem[(15 * ceil32(return_data.size)) + 513] = block.timestamp + 60
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(15 * ceil32(return_data.size)) + 577 len 64]), address(this.address), block.timestamp + 60
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(15 * ceil32(return_data.size)) + 381 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (16 * ceil32(return_data.size)) + 381
                                        require return_data.size >= 32
                                        _2596 = mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (15 * ceil32(return_data.size)) + return_data.size + 381 > (15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 412
                                        _2628 = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381]
                                        require mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381] <= test266151307()
                                        require (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381]) + 32 >= 0 and (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381]) + 413 <= test266151307()
                                        mem[64] = (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381]) + 413
                                        mem[(16 * ceil32(return_data.size)) + 381] = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381]
                                        require return_data.size >= _2596 + (32 * _2628) + 32
                                        mem[(16 * ceil32(return_data.size)) + 413 len 32 * _2628] = mem[(15 * ceil32(return_data.size)) + _2596 + 413 len 32 * _2628]
                                        mem[mem[64] + 4] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3076 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3076] == bool(mem[_3076])
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3204 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3204] == bool(mem[_3204])
                    else:
                        if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                            if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                if ext_call.return_data[50 len 14] <= 0:
                                    revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                                if ext_call.return_data[18 len 14] <= 0:
                                    revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                                if not arg3:
                                    if ext_call.return_data[18 len 14] - arg3 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'ds-math-sub-underflow'
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / 997 != ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 'ds-math-mul-overflow'
                                    require (997 * ext_call.return_data[18 len 14]) - (997 * arg3)
                                    if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                        revert with 0, 'ds-math-add-overflow'
                                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(13 * ceil32(return_data.size)) + 289] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[(13 * ceil32(return_data.size)) + 321] = ext_call.return_data[0]
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, ext_call.return_data[0]
                                        mem[(13 * ceil32(return_data.size)) + 285] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 285] = 2
                                        mem[(15 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 349] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 381] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(15 * ceil32(return_data.size)) + 385] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(15 * ceil32(return_data.size)) + 417] = ext_call.return_data[0]
                                        mem[(15 * ceil32(return_data.size)) + 449] = 160
                                        mem[(15 * ceil32(return_data.size)) + 545] = 2
                                        idx = 0
                                        s = (15 * ceil32(return_data.size)) + 577
                                        t = (15 * ceil32(return_data.size)) + 317
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(15 * ceil32(return_data.size)) + 481] = this.address
                                        mem[(15 * ceil32(return_data.size)) + 513] = block.timestamp + 60
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(15 * ceil32(return_data.size)) + 577 len 64]), address(this.address), block.timestamp + 60
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(15 * ceil32(return_data.size)) + 381 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (16 * ceil32(return_data.size)) + 381
                                        require return_data.size >= 32
                                        _2597 = mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (15 * ceil32(return_data.size)) + return_data.size + 381 > (15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 412
                                        _2629 = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381]
                                        require mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381] <= test266151307()
                                        require (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381]) + 32 >= 0 and (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381]) + 413 <= test266151307()
                                        mem[64] = (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381]) + 413
                                        mem[(16 * ceil32(return_data.size)) + 381] = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381]
                                        require return_data.size >= _2597 + (32 * _2629) + 32
                                        mem[(16 * ceil32(return_data.size)) + 413 len 32 * _2629] = mem[(15 * ceil32(return_data.size)) + _2597 + 413 len 32 * _2629]
                                        mem[mem[64] + 4] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3077 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3077] == bool(mem[_3077])
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3205 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3205] == bool(mem[_3205])
                                else:
                                    require arg3
                                    if ext_call.return_data[50 len 14] * arg3 / arg3 != ext_call.return_data[50 len 14]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * ext_call.return_data[50 len 14] * arg3 / 1000 != ext_call.return_data[50 len 14] * arg3:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if ext_call.return_data[18 len 14] - arg3 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'ds-math-sub-underflow'
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / 997 != ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 'ds-math-mul-overflow'
                                    require (997 * ext_call.return_data[18 len 14]) - (997 * arg3)
                                    if (1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                        revert with 0, 'ds-math-add-overflow'
                                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(13 * ceil32(return_data.size)) + 289] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[(13 * ceil32(return_data.size)) + 321] = ext_call.return_data[0]
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, ext_call.return_data[0]
                                        mem[(13 * ceil32(return_data.size)) + 285] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 285] = 2
                                        mem[(15 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 349] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 381] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(15 * ceil32(return_data.size)) + 385] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(15 * ceil32(return_data.size)) + 417] = ext_call.return_data[0]
                                        mem[(15 * ceil32(return_data.size)) + 449] = 160
                                        mem[(15 * ceil32(return_data.size)) + 545] = 2
                                        idx = 0
                                        s = (15 * ceil32(return_data.size)) + 577
                                        t = (15 * ceil32(return_data.size)) + 317
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(15 * ceil32(return_data.size)) + 481] = this.address
                                        mem[(15 * ceil32(return_data.size)) + 513] = block.timestamp + 60
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(15 * ceil32(return_data.size)) + 577 len 64]), address(this.address), block.timestamp + 60
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(15 * ceil32(return_data.size)) + 381 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (16 * ceil32(return_data.size)) + 381
                                        require return_data.size >= 32
                                        _2598 = mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (15 * ceil32(return_data.size)) + return_data.size + 381 > (15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 412
                                        _2630 = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381]
                                        require mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381] <= test266151307()
                                        require (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381]) + 32 >= 0 and (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381]) + 413 <= test266151307()
                                        mem[64] = (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381]) + 413
                                        mem[(16 * ceil32(return_data.size)) + 381] = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381]
                                        require return_data.size >= _2598 + (32 * _2630) + 32
                                        mem[(16 * ceil32(return_data.size)) + 413 len 32 * _2630] = mem[(15 * ceil32(return_data.size)) + _2598 + 413 len 32 * _2630]
                                        mem[mem[64] + 4] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3078 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3078] == bool(mem[_3078])
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3206 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3206] == bool(mem[_3206])
                            else:
                                if ext_call.return_data[18 len 14] <= 0:
                                    revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                                if ext_call.return_data[50 len 14] <= 0:
                                    revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                                if not arg3:
                                    if ext_call.return_data[50 len 14] - arg3 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'ds-math-sub-underflow'
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / 997 != ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 'ds-math-mul-overflow'
                                    require (997 * ext_call.return_data[50 len 14]) - (997 * arg3)
                                    if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                        revert with 0, 'ds-math-add-overflow'
                                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(13 * ceil32(return_data.size)) + 289] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[(13 * ceil32(return_data.size)) + 321] = ext_call.return_data[0]
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, ext_call.return_data[0]
                                        mem[(13 * ceil32(return_data.size)) + 285] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 285] = 2
                                        mem[(15 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 349] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 381] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(15 * ceil32(return_data.size)) + 385] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(15 * ceil32(return_data.size)) + 417] = ext_call.return_data[0]
                                        mem[(15 * ceil32(return_data.size)) + 449] = 160
                                        mem[(15 * ceil32(return_data.size)) + 545] = 2
                                        idx = 0
                                        s = (15 * ceil32(return_data.size)) + 577
                                        t = (15 * ceil32(return_data.size)) + 317
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(15 * ceil32(return_data.size)) + 481] = this.address
                                        mem[(15 * ceil32(return_data.size)) + 513] = block.timestamp + 60
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(15 * ceil32(return_data.size)) + 577 len 64]), address(this.address), block.timestamp + 60
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(15 * ceil32(return_data.size)) + 381 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (16 * ceil32(return_data.size)) + 381
                                        require return_data.size >= 32
                                        _2599 = mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (15 * ceil32(return_data.size)) + return_data.size + 381 > (15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 412
                                        _2631 = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381]
                                        require mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381] <= test266151307()
                                        require (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381]) + 32 >= 0 and (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381]) + 413 <= test266151307()
                                        mem[64] = (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381]) + 413
                                        mem[(16 * ceil32(return_data.size)) + 381] = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381]
                                        require return_data.size >= _2599 + (32 * _2631) + 32
                                        mem[(16 * ceil32(return_data.size)) + 413 len 32 * _2631] = mem[(15 * ceil32(return_data.size)) + _2599 + 413 len 32 * _2631]
                                        mem[mem[64] + 4] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3079 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3079] == bool(mem[_3079])
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3207 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3207] == bool(mem[_3207])
                                else:
                                    require arg3
                                    if ext_call.return_data[18 len 14] * arg3 / arg3 != ext_call.return_data[18 len 14]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * ext_call.return_data[18 len 14] * arg3 / 1000 != ext_call.return_data[18 len 14] * arg3:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if ext_call.return_data[50 len 14] - arg3 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'ds-math-sub-underflow'
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / 997 != ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 'ds-math-mul-overflow'
                                    require (997 * ext_call.return_data[50 len 14]) - (997 * arg3)
                                    if (1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                        revert with 0, 'ds-math-add-overflow'
                                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(13 * ceil32(return_data.size)) + 289] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[(13 * ceil32(return_data.size)) + 321] = ext_call.return_data[0]
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, ext_call.return_data[0]
                                        mem[(13 * ceil32(return_data.size)) + 285] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 285] = 2
                                        mem[(15 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 349] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 381] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(15 * ceil32(return_data.size)) + 385] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(15 * ceil32(return_data.size)) + 417] = ext_call.return_data[0]
                                        mem[(15 * ceil32(return_data.size)) + 449] = 160
                                        mem[(15 * ceil32(return_data.size)) + 545] = 2
                                        idx = 0
                                        s = (15 * ceil32(return_data.size)) + 577
                                        t = (15 * ceil32(return_data.size)) + 317
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(15 * ceil32(return_data.size)) + 481] = this.address
                                        mem[(15 * ceil32(return_data.size)) + 513] = block.timestamp + 60
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(15 * ceil32(return_data.size)) + 577 len 64]), address(this.address), block.timestamp + 60
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(15 * ceil32(return_data.size)) + 381 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (16 * ceil32(return_data.size)) + 381
                                        require return_data.size >= 32
                                        _2600 = mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (15 * ceil32(return_data.size)) + return_data.size + 381 > (15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 412
                                        _2632 = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381]
                                        require mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381] <= test266151307()
                                        require (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381]) + 32 >= 0 and (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381]) + 413 <= test266151307()
                                        mem[64] = (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381]) + 413
                                        mem[(16 * ceil32(return_data.size)) + 381] = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381]
                                        require return_data.size >= _2600 + (32 * _2632) + 32
                                        mem[(16 * ceil32(return_data.size)) + 413 len 32 * _2632] = mem[(15 * ceil32(return_data.size)) + _2600 + 413 len 32 * _2632]
                                        mem[mem[64] + 4] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3080 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3080] == bool(mem[_3080])
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3208 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3208] == bool(mem[_3208])
                        else:
                            if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                if ext_call.return_data[50 len 14] <= 0:
                                    revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                                if ext_call.return_data[18 len 14] <= 0:
                                    revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                                if not arg3:
                                    if ext_call.return_data[18 len 14] - arg3 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'ds-math-sub-underflow'
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / 997 != ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 'ds-math-mul-overflow'
                                    require (997 * ext_call.return_data[18 len 14]) - (997 * arg3)
                                    if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                        revert with 0, 'ds-math-add-overflow'
                                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(13 * ceil32(return_data.size)) + 289] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[(13 * ceil32(return_data.size)) + 321] = ext_call.return_data[0]
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, ext_call.return_data[0]
                                        mem[(13 * ceil32(return_data.size)) + 285] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 285] = 2
                                        mem[(15 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 349] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 381] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(15 * ceil32(return_data.size)) + 385] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(15 * ceil32(return_data.size)) + 417] = ext_call.return_data[0]
                                        mem[(15 * ceil32(return_data.size)) + 449] = 160
                                        mem[(15 * ceil32(return_data.size)) + 545] = 2
                                        idx = 0
                                        s = (15 * ceil32(return_data.size)) + 577
                                        t = (15 * ceil32(return_data.size)) + 317
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(15 * ceil32(return_data.size)) + 481] = this.address
                                        mem[(15 * ceil32(return_data.size)) + 513] = block.timestamp + 60
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(15 * ceil32(return_data.size)) + 577 len 64]), address(this.address), block.timestamp + 60
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(15 * ceil32(return_data.size)) + 381 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (16 * ceil32(return_data.size)) + 381
                                        require return_data.size >= 32
                                        _2601 = mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (15 * ceil32(return_data.size)) + return_data.size + 381 > (15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 412
                                        _2633 = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381]
                                        require mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381] <= test266151307()
                                        require (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381]) + 32 >= 0 and (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381]) + 413 <= test266151307()
                                        mem[64] = (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381]) + 413
                                        mem[(16 * ceil32(return_data.size)) + 381] = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381]
                                        require return_data.size >= _2601 + (32 * _2633) + 32
                                        mem[(16 * ceil32(return_data.size)) + 413 len 32 * _2633] = mem[(15 * ceil32(return_data.size)) + _2601 + 413 len 32 * _2633]
                                        mem[mem[64] + 4] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3081 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3081] == bool(mem[_3081])
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3209 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3209] == bool(mem[_3209])
                                else:
                                    require arg3
                                    if ext_call.return_data[50 len 14] * arg3 / arg3 != ext_call.return_data[50 len 14]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * ext_call.return_data[50 len 14] * arg3 / 1000 != ext_call.return_data[50 len 14] * arg3:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if ext_call.return_data[18 len 14] - arg3 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'ds-math-sub-underflow'
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / 997 != ext_call.return_data[18 len 14] - arg3:
                                        revert with 0, 'ds-math-mul-overflow'
                                    require (997 * ext_call.return_data[18 len 14]) - (997 * arg3)
                                    if (1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                        revert with 0, 'ds-math-add-overflow'
                                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(13 * ceil32(return_data.size)) + 289] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[(13 * ceil32(return_data.size)) + 321] = ext_call.return_data[0]
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, ext_call.return_data[0]
                                        mem[(13 * ceil32(return_data.size)) + 285] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 285] = 2
                                        mem[(15 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 349] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 381] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(15 * ceil32(return_data.size)) + 385] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[(15 * ceil32(return_data.size)) + 417] = ext_call.return_data[0]
                                        mem[(15 * ceil32(return_data.size)) + 449] = 160
                                        mem[(15 * ceil32(return_data.size)) + 545] = 2
                                        idx = 0
                                        s = (15 * ceil32(return_data.size)) + 577
                                        t = (15 * ceil32(return_data.size)) + 317
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(15 * ceil32(return_data.size)) + 481] = this.address
                                        mem[(15 * ceil32(return_data.size)) + 513] = block.timestamp + 60
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(15 * ceil32(return_data.size)) + 577 len 64]), address(this.address), block.timestamp + 60
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(15 * ceil32(return_data.size)) + 381 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (16 * ceil32(return_data.size)) + 381
                                        require return_data.size >= 32
                                        _2602 = mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                        require mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (15 * ceil32(return_data.size)) + return_data.size + 381 > (15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 412
                                        _2634 = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381]
                                        require mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381] <= test266151307()
                                        require (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381]) + 32 >= 0 and (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381]) + 413 <= test266151307()
                                        mem[64] = (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381]) + 413
                                        mem[(16 * ceil32(return_data.size)) + 381] = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 381]
                                        require return_data.size >= _2602 + (32 * _2634) + 32
                                        mem[(16 * ceil32(return_data.size)) + 413 len 32 * _2634] = mem[(15 * ceil32(return_data.size)) + _2602 + 413 len 32 * _2634]
                                        mem[mem[64] + 4] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3082 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3082] == bool(mem[_3082])
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3210 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3210] == bool(mem[_3210])
                            else:
                                if ext_call.return_data[18 len 14] <= 0:
                                    revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                                if ext_call.return_data[50 len 14] <= 0:
                                    revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                                if not arg3:
                                    if ext_call.return_data[50 len 14] - arg3 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'ds-math-sub-underflow'
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / 997 != ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 'ds-math-mul-overflow'
                                    require (997 * ext_call.return_data[50 len 14]) - (997 * arg3)
                                    if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                        revert with 0, 'ds-math-add-overflow'
                                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(13 * ceil32(return_data.size)) + 289] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[(13 * ceil32(return_data.size)) + 321] = ext_call.return_data[0]
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, ext_call.return_data[0]
                                        mem[(13 * ceil32(return_data.size)) + 285] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 285] = 2
                                        mem[(15 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 349] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 381] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(15 * ceil32(return_data.size)) + 385] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(15 * ceil32(return_data.size)) + 417] = ext_call.return_data[0]
                                        mem[(15 * ceil32(return_data.size)) + 449] = 160
                                        mem[(15 * ceil32(return_data.size)) + 545] = 2
                                        idx = 0
                                        s = (15 * ceil32(return_data.size)) + 577
                                        t = (15 * ceil32(return_data.size)) + 317
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(15 * ceil32(return_data.size)) + 481] = this.address
                                        mem[(15 * ceil32(return_data.size)) + 513] = block.timestamp + 60
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(15 * ceil32(return_data.size)) + 577 len 64]), address(this.address), block.timestamp + 60
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(15 * ceil32(return_data.size)) + 381 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (16 * ceil32(return_data.size)) + 381
                                        require return_data.size >= 32
                                        _2603 = mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (15 * ceil32(return_data.size)) + return_data.size + 381 > (15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 412
                                        _2635 = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381]
                                        require mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381] <= test266151307()
                                        require (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381]) + 32 >= 0 and (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381]) + 413 <= test266151307()
                                        mem[64] = (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381]) + 413
                                        mem[(16 * ceil32(return_data.size)) + 381] = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381]
                                        require return_data.size >= _2603 + (32 * _2635) + 32
                                        mem[(16 * ceil32(return_data.size)) + 413 len 32 * _2635] = mem[(15 * ceil32(return_data.size)) + _2603 + 413 len 32 * _2635]
                                        mem[mem[64] + 4] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3083 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3083] == bool(mem[_3083])
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3211 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3211] == bool(mem[_3211])
                                else:
                                    require arg3
                                    if ext_call.return_data[18 len 14] * arg3 / arg3 != ext_call.return_data[18 len 14]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * ext_call.return_data[18 len 14] * arg3 / 1000 != ext_call.return_data[18 len 14] * arg3:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if ext_call.return_data[50 len 14] - arg3 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'ds-math-sub-underflow'
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / 997 != ext_call.return_data[50 len 14] - arg3:
                                        revert with 0, 'ds-math-mul-overflow'
                                    require (997 * ext_call.return_data[50 len 14]) - (997 * arg3)
                                    if (1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                        revert with 0, 'ds-math-add-overflow'
                                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(13 * ceil32(return_data.size)) + 289] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[(13 * ceil32(return_data.size)) + 321] = ext_call.return_data[0]
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, ext_call.return_data[0]
                                        mem[(13 * ceil32(return_data.size)) + 285] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 285] = 2
                                        mem[(15 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 349] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 381] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(15 * ceil32(return_data.size)) + 385] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[(15 * ceil32(return_data.size)) + 417] = ext_call.return_data[0]
                                        mem[(15 * ceil32(return_data.size)) + 449] = 160
                                        mem[(15 * ceil32(return_data.size)) + 545] = 2
                                        idx = 0
                                        s = (15 * ceil32(return_data.size)) + 577
                                        t = (15 * ceil32(return_data.size)) + 317
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(15 * ceil32(return_data.size)) + 481] = this.address
                                        mem[(15 * ceil32(return_data.size)) + 513] = block.timestamp + 60
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(15 * ceil32(return_data.size)) + 577 len 64]), address(this.address), block.timestamp + 60
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(15 * ceil32(return_data.size)) + 381 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (16 * ceil32(return_data.size)) + 381
                                        require return_data.size >= 32
                                        _2604 = mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                        require mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                        require (15 * ceil32(return_data.size)) + return_data.size + 381 > (15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 412
                                        _2636 = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381]
                                        require mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381] <= test266151307()
                                        require (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381]) + 32 >= 0 and (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381]) + 413 <= test266151307()
                                        mem[64] = (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381]) + 413
                                        mem[(16 * ceil32(return_data.size)) + 381] = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 381]
                                        require return_data.size >= _2604 + (32 * _2636) + 32
                                        mem[(16 * ceil32(return_data.size)) + 413 len 32 * _2636] = mem[(15 * ceil32(return_data.size)) + _2604 + 413 len 32 * _2636]
                                        mem[mem[64] + 4] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3084 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3084] == bool(mem[_3084])
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3212 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3212] == bool(mem[_3212])
                else:
                    mem[(4 * ceil32(return_data.size)) + 132] = arg2
                    require ext_code.size(address(ext_call.return_data[0]))
                    call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                         gas gas_remaining wei
                        args address(cd[(arg4 + 68)]), arg2
                    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    mem[(6 * ceil32(return_data.size)) + 100] = address(cd[(arg4 + 36)])
                    mem[(6 * ceil32(return_data.size)) + 132] = arg2
                    mem[(6 * ceil32(return_data.size)) + 164] = address(cd[(arg4 + 100)])
                    require ext_code.size(address(cd[(arg4 + 68)]))
                    call address(cd[(arg4 + 68)]).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                         gas gas_remaining wei
                        args address(cd[(arg4 + 36)]), arg2, address(cd[(arg4 + 100)])
                    mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[(7 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(address(cd[(arg4 + 100)]))
                    call address(cd[(arg4 + 100)]).balanceOfUnderlying(address rg1) with:
                         gas gas_remaining wei
                        args this.address
                    mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[(8 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(address(cd[(arg4 + 100)]))
                    staticcall address(cd[(arg4 + 100)]).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[(10 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                    require ext_code.size(address(cd[(arg4 + 100)]))
                    call address(cd[(arg4 + 100)]).redeem(uint256 rg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    mem[(10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(address(cd[(arg4 + 100)]))
                    staticcall address(cd[(arg4 + 100)]).underlying() with:
                            gas gas_remaining wei
                    mem[(11 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                    if not address(ext_call.return_data[0]):
                        revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                    if not address(ext_call.return_data[0]):
                        revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                    mem[(12 * ceil32(return_data.size)) + 128] = address(ext_call.return_data[0])
                    mem[(12 * ceil32(return_data.size)) + 148] = address(ext_call.return_data[0])
                    mem[(12 * ceil32(return_data.size)) + 96] = 40
                    mem[(12 * ceil32(return_data.size)) + 200] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[(12 * ceil32(return_data.size)) + 201] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                    mem[(12 * ceil32(return_data.size)) + 221] = sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0]))
                    mem[(12 * ceil32(return_data.size)) + 253] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                    mem[(12 * ceil32(return_data.size)) + 168] = 85
                    require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                    staticcall address(sha3(0, 17269419903419772280, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                            gas gas_remaining wei
                    mem[(12 * ceil32(return_data.size)) + 285 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                    if arg2 <= 0:
                        revert with 0, 'PangolinLibrary: INSUFFICIENT_OUTPUT_AMOUNT'
                    if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                        if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                            if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                if ext_call.return_data[50 len 14] <= 0:
                                    revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                                if ext_call.return_data[18 len 14] <= 0:
                                    revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                                if not arg2:
                                    if ext_call.return_data[18 len 14] - arg2 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'ds-math-sub-underflow'
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / 997 != ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 'ds-math-mul-overflow'
                                    require (997 * ext_call.return_data[18 len 14]) - (997 * arg2)
                                    if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                        revert with 0, 'ds-math-add-overflow'
                                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(13 * ceil32(return_data.size)) + 289] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[(13 * ceil32(return_data.size)) + 321] = ext_call.return_data[0]
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, ext_call.return_data[0]
                                        mem[(13 * ceil32(return_data.size)) + 285] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 285] = 2
                                        mem[(15 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 349] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 381] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(15 * ceil32(return_data.size)) + 385] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(15 * ceil32(return_data.size)) + 417] = ext_call.return_data[0]
                                        mem[(15 * ceil32(return_data.size)) + 449] = 160
                                        mem[(15 * ceil32(return_data.size)) + 545] = 2
                                        idx = 0
                                        s = (15 * ceil32(return_data.size)) + 577
                                        t = (15 * ceil32(return_data.size)) + 317
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(15 * ceil32(return_data.size)) + 481] = this.address
                                        mem[(15 * ceil32(return_data.size)) + 513] = block.timestamp + 60
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(15 * ceil32(return_data.size)) + 577 len 64]), address(this.address), block.timestamp + 60
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(15 * ceil32(return_data.size)) + 381 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (16 * ceil32(return_data.size)) + 381
                                        require return_data.size >= 32
                                        _2605 = mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (15 * ceil32(return_data.size)) + return_data.size + 381 > (15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 412
                                        _2637 = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381]
                                        require mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381] <= test266151307()
                                        require (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381]) + 32 >= 0 and (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381]) + 413 <= test266151307()
                                        mem[64] = (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381]) + 413
                                        mem[(16 * ceil32(return_data.size)) + 381] = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381]
                                        require return_data.size >= _2605 + (32 * _2637) + 32
                                        mem[(16 * ceil32(return_data.size)) + 413 len 32 * _2637] = mem[(15 * ceil32(return_data.size)) + _2605 + 413 len 32 * _2637]
                                        mem[mem[64] + 4] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3085 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3085] == bool(mem[_3085])
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3213 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3213] == bool(mem[_3213])
                                else:
                                    require arg2
                                    if ext_call.return_data[50 len 14] * arg2 / arg2 != ext_call.return_data[50 len 14]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * ext_call.return_data[50 len 14] * arg2 / 1000 != ext_call.return_data[50 len 14] * arg2:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if ext_call.return_data[18 len 14] - arg2 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'ds-math-sub-underflow'
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / 997 != ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 'ds-math-mul-overflow'
                                    require (997 * ext_call.return_data[18 len 14]) - (997 * arg2)
                                    if (1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                        revert with 0, 'ds-math-add-overflow'
                                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(13 * ceil32(return_data.size)) + 289] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[(13 * ceil32(return_data.size)) + 321] = ext_call.return_data[0]
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, ext_call.return_data[0]
                                        mem[(13 * ceil32(return_data.size)) + 285] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 285] = 2
                                        mem[(15 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 349] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 381] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(15 * ceil32(return_data.size)) + 385] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(15 * ceil32(return_data.size)) + 417] = ext_call.return_data[0]
                                        mem[(15 * ceil32(return_data.size)) + 449] = 160
                                        mem[(15 * ceil32(return_data.size)) + 545] = 2
                                        idx = 0
                                        s = (15 * ceil32(return_data.size)) + 577
                                        t = (15 * ceil32(return_data.size)) + 317
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(15 * ceil32(return_data.size)) + 481] = this.address
                                        mem[(15 * ceil32(return_data.size)) + 513] = block.timestamp + 60
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(15 * ceil32(return_data.size)) + 577 len 64]), address(this.address), block.timestamp + 60
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(15 * ceil32(return_data.size)) + 381 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (16 * ceil32(return_data.size)) + 381
                                        require return_data.size >= 32
                                        _2606 = mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (15 * ceil32(return_data.size)) + return_data.size + 381 > (15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 412
                                        _2638 = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381]
                                        require mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381] <= test266151307()
                                        require (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381]) + 32 >= 0 and (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381]) + 413 <= test266151307()
                                        mem[64] = (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381]) + 413
                                        mem[(16 * ceil32(return_data.size)) + 381] = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381]
                                        require return_data.size >= _2606 + (32 * _2638) + 32
                                        mem[(16 * ceil32(return_data.size)) + 413 len 32 * _2638] = mem[(15 * ceil32(return_data.size)) + _2606 + 413 len 32 * _2638]
                                        mem[mem[64] + 4] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3086 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3086] == bool(mem[_3086])
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3214 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3214] == bool(mem[_3214])
                            else:
                                if ext_call.return_data[18 len 14] <= 0:
                                    revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                                if ext_call.return_data[50 len 14] <= 0:
                                    revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                                if not arg2:
                                    if ext_call.return_data[50 len 14] - arg2 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'ds-math-sub-underflow'
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / 997 != ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 'ds-math-mul-overflow'
                                    require (997 * ext_call.return_data[50 len 14]) - (997 * arg2)
                                    if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                        revert with 0, 'ds-math-add-overflow'
                                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(13 * ceil32(return_data.size)) + 289] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[(13 * ceil32(return_data.size)) + 321] = ext_call.return_data[0]
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, ext_call.return_data[0]
                                        mem[(13 * ceil32(return_data.size)) + 285] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 285] = 2
                                        mem[(15 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 349] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 381] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(15 * ceil32(return_data.size)) + 385] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(15 * ceil32(return_data.size)) + 417] = ext_call.return_data[0]
                                        mem[(15 * ceil32(return_data.size)) + 449] = 160
                                        mem[(15 * ceil32(return_data.size)) + 545] = 2
                                        idx = 0
                                        s = (15 * ceil32(return_data.size)) + 577
                                        t = (15 * ceil32(return_data.size)) + 317
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(15 * ceil32(return_data.size)) + 481] = this.address
                                        mem[(15 * ceil32(return_data.size)) + 513] = block.timestamp + 60
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(15 * ceil32(return_data.size)) + 577 len 64]), address(this.address), block.timestamp + 60
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(15 * ceil32(return_data.size)) + 381 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (16 * ceil32(return_data.size)) + 381
                                        require return_data.size >= 32
                                        _2607 = mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (15 * ceil32(return_data.size)) + return_data.size + 381 > (15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 412
                                        _2639 = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381]
                                        require mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381] <= test266151307()
                                        require (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381]) + 32 >= 0 and (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381]) + 413 <= test266151307()
                                        mem[64] = (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381]) + 413
                                        mem[(16 * ceil32(return_data.size)) + 381] = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381]
                                        require return_data.size >= _2607 + (32 * _2639) + 32
                                        mem[(16 * ceil32(return_data.size)) + 413 len 32 * _2639] = mem[(15 * ceil32(return_data.size)) + _2607 + 413 len 32 * _2639]
                                        mem[mem[64] + 4] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3087 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3087] == bool(mem[_3087])
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3215 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3215] == bool(mem[_3215])
                                else:
                                    require arg2
                                    if ext_call.return_data[18 len 14] * arg2 / arg2 != ext_call.return_data[18 len 14]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * ext_call.return_data[18 len 14] * arg2 / 1000 != ext_call.return_data[18 len 14] * arg2:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if ext_call.return_data[50 len 14] - arg2 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'ds-math-sub-underflow'
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / 997 != ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 'ds-math-mul-overflow'
                                    require (997 * ext_call.return_data[50 len 14]) - (997 * arg2)
                                    if (1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                        revert with 0, 'ds-math-add-overflow'
                                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(13 * ceil32(return_data.size)) + 289] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[(13 * ceil32(return_data.size)) + 321] = ext_call.return_data[0]
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, ext_call.return_data[0]
                                        mem[(13 * ceil32(return_data.size)) + 285] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 285] = 2
                                        mem[(15 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 349] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 381] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(15 * ceil32(return_data.size)) + 385] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(15 * ceil32(return_data.size)) + 417] = ext_call.return_data[0]
                                        mem[(15 * ceil32(return_data.size)) + 449] = 160
                                        mem[(15 * ceil32(return_data.size)) + 545] = 2
                                        idx = 0
                                        s = (15 * ceil32(return_data.size)) + 577
                                        t = (15 * ceil32(return_data.size)) + 317
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(15 * ceil32(return_data.size)) + 481] = this.address
                                        mem[(15 * ceil32(return_data.size)) + 513] = block.timestamp + 60
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(15 * ceil32(return_data.size)) + 577 len 64]), address(this.address), block.timestamp + 60
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(15 * ceil32(return_data.size)) + 381 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (16 * ceil32(return_data.size)) + 381
                                        require return_data.size >= 32
                                        _2608 = mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (15 * ceil32(return_data.size)) + return_data.size + 381 > (15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 412
                                        _2640 = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381]
                                        require mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381] <= test266151307()
                                        require (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381]) + 32 >= 0 and (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381]) + 413 <= test266151307()
                                        mem[64] = (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381]) + 413
                                        mem[(16 * ceil32(return_data.size)) + 381] = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381]
                                        require return_data.size >= _2608 + (32 * _2640) + 32
                                        mem[(16 * ceil32(return_data.size)) + 413 len 32 * _2640] = mem[(15 * ceil32(return_data.size)) + _2608 + 413 len 32 * _2640]
                                        mem[mem[64] + 4] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3088 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3088] == bool(mem[_3088])
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3216 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3216] == bool(mem[_3216])
                        else:
                            if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                if ext_call.return_data[50 len 14] <= 0:
                                    revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                                if ext_call.return_data[18 len 14] <= 0:
                                    revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                                if not arg2:
                                    if ext_call.return_data[18 len 14] - arg2 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'ds-math-sub-underflow'
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / 997 != ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 'ds-math-mul-overflow'
                                    require (997 * ext_call.return_data[18 len 14]) - (997 * arg2)
                                    if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                        revert with 0, 'ds-math-add-overflow'
                                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(13 * ceil32(return_data.size)) + 289] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[(13 * ceil32(return_data.size)) + 321] = ext_call.return_data[0]
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, ext_call.return_data[0]
                                        mem[(13 * ceil32(return_data.size)) + 285] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 285] = 2
                                        mem[(15 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 349] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 381] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(15 * ceil32(return_data.size)) + 385] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(15 * ceil32(return_data.size)) + 417] = ext_call.return_data[0]
                                        mem[(15 * ceil32(return_data.size)) + 449] = 160
                                        mem[(15 * ceil32(return_data.size)) + 545] = 2
                                        idx = 0
                                        s = (15 * ceil32(return_data.size)) + 577
                                        t = (15 * ceil32(return_data.size)) + 317
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(15 * ceil32(return_data.size)) + 481] = this.address
                                        mem[(15 * ceil32(return_data.size)) + 513] = block.timestamp + 60
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(15 * ceil32(return_data.size)) + 577 len 64]), address(this.address), block.timestamp + 60
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(15 * ceil32(return_data.size)) + 381 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (16 * ceil32(return_data.size)) + 381
                                        require return_data.size >= 32
                                        _2609 = mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (15 * ceil32(return_data.size)) + return_data.size + 381 > (15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 412
                                        _2641 = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381]
                                        require mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381] <= test266151307()
                                        require (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381]) + 32 >= 0 and (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381]) + 413 <= test266151307()
                                        mem[64] = (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381]) + 413
                                        mem[(16 * ceil32(return_data.size)) + 381] = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381]
                                        require return_data.size >= _2609 + (32 * _2641) + 32
                                        mem[(16 * ceil32(return_data.size)) + 413 len 32 * _2641] = mem[(15 * ceil32(return_data.size)) + _2609 + 413 len 32 * _2641]
                                        mem[mem[64] + 4] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3089 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3089] == bool(mem[_3089])
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3217 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3217] == bool(mem[_3217])
                                else:
                                    require arg2
                                    if ext_call.return_data[50 len 14] * arg2 / arg2 != ext_call.return_data[50 len 14]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * ext_call.return_data[50 len 14] * arg2 / 1000 != ext_call.return_data[50 len 14] * arg2:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if ext_call.return_data[18 len 14] - arg2 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'ds-math-sub-underflow'
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / 997 != ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 'ds-math-mul-overflow'
                                    require (997 * ext_call.return_data[18 len 14]) - (997 * arg2)
                                    if (1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                        revert with 0, 'ds-math-add-overflow'
                                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(13 * ceil32(return_data.size)) + 289] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[(13 * ceil32(return_data.size)) + 321] = ext_call.return_data[0]
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, ext_call.return_data[0]
                                        mem[(13 * ceil32(return_data.size)) + 285] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 285] = 2
                                        mem[(15 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 349] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 381] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(15 * ceil32(return_data.size)) + 385] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(15 * ceil32(return_data.size)) + 417] = ext_call.return_data[0]
                                        mem[(15 * ceil32(return_data.size)) + 449] = 160
                                        mem[(15 * ceil32(return_data.size)) + 545] = 2
                                        idx = 0
                                        s = (15 * ceil32(return_data.size)) + 577
                                        t = (15 * ceil32(return_data.size)) + 317
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(15 * ceil32(return_data.size)) + 481] = this.address
                                        mem[(15 * ceil32(return_data.size)) + 513] = block.timestamp + 60
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(15 * ceil32(return_data.size)) + 577 len 64]), address(this.address), block.timestamp + 60
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(15 * ceil32(return_data.size)) + 381 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (16 * ceil32(return_data.size)) + 381
                                        require return_data.size >= 32
                                        _2610 = mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (15 * ceil32(return_data.size)) + return_data.size + 381 > (15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 412
                                        _2642 = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381]
                                        require mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381] <= test266151307()
                                        require (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381]) + 32 >= 0 and (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381]) + 413 <= test266151307()
                                        mem[64] = (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381]) + 413
                                        mem[(16 * ceil32(return_data.size)) + 381] = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381]
                                        require return_data.size >= _2610 + (32 * _2642) + 32
                                        mem[(16 * ceil32(return_data.size)) + 413 len 32 * _2642] = mem[(15 * ceil32(return_data.size)) + _2610 + 413 len 32 * _2642]
                                        mem[mem[64] + 4] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3090 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3090] == bool(mem[_3090])
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3218 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3218] == bool(mem[_3218])
                            else:
                                if ext_call.return_data[18 len 14] <= 0:
                                    revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                                if ext_call.return_data[50 len 14] <= 0:
                                    revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                                if not arg2:
                                    if ext_call.return_data[50 len 14] - arg2 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'ds-math-sub-underflow'
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / 997 != ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 'ds-math-mul-overflow'
                                    require (997 * ext_call.return_data[50 len 14]) - (997 * arg2)
                                    if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                        revert with 0, 'ds-math-add-overflow'
                                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(13 * ceil32(return_data.size)) + 289] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[(13 * ceil32(return_data.size)) + 321] = ext_call.return_data[0]
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, ext_call.return_data[0]
                                        mem[(13 * ceil32(return_data.size)) + 285] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 285] = 2
                                        mem[(15 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 349] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 381] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(15 * ceil32(return_data.size)) + 385] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(15 * ceil32(return_data.size)) + 417] = ext_call.return_data[0]
                                        mem[(15 * ceil32(return_data.size)) + 449] = 160
                                        mem[(15 * ceil32(return_data.size)) + 545] = 2
                                        idx = 0
                                        s = (15 * ceil32(return_data.size)) + 577
                                        t = (15 * ceil32(return_data.size)) + 317
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(15 * ceil32(return_data.size)) + 481] = this.address
                                        mem[(15 * ceil32(return_data.size)) + 513] = block.timestamp + 60
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(15 * ceil32(return_data.size)) + 577 len 64]), address(this.address), block.timestamp + 60
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(15 * ceil32(return_data.size)) + 381 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (16 * ceil32(return_data.size)) + 381
                                        require return_data.size >= 32
                                        _2611 = mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (15 * ceil32(return_data.size)) + return_data.size + 381 > (15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 412
                                        _2643 = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381]
                                        require mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381] <= test266151307()
                                        require (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381]) + 32 >= 0 and (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381]) + 413 <= test266151307()
                                        mem[64] = (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381]) + 413
                                        mem[(16 * ceil32(return_data.size)) + 381] = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381]
                                        require return_data.size >= _2611 + (32 * _2643) + 32
                                        mem[(16 * ceil32(return_data.size)) + 413 len 32 * _2643] = mem[(15 * ceil32(return_data.size)) + _2611 + 413 len 32 * _2643]
                                        mem[mem[64] + 4] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3091 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3091] == bool(mem[_3091])
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3219 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3219] == bool(mem[_3219])
                                else:
                                    require arg2
                                    if ext_call.return_data[18 len 14] * arg2 / arg2 != ext_call.return_data[18 len 14]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * ext_call.return_data[18 len 14] * arg2 / 1000 != ext_call.return_data[18 len 14] * arg2:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if ext_call.return_data[50 len 14] - arg2 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'ds-math-sub-underflow'
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / 997 != ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 'ds-math-mul-overflow'
                                    require (997 * ext_call.return_data[50 len 14]) - (997 * arg2)
                                    if (1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                        revert with 0, 'ds-math-add-overflow'
                                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(13 * ceil32(return_data.size)) + 289] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[(13 * ceil32(return_data.size)) + 321] = ext_call.return_data[0]
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, ext_call.return_data[0]
                                        mem[(13 * ceil32(return_data.size)) + 285] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 285] = 2
                                        mem[(15 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 349] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 381] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(15 * ceil32(return_data.size)) + 385] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(15 * ceil32(return_data.size)) + 417] = ext_call.return_data[0]
                                        mem[(15 * ceil32(return_data.size)) + 449] = 160
                                        mem[(15 * ceil32(return_data.size)) + 545] = 2
                                        idx = 0
                                        s = (15 * ceil32(return_data.size)) + 577
                                        t = (15 * ceil32(return_data.size)) + 317
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(15 * ceil32(return_data.size)) + 481] = this.address
                                        mem[(15 * ceil32(return_data.size)) + 513] = block.timestamp + 60
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(15 * ceil32(return_data.size)) + 577 len 64]), address(this.address), block.timestamp + 60
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(15 * ceil32(return_data.size)) + 381 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (16 * ceil32(return_data.size)) + 381
                                        require return_data.size >= 32
                                        _2612 = mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (15 * ceil32(return_data.size)) + return_data.size + 381 > (15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 412
                                        _2644 = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381]
                                        require mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381] <= test266151307()
                                        require (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381]) + 32 >= 0 and (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381]) + 413 <= test266151307()
                                        mem[64] = (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381]) + 413
                                        mem[(16 * ceil32(return_data.size)) + 381] = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381]
                                        require return_data.size >= _2612 + (32 * _2644) + 32
                                        mem[(16 * ceil32(return_data.size)) + 413 len 32 * _2644] = mem[(15 * ceil32(return_data.size)) + _2612 + 413 len 32 * _2644]
                                        mem[mem[64] + 4] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3092 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3092] == bool(mem[_3092])
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3220 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3220] == bool(mem[_3220])
                    else:
                        if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                            if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                if ext_call.return_data[50 len 14] <= 0:
                                    revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                                if ext_call.return_data[18 len 14] <= 0:
                                    revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                                if not arg2:
                                    if ext_call.return_data[18 len 14] - arg2 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'ds-math-sub-underflow'
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / 997 != ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 'ds-math-mul-overflow'
                                    require (997 * ext_call.return_data[18 len 14]) - (997 * arg2)
                                    if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                        revert with 0, 'ds-math-add-overflow'
                                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(13 * ceil32(return_data.size)) + 289] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[(13 * ceil32(return_data.size)) + 321] = ext_call.return_data[0]
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, ext_call.return_data[0]
                                        mem[(13 * ceil32(return_data.size)) + 285] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 285] = 2
                                        mem[(15 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 349] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 381] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(15 * ceil32(return_data.size)) + 385] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(15 * ceil32(return_data.size)) + 417] = ext_call.return_data[0]
                                        mem[(15 * ceil32(return_data.size)) + 449] = 160
                                        mem[(15 * ceil32(return_data.size)) + 545] = 2
                                        idx = 0
                                        s = (15 * ceil32(return_data.size)) + 577
                                        t = (15 * ceil32(return_data.size)) + 317
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(15 * ceil32(return_data.size)) + 481] = this.address
                                        mem[(15 * ceil32(return_data.size)) + 513] = block.timestamp + 60
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(15 * ceil32(return_data.size)) + 577 len 64]), address(this.address), block.timestamp + 60
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(15 * ceil32(return_data.size)) + 381 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (16 * ceil32(return_data.size)) + 381
                                        require return_data.size >= 32
                                        _2613 = mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (15 * ceil32(return_data.size)) + return_data.size + 381 > (15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 412
                                        _2645 = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381]
                                        require mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381] <= test266151307()
                                        require (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381]) + 32 >= 0 and (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381]) + 413 <= test266151307()
                                        mem[64] = (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381]) + 413
                                        mem[(16 * ceil32(return_data.size)) + 381] = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381]
                                        require return_data.size >= _2613 + (32 * _2645) + 32
                                        mem[(16 * ceil32(return_data.size)) + 413 len 32 * _2645] = mem[(15 * ceil32(return_data.size)) + _2613 + 413 len 32 * _2645]
                                        mem[mem[64] + 4] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3093 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3093] == bool(mem[_3093])
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3221 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3221] == bool(mem[_3221])
                                else:
                                    require arg2
                                    if ext_call.return_data[50 len 14] * arg2 / arg2 != ext_call.return_data[50 len 14]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * ext_call.return_data[50 len 14] * arg2 / 1000 != ext_call.return_data[50 len 14] * arg2:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if ext_call.return_data[18 len 14] - arg2 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'ds-math-sub-underflow'
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / 997 != ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 'ds-math-mul-overflow'
                                    require (997 * ext_call.return_data[18 len 14]) - (997 * arg2)
                                    if (1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                        revert with 0, 'ds-math-add-overflow'
                                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(13 * ceil32(return_data.size)) + 289] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[(13 * ceil32(return_data.size)) + 321] = ext_call.return_data[0]
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, ext_call.return_data[0]
                                        mem[(13 * ceil32(return_data.size)) + 285] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 285] = 2
                                        mem[(15 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 349] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 381] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(15 * ceil32(return_data.size)) + 385] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(15 * ceil32(return_data.size)) + 417] = ext_call.return_data[0]
                                        mem[(15 * ceil32(return_data.size)) + 449] = 160
                                        mem[(15 * ceil32(return_data.size)) + 545] = 2
                                        idx = 0
                                        s = (15 * ceil32(return_data.size)) + 577
                                        t = (15 * ceil32(return_data.size)) + 317
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(15 * ceil32(return_data.size)) + 481] = this.address
                                        mem[(15 * ceil32(return_data.size)) + 513] = block.timestamp + 60
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(15 * ceil32(return_data.size)) + 577 len 64]), address(this.address), block.timestamp + 60
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(15 * ceil32(return_data.size)) + 381 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (16 * ceil32(return_data.size)) + 381
                                        require return_data.size >= 32
                                        _2614 = mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (15 * ceil32(return_data.size)) + return_data.size + 381 > (15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 412
                                        _2646 = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381]
                                        require mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381] <= test266151307()
                                        require (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381]) + 32 >= 0 and (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381]) + 413 <= test266151307()
                                        mem[64] = (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381]) + 413
                                        mem[(16 * ceil32(return_data.size)) + 381] = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381]
                                        require return_data.size >= _2614 + (32 * _2646) + 32
                                        mem[(16 * ceil32(return_data.size)) + 413 len 32 * _2646] = mem[(15 * ceil32(return_data.size)) + _2614 + 413 len 32 * _2646]
                                        mem[mem[64] + 4] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3094 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3094] == bool(mem[_3094])
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3222 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3222] == bool(mem[_3222])
                            else:
                                if ext_call.return_data[18 len 14] <= 0:
                                    revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                                if ext_call.return_data[50 len 14] <= 0:
                                    revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                                if not arg2:
                                    if ext_call.return_data[50 len 14] - arg2 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'ds-math-sub-underflow'
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / 997 != ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 'ds-math-mul-overflow'
                                    require (997 * ext_call.return_data[50 len 14]) - (997 * arg2)
                                    if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                        revert with 0, 'ds-math-add-overflow'
                                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(13 * ceil32(return_data.size)) + 289] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[(13 * ceil32(return_data.size)) + 321] = ext_call.return_data[0]
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, ext_call.return_data[0]
                                        mem[(13 * ceil32(return_data.size)) + 285] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 285] = 2
                                        mem[(15 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 349] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 381] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(15 * ceil32(return_data.size)) + 385] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(15 * ceil32(return_data.size)) + 417] = ext_call.return_data[0]
                                        mem[(15 * ceil32(return_data.size)) + 449] = 160
                                        mem[(15 * ceil32(return_data.size)) + 545] = 2
                                        idx = 0
                                        s = (15 * ceil32(return_data.size)) + 577
                                        t = (15 * ceil32(return_data.size)) + 317
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(15 * ceil32(return_data.size)) + 481] = this.address
                                        mem[(15 * ceil32(return_data.size)) + 513] = block.timestamp + 60
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(15 * ceil32(return_data.size)) + 577 len 64]), address(this.address), block.timestamp + 60
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(15 * ceil32(return_data.size)) + 381 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (16 * ceil32(return_data.size)) + 381
                                        require return_data.size >= 32
                                        _2615 = mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (15 * ceil32(return_data.size)) + return_data.size + 381 > (15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 412
                                        _2647 = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381]
                                        require mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381] <= test266151307()
                                        require (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381]) + 32 >= 0 and (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381]) + 413 <= test266151307()
                                        mem[64] = (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381]) + 413
                                        mem[(16 * ceil32(return_data.size)) + 381] = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381]
                                        require return_data.size >= _2615 + (32 * _2647) + 32
                                        mem[(16 * ceil32(return_data.size)) + 413 len 32 * _2647] = mem[(15 * ceil32(return_data.size)) + _2615 + 413 len 32 * _2647]
                                        mem[mem[64] + 4] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3095 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3095] == bool(mem[_3095])
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3223 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3223] == bool(mem[_3223])
                                else:
                                    require arg2
                                    if ext_call.return_data[18 len 14] * arg2 / arg2 != ext_call.return_data[18 len 14]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * ext_call.return_data[18 len 14] * arg2 / 1000 != ext_call.return_data[18 len 14] * arg2:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if ext_call.return_data[50 len 14] - arg2 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'ds-math-sub-underflow'
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / 997 != ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 'ds-math-mul-overflow'
                                    require (997 * ext_call.return_data[50 len 14]) - (997 * arg2)
                                    if (1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                        revert with 0, 'ds-math-add-overflow'
                                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(13 * ceil32(return_data.size)) + 289] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[(13 * ceil32(return_data.size)) + 321] = ext_call.return_data[0]
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, ext_call.return_data[0]
                                        mem[(13 * ceil32(return_data.size)) + 285] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 285] = 2
                                        mem[(15 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 349] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 381] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(15 * ceil32(return_data.size)) + 385] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(15 * ceil32(return_data.size)) + 417] = ext_call.return_data[0]
                                        mem[(15 * ceil32(return_data.size)) + 449] = 160
                                        mem[(15 * ceil32(return_data.size)) + 545] = 2
                                        idx = 0
                                        s = (15 * ceil32(return_data.size)) + 577
                                        t = (15 * ceil32(return_data.size)) + 317
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(15 * ceil32(return_data.size)) + 481] = this.address
                                        mem[(15 * ceil32(return_data.size)) + 513] = block.timestamp + 60
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(15 * ceil32(return_data.size)) + 577 len 64]), address(this.address), block.timestamp + 60
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(15 * ceil32(return_data.size)) + 381 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (16 * ceil32(return_data.size)) + 381
                                        require return_data.size >= 32
                                        _2616 = mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (15 * ceil32(return_data.size)) + return_data.size + 381 > (15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 412
                                        _2648 = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381]
                                        require mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381] <= test266151307()
                                        require (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381]) + 32 >= 0 and (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381]) + 413 <= test266151307()
                                        mem[64] = (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381]) + 413
                                        mem[(16 * ceil32(return_data.size)) + 381] = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381]
                                        require return_data.size >= _2616 + (32 * _2648) + 32
                                        mem[(16 * ceil32(return_data.size)) + 413 len 32 * _2648] = mem[(15 * ceil32(return_data.size)) + _2616 + 413 len 32 * _2648]
                                        mem[mem[64] + 4] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3096 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3096] == bool(mem[_3096])
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3224 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3224] == bool(mem[_3224])
                        else:
                            if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                if ext_call.return_data[50 len 14] <= 0:
                                    revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                                if ext_call.return_data[18 len 14] <= 0:
                                    revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                                if not arg2:
                                    if ext_call.return_data[18 len 14] - arg2 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'ds-math-sub-underflow'
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / 997 != ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 'ds-math-mul-overflow'
                                    require (997 * ext_call.return_data[18 len 14]) - (997 * arg2)
                                    if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                        revert with 0, 'ds-math-add-overflow'
                                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(13 * ceil32(return_data.size)) + 289] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[(13 * ceil32(return_data.size)) + 321] = ext_call.return_data[0]
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, ext_call.return_data[0]
                                        mem[(13 * ceil32(return_data.size)) + 285] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 285] = 2
                                        mem[(15 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 349] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 381] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(15 * ceil32(return_data.size)) + 385] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(15 * ceil32(return_data.size)) + 417] = ext_call.return_data[0]
                                        mem[(15 * ceil32(return_data.size)) + 449] = 160
                                        mem[(15 * ceil32(return_data.size)) + 545] = 2
                                        idx = 0
                                        s = (15 * ceil32(return_data.size)) + 577
                                        t = (15 * ceil32(return_data.size)) + 317
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(15 * ceil32(return_data.size)) + 481] = this.address
                                        mem[(15 * ceil32(return_data.size)) + 513] = block.timestamp + 60
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(15 * ceil32(return_data.size)) + 577 len 64]), address(this.address), block.timestamp + 60
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(15 * ceil32(return_data.size)) + 381 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (16 * ceil32(return_data.size)) + 381
                                        require return_data.size >= 32
                                        _2617 = mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (15 * ceil32(return_data.size)) + return_data.size + 381 > (15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 412
                                        _2649 = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381]
                                        require mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381] <= test266151307()
                                        require (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381]) + 32 >= 0 and (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381]) + 413 <= test266151307()
                                        mem[64] = (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381]) + 413
                                        mem[(16 * ceil32(return_data.size)) + 381] = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381]
                                        require return_data.size >= _2617 + (32 * _2649) + 32
                                        mem[(16 * ceil32(return_data.size)) + 413 len 32 * _2649] = mem[(15 * ceil32(return_data.size)) + _2617 + 413 len 32 * _2649]
                                        mem[mem[64] + 4] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3097 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3097] == bool(mem[_3097])
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3225 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3225] == bool(mem[_3225])
                                else:
                                    require arg2
                                    if ext_call.return_data[50 len 14] * arg2 / arg2 != ext_call.return_data[50 len 14]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * ext_call.return_data[50 len 14] * arg2 / 1000 != ext_call.return_data[50 len 14] * arg2:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if ext_call.return_data[18 len 14] - arg2 > ext_call.return_data[18 len 14]:
                                        revert with 0, 'ds-math-sub-underflow'
                                    if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / 997 != ext_call.return_data[18 len 14] - arg2:
                                        revert with 0, 'ds-math-mul-overflow'
                                    require (997 * ext_call.return_data[18 len 14]) - (997 * arg2)
                                    if (1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                        revert with 0, 'ds-math-add-overflow'
                                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(13 * ceil32(return_data.size)) + 289] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[(13 * ceil32(return_data.size)) + 321] = ext_call.return_data[0]
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, ext_call.return_data[0]
                                        mem[(13 * ceil32(return_data.size)) + 285] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 285] = 2
                                        mem[(15 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 349] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 381] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(15 * ceil32(return_data.size)) + 385] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[(15 * ceil32(return_data.size)) + 417] = ext_call.return_data[0]
                                        mem[(15 * ceil32(return_data.size)) + 449] = 160
                                        mem[(15 * ceil32(return_data.size)) + 545] = 2
                                        idx = 0
                                        s = (15 * ceil32(return_data.size)) + 577
                                        t = (15 * ceil32(return_data.size)) + 317
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(15 * ceil32(return_data.size)) + 481] = this.address
                                        mem[(15 * ceil32(return_data.size)) + 513] = block.timestamp + 60
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(15 * ceil32(return_data.size)) + 577 len 64]), address(this.address), block.timestamp + 60
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(15 * ceil32(return_data.size)) + 381 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (16 * ceil32(return_data.size)) + 381
                                        require return_data.size >= 32
                                        _2618 = mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                        require mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (15 * ceil32(return_data.size)) + return_data.size + 381 > (15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 412
                                        _2650 = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381]
                                        require mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381] <= test266151307()
                                        require (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381]) + 32 >= 0 and (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381]) + 413 <= test266151307()
                                        mem[64] = (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381]) + 413
                                        mem[(16 * ceil32(return_data.size)) + 381] = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 381]
                                        require return_data.size >= _2618 + (32 * _2650) + 32
                                        mem[(16 * ceil32(return_data.size)) + 413 len 32 * _2650] = mem[(15 * ceil32(return_data.size)) + _2618 + 413 len 32 * _2650]
                                        mem[mem[64] + 4] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3098 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3098] == bool(mem[_3098])
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3226 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3226] == bool(mem[_3226])
                            else:
                                if ext_call.return_data[18 len 14] <= 0:
                                    revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                                if ext_call.return_data[50 len 14] <= 0:
                                    revert with 0, 'PangolinLibrary: INSUFFICIENT_LIQUIDITY'
                                if not arg2:
                                    if ext_call.return_data[50 len 14] - arg2 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'ds-math-sub-underflow'
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / 997 != ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 'ds-math-mul-overflow'
                                    require (997 * ext_call.return_data[50 len 14]) - (997 * arg2)
                                    if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                        revert with 0, 'ds-math-add-overflow'
                                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(13 * ceil32(return_data.size)) + 289] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[(13 * ceil32(return_data.size)) + 321] = ext_call.return_data[0]
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, ext_call.return_data[0]
                                        mem[(13 * ceil32(return_data.size)) + 285] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 285] = 2
                                        mem[(15 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 349] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 381] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(15 * ceil32(return_data.size)) + 385] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(15 * ceil32(return_data.size)) + 417] = ext_call.return_data[0]
                                        mem[(15 * ceil32(return_data.size)) + 449] = 160
                                        mem[(15 * ceil32(return_data.size)) + 545] = 2
                                        idx = 0
                                        s = (15 * ceil32(return_data.size)) + 577
                                        t = (15 * ceil32(return_data.size)) + 317
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(15 * ceil32(return_data.size)) + 481] = this.address
                                        mem[(15 * ceil32(return_data.size)) + 513] = block.timestamp + 60
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(15 * ceil32(return_data.size)) + 577 len 64]), address(this.address), block.timestamp + 60
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(15 * ceil32(return_data.size)) + 381 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (16 * ceil32(return_data.size)) + 381
                                        require return_data.size >= 32
                                        _2619 = mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (15 * ceil32(return_data.size)) + return_data.size + 381 > (15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 412
                                        _2651 = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381]
                                        require mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381] <= test266151307()
                                        require (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381]) + 32 >= 0 and (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381]) + 413 <= test266151307()
                                        mem[64] = (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381]) + 413
                                        mem[(16 * ceil32(return_data.size)) + 381] = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381]
                                        require return_data.size >= _2619 + (32 * _2651) + 32
                                        mem[(16 * ceil32(return_data.size)) + 413 len 32 * _2651] = mem[(15 * ceil32(return_data.size)) + _2619 + 413 len 32 * _2651]
                                        mem[mem[64] + 4] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3099 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3099] == bool(mem[_3099])
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3227 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3227] == bool(mem[_3227])
                                else:
                                    require arg2
                                    if ext_call.return_data[18 len 14] * arg2 / arg2 != ext_call.return_data[18 len 14]:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * ext_call.return_data[18 len 14] * arg2 / 1000 != ext_call.return_data[18 len 14] * arg2:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if ext_call.return_data[50 len 14] - arg2 > ext_call.return_data[50 len 14]:
                                        revert with 0, 'ds-math-sub-underflow'
                                    if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / 997 != ext_call.return_data[50 len 14] - arg2:
                                        revert with 0, 'ds-math-mul-overflow'
                                    require (997 * ext_call.return_data[50 len 14]) - (997 * arg2)
                                    if (1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                        revert with 0, 'ds-math-add-overflow'
                                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(13 * ceil32(return_data.size)) + 289] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[(13 * ceil32(return_data.size)) + 321] = ext_call.return_data[0]
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, ext_call.return_data[0]
                                        mem[(13 * ceil32(return_data.size)) + 285] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 285] = 2
                                        mem[(15 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 349] = address(ext_call.return_data[0])
                                        mem[(15 * ceil32(return_data.size)) + 381] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[(15 * ceil32(return_data.size)) + 385] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[(15 * ceil32(return_data.size)) + 417] = ext_call.return_data[0]
                                        mem[(15 * ceil32(return_data.size)) + 449] = 160
                                        mem[(15 * ceil32(return_data.size)) + 545] = 2
                                        idx = 0
                                        s = (15 * ceil32(return_data.size)) + 577
                                        t = (15 * ceil32(return_data.size)) + 317
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(15 * ceil32(return_data.size)) + 481] = this.address
                                        mem[(15 * ceil32(return_data.size)) + 513] = block.timestamp + 60
                                        require ext_code.size(0xe54ca86531e17ef3616d22ca28b0d458b6c89106)
                                        call 0xe54ca86531e17ef3616d22ca28b0d458b6c89106.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                             gas gas_remaining wei
                                            args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(15 * ceil32(return_data.size)) + 577 len 64]), address(this.address), block.timestamp + 60
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(15 * ceil32(return_data.size)) + 381 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (16 * ceil32(return_data.size)) + 381
                                        require return_data.size >= 32
                                        _2620 = mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                        require mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                        require (15 * ceil32(return_data.size)) + return_data.size + 381 > (15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 412
                                        _2652 = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381]
                                        require mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381] <= test266151307()
                                        require (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381]) + 32 >= 0 and (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381]) + 413 <= test266151307()
                                        mem[64] = (16 * ceil32(return_data.size)) + (32 * mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381]) + 413
                                        mem[(16 * ceil32(return_data.size)) + 381] = mem[(15 * ceil32(return_data.size)) + mem[(15 * ceil32(return_data.size)) + 381 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 381]
                                        require return_data.size >= _2620 + (32 * _2652) + 32
                                        mem[(16 * ceil32(return_data.size)) + 413 len 32 * _2652] = mem[(15 * ceil32(return_data.size)) + _2620 + 413 len 32 * _2652]
                                        mem[mem[64] + 4] = 0xe54ca86531e17ef3616d22ca28b0d458b6c89106
                                        mem[mem[64] + 36] = 0
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).approve(address rg1, uint256 rg2) with:
                                             gas gas_remaining wei
                                            args 0xe54ca86531e17ef3616d22ca28b0d458b6c89106, 0
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3100 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3100] == bool(mem[_3100])
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).0xa9059cbb with:
                                             gas gas_remaining wei
                                            args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3228 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_3228] == bool(mem[_3228])
}

function liquidateSN(address[] arg1, address[] arg2) payable {
    mem[64] = 96
    require not msg.value
    require calldata.size - 4 >= 64
    require arg1 <= test266151307()
    require arg1 + 35 < calldata.size
    require arg1.length <= test266151307()
    require arg1 + (32 * arg1.length) + 36 <= calldata.size
    require arg2 <= test266151307()
    require arg2 + 35 < calldata.size
    require arg2.length <= test266151307()
    require arg2 + (32 * arg2.length) + 36 <= calldata.size
    require var55001 < arg1.length
    require cd[((32 * var55001) + arg1 + 36)] == address(cd[((32 * var55001) + arg1 + 36)])
    require 2 * var55001 < arg2.length
    require cd[((64 * var55001) + arg2 + 36)] == address(cd[((64 * var55001) + arg2 + 36)])
    require (2 * var55001) + 1 < arg2.length
    require cd[((32 * (2 * var55001) + 1) + arg2 + 36)] == address(cd[((32 * (2 * var55001) + 1) + arg2 + 36)])
    require ext_code.size(comptrollerAddress)
    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
            gas gas_remaining wei
           args address(cd[((32 * var55001) + arg1 + 36)])
    mem[96 len 96] = ext_call.return_data[0 len 96]
    s = var55001
    t = var55001
    while ext_call.success:
        _5447 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 96
        if mem[_5447 + 32]:
            if gas_remaining < stor8:
            if arg1.length == t + 1:
            require t + 1 < arg1.length
            require cd[((32 * t + 2) + arg1 + 36)] == address(cd[((32 * t + 2) + arg1 + 36)])
            require 2 * t + 1 < arg2.length
            require cd[((64 * t + 1) + arg2 + 36)] == address(cd[((64 * t + 1) + arg2 + 36)])
            require (2 * t + 1) + 1 < arg2.length
            require cd[((32 * (2 * t + 1) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t + 1) + 1) + arg2 + 36)])
            mem[mem[64]] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
            mem[100] = address(cd[((32 * t + 2) + arg1 + 36)])
            require ext_code.size(comptrollerAddress)
            staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len -mem[64] + 128]
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
        else:
            mem[mem[64] + 4] = address(cd[((32 * s) + arg1 + 36)])
            require ext_code.size(address(cd[((64 * t) + arg2 + 36)]))
            call address(cd[((64 * t) + arg2 + 36)]).borrowBalanceCurrent(address rg1) with:
                 gas gas_remaining wei
                args address(cd[((32 * s) + arg1 + 36)])
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5453 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5454 = mem[_5453]
            mem[mem[64] + 4] = address(cd[((32 * s) + arg1 + 36)])
            require ext_code.size(address(cd[((32 * (2 * t) + 1) + arg2 + 36)]))
            call address(cd[((32 * (2 * t) + 1) + arg2 + 36)]).balanceOfUnderlying(address rg1) with:
                 gas gas_remaining wei
                args address(cd[((32 * s) + arg1 + 36)])
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5457 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5458 = mem[_5457]
            require stor7
            mem[mem[64] + 4] = address(cd[((64 * t) + arg2 + 36)])
            require ext_code.size(priceOracleAddress)
            staticcall priceOracleAddress.getUnderlyingPrice(address rg1) with:
                    gas gas_remaining wei
                   args address(cd[((64 * t) + arg2 + 36)])
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5461 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5462 = mem[_5461]
            mem[mem[64] + 4] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
            require ext_code.size(priceOracleAddress)
            staticcall priceOracleAddress.getUnderlyingPrice(address rg1) with:
                    gas gas_remaining wei
                   args address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5465 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5466 = mem[_5465]
            require _5462
            require ext_code.size(address(cd[((32 * (2 * t) + 1) + arg2 + 36)]))
            staticcall address(cd[((32 * (2 * t) + 1) + arg2 + 36)]).underlying() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            if _5462 * _5454 * stor6 / 10^18 < 10^18 * _5458 / stor7 * mem[_5465]:
                _5471 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _5473 = mem[_5471]
                require mem[_5471] == mem[_5471 + 12 len 20]
                if address(cd[((64 * t) + arg2 + 36)]) == address(cd[((32 * (2 * t) + 1) + arg2 + 36)]):
                    require ext_code.size(address(cd[((64 * t) + arg2 + 36)]))
                    staticcall address(cd[((64 * t) + arg2 + 36)]).underlying() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5483 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _5491 = mem[_5483]
                    require mem[_5483] == mem[_5483 + 12 len 20]
                    if mem[_5483 + 12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                        revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                    if mem[_5483 + 12 len 20] >= 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                        _5552 = mem[64]
                        mem[mem[64] + 32] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7000000000000000000000000
                        mem[mem[64] + 52] = address(_5491)
                        _5577 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _5579 = sha3(mem[_5577 + 32 len mem[_5577]])
                        mem[_5552 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_5552 + 105] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                        mem[_5552 + 125] = _5579
                        mem[_5552 + 157] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                        mem[_5552 + 72] = 85
                        mem[_5552 + 221] = address(cd[((32 * s) + arg1 + 36)])
                        mem[_5552 + 253] = address(cd[((64 * t) + arg2 + 36)])
                        mem[_5552 + 285] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                        mem[_5552 + 189] = 96
                        require ext_code.size(address(sha3(0, 17269419903419772280, _5579, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        staticcall address(sha3(0, 17269419903419772280, _5579, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                gas gas_remaining wei
                        mem[_5552 + 317] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        require ext_code.size(address(sha3(0, 17269419903419772280, _5579, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        staticcall address(sha3(0, 17269419903419772280, _5579, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                gas gas_remaining wei
                        mem[_5552 + ceil32(return_data.size) + 317] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _5552 + (2 * ceil32(return_data.size)) + 317
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        mem[_5552 + (2 * ceil32(return_data.size)) + 317] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        if ext_call.return_data[12 len 20] == address(_5491):
                            mem[_5552 + (2 * ceil32(return_data.size)) + 321] = _5462 * _5454 * stor6 / 10^18 / _5462
                            if ext_call.return_data[12 len 20] == address(_5491):
                                mem[_5552 + (2 * ceil32(return_data.size)) + 353] = _5462 * _5454 * stor6 / 10^18 / _5462
                            else:
                                mem[_5552 + (2 * ceil32(return_data.size)) + 353] = 0
                        else:
                            mem[_5552 + (2 * ceil32(return_data.size)) + 321] = 0
                            if ext_call.return_data[12 len 20] == address(_5491):
                                mem[_5552 + (2 * ceil32(return_data.size)) + 353] = _5462 * _5454 * stor6 / 10^18 / _5462
                            else:
                                mem[_5552 + (2 * ceil32(return_data.size)) + 353] = 0
                        mem[_5552 + (2 * ceil32(return_data.size)) + 385] = this.address
                        mem[_5552 + (2 * ceil32(return_data.size)) + 417] = 128
                        mem[_5552 + (2 * ceil32(return_data.size)) + 449] = 96
                        idx = 0
                        while idx < 96:
                            mem[idx + _5552 + (2 * ceil32(return_data.size)) + 481] = mem[idx + _5552 + 221]
                            require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                            require 2 * t < arg2.length
                            require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                            require (2 * t) + 1 < arg2.length
                            require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                            mem[_5552 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                            mem[100] = address(cd[((32 * s) + arg1 + 36)])
                            require ext_code.size(comptrollerAddress)
                            staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                    gas gas_remaining wei
                                   args mem[_5552 + (2 * ceil32(return_data.size)) + 321 len -_5552 + -(2 * ceil32(return_data.size)) - 189]
                            mem[_5552 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                            idx = idx + 32
                            continue 
                        require ext_code.size(address(sha3(0, 17269419903419772280, _5579, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        call address(sha3(0, 17269419903419772280, _5579, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5552 + (2 * ceil32(return_data.size)) + 317 len 4] with:
                             gas gas_remaining wei
                            args mem[_5552 + (2 * ceil32(return_data.size)) + 321 len 96], 128, 96, mem[_5552 + (2 * ceil32(return_data.size)) + 481 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if gas_remaining < stor8:
                        if arg1.length == t + 1:
                        require t + 1 < arg1.length
                        require cd[((32 * t + 2) + arg1 + 36)] == address(cd[((32 * t + 2) + arg1 + 36)])
                        require 2 * t + 1 < arg2.length
                        require cd[((64 * t + 1) + arg2 + 36)] == address(cd[((64 * t + 1) + arg2 + 36)])
                        require (2 * t + 1) + 1 < arg2.length
                        require cd[((32 * (2 * t + 1) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t + 1) + 1) + arg2 + 36)])
                        mem[_5552 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                        mem[100] = address(cd[((32 * t + 2) + arg1 + 36)])
                        require ext_code.size(comptrollerAddress)
                        staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                gas gas_remaining wei
                               args mem[_5552 + (2 * ceil32(return_data.size)) + 321 len -_5552 + -(2 * ceil32(return_data.size)) - 189]
                        mem[_5552 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                    else:
                        if not mem[_5483 + 12 len 20]:
                            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                        _5551 = mem[64]
                        mem[mem[64] + 32] = address(mem[_5483])
                        mem[mem[64] + 52] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7000000000000000000000000
                        _5573 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _5575 = sha3(mem[_5573 + 32 len mem[_5573]])
                        mem[_5551 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_5551 + 105] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                        mem[_5551 + 125] = _5575
                        mem[_5551 + 157] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                        mem[_5551 + 72] = 85
                        mem[_5551 + 221] = address(cd[((32 * s) + arg1 + 36)])
                        mem[_5551 + 253] = address(cd[((64 * t) + arg2 + 36)])
                        mem[_5551 + 285] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                        mem[_5551 + 189] = 96
                        require ext_code.size(address(sha3(0, 17269419903419772280, _5575, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        staticcall address(sha3(0, 17269419903419772280, _5575, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                gas gas_remaining wei
                        mem[_5551 + 317] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        require ext_code.size(address(sha3(0, 17269419903419772280, _5575, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        staticcall address(sha3(0, 17269419903419772280, _5575, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                gas gas_remaining wei
                        mem[_5551 + ceil32(return_data.size) + 317] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _5551 + (2 * ceil32(return_data.size)) + 317
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        mem[_5551 + (2 * ceil32(return_data.size)) + 317] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        if ext_call.return_data[12 len 20] == address(_5491):
                            mem[_5551 + (2 * ceil32(return_data.size)) + 321] = _5462 * _5454 * stor6 / 10^18 / _5462
                            if ext_call.return_data[12 len 20] == address(_5491):
                                mem[_5551 + (2 * ceil32(return_data.size)) + 353] = _5462 * _5454 * stor6 / 10^18 / _5462
                            else:
                                mem[_5551 + (2 * ceil32(return_data.size)) + 353] = 0
                        else:
                            mem[_5551 + (2 * ceil32(return_data.size)) + 321] = 0
                            if ext_call.return_data[12 len 20] == address(_5491):
                                mem[_5551 + (2 * ceil32(return_data.size)) + 353] = _5462 * _5454 * stor6 / 10^18 / _5462
                            else:
                                mem[_5551 + (2 * ceil32(return_data.size)) + 353] = 0
                        mem[_5551 + (2 * ceil32(return_data.size)) + 385] = this.address
                        mem[_5551 + (2 * ceil32(return_data.size)) + 417] = 128
                        mem[_5551 + (2 * ceil32(return_data.size)) + 449] = 96
                        idx = 0
                        while idx < 96:
                            mem[idx + _5551 + (2 * ceil32(return_data.size)) + 481] = mem[idx + _5551 + 221]
                            require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                            require 2 * t < arg2.length
                            require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                            require (2 * t) + 1 < arg2.length
                            require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                            mem[_5551 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                            mem[100] = address(cd[((32 * s) + arg1 + 36)])
                            require ext_code.size(comptrollerAddress)
                            staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                    gas gas_remaining wei
                                   args mem[_5551 + (2 * ceil32(return_data.size)) + 321 len -_5551 + -(2 * ceil32(return_data.size)) - 189]
                            mem[_5551 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                            idx = idx + 32
                            continue 
                        require ext_code.size(address(sha3(0, 17269419903419772280, _5575, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        call address(sha3(0, 17269419903419772280, _5575, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5551 + (2 * ceil32(return_data.size)) + 317 len 4] with:
                             gas gas_remaining wei
                            args mem[_5551 + (2 * ceil32(return_data.size)) + 321 len 96], 128, 96, mem[_5551 + (2 * ceil32(return_data.size)) + 481 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if gas_remaining < stor8:
                        if arg1.length == t + 1:
                        require t + 1 < arg1.length
                        require cd[((32 * t + 2) + arg1 + 36)] == address(cd[((32 * t + 2) + arg1 + 36)])
                        require 2 * t + 1 < arg2.length
                        require cd[((64 * t + 1) + arg2 + 36)] == address(cd[((64 * t + 1) + arg2 + 36)])
                        require (2 * t + 1) + 1 < arg2.length
                        require cd[((32 * (2 * t + 1) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t + 1) + 1) + arg2 + 36)])
                        mem[_5551 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                        mem[100] = address(cd[((32 * t + 2) + arg1 + 36)])
                        require ext_code.size(comptrollerAddress)
                        staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                gas gas_remaining wei
                               args mem[_5551 + (2 * ceil32(return_data.size)) + 321 len -_5551 + -(2 * ceil32(return_data.size)) - 189]
                        mem[_5551 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                else:
                    if 0x5c0401e81bc07ca70fad469b451682c0d747ef1c == address(cd[((32 * (2 * t) + 1) + arg2 + 36)]):
                        require ext_code.size(address(cd[((64 * t) + arg2 + 36)]))
                        staticcall address(cd[((64 * t) + arg2 + 36)]).underlying() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5489 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _5496 = mem[_5489]
                        require mem[_5489] == mem[_5489 + 12 len 20]
                        if mem[_5489 + 12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                            revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                        if mem[_5489 + 12 len 20] >= 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                            _5567 = mem[64]
                            mem[mem[64] + 32] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7000000000000000000000000
                            mem[mem[64] + 52] = address(_5496)
                            _5609 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _5611 = sha3(mem[_5609 + 32 len mem[_5609]])
                            mem[_5567 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_5567 + 105] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                            mem[_5567 + 125] = _5611
                            mem[_5567 + 157] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                            mem[_5567 + 72] = 85
                            mem[_5567 + 221] = address(cd[((32 * s) + arg1 + 36)])
                            mem[_5567 + 253] = address(cd[((64 * t) + arg2 + 36)])
                            mem[_5567 + 285] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                            mem[_5567 + 189] = 96
                            require ext_code.size(address(sha3(0, 17269419903419772280, _5611, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            staticcall address(sha3(0, 17269419903419772280, _5611, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                    gas gas_remaining wei
                            mem[_5567 + 317] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            require ext_code.size(address(sha3(0, 17269419903419772280, _5611, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            staticcall address(sha3(0, 17269419903419772280, _5611, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                    gas gas_remaining wei
                            mem[_5567 + ceil32(return_data.size) + 317] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _5567 + (2 * ceil32(return_data.size)) + 317
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[_5567 + (2 * ceil32(return_data.size)) + 317] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            if ext_call.return_data[12 len 20] == address(_5496):
                                mem[_5567 + (2 * ceil32(return_data.size)) + 321] = _5462 * _5454 * stor6 / 10^18 / _5462
                                if ext_call.return_data[12 len 20] == address(_5496):
                                    mem[_5567 + (2 * ceil32(return_data.size)) + 353] = _5462 * _5454 * stor6 / 10^18 / _5462
                                else:
                                    mem[_5567 + (2 * ceil32(return_data.size)) + 353] = 0
                            else:
                                mem[_5567 + (2 * ceil32(return_data.size)) + 321] = 0
                                if ext_call.return_data[12 len 20] == address(_5496):
                                    mem[_5567 + (2 * ceil32(return_data.size)) + 353] = _5462 * _5454 * stor6 / 10^18 / _5462
                                else:
                                    mem[_5567 + (2 * ceil32(return_data.size)) + 353] = 0
                            mem[_5567 + (2 * ceil32(return_data.size)) + 385] = this.address
                            mem[_5567 + (2 * ceil32(return_data.size)) + 417] = 128
                            mem[_5567 + (2 * ceil32(return_data.size)) + 449] = 96
                            idx = 0
                            while idx < 96:
                                mem[idx + _5567 + (2 * ceil32(return_data.size)) + 481] = mem[idx + _5567 + 221]
                                require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                require 2 * t < arg2.length
                                require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                require (2 * t) + 1 < arg2.length
                                require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                mem[_5567 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                require ext_code.size(comptrollerAddress)
                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                        gas gas_remaining wei
                                       args mem[_5567 + (2 * ceil32(return_data.size)) + 321 len -_5567 + -(2 * ceil32(return_data.size)) - 189]
                                mem[_5567 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                                idx = idx + 32
                                continue 
                            require ext_code.size(address(sha3(0, 17269419903419772280, _5611, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            call address(sha3(0, 17269419903419772280, _5611, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5567 + (2 * ceil32(return_data.size)) + 317 len 4] with:
                                 gas gas_remaining wei
                                args mem[_5567 + (2 * ceil32(return_data.size)) + 321 len 96], 128, 96, mem[_5567 + (2 * ceil32(return_data.size)) + 481 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if gas_remaining < stor8:
                            if arg1.length == t + 1:
                            require t + 1 < arg1.length
                            require cd[((32 * t + 2) + arg1 + 36)] == address(cd[((32 * t + 2) + arg1 + 36)])
                            require 2 * t + 1 < arg2.length
                            require cd[((64 * t + 1) + arg2 + 36)] == address(cd[((64 * t + 1) + arg2 + 36)])
                            require (2 * t + 1) + 1 < arg2.length
                            require cd[((32 * (2 * t + 1) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t + 1) + 1) + arg2 + 36)])
                            mem[_5567 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                            mem[100] = address(cd[((32 * t + 2) + arg1 + 36)])
                            require ext_code.size(comptrollerAddress)
                            staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                    gas gas_remaining wei
                                   args mem[_5567 + (2 * ceil32(return_data.size)) + 321 len -_5567 + -(2 * ceil32(return_data.size)) - 189]
                            mem[_5567 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                        else:
                            if not mem[_5489 + 12 len 20]:
                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                            _5566 = mem[64]
                            mem[mem[64] + 32] = address(mem[_5489])
                            mem[mem[64] + 52] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7000000000000000000000000
                            _5605 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _5607 = sha3(mem[_5605 + 32 len mem[_5605]])
                            mem[_5566 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_5566 + 105] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                            mem[_5566 + 125] = _5607
                            mem[_5566 + 157] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                            mem[_5566 + 72] = 85
                            mem[_5566 + 221] = address(cd[((32 * s) + arg1 + 36)])
                            mem[_5566 + 253] = address(cd[((64 * t) + arg2 + 36)])
                            mem[_5566 + 285] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                            mem[_5566 + 189] = 96
                            require ext_code.size(address(sha3(0, 17269419903419772280, _5607, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            staticcall address(sha3(0, 17269419903419772280, _5607, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                    gas gas_remaining wei
                            mem[_5566 + 317] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            require ext_code.size(address(sha3(0, 17269419903419772280, _5607, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            staticcall address(sha3(0, 17269419903419772280, _5607, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                    gas gas_remaining wei
                            mem[_5566 + ceil32(return_data.size) + 317] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _5566 + (2 * ceil32(return_data.size)) + 317
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[_5566 + (2 * ceil32(return_data.size)) + 317] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            if ext_call.return_data[12 len 20] == address(_5496):
                                mem[_5566 + (2 * ceil32(return_data.size)) + 321] = _5462 * _5454 * stor6 / 10^18 / _5462
                                if ext_call.return_data[12 len 20] == address(_5496):
                                    mem[_5566 + (2 * ceil32(return_data.size)) + 353] = _5462 * _5454 * stor6 / 10^18 / _5462
                                else:
                                    mem[_5566 + (2 * ceil32(return_data.size)) + 353] = 0
                            else:
                                mem[_5566 + (2 * ceil32(return_data.size)) + 321] = 0
                                if ext_call.return_data[12 len 20] == address(_5496):
                                    mem[_5566 + (2 * ceil32(return_data.size)) + 353] = _5462 * _5454 * stor6 / 10^18 / _5462
                                else:
                                    mem[_5566 + (2 * ceil32(return_data.size)) + 353] = 0
                            mem[_5566 + (2 * ceil32(return_data.size)) + 385] = this.address
                            mem[_5566 + (2 * ceil32(return_data.size)) + 417] = 128
                            mem[_5566 + (2 * ceil32(return_data.size)) + 449] = 96
                            idx = 0
                            while idx < 96:
                                mem[idx + _5566 + (2 * ceil32(return_data.size)) + 481] = mem[idx + _5566 + 221]
                                require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                require 2 * t < arg2.length
                                require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                require (2 * t) + 1 < arg2.length
                                require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                mem[_5566 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                require ext_code.size(comptrollerAddress)
                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                        gas gas_remaining wei
                                       args mem[_5566 + (2 * ceil32(return_data.size)) + 321 len -_5566 + -(2 * ceil32(return_data.size)) - 189]
                                mem[_5566 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                                idx = idx + 32
                                continue 
                            require ext_code.size(address(sha3(0, 17269419903419772280, _5607, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            call address(sha3(0, 17269419903419772280, _5607, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5566 + (2 * ceil32(return_data.size)) + 317 len 4] with:
                                 gas gas_remaining wei
                                args mem[_5566 + (2 * ceil32(return_data.size)) + 321 len 96], 128, 96, mem[_5566 + (2 * ceil32(return_data.size)) + 481 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if gas_remaining < stor8:
                            if arg1.length == t + 1:
                            require t + 1 < arg1.length
                            require cd[((32 * t + 2) + arg1 + 36)] == address(cd[((32 * t + 2) + arg1 + 36)])
                            require 2 * t + 1 < arg2.length
                            require cd[((64 * t + 1) + arg2 + 36)] == address(cd[((64 * t + 1) + arg2 + 36)])
                            require (2 * t + 1) + 1 < arg2.length
                            require cd[((32 * (2 * t + 1) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t + 1) + 1) + arg2 + 36)])
                            mem[_5566 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                            mem[100] = address(cd[((32 * t + 2) + arg1 + 36)])
                            require ext_code.size(comptrollerAddress)
                            staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                    gas gas_remaining wei
                                   args mem[_5566 + (2 * ceil32(return_data.size)) + 321 len -_5566 + -(2 * ceil32(return_data.size)) - 189]
                            mem[_5566 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                    else:
                        if 0x5c0401e81bc07ca70fad469b451682c0d747ef1c == address(cd[((64 * t) + arg2 + 36)]):
                            if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == mem[_5471 + 12 len 20]:
                                revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                            if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 < mem[_5471 + 12 len 20]:
                                _5505 = mem[64]
                                mem[mem[64] + 32] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7000000000000000000000000
                                mem[mem[64] + 52] = address(_5473)
                                _5512 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _5514 = sha3(mem[_5512 + 32 len mem[_5512]])
                                mem[_5505 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_5505 + 105] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                mem[_5505 + 125] = _5514
                                mem[_5505 + 157] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                mem[_5505 + 72] = 85
                                mem[_5505 + 221] = address(cd[((32 * s) + arg1 + 36)])
                                mem[_5505 + 253] = address(cd[((64 * t) + arg2 + 36)])
                                mem[_5505 + 285] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                mem[_5505 + 189] = 96
                                require ext_code.size(address(sha3(0, 17269419903419772280, _5514, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                staticcall address(sha3(0, 17269419903419772280, _5514, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                        gas gas_remaining wei
                                mem[_5505 + 317] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                require ext_code.size(address(sha3(0, 17269419903419772280, _5514, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                staticcall address(sha3(0, 17269419903419772280, _5514, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                        gas gas_remaining wei
                                mem[_5505 + ceil32(return_data.size) + 317] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _5505 + (2 * ceil32(return_data.size)) + 317
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[_5505 + (2 * ceil32(return_data.size)) + 317] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                                    mem[_5505 + (2 * ceil32(return_data.size)) + 321] = _5462 * _5454 * stor6 / 10^18 / _5462
                                    if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                                        mem[_5505 + (2 * ceil32(return_data.size)) + 353] = _5462 * _5454 * stor6 / 10^18 / _5462
                                    else:
                                        mem[_5505 + (2 * ceil32(return_data.size)) + 353] = 0
                                else:
                                    mem[_5505 + (2 * ceil32(return_data.size)) + 321] = 0
                                    if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                                        mem[_5505 + (2 * ceil32(return_data.size)) + 353] = _5462 * _5454 * stor6 / 10^18 / _5462
                                    else:
                                        mem[_5505 + (2 * ceil32(return_data.size)) + 353] = 0
                                mem[_5505 + (2 * ceil32(return_data.size)) + 385] = this.address
                                mem[_5505 + (2 * ceil32(return_data.size)) + 417] = 128
                                mem[_5505 + (2 * ceil32(return_data.size)) + 449] = 96
                                idx = 0
                                while idx < 96:
                                    mem[idx + _5505 + (2 * ceil32(return_data.size)) + 481] = mem[idx + _5505 + 221]
                                    require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                    require 2 * t < arg2.length
                                    require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                    require (2 * t) + 1 < arg2.length
                                    require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                    mem[_5505 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                    mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                    require ext_code.size(comptrollerAddress)
                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                            gas gas_remaining wei
                                           args mem[_5505 + (2 * ceil32(return_data.size)) + 321 len -_5505 + -(2 * ceil32(return_data.size)) - 189]
                                    mem[_5505 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(sha3(0, 17269419903419772280, _5514, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                call address(sha3(0, 17269419903419772280, _5514, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5505 + (2 * ceil32(return_data.size)) + 317 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_5505 + (2 * ceil32(return_data.size)) + 321 len 96], 128, 96, mem[_5505 + (2 * ceil32(return_data.size)) + 481 len 96]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if gas_remaining < stor8:
                                if arg1.length == t + 1:
                                require t + 1 < arg1.length
                                require cd[((32 * t + 2) + arg1 + 36)] == address(cd[((32 * t + 2) + arg1 + 36)])
                                require 2 * t + 1 < arg2.length
                                require cd[((64 * t + 1) + arg2 + 36)] == address(cd[((64 * t + 1) + arg2 + 36)])
                                require (2 * t + 1) + 1 < arg2.length
                                require cd[((32 * (2 * t + 1) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t + 1) + 1) + arg2 + 36)])
                                mem[_5505 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                mem[100] = address(cd[((32 * t + 2) + arg1 + 36)])
                                require ext_code.size(comptrollerAddress)
                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                        gas gas_remaining wei
                                       args mem[_5505 + (2 * ceil32(return_data.size)) + 321 len -_5505 + -(2 * ceil32(return_data.size)) - 189]
                                mem[_5505 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                            else:
                                if not mem[_5471 + 12 len 20]:
                                    revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                _5506 = mem[64]
                                mem[mem[64] + 32] = address(mem[_5471])
                                mem[mem[64] + 52] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7000000000000000000000000
                                _5516 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _5518 = sha3(mem[_5516 + 32 len mem[_5516]])
                                mem[_5506 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_5506 + 105] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                mem[_5506 + 125] = _5518
                                mem[_5506 + 157] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                mem[_5506 + 72] = 85
                                mem[_5506 + 221] = address(cd[((32 * s) + arg1 + 36)])
                                mem[_5506 + 253] = address(cd[((64 * t) + arg2 + 36)])
                                mem[_5506 + 285] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                mem[_5506 + 189] = 96
                                require ext_code.size(address(sha3(0, 17269419903419772280, _5518, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                staticcall address(sha3(0, 17269419903419772280, _5518, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                        gas gas_remaining wei
                                mem[_5506 + 317] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                require ext_code.size(address(sha3(0, 17269419903419772280, _5518, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                staticcall address(sha3(0, 17269419903419772280, _5518, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                        gas gas_remaining wei
                                mem[_5506 + ceil32(return_data.size) + 317] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _5506 + (2 * ceil32(return_data.size)) + 317
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[_5506 + (2 * ceil32(return_data.size)) + 317] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                                    mem[_5506 + (2 * ceil32(return_data.size)) + 321] = _5462 * _5454 * stor6 / 10^18 / _5462
                                    if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                                        mem[_5506 + (2 * ceil32(return_data.size)) + 353] = _5462 * _5454 * stor6 / 10^18 / _5462
                                    else:
                                        mem[_5506 + (2 * ceil32(return_data.size)) + 353] = 0
                                else:
                                    mem[_5506 + (2 * ceil32(return_data.size)) + 321] = 0
                                    if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                                        mem[_5506 + (2 * ceil32(return_data.size)) + 353] = _5462 * _5454 * stor6 / 10^18 / _5462
                                    else:
                                        mem[_5506 + (2 * ceil32(return_data.size)) + 353] = 0
                                mem[_5506 + (2 * ceil32(return_data.size)) + 385] = this.address
                                mem[_5506 + (2 * ceil32(return_data.size)) + 417] = 128
                                mem[_5506 + (2 * ceil32(return_data.size)) + 449] = 96
                                idx = 0
                                while idx < 96:
                                    mem[idx + _5506 + (2 * ceil32(return_data.size)) + 481] = mem[idx + _5506 + 221]
                                    require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                    require 2 * t < arg2.length
                                    require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                    require (2 * t) + 1 < arg2.length
                                    require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                    mem[_5506 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                    mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                    require ext_code.size(comptrollerAddress)
                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                            gas gas_remaining wei
                                           args mem[_5506 + (2 * ceil32(return_data.size)) + 321 len -_5506 + -(2 * ceil32(return_data.size)) - 189]
                                    mem[_5506 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(sha3(0, 17269419903419772280, _5518, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                call address(sha3(0, 17269419903419772280, _5518, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5506 + (2 * ceil32(return_data.size)) + 317 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_5506 + (2 * ceil32(return_data.size)) + 321 len 96], 128, 96, mem[_5506 + (2 * ceil32(return_data.size)) + 481 len 96]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if gas_remaining < stor8:
                                if arg1.length == t + 1:
                                require t + 1 < arg1.length
                                require cd[((32 * t + 2) + arg1 + 36)] == address(cd[((32 * t + 2) + arg1 + 36)])
                                require 2 * t + 1 < arg2.length
                                require cd[((64 * t + 1) + arg2 + 36)] == address(cd[((64 * t + 1) + arg2 + 36)])
                                require (2 * t + 1) + 1 < arg2.length
                                require cd[((32 * (2 * t + 1) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t + 1) + 1) + arg2 + 36)])
                                mem[_5506 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                mem[100] = address(cd[((32 * t + 2) + arg1 + 36)])
                                require ext_code.size(comptrollerAddress)
                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                        gas gas_remaining wei
                                       args mem[_5506 + (2 * ceil32(return_data.size)) + 321 len -_5506 + -(2 * ceil32(return_data.size)) - 189]
                                mem[_5506 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                        else:
                            require ext_code.size(address(cd[((64 * t) + arg2 + 36)]))
                            staticcall address(cd[((64 * t) + arg2 + 36)]).underlying() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5492 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _5499 = mem[_5492]
                            require mem[_5492] == mem[_5492 + 12 len 20]
                            if mem[_5492 + 12 len 20] == address(_5473):
                                revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                            if mem[_5492 + 12 len 20] >= address(_5473):
                                if not address(_5473):
                                    revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                if mem[_5492 + 12 len 20] == address(_5473):
                                    revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                                if mem[_5492 + 12 len 20] < address(_5473):
                                    if not mem[_5492 + 12 len 20]:
                                        revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                    _5693 = mem[64]
                                    mem[mem[64] + 32] = address(mem[_5492])
                                    mem[mem[64] + 52] = address(_5473)
                                    _5731 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _5733 = sha3(mem[_5731 + 32 len mem[_5731]])
                                    mem[_5693 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_5693 + 105] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                    mem[_5693 + 125] = _5733
                                    mem[_5693 + 157] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                    mem[_5693 + 72] = 85
                                    require ext_code.size(address(sha3(0, 17269419903419772280, _5733, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    staticcall address(sha3(0, 17269419903419772280, _5733, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                                            gas gas_remaining wei
                                    mem[_5693 + 189 len 96] = ext_call.return_data[0 len 96]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 96
                                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                    if address(_5499) == address(_5473):
                                        revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                                    if address(_5499) < address(_5473):
                                        if not address(_5499):
                                            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                        mem[_5693 + ceil32(return_data.size) + 221] = address(_5499)
                                        mem[_5693 + ceil32(return_data.size) + 241] = address(_5473)
                                        mem[_5693 + ceil32(return_data.size) + 189] = 40
                                        mem[_5693 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_5693 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                        mem[_5693 + ceil32(return_data.size) + 314] = sha3(address(_5499), address(_5473))
                                        mem[_5693 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                        mem[_5693 + ceil32(return_data.size) + 261] = 85
                                        if 100000 * _5462 * _5454 * stor6 / 10^18 / _5462 <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                            mem[_5693 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                            mem[_5693 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                            mem[_5693 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                            mem[_5693 + ceil32(return_data.size) + 378] = 96
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5499), address(_5473)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            staticcall address(sha3(0, 17269419903419772280, sha3(address(_5499), address(_5473)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                    gas gas_remaining wei
                                            mem[_5693 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5693 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5499), address(_5473)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            staticcall address(sha3(0, 17269419903419772280, sha3(address(_5499), address(_5473)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                    gas gas_remaining wei
                                                   args mem[_5693 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                            mem[_5693 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[64] = _5693 + (4 * ceil32(return_data.size)) + 506
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5693 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            if ext_call.return_data[12 len 20] == address(_5499):
                                                mem[_5693 + (4 * ceil32(return_data.size)) + 510] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                if ext_call.return_data[12 len 20] == address(_5499):
                                                    mem[_5693 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                else:
                                                    mem[_5693 + (4 * ceil32(return_data.size)) + 542] = 0
                                            else:
                                                mem[_5693 + (4 * ceil32(return_data.size)) + 510] = 0
                                                if ext_call.return_data[12 len 20] == address(_5499):
                                                    mem[_5693 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                else:
                                                    mem[_5693 + (4 * ceil32(return_data.size)) + 542] = 0
                                            mem[_5693 + (4 * ceil32(return_data.size)) + 574] = this.address
                                            mem[_5693 + (4 * ceil32(return_data.size)) + 606] = 128
                                            mem[_5693 + (4 * ceil32(return_data.size)) + 638] = 96
                                            idx = 0
                                            while idx < 96:
                                                mem[idx + _5693 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5693 + ceil32(return_data.size) + 410]
                                                require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                require 2 * t < arg2.length
                                                require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                require (2 * t) + 1 < arg2.length
                                                require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5693 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                require ext_code.size(comptrollerAddress)
                                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                        gas gas_remaining wei
                                                       args mem[_5693 + (4 * ceil32(return_data.size)) + 510 len -_5693 + -(4 * ceil32(return_data.size)) - 378]
                                                mem[_5693 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                idx = idx + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5499), address(_5473)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            call address(sha3(0, 17269419903419772280, sha3(address(_5499), address(_5473)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5693 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                 gas gas_remaining wei
                                                args mem[_5693 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5693 + (4 * ceil32(return_data.size)) + 670 len 96]
                                        else:
                                            mem[_5693 + ceil32(return_data.size) + 382] = address(_5499)
                                            mem[_5693 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                            require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                            staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                    gas gas_remaining wei
                                                   args address(_5499), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                            mem[_5693 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5693 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                            mem[_5693 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                            mem[_5693 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                            mem[_5693 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            staticcall address(ext_call.return_data[0]).token0() with:
                                                    gas gas_remaining wei
                                            mem[_5693 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5693 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            staticcall address(ext_call.return_data[0]).token1() with:
                                                    gas gas_remaining wei
                                                   args mem[_5693 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[64] = _5693 + (4 * ceil32(return_data.size)) + 506
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5693 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            if ext_call.return_data[12 len 20] == address(_5499):
                                                mem[_5693 + (4 * ceil32(return_data.size)) + 510] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                if ext_call.return_data[12 len 20] == address(_5499):
                                                    mem[_5693 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                else:
                                                    mem[_5693 + (4 * ceil32(return_data.size)) + 542] = 0
                                            else:
                                                mem[_5693 + (4 * ceil32(return_data.size)) + 510] = 0
                                                if ext_call.return_data[12 len 20] == address(_5499):
                                                    mem[_5693 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                else:
                                                    mem[_5693 + (4 * ceil32(return_data.size)) + 542] = 0
                                            mem[_5693 + (4 * ceil32(return_data.size)) + 574] = this.address
                                            mem[_5693 + (4 * ceil32(return_data.size)) + 606] = 128
                                            mem[_5693 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                            idx = 0
                                            while idx < ceil32(return_data.size) + 96:
                                                mem[idx + _5693 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5693 + (2 * ceil32(return_data.size)) + 410]
                                                require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                require 2 * t < arg2.length
                                                require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                require (2 * t) + 1 < arg2.length
                                                require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5693 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                require ext_code.size(comptrollerAddress)
                                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                        gas gas_remaining wei
                                                       args mem[_5693 + (4 * ceil32(return_data.size)) + 510 len -_5693 + -(4 * ceil32(return_data.size)) - 378]
                                                mem[_5693 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                idx = idx + 32
                                                continue 
                                            if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                mem[_5693 + (6 * ceil32(return_data.size)) + 766] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).mem[_5693 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                 gas gas_remaining wei
                                                args mem[_5693 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5693 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                    else:
                                        if not address(_5473):
                                            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                        mem[_5693 + ceil32(return_data.size) + 221] = address(_5473)
                                        mem[_5693 + ceil32(return_data.size) + 241] = address(_5499)
                                        mem[_5693 + ceil32(return_data.size) + 189] = 40
                                        mem[_5693 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_5693 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                        mem[_5693 + ceil32(return_data.size) + 314] = sha3(address(_5473), address(_5499))
                                        mem[_5693 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                        mem[_5693 + ceil32(return_data.size) + 261] = 85
                                        if 100000 * _5462 * _5454 * stor6 / 10^18 / _5462 <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                            mem[_5693 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                            mem[_5693 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                            mem[_5693 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                            mem[_5693 + ceil32(return_data.size) + 378] = 96
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5473), address(_5499)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            staticcall address(sha3(0, 17269419903419772280, sha3(address(_5473), address(_5499)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                    gas gas_remaining wei
                                            mem[_5693 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5693 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5473), address(_5499)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            staticcall address(sha3(0, 17269419903419772280, sha3(address(_5473), address(_5499)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                    gas gas_remaining wei
                                                   args mem[_5693 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                            mem[_5693 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[64] = _5693 + (4 * ceil32(return_data.size)) + 506
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5693 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            if ext_call.return_data[12 len 20] == address(_5499):
                                                mem[_5693 + (4 * ceil32(return_data.size)) + 510] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                if ext_call.return_data[12 len 20] == address(_5499):
                                                    mem[_5693 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                else:
                                                    mem[_5693 + (4 * ceil32(return_data.size)) + 542] = 0
                                            else:
                                                mem[_5693 + (4 * ceil32(return_data.size)) + 510] = 0
                                                if ext_call.return_data[12 len 20] == address(_5499):
                                                    mem[_5693 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                else:
                                                    mem[_5693 + (4 * ceil32(return_data.size)) + 542] = 0
                                            mem[_5693 + (4 * ceil32(return_data.size)) + 574] = this.address
                                            mem[_5693 + (4 * ceil32(return_data.size)) + 606] = 128
                                            mem[_5693 + (4 * ceil32(return_data.size)) + 638] = 96
                                            idx = 0
                                            while idx < 96:
                                                mem[idx + _5693 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5693 + ceil32(return_data.size) + 410]
                                                require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                require 2 * t < arg2.length
                                                require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                require (2 * t) + 1 < arg2.length
                                                require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5693 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                require ext_code.size(comptrollerAddress)
                                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                        gas gas_remaining wei
                                                       args mem[_5693 + (4 * ceil32(return_data.size)) + 510 len -_5693 + -(4 * ceil32(return_data.size)) - 378]
                                                mem[_5693 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                idx = idx + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5473), address(_5499)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            call address(sha3(0, 17269419903419772280, sha3(address(_5473), address(_5499)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5693 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                 gas gas_remaining wei
                                                args mem[_5693 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5693 + (4 * ceil32(return_data.size)) + 670 len 96]
                                        else:
                                            mem[_5693 + ceil32(return_data.size) + 382] = address(_5499)
                                            mem[_5693 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                            require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                            staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                    gas gas_remaining wei
                                                   args address(_5499), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                            mem[_5693 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5693 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                            mem[_5693 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                            mem[_5693 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                            mem[_5693 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            staticcall address(ext_call.return_data[0]).token0() with:
                                                    gas gas_remaining wei
                                            mem[_5693 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5693 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            staticcall address(ext_call.return_data[0]).token1() with:
                                                    gas gas_remaining wei
                                                   args mem[_5693 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[64] = _5693 + (4 * ceil32(return_data.size)) + 506
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5693 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            if ext_call.return_data[12 len 20] == address(_5499):
                                                mem[_5693 + (4 * ceil32(return_data.size)) + 510] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                if ext_call.return_data[12 len 20] == address(_5499):
                                                    mem[_5693 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                else:
                                                    mem[_5693 + (4 * ceil32(return_data.size)) + 542] = 0
                                            else:
                                                mem[_5693 + (4 * ceil32(return_data.size)) + 510] = 0
                                                if ext_call.return_data[12 len 20] == address(_5499):
                                                    mem[_5693 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                else:
                                                    mem[_5693 + (4 * ceil32(return_data.size)) + 542] = 0
                                            mem[_5693 + (4 * ceil32(return_data.size)) + 574] = this.address
                                            mem[_5693 + (4 * ceil32(return_data.size)) + 606] = 128
                                            mem[_5693 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                            idx = 0
                                            while idx < ceil32(return_data.size) + 96:
                                                mem[idx + _5693 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5693 + (2 * ceil32(return_data.size)) + 410]
                                                require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                require 2 * t < arg2.length
                                                require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                require (2 * t) + 1 < arg2.length
                                                require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5693 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                require ext_code.size(comptrollerAddress)
                                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                        gas gas_remaining wei
                                                       args mem[_5693 + (4 * ceil32(return_data.size)) + 510 len -_5693 + -(4 * ceil32(return_data.size)) - 378]
                                                mem[_5693 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                idx = idx + 32
                                                continue 
                                            if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                mem[_5693 + (6 * ceil32(return_data.size)) + 766] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).mem[_5693 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                 gas gas_remaining wei
                                                args mem[_5693 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5693 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if gas_remaining < stor8:
                                    if arg1.length == t + 1:
                                    require t + 1 < arg1.length
                                    require cd[((32 * t + 2) + arg1 + 36)] == address(cd[((32 * t + 2) + arg1 + 36)])
                                    require 2 * t + 1 < arg2.length
                                    require cd[((64 * t + 1) + arg2 + 36)] == address(cd[((64 * t + 1) + arg2 + 36)])
                                    require (2 * t + 1) + 1 < arg2.length
                                    require cd[((32 * (2 * t + 1) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t + 1) + 1) + arg2 + 36)])
                                    mem[_5693 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                    mem[100] = address(cd[((32 * t + 2) + arg1 + 36)])
                                    require ext_code.size(comptrollerAddress)
                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                            gas gas_remaining wei
                                           args mem[_5693 + (4 * ceil32(return_data.size)) + 510 len -_5693 + -(4 * ceil32(return_data.size)) - 378]
                                    mem[_5693 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                else:
                                    if not address(_5473):
                                        revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                    _5694 = mem[64]
                                    mem[mem[64] + 32] = address(_5473)
                                    mem[mem[64] + 52] = address(_5499)
                                    _5735 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _5737 = sha3(mem[_5735 + 32 len mem[_5735]])
                                    mem[_5694 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_5694 + 105] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                    mem[_5694 + 125] = _5737
                                    mem[_5694 + 157] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                    mem[_5694 + 72] = 85
                                    require ext_code.size(address(sha3(0, 17269419903419772280, _5737, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    staticcall address(sha3(0, 17269419903419772280, _5737, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                                            gas gas_remaining wei
                                    mem[_5694 + 189 len 96] = ext_call.return_data[0 len 96]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 96
                                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                    if address(_5499) == address(_5473):
                                        revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                                    if address(_5499) < address(_5473):
                                        if not address(_5499):
                                            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                        mem[_5694 + ceil32(return_data.size) + 221] = address(_5499)
                                        mem[_5694 + ceil32(return_data.size) + 241] = address(_5473)
                                        mem[_5694 + ceil32(return_data.size) + 189] = 40
                                        mem[_5694 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_5694 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                        mem[_5694 + ceil32(return_data.size) + 314] = sha3(address(_5499), address(_5473))
                                        mem[_5694 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                        mem[_5694 + ceil32(return_data.size) + 261] = 85
                                        if 100000 * _5462 * _5454 * stor6 / 10^18 / _5462 <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                            mem[_5694 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                            mem[_5694 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                            mem[_5694 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                            mem[_5694 + ceil32(return_data.size) + 378] = 96
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5499), address(_5473)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            staticcall address(sha3(0, 17269419903419772280, sha3(address(_5499), address(_5473)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                    gas gas_remaining wei
                                            mem[_5694 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5694 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5499), address(_5473)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            staticcall address(sha3(0, 17269419903419772280, sha3(address(_5499), address(_5473)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                    gas gas_remaining wei
                                                   args mem[_5694 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                            mem[_5694 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[64] = _5694 + (4 * ceil32(return_data.size)) + 506
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5694 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            if ext_call.return_data[12 len 20] == address(_5499):
                                                mem[_5694 + (4 * ceil32(return_data.size)) + 510] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                if ext_call.return_data[12 len 20] == address(_5499):
                                                    mem[_5694 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                else:
                                                    mem[_5694 + (4 * ceil32(return_data.size)) + 542] = 0
                                            else:
                                                mem[_5694 + (4 * ceil32(return_data.size)) + 510] = 0
                                                if ext_call.return_data[12 len 20] == address(_5499):
                                                    mem[_5694 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                else:
                                                    mem[_5694 + (4 * ceil32(return_data.size)) + 542] = 0
                                            mem[_5694 + (4 * ceil32(return_data.size)) + 574] = this.address
                                            mem[_5694 + (4 * ceil32(return_data.size)) + 606] = 128
                                            mem[_5694 + (4 * ceil32(return_data.size)) + 638] = 96
                                            idx = 0
                                            while idx < 96:
                                                mem[idx + _5694 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5694 + ceil32(return_data.size) + 410]
                                                require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                require 2 * t < arg2.length
                                                require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                require (2 * t) + 1 < arg2.length
                                                require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5694 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                require ext_code.size(comptrollerAddress)
                                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                        gas gas_remaining wei
                                                       args mem[_5694 + (4 * ceil32(return_data.size)) + 510 len -_5694 + -(4 * ceil32(return_data.size)) - 378]
                                                mem[_5694 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                idx = idx + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5499), address(_5473)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            call address(sha3(0, 17269419903419772280, sha3(address(_5499), address(_5473)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5694 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                 gas gas_remaining wei
                                                args mem[_5694 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5694 + (4 * ceil32(return_data.size)) + 670 len 96]
                                        else:
                                            mem[_5694 + ceil32(return_data.size) + 382] = address(_5499)
                                            mem[_5694 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                            require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                            staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                    gas gas_remaining wei
                                                   args address(_5499), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                            mem[_5694 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5694 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                            mem[_5694 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                            mem[_5694 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                            mem[_5694 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            staticcall address(ext_call.return_data[0]).token0() with:
                                                    gas gas_remaining wei
                                            mem[_5694 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5694 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            staticcall address(ext_call.return_data[0]).token1() with:
                                                    gas gas_remaining wei
                                                   args mem[_5694 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[64] = _5694 + (4 * ceil32(return_data.size)) + 506
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5694 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            if ext_call.return_data[12 len 20] == address(_5499):
                                                mem[_5694 + (4 * ceil32(return_data.size)) + 510] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                if ext_call.return_data[12 len 20] == address(_5499):
                                                    mem[_5694 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                else:
                                                    mem[_5694 + (4 * ceil32(return_data.size)) + 542] = 0
                                            else:
                                                mem[_5694 + (4 * ceil32(return_data.size)) + 510] = 0
                                                if ext_call.return_data[12 len 20] == address(_5499):
                                                    mem[_5694 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                else:
                                                    mem[_5694 + (4 * ceil32(return_data.size)) + 542] = 0
                                            mem[_5694 + (4 * ceil32(return_data.size)) + 574] = this.address
                                            mem[_5694 + (4 * ceil32(return_data.size)) + 606] = 128
                                            mem[_5694 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                            idx = 0
                                            while idx < ceil32(return_data.size) + 96:
                                                mem[idx + _5694 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5694 + (2 * ceil32(return_data.size)) + 410]
                                                require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                require 2 * t < arg2.length
                                                require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                require (2 * t) + 1 < arg2.length
                                                require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5694 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                require ext_code.size(comptrollerAddress)
                                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                        gas gas_remaining wei
                                                       args mem[_5694 + (4 * ceil32(return_data.size)) + 510 len -_5694 + -(4 * ceil32(return_data.size)) - 378]
                                                mem[_5694 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                idx = idx + 32
                                                continue 
                                            if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                mem[_5694 + (6 * ceil32(return_data.size)) + 766] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).mem[_5694 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                 gas gas_remaining wei
                                                args mem[_5694 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5694 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                    else:
                                        if not address(_5473):
                                            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                        mem[_5694 + ceil32(return_data.size) + 221] = address(_5473)
                                        mem[_5694 + ceil32(return_data.size) + 241] = address(_5499)
                                        mem[_5694 + ceil32(return_data.size) + 189] = 40
                                        mem[_5694 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_5694 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                        mem[_5694 + ceil32(return_data.size) + 314] = sha3(address(_5473), address(_5499))
                                        mem[_5694 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                        mem[_5694 + ceil32(return_data.size) + 261] = 85
                                        if 100000 * _5462 * _5454 * stor6 / 10^18 / _5462 <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                            mem[_5694 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                            mem[_5694 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                            mem[_5694 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                            mem[_5694 + ceil32(return_data.size) + 378] = 96
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5473), address(_5499)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            staticcall address(sha3(0, 17269419903419772280, sha3(address(_5473), address(_5499)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                    gas gas_remaining wei
                                            mem[_5694 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5694 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5473), address(_5499)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            staticcall address(sha3(0, 17269419903419772280, sha3(address(_5473), address(_5499)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                    gas gas_remaining wei
                                                   args mem[_5694 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                            mem[_5694 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[64] = _5694 + (4 * ceil32(return_data.size)) + 506
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5694 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            if ext_call.return_data[12 len 20] == address(_5499):
                                                mem[_5694 + (4 * ceil32(return_data.size)) + 510] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                if ext_call.return_data[12 len 20] == address(_5499):
                                                    mem[_5694 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                else:
                                                    mem[_5694 + (4 * ceil32(return_data.size)) + 542] = 0
                                            else:
                                                mem[_5694 + (4 * ceil32(return_data.size)) + 510] = 0
                                                if ext_call.return_data[12 len 20] == address(_5499):
                                                    mem[_5694 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                else:
                                                    mem[_5694 + (4 * ceil32(return_data.size)) + 542] = 0
                                            mem[_5694 + (4 * ceil32(return_data.size)) + 574] = this.address
                                            mem[_5694 + (4 * ceil32(return_data.size)) + 606] = 128
                                            mem[_5694 + (4 * ceil32(return_data.size)) + 638] = 96
                                            idx = 0
                                            while idx < 96:
                                                mem[idx + _5694 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5694 + ceil32(return_data.size) + 410]
                                                require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                require 2 * t < arg2.length
                                                require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                require (2 * t) + 1 < arg2.length
                                                require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5694 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                require ext_code.size(comptrollerAddress)
                                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                        gas gas_remaining wei
                                                       args mem[_5694 + (4 * ceil32(return_data.size)) + 510 len -_5694 + -(4 * ceil32(return_data.size)) - 378]
                                                mem[_5694 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                idx = idx + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5473), address(_5499)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            call address(sha3(0, 17269419903419772280, sha3(address(_5473), address(_5499)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5694 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                 gas gas_remaining wei
                                                args mem[_5694 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5694 + (4 * ceil32(return_data.size)) + 670 len 96]
                                        else:
                                            mem[_5694 + ceil32(return_data.size) + 382] = address(_5499)
                                            mem[_5694 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                            require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                            staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                    gas gas_remaining wei
                                                   args address(_5499), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                            mem[_5694 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5694 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                            mem[_5694 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                            mem[_5694 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                            mem[_5694 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            staticcall address(ext_call.return_data[0]).token0() with:
                                                    gas gas_remaining wei
                                            mem[_5694 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5694 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            staticcall address(ext_call.return_data[0]).token1() with:
                                                    gas gas_remaining wei
                                                   args mem[_5694 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[64] = _5694 + (4 * ceil32(return_data.size)) + 506
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5694 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            if ext_call.return_data[12 len 20] == address(_5499):
                                                mem[_5694 + (4 * ceil32(return_data.size)) + 510] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                if ext_call.return_data[12 len 20] == address(_5499):
                                                    mem[_5694 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                else:
                                                    mem[_5694 + (4 * ceil32(return_data.size)) + 542] = 0
                                            else:
                                                mem[_5694 + (4 * ceil32(return_data.size)) + 510] = 0
                                                if ext_call.return_data[12 len 20] == address(_5499):
                                                    mem[_5694 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                else:
                                                    mem[_5694 + (4 * ceil32(return_data.size)) + 542] = 0
                                            mem[_5694 + (4 * ceil32(return_data.size)) + 574] = this.address
                                            mem[_5694 + (4 * ceil32(return_data.size)) + 606] = 128
                                            mem[_5694 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                            idx = 0
                                            while idx < ceil32(return_data.size) + 96:
                                                mem[idx + _5694 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5694 + (2 * ceil32(return_data.size)) + 410]
                                                require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                require 2 * t < arg2.length
                                                require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                require (2 * t) + 1 < arg2.length
                                                require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5694 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                require ext_code.size(comptrollerAddress)
                                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                        gas gas_remaining wei
                                                       args mem[_5694 + (4 * ceil32(return_data.size)) + 510 len -_5694 + -(4 * ceil32(return_data.size)) - 378]
                                                mem[_5694 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                idx = idx + 32
                                                continue 
                                            if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                mem[_5694 + (6 * ceil32(return_data.size)) + 766] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).mem[_5694 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                 gas gas_remaining wei
                                                args mem[_5694 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5694 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if gas_remaining < stor8:
                                    if arg1.length == t + 1:
                                    require t + 1 < arg1.length
                                    require cd[((32 * t + 2) + arg1 + 36)] == address(cd[((32 * t + 2) + arg1 + 36)])
                                    require 2 * t + 1 < arg2.length
                                    require cd[((64 * t + 1) + arg2 + 36)] == address(cd[((64 * t + 1) + arg2 + 36)])
                                    require (2 * t + 1) + 1 < arg2.length
                                    require cd[((32 * (2 * t + 1) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t + 1) + 1) + arg2 + 36)])
                                    mem[_5694 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                    mem[100] = address(cd[((32 * t + 2) + arg1 + 36)])
                                    require ext_code.size(comptrollerAddress)
                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                            gas gas_remaining wei
                                           args mem[_5694 + (4 * ceil32(return_data.size)) + 510 len -_5694 + -(4 * ceil32(return_data.size)) - 378]
                                    mem[_5694 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                            else:
                                if not mem[_5492 + 12 len 20]:
                                    revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                if mem[_5492 + 12 len 20] == address(_5473):
                                    revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                                if mem[_5492 + 12 len 20] < address(_5473):
                                    if not mem[_5492 + 12 len 20]:
                                        revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                    _5691 = mem[64]
                                    mem[mem[64] + 32] = address(mem[_5492])
                                    mem[mem[64] + 52] = address(_5473)
                                    _5723 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _5725 = sha3(mem[_5723 + 32 len mem[_5723]])
                                    mem[_5691 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_5691 + 105] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                    mem[_5691 + 125] = _5725
                                    mem[_5691 + 157] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                    mem[_5691 + 72] = 85
                                    require ext_code.size(address(sha3(0, 17269419903419772280, _5725, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    staticcall address(sha3(0, 17269419903419772280, _5725, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                                            gas gas_remaining wei
                                    mem[_5691 + 189 len 96] = ext_call.return_data[0 len 96]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 96
                                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                    if address(_5499) == address(_5473):
                                        revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                                    if address(_5499) == address(_5499):
                                        if address(_5499) < address(_5473):
                                            if not address(_5499):
                                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                            mem[_5691 + ceil32(return_data.size) + 221] = address(_5499)
                                            mem[_5691 + ceil32(return_data.size) + 241] = address(_5473)
                                            mem[_5691 + ceil32(return_data.size) + 189] = 40
                                            mem[_5691 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_5691 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                            mem[_5691 + ceil32(return_data.size) + 314] = sha3(address(_5499), address(_5473))
                                            mem[_5691 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                            mem[_5691 + ceil32(return_data.size) + 261] = 85
                                            if 100000 * _5462 * _5454 * stor6 / 10^18 / _5462 <= 985 * Mask(112, 0, ext_call.return_data[0]):
                                                mem[_5691 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                                mem[_5691 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                                mem[_5691 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5691 + ceil32(return_data.size) + 378] = 96
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5499), address(_5473)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5499), address(_5473)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5691 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5691 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5499), address(_5473)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5499), address(_5473)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5691 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                                mem[_5691 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5691 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5691 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5499):
                                                    mem[_5691 + (4 * ceil32(return_data.size)) + 510] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    if ext_call.return_data[12 len 20] == address(_5499):
                                                        mem[_5691 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    else:
                                                        mem[_5691 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5691 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5499):
                                                        mem[_5691 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    else:
                                                        mem[_5691 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5691 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5691 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5691 + (4 * ceil32(return_data.size)) + 638] = 96
                                                idx = 0
                                                while idx < 96:
                                                    mem[idx + _5691 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5691 + ceil32(return_data.size) + 410]
                                                    require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                    require 2 * t < arg2.length
                                                    require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                    require (2 * t) + 1 < arg2.length
                                                    require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                    mem[_5691 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5691 + (4 * ceil32(return_data.size)) + 510 len -_5691 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5691 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5499), address(_5473)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                call address(sha3(0, 17269419903419772280, sha3(address(_5499), address(_5473)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5691 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5691 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5691 + (4 * ceil32(return_data.size)) + 670 len 96]
                                            else:
                                                mem[_5691 + ceil32(return_data.size) + 382] = address(_5499)
                                                mem[_5691 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                                staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                        gas gas_remaining wei
                                                       args address(_5499), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                mem[_5691 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5691 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                                mem[_5691 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                                mem[_5691 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5691 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5691 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5691 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5691 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5691 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5691 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5499):
                                                    mem[_5691 + (4 * ceil32(return_data.size)) + 510] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    if ext_call.return_data[12 len 20] == address(_5499):
                                                        mem[_5691 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    else:
                                                        mem[_5691 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5691 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5499):
                                                        mem[_5691 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    else:
                                                        mem[_5691 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5691 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5691 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5691 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                                idx = 0
                                                while idx < ceil32(return_data.size) + 96:
                                                    mem[idx + _5691 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5691 + (2 * ceil32(return_data.size)) + 410]
                                                    require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                    require 2 * t < arg2.length
                                                    require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                    require (2 * t) + 1 < arg2.length
                                                    require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                    mem[_5691 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5691 + (4 * ceil32(return_data.size)) + 510 len -_5691 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5691 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                    mem[_5691 + (6 * ceil32(return_data.size)) + 766] = 0
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                call address(ext_call.return_data[0]).mem[_5691 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5691 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5691 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                        else:
                                            if not address(_5473):
                                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                            mem[_5691 + ceil32(return_data.size) + 221] = address(_5473)
                                            mem[_5691 + ceil32(return_data.size) + 241] = address(_5499)
                                            mem[_5691 + ceil32(return_data.size) + 189] = 40
                                            mem[_5691 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_5691 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                            mem[_5691 + ceil32(return_data.size) + 314] = sha3(address(_5473), address(_5499))
                                            mem[_5691 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                            mem[_5691 + ceil32(return_data.size) + 261] = 85
                                            if 100000 * _5462 * _5454 * stor6 / 10^18 / _5462 <= 985 * Mask(112, 0, ext_call.return_data[0]):
                                                mem[_5691 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                                mem[_5691 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                                mem[_5691 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5691 + ceil32(return_data.size) + 378] = 96
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5473), address(_5499)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5473), address(_5499)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5691 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5691 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5473), address(_5499)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5473), address(_5499)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5691 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                                mem[_5691 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5691 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5691 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5499):
                                                    mem[_5691 + (4 * ceil32(return_data.size)) + 510] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    if ext_call.return_data[12 len 20] == address(_5499):
                                                        mem[_5691 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    else:
                                                        mem[_5691 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5691 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5499):
                                                        mem[_5691 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    else:
                                                        mem[_5691 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5691 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5691 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5691 + (4 * ceil32(return_data.size)) + 638] = 96
                                                idx = 0
                                                while idx < 96:
                                                    mem[idx + _5691 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5691 + ceil32(return_data.size) + 410]
                                                    require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                    require 2 * t < arg2.length
                                                    require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                    require (2 * t) + 1 < arg2.length
                                                    require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                    mem[_5691 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5691 + (4 * ceil32(return_data.size)) + 510 len -_5691 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5691 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5473), address(_5499)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                call address(sha3(0, 17269419903419772280, sha3(address(_5473), address(_5499)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5691 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5691 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5691 + (4 * ceil32(return_data.size)) + 670 len 96]
                                            else:
                                                mem[_5691 + ceil32(return_data.size) + 382] = address(_5499)
                                                mem[_5691 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                                staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                        gas gas_remaining wei
                                                       args address(_5499), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                mem[_5691 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5691 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                                mem[_5691 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                                mem[_5691 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5691 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5691 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5691 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5691 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5691 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5691 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5499):
                                                    mem[_5691 + (4 * ceil32(return_data.size)) + 510] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    if ext_call.return_data[12 len 20] == address(_5499):
                                                        mem[_5691 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    else:
                                                        mem[_5691 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5691 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5499):
                                                        mem[_5691 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    else:
                                                        mem[_5691 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5691 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5691 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5691 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                                idx = 0
                                                while idx < ceil32(return_data.size) + 96:
                                                    mem[idx + _5691 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5691 + (2 * ceil32(return_data.size)) + 410]
                                                    require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                    require 2 * t < arg2.length
                                                    require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                    require (2 * t) + 1 < arg2.length
                                                    require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                    mem[_5691 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5691 + (4 * ceil32(return_data.size)) + 510 len -_5691 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5691 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                    mem[_5691 + (6 * ceil32(return_data.size)) + 766] = 0
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                call address(ext_call.return_data[0]).mem[_5691 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5691 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5691 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                    else:
                                        if address(_5499) < address(_5473):
                                            if not address(_5499):
                                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                            mem[_5691 + ceil32(return_data.size) + 221] = address(_5499)
                                            mem[_5691 + ceil32(return_data.size) + 241] = address(_5473)
                                            mem[_5691 + ceil32(return_data.size) + 189] = 40
                                            mem[_5691 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_5691 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                            mem[_5691 + ceil32(return_data.size) + 314] = sha3(address(_5499), address(_5473))
                                            mem[_5691 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                            mem[_5691 + ceil32(return_data.size) + 261] = 85
                                            if 100000 * _5462 * _5454 * stor6 / 10^18 / _5462 <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                                mem[_5691 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                                mem[_5691 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                                mem[_5691 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5691 + ceil32(return_data.size) + 378] = 96
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5499), address(_5473)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5499), address(_5473)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5691 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5691 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5499), address(_5473)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5499), address(_5473)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5691 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                                mem[_5691 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5691 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5691 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5499):
                                                    mem[_5691 + (4 * ceil32(return_data.size)) + 510] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    if ext_call.return_data[12 len 20] == address(_5499):
                                                        mem[_5691 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    else:
                                                        mem[_5691 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5691 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5499):
                                                        mem[_5691 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    else:
                                                        mem[_5691 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5691 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5691 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5691 + (4 * ceil32(return_data.size)) + 638] = 96
                                                idx = 0
                                                while idx < 96:
                                                    mem[idx + _5691 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5691 + ceil32(return_data.size) + 410]
                                                    require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                    require 2 * t < arg2.length
                                                    require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                    require (2 * t) + 1 < arg2.length
                                                    require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                    mem[_5691 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5691 + (4 * ceil32(return_data.size)) + 510 len -_5691 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5691 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5499), address(_5473)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                call address(sha3(0, 17269419903419772280, sha3(address(_5499), address(_5473)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5691 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5691 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5691 + (4 * ceil32(return_data.size)) + 670 len 96]
                                            else:
                                                mem[_5691 + ceil32(return_data.size) + 382] = address(_5499)
                                                mem[_5691 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                                staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                        gas gas_remaining wei
                                                       args address(_5499), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                mem[_5691 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5691 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                                mem[_5691 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                                mem[_5691 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5691 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5691 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5691 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5691 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5691 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5691 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5499):
                                                    mem[_5691 + (4 * ceil32(return_data.size)) + 510] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    if ext_call.return_data[12 len 20] == address(_5499):
                                                        mem[_5691 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    else:
                                                        mem[_5691 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5691 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5499):
                                                        mem[_5691 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    else:
                                                        mem[_5691 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5691 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5691 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5691 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                                idx = 0
                                                while idx < ceil32(return_data.size) + 96:
                                                    mem[idx + _5691 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5691 + (2 * ceil32(return_data.size)) + 410]
                                                    require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                    require 2 * t < arg2.length
                                                    require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                    require (2 * t) + 1 < arg2.length
                                                    require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                    mem[_5691 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5691 + (4 * ceil32(return_data.size)) + 510 len -_5691 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5691 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                    mem[_5691 + (6 * ceil32(return_data.size)) + 766] = 0
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                call address(ext_call.return_data[0]).mem[_5691 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5691 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5691 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                        else:
                                            if not address(_5473):
                                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                            mem[_5691 + ceil32(return_data.size) + 221] = address(_5473)
                                            mem[_5691 + ceil32(return_data.size) + 241] = address(_5499)
                                            mem[_5691 + ceil32(return_data.size) + 189] = 40
                                            mem[_5691 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_5691 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                            mem[_5691 + ceil32(return_data.size) + 314] = sha3(address(_5473), address(_5499))
                                            mem[_5691 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                            mem[_5691 + ceil32(return_data.size) + 261] = 85
                                            if 100000 * _5462 * _5454 * stor6 / 10^18 / _5462 <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                                mem[_5691 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                                mem[_5691 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                                mem[_5691 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5691 + ceil32(return_data.size) + 378] = 96
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5473), address(_5499)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5473), address(_5499)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5691 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5691 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5473), address(_5499)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5473), address(_5499)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5691 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                                mem[_5691 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5691 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5691 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5499):
                                                    mem[_5691 + (4 * ceil32(return_data.size)) + 510] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    if ext_call.return_data[12 len 20] == address(_5499):
                                                        mem[_5691 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    else:
                                                        mem[_5691 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5691 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5499):
                                                        mem[_5691 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    else:
                                                        mem[_5691 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5691 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5691 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5691 + (4 * ceil32(return_data.size)) + 638] = 96
                                                idx = 0
                                                while idx < 96:
                                                    mem[idx + _5691 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5691 + ceil32(return_data.size) + 410]
                                                    require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                    require 2 * t < arg2.length
                                                    require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                    require (2 * t) + 1 < arg2.length
                                                    require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                    mem[_5691 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5691 + (4 * ceil32(return_data.size)) + 510 len -_5691 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5691 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5473), address(_5499)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                call address(sha3(0, 17269419903419772280, sha3(address(_5473), address(_5499)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5691 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5691 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5691 + (4 * ceil32(return_data.size)) + 670 len 96]
                                            else:
                                                mem[_5691 + ceil32(return_data.size) + 382] = address(_5499)
                                                mem[_5691 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                                staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                        gas gas_remaining wei
                                                       args address(_5499), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                mem[_5691 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5691 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                                mem[_5691 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                                mem[_5691 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5691 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5691 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5691 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5691 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5691 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5691 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5499):
                                                    mem[_5691 + (4 * ceil32(return_data.size)) + 510] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    if ext_call.return_data[12 len 20] == address(_5499):
                                                        mem[_5691 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    else:
                                                        mem[_5691 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5691 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5499):
                                                        mem[_5691 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    else:
                                                        mem[_5691 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5691 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5691 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5691 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                                idx = 0
                                                while idx < ceil32(return_data.size) + 96:
                                                    mem[idx + _5691 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5691 + (2 * ceil32(return_data.size)) + 410]
                                                    require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                    require 2 * t < arg2.length
                                                    require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                    require (2 * t) + 1 < arg2.length
                                                    require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                    mem[_5691 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5691 + (4 * ceil32(return_data.size)) + 510 len -_5691 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5691 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                    mem[_5691 + (6 * ceil32(return_data.size)) + 766] = 0
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                call address(ext_call.return_data[0]).mem[_5691 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5691 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5691 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if gas_remaining < stor8:
                                    if arg1.length == t + 1:
                                    require t + 1 < arg1.length
                                    require cd[((32 * t + 2) + arg1 + 36)] == address(cd[((32 * t + 2) + arg1 + 36)])
                                    require 2 * t + 1 < arg2.length
                                    require cd[((64 * t + 1) + arg2 + 36)] == address(cd[((64 * t + 1) + arg2 + 36)])
                                    require (2 * t + 1) + 1 < arg2.length
                                    require cd[((32 * (2 * t + 1) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t + 1) + 1) + arg2 + 36)])
                                    mem[_5691 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                    mem[100] = address(cd[((32 * t + 2) + arg1 + 36)])
                                    require ext_code.size(comptrollerAddress)
                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                            gas gas_remaining wei
                                           args mem[_5691 + (4 * ceil32(return_data.size)) + 510 len -_5691 + -(4 * ceil32(return_data.size)) - 378]
                                    mem[_5691 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                else:
                                    if not address(_5473):
                                        revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                    _5692 = mem[64]
                                    mem[mem[64] + 32] = address(_5473)
                                    mem[mem[64] + 52] = address(_5499)
                                    _5727 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _5729 = sha3(mem[_5727 + 32 len mem[_5727]])
                                    mem[_5692 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_5692 + 105] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                    mem[_5692 + 125] = _5729
                                    mem[_5692 + 157] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                    mem[_5692 + 72] = 85
                                    require ext_code.size(address(sha3(0, 17269419903419772280, _5729, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    staticcall address(sha3(0, 17269419903419772280, _5729, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                                            gas gas_remaining wei
                                    mem[_5692 + 189 len 96] = ext_call.return_data[0 len 96]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 96
                                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                    if address(_5499) == address(_5473):
                                        revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                                    if address(_5499) == address(_5499):
                                        if address(_5499) < address(_5473):
                                            if not address(_5499):
                                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                            mem[_5692 + ceil32(return_data.size) + 221] = address(_5499)
                                            mem[_5692 + ceil32(return_data.size) + 241] = address(_5473)
                                            mem[_5692 + ceil32(return_data.size) + 189] = 40
                                            mem[_5692 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_5692 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                            mem[_5692 + ceil32(return_data.size) + 314] = sha3(address(_5499), address(_5473))
                                            mem[_5692 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                            mem[_5692 + ceil32(return_data.size) + 261] = 85
                                            if 100000 * _5462 * _5454 * stor6 / 10^18 / _5462 <= 985 * Mask(112, 0, ext_call.return_data[0]):
                                                mem[_5692 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                                mem[_5692 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                                mem[_5692 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5692 + ceil32(return_data.size) + 378] = 96
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5499), address(_5473)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5499), address(_5473)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5692 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5692 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5499), address(_5473)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5499), address(_5473)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5692 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                                mem[_5692 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5692 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5692 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5499):
                                                    mem[_5692 + (4 * ceil32(return_data.size)) + 510] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    if ext_call.return_data[12 len 20] == address(_5499):
                                                        mem[_5692 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    else:
                                                        mem[_5692 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5692 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5499):
                                                        mem[_5692 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    else:
                                                        mem[_5692 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5692 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5692 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5692 + (4 * ceil32(return_data.size)) + 638] = 96
                                                idx = 0
                                                while idx < 96:
                                                    mem[idx + _5692 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5692 + ceil32(return_data.size) + 410]
                                                    require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                    require 2 * t < arg2.length
                                                    require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                    require (2 * t) + 1 < arg2.length
                                                    require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                    mem[_5692 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5692 + (4 * ceil32(return_data.size)) + 510 len -_5692 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5692 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5499), address(_5473)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                call address(sha3(0, 17269419903419772280, sha3(address(_5499), address(_5473)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5692 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5692 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5692 + (4 * ceil32(return_data.size)) + 670 len 96]
                                            else:
                                                mem[_5692 + ceil32(return_data.size) + 382] = address(_5499)
                                                mem[_5692 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                                staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                        gas gas_remaining wei
                                                       args address(_5499), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                mem[_5692 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5692 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                                mem[_5692 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                                mem[_5692 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5692 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5692 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5692 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5692 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5692 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5692 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5499):
                                                    mem[_5692 + (4 * ceil32(return_data.size)) + 510] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    if ext_call.return_data[12 len 20] == address(_5499):
                                                        mem[_5692 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    else:
                                                        mem[_5692 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5692 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5499):
                                                        mem[_5692 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    else:
                                                        mem[_5692 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5692 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5692 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5692 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                                idx = 0
                                                while idx < ceil32(return_data.size) + 96:
                                                    mem[idx + _5692 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5692 + (2 * ceil32(return_data.size)) + 410]
                                                    require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                    require 2 * t < arg2.length
                                                    require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                    require (2 * t) + 1 < arg2.length
                                                    require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                    mem[_5692 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5692 + (4 * ceil32(return_data.size)) + 510 len -_5692 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5692 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                    mem[_5692 + (6 * ceil32(return_data.size)) + 766] = 0
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                call address(ext_call.return_data[0]).mem[_5692 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5692 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5692 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                        else:
                                            if not address(_5473):
                                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                            mem[_5692 + ceil32(return_data.size) + 221] = address(_5473)
                                            mem[_5692 + ceil32(return_data.size) + 241] = address(_5499)
                                            mem[_5692 + ceil32(return_data.size) + 189] = 40
                                            mem[_5692 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_5692 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                            mem[_5692 + ceil32(return_data.size) + 314] = sha3(address(_5473), address(_5499))
                                            mem[_5692 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                            mem[_5692 + ceil32(return_data.size) + 261] = 85
                                            if 100000 * _5462 * _5454 * stor6 / 10^18 / _5462 <= 985 * Mask(112, 0, ext_call.return_data[0]):
                                                mem[_5692 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                                mem[_5692 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                                mem[_5692 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5692 + ceil32(return_data.size) + 378] = 96
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5473), address(_5499)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5473), address(_5499)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5692 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5692 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5473), address(_5499)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5473), address(_5499)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5692 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                                mem[_5692 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5692 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5692 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5499):
                                                    mem[_5692 + (4 * ceil32(return_data.size)) + 510] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    if ext_call.return_data[12 len 20] == address(_5499):
                                                        mem[_5692 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    else:
                                                        mem[_5692 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5692 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5499):
                                                        mem[_5692 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    else:
                                                        mem[_5692 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5692 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5692 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5692 + (4 * ceil32(return_data.size)) + 638] = 96
                                                idx = 0
                                                while idx < 96:
                                                    mem[idx + _5692 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5692 + ceil32(return_data.size) + 410]
                                                    require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                    require 2 * t < arg2.length
                                                    require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                    require (2 * t) + 1 < arg2.length
                                                    require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                    mem[_5692 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5692 + (4 * ceil32(return_data.size)) + 510 len -_5692 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5692 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5473), address(_5499)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                call address(sha3(0, 17269419903419772280, sha3(address(_5473), address(_5499)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5692 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5692 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5692 + (4 * ceil32(return_data.size)) + 670 len 96]
                                            else:
                                                mem[_5692 + ceil32(return_data.size) + 382] = address(_5499)
                                                mem[_5692 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                                staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                        gas gas_remaining wei
                                                       args address(_5499), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                mem[_5692 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5692 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                                mem[_5692 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                                mem[_5692 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5692 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5692 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5692 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5692 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5692 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5692 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5499):
                                                    mem[_5692 + (4 * ceil32(return_data.size)) + 510] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    if ext_call.return_data[12 len 20] == address(_5499):
                                                        mem[_5692 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    else:
                                                        mem[_5692 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5692 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5499):
                                                        mem[_5692 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    else:
                                                        mem[_5692 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5692 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5692 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5692 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                                idx = 0
                                                while idx < ceil32(return_data.size) + 96:
                                                    mem[idx + _5692 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5692 + (2 * ceil32(return_data.size)) + 410]
                                                    require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                    require 2 * t < arg2.length
                                                    require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                    require (2 * t) + 1 < arg2.length
                                                    require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                    mem[_5692 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5692 + (4 * ceil32(return_data.size)) + 510 len -_5692 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5692 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                    mem[_5692 + (6 * ceil32(return_data.size)) + 766] = 0
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                call address(ext_call.return_data[0]).mem[_5692 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5692 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5692 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                    else:
                                        if address(_5499) < address(_5473):
                                            if not address(_5499):
                                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                            mem[_5692 + ceil32(return_data.size) + 221] = address(_5499)
                                            mem[_5692 + ceil32(return_data.size) + 241] = address(_5473)
                                            mem[_5692 + ceil32(return_data.size) + 189] = 40
                                            mem[_5692 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_5692 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                            mem[_5692 + ceil32(return_data.size) + 314] = sha3(address(_5499), address(_5473))
                                            mem[_5692 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                            mem[_5692 + ceil32(return_data.size) + 261] = 85
                                            if 100000 * _5462 * _5454 * stor6 / 10^18 / _5462 <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                                mem[_5692 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                                mem[_5692 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                                mem[_5692 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5692 + ceil32(return_data.size) + 378] = 96
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5499), address(_5473)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5499), address(_5473)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5692 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5692 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5499), address(_5473)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5499), address(_5473)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5692 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                                mem[_5692 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5692 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5692 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5499):
                                                    mem[_5692 + (4 * ceil32(return_data.size)) + 510] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    if ext_call.return_data[12 len 20] == address(_5499):
                                                        mem[_5692 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    else:
                                                        mem[_5692 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5692 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5499):
                                                        mem[_5692 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    else:
                                                        mem[_5692 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5692 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5692 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5692 + (4 * ceil32(return_data.size)) + 638] = 96
                                                idx = 0
                                                while idx < 96:
                                                    mem[idx + _5692 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5692 + ceil32(return_data.size) + 410]
                                                    require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                    require 2 * t < arg2.length
                                                    require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                    require (2 * t) + 1 < arg2.length
                                                    require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                    mem[_5692 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5692 + (4 * ceil32(return_data.size)) + 510 len -_5692 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5692 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5499), address(_5473)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                call address(sha3(0, 17269419903419772280, sha3(address(_5499), address(_5473)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5692 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5692 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5692 + (4 * ceil32(return_data.size)) + 670 len 96]
                                            else:
                                                mem[_5692 + ceil32(return_data.size) + 382] = address(_5499)
                                                mem[_5692 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                                staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                        gas gas_remaining wei
                                                       args address(_5499), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                mem[_5692 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5692 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                                mem[_5692 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                                mem[_5692 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5692 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5692 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5692 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5692 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5692 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5692 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5499):
                                                    mem[_5692 + (4 * ceil32(return_data.size)) + 510] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    if ext_call.return_data[12 len 20] == address(_5499):
                                                        mem[_5692 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    else:
                                                        mem[_5692 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5692 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5499):
                                                        mem[_5692 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    else:
                                                        mem[_5692 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5692 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5692 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5692 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                                idx = 0
                                                while idx < ceil32(return_data.size) + 96:
                                                    mem[idx + _5692 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5692 + (2 * ceil32(return_data.size)) + 410]
                                                    require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                    require 2 * t < arg2.length
                                                    require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                    require (2 * t) + 1 < arg2.length
                                                    require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                    mem[_5692 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5692 + (4 * ceil32(return_data.size)) + 510 len -_5692 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5692 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                    mem[_5692 + (6 * ceil32(return_data.size)) + 766] = 0
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                call address(ext_call.return_data[0]).mem[_5692 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5692 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5692 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                        else:
                                            if not address(_5473):
                                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                            mem[_5692 + ceil32(return_data.size) + 221] = address(_5473)
                                            mem[_5692 + ceil32(return_data.size) + 241] = address(_5499)
                                            mem[_5692 + ceil32(return_data.size) + 189] = 40
                                            mem[_5692 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_5692 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                            mem[_5692 + ceil32(return_data.size) + 314] = sha3(address(_5473), address(_5499))
                                            mem[_5692 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                            mem[_5692 + ceil32(return_data.size) + 261] = 85
                                            if 100000 * _5462 * _5454 * stor6 / 10^18 / _5462 <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                                mem[_5692 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                                mem[_5692 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                                mem[_5692 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5692 + ceil32(return_data.size) + 378] = 96
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5473), address(_5499)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5473), address(_5499)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5692 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5692 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5473), address(_5499)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5473), address(_5499)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5692 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                                mem[_5692 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5692 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5692 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5499):
                                                    mem[_5692 + (4 * ceil32(return_data.size)) + 510] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    if ext_call.return_data[12 len 20] == address(_5499):
                                                        mem[_5692 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    else:
                                                        mem[_5692 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5692 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5499):
                                                        mem[_5692 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    else:
                                                        mem[_5692 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5692 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5692 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5692 + (4 * ceil32(return_data.size)) + 638] = 96
                                                idx = 0
                                                while idx < 96:
                                                    mem[idx + _5692 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5692 + ceil32(return_data.size) + 410]
                                                    require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                    require 2 * t < arg2.length
                                                    require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                    require (2 * t) + 1 < arg2.length
                                                    require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                    mem[_5692 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5692 + (4 * ceil32(return_data.size)) + 510 len -_5692 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5692 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5473), address(_5499)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                call address(sha3(0, 17269419903419772280, sha3(address(_5473), address(_5499)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5692 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5692 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5692 + (4 * ceil32(return_data.size)) + 670 len 96]
                                            else:
                                                mem[_5692 + ceil32(return_data.size) + 382] = address(_5499)
                                                mem[_5692 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                                staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                        gas gas_remaining wei
                                                       args address(_5499), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                mem[_5692 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5692 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                                mem[_5692 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                                mem[_5692 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5692 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5692 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5692 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5692 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5692 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5692 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5499):
                                                    mem[_5692 + (4 * ceil32(return_data.size)) + 510] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    if ext_call.return_data[12 len 20] == address(_5499):
                                                        mem[_5692 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    else:
                                                        mem[_5692 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5692 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5499):
                                                        mem[_5692 + (4 * ceil32(return_data.size)) + 542] = _5462 * _5454 * stor6 / 10^18 / _5462
                                                    else:
                                                        mem[_5692 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5692 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5692 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5692 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                                idx = 0
                                                while idx < ceil32(return_data.size) + 96:
                                                    mem[idx + _5692 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5692 + (2 * ceil32(return_data.size)) + 410]
                                                    require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                    require 2 * t < arg2.length
                                                    require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                    require (2 * t) + 1 < arg2.length
                                                    require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                    mem[_5692 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5692 + (4 * ceil32(return_data.size)) + 510 len -_5692 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5692 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                    mem[_5692 + (6 * ceil32(return_data.size)) + 766] = 0
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                call address(ext_call.return_data[0]).mem[_5692 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5692 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5692 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if gas_remaining < stor8:
                                    if arg1.length == t + 1:
                                    require t + 1 < arg1.length
                                    require cd[((32 * t + 2) + arg1 + 36)] == address(cd[((32 * t + 2) + arg1 + 36)])
                                    require 2 * t + 1 < arg2.length
                                    require cd[((64 * t + 1) + arg2 + 36)] == address(cd[((64 * t + 1) + arg2 + 36)])
                                    require (2 * t + 1) + 1 < arg2.length
                                    require cd[((32 * (2 * t + 1) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t + 1) + 1) + arg2 + 36)])
                                    mem[_5692 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                    mem[100] = address(cd[((32 * t + 2) + arg1 + 36)])
                                    require ext_code.size(comptrollerAddress)
                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                            gas gas_remaining wei
                                           args mem[_5692 + (4 * ceil32(return_data.size)) + 510 len -_5692 + -(4 * ceil32(return_data.size)) - 378]
                                    mem[_5692 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
            else:
                _5472 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _5474 = mem[_5472]
                require mem[_5472] == mem[_5472 + 12 len 20]
                if address(cd[((64 * t) + arg2 + 36)]) == address(cd[((32 * (2 * t) + 1) + arg2 + 36)]):
                    require ext_code.size(address(cd[((64 * t) + arg2 + 36)]))
                    staticcall address(cd[((64 * t) + arg2 + 36)]).underlying() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5486 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _5493 = mem[_5486]
                    require mem[_5486] == mem[_5486 + 12 len 20]
                    if mem[_5486 + 12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                        revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                    if mem[_5486 + 12 len 20] >= 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                        _5558 = mem[64]
                        mem[mem[64] + 32] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7000000000000000000000000
                        mem[mem[64] + 52] = address(_5493)
                        _5592 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _5594 = sha3(mem[_5592 + 32 len mem[_5592]])
                        mem[_5558 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_5558 + 105] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                        mem[_5558 + 125] = _5594
                        mem[_5558 + 157] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                        mem[_5558 + 72] = 85
                        mem[_5558 + 221] = address(cd[((32 * s) + arg1 + 36)])
                        mem[_5558 + 253] = address(cd[((64 * t) + arg2 + 36)])
                        mem[_5558 + 285] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                        mem[_5558 + 189] = 96
                        require ext_code.size(address(sha3(0, 17269419903419772280, _5594, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        staticcall address(sha3(0, 17269419903419772280, _5594, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                gas gas_remaining wei
                        mem[_5558 + 317] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        require ext_code.size(address(sha3(0, 17269419903419772280, _5594, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        staticcall address(sha3(0, 17269419903419772280, _5594, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                gas gas_remaining wei
                        mem[_5558 + ceil32(return_data.size) + 317] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _5558 + (2 * ceil32(return_data.size)) + 317
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        mem[_5558 + (2 * ceil32(return_data.size)) + 317] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        if ext_call.return_data[12 len 20] == address(_5493):
                            mem[_5558 + (2 * ceil32(return_data.size)) + 321] = 10^18 * _5458 / stor7 * _5466 / _5462
                            if ext_call.return_data[12 len 20] == address(_5493):
                                mem[_5558 + (2 * ceil32(return_data.size)) + 353] = 10^18 * _5458 / stor7 * _5466 / _5462
                            else:
                                mem[_5558 + (2 * ceil32(return_data.size)) + 353] = 0
                        else:
                            mem[_5558 + (2 * ceil32(return_data.size)) + 321] = 0
                            if ext_call.return_data[12 len 20] == address(_5493):
                                mem[_5558 + (2 * ceil32(return_data.size)) + 353] = 10^18 * _5458 / stor7 * _5466 / _5462
                            else:
                                mem[_5558 + (2 * ceil32(return_data.size)) + 353] = 0
                        mem[_5558 + (2 * ceil32(return_data.size)) + 385] = this.address
                        mem[_5558 + (2 * ceil32(return_data.size)) + 417] = 128
                        mem[_5558 + (2 * ceil32(return_data.size)) + 449] = 96
                        idx = 0
                        while idx < 96:
                            mem[idx + _5558 + (2 * ceil32(return_data.size)) + 481] = mem[idx + _5558 + 221]
                            require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                            require 2 * t < arg2.length
                            require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                            require (2 * t) + 1 < arg2.length
                            require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                            mem[_5558 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                            mem[100] = address(cd[((32 * s) + arg1 + 36)])
                            require ext_code.size(comptrollerAddress)
                            staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                    gas gas_remaining wei
                                   args mem[_5558 + (2 * ceil32(return_data.size)) + 321 len -_5558 + -(2 * ceil32(return_data.size)) - 189]
                            mem[_5558 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                            idx = idx + 32
                            continue 
                        require ext_code.size(address(sha3(0, 17269419903419772280, _5594, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        call address(sha3(0, 17269419903419772280, _5594, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5558 + (2 * ceil32(return_data.size)) + 317 len 4] with:
                             gas gas_remaining wei
                            args mem[_5558 + (2 * ceil32(return_data.size)) + 321 len 96], 128, 96, mem[_5558 + (2 * ceil32(return_data.size)) + 481 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if gas_remaining < stor8:
                        if arg1.length == t + 1:
                        require t + 1 < arg1.length
                        require cd[((32 * t + 2) + arg1 + 36)] == address(cd[((32 * t + 2) + arg1 + 36)])
                        require 2 * t + 1 < arg2.length
                        require cd[((64 * t + 1) + arg2 + 36)] == address(cd[((64 * t + 1) + arg2 + 36)])
                        require (2 * t + 1) + 1 < arg2.length
                        require cd[((32 * (2 * t + 1) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t + 1) + 1) + arg2 + 36)])
                        mem[_5558 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                        mem[100] = address(cd[((32 * t + 2) + arg1 + 36)])
                        require ext_code.size(comptrollerAddress)
                        staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                gas gas_remaining wei
                               args mem[_5558 + (2 * ceil32(return_data.size)) + 321 len -_5558 + -(2 * ceil32(return_data.size)) - 189]
                        mem[_5558 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                    else:
                        if not mem[_5486 + 12 len 20]:
                            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                        _5557 = mem[64]
                        mem[mem[64] + 32] = address(mem[_5486])
                        mem[mem[64] + 52] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7000000000000000000000000
                        _5588 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _5590 = sha3(mem[_5588 + 32 len mem[_5588]])
                        mem[_5557 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_5557 + 105] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                        mem[_5557 + 125] = _5590
                        mem[_5557 + 157] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                        mem[_5557 + 72] = 85
                        mem[_5557 + 221] = address(cd[((32 * s) + arg1 + 36)])
                        mem[_5557 + 253] = address(cd[((64 * t) + arg2 + 36)])
                        mem[_5557 + 285] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                        mem[_5557 + 189] = 96
                        require ext_code.size(address(sha3(0, 17269419903419772280, _5590, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        staticcall address(sha3(0, 17269419903419772280, _5590, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                gas gas_remaining wei
                        mem[_5557 + 317] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        require ext_code.size(address(sha3(0, 17269419903419772280, _5590, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        staticcall address(sha3(0, 17269419903419772280, _5590, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                gas gas_remaining wei
                        mem[_5557 + ceil32(return_data.size) + 317] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _5557 + (2 * ceil32(return_data.size)) + 317
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        mem[_5557 + (2 * ceil32(return_data.size)) + 317] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        if ext_call.return_data[12 len 20] == address(_5493):
                            mem[_5557 + (2 * ceil32(return_data.size)) + 321] = 10^18 * _5458 / stor7 * _5466 / _5462
                            if ext_call.return_data[12 len 20] == address(_5493):
                                mem[_5557 + (2 * ceil32(return_data.size)) + 353] = 10^18 * _5458 / stor7 * _5466 / _5462
                            else:
                                mem[_5557 + (2 * ceil32(return_data.size)) + 353] = 0
                        else:
                            mem[_5557 + (2 * ceil32(return_data.size)) + 321] = 0
                            if ext_call.return_data[12 len 20] == address(_5493):
                                mem[_5557 + (2 * ceil32(return_data.size)) + 353] = 10^18 * _5458 / stor7 * _5466 / _5462
                            else:
                                mem[_5557 + (2 * ceil32(return_data.size)) + 353] = 0
                        mem[_5557 + (2 * ceil32(return_data.size)) + 385] = this.address
                        mem[_5557 + (2 * ceil32(return_data.size)) + 417] = 128
                        mem[_5557 + (2 * ceil32(return_data.size)) + 449] = 96
                        idx = 0
                        while idx < 96:
                            mem[idx + _5557 + (2 * ceil32(return_data.size)) + 481] = mem[idx + _5557 + 221]
                            require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                            require 2 * t < arg2.length
                            require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                            require (2 * t) + 1 < arg2.length
                            require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                            mem[_5557 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                            mem[100] = address(cd[((32 * s) + arg1 + 36)])
                            require ext_code.size(comptrollerAddress)
                            staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                    gas gas_remaining wei
                                   args mem[_5557 + (2 * ceil32(return_data.size)) + 321 len -_5557 + -(2 * ceil32(return_data.size)) - 189]
                            mem[_5557 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                            idx = idx + 32
                            continue 
                        require ext_code.size(address(sha3(0, 17269419903419772280, _5590, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        call address(sha3(0, 17269419903419772280, _5590, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5557 + (2 * ceil32(return_data.size)) + 317 len 4] with:
                             gas gas_remaining wei
                            args mem[_5557 + (2 * ceil32(return_data.size)) + 321 len 96], 128, 96, mem[_5557 + (2 * ceil32(return_data.size)) + 481 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if gas_remaining < stor8:
                        if arg1.length == t + 1:
                        require t + 1 < arg1.length
                        require cd[((32 * t + 2) + arg1 + 36)] == address(cd[((32 * t + 2) + arg1 + 36)])
                        require 2 * t + 1 < arg2.length
                        require cd[((64 * t + 1) + arg2 + 36)] == address(cd[((64 * t + 1) + arg2 + 36)])
                        require (2 * t + 1) + 1 < arg2.length
                        require cd[((32 * (2 * t + 1) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t + 1) + 1) + arg2 + 36)])
                        mem[_5557 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                        mem[100] = address(cd[((32 * t + 2) + arg1 + 36)])
                        require ext_code.size(comptrollerAddress)
                        staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                gas gas_remaining wei
                               args mem[_5557 + (2 * ceil32(return_data.size)) + 321 len -_5557 + -(2 * ceil32(return_data.size)) - 189]
                        mem[_5557 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                else:
                    if 0x5c0401e81bc07ca70fad469b451682c0d747ef1c == address(cd[((32 * (2 * t) + 1) + arg2 + 36)]):
                        require ext_code.size(address(cd[((64 * t) + arg2 + 36)]))
                        staticcall address(cd[((64 * t) + arg2 + 36)]).underlying() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5490 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _5498 = mem[_5490]
                        require mem[_5490] == mem[_5490 + 12 len 20]
                        if mem[_5490 + 12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                            revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                        if mem[_5490 + 12 len 20] >= 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                            _5572 = mem[64]
                            mem[mem[64] + 32] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7000000000000000000000000
                            mem[mem[64] + 52] = address(_5498)
                            _5619 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _5621 = sha3(mem[_5619 + 32 len mem[_5619]])
                            mem[_5572 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_5572 + 105] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                            mem[_5572 + 125] = _5621
                            mem[_5572 + 157] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                            mem[_5572 + 72] = 85
                            mem[_5572 + 221] = address(cd[((32 * s) + arg1 + 36)])
                            mem[_5572 + 253] = address(cd[((64 * t) + arg2 + 36)])
                            mem[_5572 + 285] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                            mem[_5572 + 189] = 96
                            require ext_code.size(address(sha3(0, 17269419903419772280, _5621, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            staticcall address(sha3(0, 17269419903419772280, _5621, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                    gas gas_remaining wei
                            mem[_5572 + 317] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            require ext_code.size(address(sha3(0, 17269419903419772280, _5621, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            staticcall address(sha3(0, 17269419903419772280, _5621, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                    gas gas_remaining wei
                            mem[_5572 + ceil32(return_data.size) + 317] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _5572 + (2 * ceil32(return_data.size)) + 317
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[_5572 + (2 * ceil32(return_data.size)) + 317] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            if ext_call.return_data[12 len 20] == address(_5498):
                                mem[_5572 + (2 * ceil32(return_data.size)) + 321] = 10^18 * _5458 / stor7 * _5466 / _5462
                                if ext_call.return_data[12 len 20] == address(_5498):
                                    mem[_5572 + (2 * ceil32(return_data.size)) + 353] = 10^18 * _5458 / stor7 * _5466 / _5462
                                else:
                                    mem[_5572 + (2 * ceil32(return_data.size)) + 353] = 0
                            else:
                                mem[_5572 + (2 * ceil32(return_data.size)) + 321] = 0
                                if ext_call.return_data[12 len 20] == address(_5498):
                                    mem[_5572 + (2 * ceil32(return_data.size)) + 353] = 10^18 * _5458 / stor7 * _5466 / _5462
                                else:
                                    mem[_5572 + (2 * ceil32(return_data.size)) + 353] = 0
                            mem[_5572 + (2 * ceil32(return_data.size)) + 385] = this.address
                            mem[_5572 + (2 * ceil32(return_data.size)) + 417] = 128
                            mem[_5572 + (2 * ceil32(return_data.size)) + 449] = 96
                            idx = 0
                            while idx < 96:
                                mem[idx + _5572 + (2 * ceil32(return_data.size)) + 481] = mem[idx + _5572 + 221]
                                require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                require 2 * t < arg2.length
                                require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                require (2 * t) + 1 < arg2.length
                                require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                mem[_5572 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                require ext_code.size(comptrollerAddress)
                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                        gas gas_remaining wei
                                       args mem[_5572 + (2 * ceil32(return_data.size)) + 321 len -_5572 + -(2 * ceil32(return_data.size)) - 189]
                                mem[_5572 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                                idx = idx + 32
                                continue 
                            require ext_code.size(address(sha3(0, 17269419903419772280, _5621, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            call address(sha3(0, 17269419903419772280, _5621, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5572 + (2 * ceil32(return_data.size)) + 317 len 4] with:
                                 gas gas_remaining wei
                                args mem[_5572 + (2 * ceil32(return_data.size)) + 321 len 96], 128, 96, mem[_5572 + (2 * ceil32(return_data.size)) + 481 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if gas_remaining < stor8:
                            if arg1.length == t + 1:
                            require t + 1 < arg1.length
                            require cd[((32 * t + 2) + arg1 + 36)] == address(cd[((32 * t + 2) + arg1 + 36)])
                            require 2 * t + 1 < arg2.length
                            require cd[((64 * t + 1) + arg2 + 36)] == address(cd[((64 * t + 1) + arg2 + 36)])
                            require (2 * t + 1) + 1 < arg2.length
                            require cd[((32 * (2 * t + 1) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t + 1) + 1) + arg2 + 36)])
                            mem[_5572 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                            mem[100] = address(cd[((32 * t + 2) + arg1 + 36)])
                            require ext_code.size(comptrollerAddress)
                            staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                    gas gas_remaining wei
                                   args mem[_5572 + (2 * ceil32(return_data.size)) + 321 len -_5572 + -(2 * ceil32(return_data.size)) - 189]
                            mem[_5572 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                        else:
                            if not mem[_5490 + 12 len 20]:
                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                            _5571 = mem[64]
                            mem[mem[64] + 32] = address(mem[_5490])
                            mem[mem[64] + 52] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7000000000000000000000000
                            _5615 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _5617 = sha3(mem[_5615 + 32 len mem[_5615]])
                            mem[_5571 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_5571 + 105] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                            mem[_5571 + 125] = _5617
                            mem[_5571 + 157] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                            mem[_5571 + 72] = 85
                            mem[_5571 + 221] = address(cd[((32 * s) + arg1 + 36)])
                            mem[_5571 + 253] = address(cd[((64 * t) + arg2 + 36)])
                            mem[_5571 + 285] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                            mem[_5571 + 189] = 96
                            require ext_code.size(address(sha3(0, 17269419903419772280, _5617, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            staticcall address(sha3(0, 17269419903419772280, _5617, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                    gas gas_remaining wei
                            mem[_5571 + 317] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            require ext_code.size(address(sha3(0, 17269419903419772280, _5617, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            staticcall address(sha3(0, 17269419903419772280, _5617, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                    gas gas_remaining wei
                            mem[_5571 + ceil32(return_data.size) + 317] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _5571 + (2 * ceil32(return_data.size)) + 317
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[_5571 + (2 * ceil32(return_data.size)) + 317] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            if ext_call.return_data[12 len 20] == address(_5498):
                                mem[_5571 + (2 * ceil32(return_data.size)) + 321] = 10^18 * _5458 / stor7 * _5466 / _5462
                                if ext_call.return_data[12 len 20] == address(_5498):
                                    mem[_5571 + (2 * ceil32(return_data.size)) + 353] = 10^18 * _5458 / stor7 * _5466 / _5462
                                else:
                                    mem[_5571 + (2 * ceil32(return_data.size)) + 353] = 0
                            else:
                                mem[_5571 + (2 * ceil32(return_data.size)) + 321] = 0
                                if ext_call.return_data[12 len 20] == address(_5498):
                                    mem[_5571 + (2 * ceil32(return_data.size)) + 353] = 10^18 * _5458 / stor7 * _5466 / _5462
                                else:
                                    mem[_5571 + (2 * ceil32(return_data.size)) + 353] = 0
                            mem[_5571 + (2 * ceil32(return_data.size)) + 385] = this.address
                            mem[_5571 + (2 * ceil32(return_data.size)) + 417] = 128
                            mem[_5571 + (2 * ceil32(return_data.size)) + 449] = 96
                            idx = 0
                            while idx < 96:
                                mem[idx + _5571 + (2 * ceil32(return_data.size)) + 481] = mem[idx + _5571 + 221]
                                require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                require 2 * t < arg2.length
                                require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                require (2 * t) + 1 < arg2.length
                                require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                mem[_5571 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                require ext_code.size(comptrollerAddress)
                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                        gas gas_remaining wei
                                       args mem[_5571 + (2 * ceil32(return_data.size)) + 321 len -_5571 + -(2 * ceil32(return_data.size)) - 189]
                                mem[_5571 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                                idx = idx + 32
                                continue 
                            require ext_code.size(address(sha3(0, 17269419903419772280, _5617, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            call address(sha3(0, 17269419903419772280, _5617, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5571 + (2 * ceil32(return_data.size)) + 317 len 4] with:
                                 gas gas_remaining wei
                                args mem[_5571 + (2 * ceil32(return_data.size)) + 321 len 96], 128, 96, mem[_5571 + (2 * ceil32(return_data.size)) + 481 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if gas_remaining < stor8:
                            if arg1.length == t + 1:
                            require t + 1 < arg1.length
                            require cd[((32 * t + 2) + arg1 + 36)] == address(cd[((32 * t + 2) + arg1 + 36)])
                            require 2 * t + 1 < arg2.length
                            require cd[((64 * t + 1) + arg2 + 36)] == address(cd[((64 * t + 1) + arg2 + 36)])
                            require (2 * t + 1) + 1 < arg2.length
                            require cd[((32 * (2 * t + 1) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t + 1) + 1) + arg2 + 36)])
                            mem[_5571 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                            mem[100] = address(cd[((32 * t + 2) + arg1 + 36)])
                            require ext_code.size(comptrollerAddress)
                            staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                    gas gas_remaining wei
                                   args mem[_5571 + (2 * ceil32(return_data.size)) + 321 len -_5571 + -(2 * ceil32(return_data.size)) - 189]
                            mem[_5571 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                    else:
                        if 0x5c0401e81bc07ca70fad469b451682c0d747ef1c == address(cd[((64 * t) + arg2 + 36)]):
                            if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == mem[_5472 + 12 len 20]:
                                revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                            if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 < mem[_5472 + 12 len 20]:
                                _5507 = mem[64]
                                mem[mem[64] + 32] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7000000000000000000000000
                                mem[mem[64] + 52] = address(_5474)
                                _5521 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _5523 = sha3(mem[_5521 + 32 len mem[_5521]])
                                mem[_5507 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_5507 + 105] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                mem[_5507 + 125] = _5523
                                mem[_5507 + 157] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                mem[_5507 + 72] = 85
                                mem[_5507 + 221] = address(cd[((32 * s) + arg1 + 36)])
                                mem[_5507 + 253] = address(cd[((64 * t) + arg2 + 36)])
                                mem[_5507 + 285] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                mem[_5507 + 189] = 96
                                require ext_code.size(address(sha3(0, 17269419903419772280, _5523, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                staticcall address(sha3(0, 17269419903419772280, _5523, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                        gas gas_remaining wei
                                mem[_5507 + 317] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                require ext_code.size(address(sha3(0, 17269419903419772280, _5523, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                staticcall address(sha3(0, 17269419903419772280, _5523, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                        gas gas_remaining wei
                                mem[_5507 + ceil32(return_data.size) + 317] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _5507 + (2 * ceil32(return_data.size)) + 317
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[_5507 + (2 * ceil32(return_data.size)) + 317] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                                    mem[_5507 + (2 * ceil32(return_data.size)) + 321] = 10^18 * _5458 / stor7 * _5466 / _5462
                                    if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                                        mem[_5507 + (2 * ceil32(return_data.size)) + 353] = 10^18 * _5458 / stor7 * _5466 / _5462
                                    else:
                                        mem[_5507 + (2 * ceil32(return_data.size)) + 353] = 0
                                else:
                                    mem[_5507 + (2 * ceil32(return_data.size)) + 321] = 0
                                    if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                                        mem[_5507 + (2 * ceil32(return_data.size)) + 353] = 10^18 * _5458 / stor7 * _5466 / _5462
                                    else:
                                        mem[_5507 + (2 * ceil32(return_data.size)) + 353] = 0
                                mem[_5507 + (2 * ceil32(return_data.size)) + 385] = this.address
                                mem[_5507 + (2 * ceil32(return_data.size)) + 417] = 128
                                mem[_5507 + (2 * ceil32(return_data.size)) + 449] = 96
                                idx = 0
                                while idx < 96:
                                    mem[idx + _5507 + (2 * ceil32(return_data.size)) + 481] = mem[idx + _5507 + 221]
                                    require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                    require 2 * t < arg2.length
                                    require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                    require (2 * t) + 1 < arg2.length
                                    require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                    mem[_5507 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                    mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                    require ext_code.size(comptrollerAddress)
                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                            gas gas_remaining wei
                                           args mem[_5507 + (2 * ceil32(return_data.size)) + 321 len -_5507 + -(2 * ceil32(return_data.size)) - 189]
                                    mem[_5507 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(sha3(0, 17269419903419772280, _5523, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                call address(sha3(0, 17269419903419772280, _5523, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5507 + (2 * ceil32(return_data.size)) + 317 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_5507 + (2 * ceil32(return_data.size)) + 321 len 96], 128, 96, mem[_5507 + (2 * ceil32(return_data.size)) + 481 len 96]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if gas_remaining < stor8:
                                if arg1.length == t + 1:
                                require t + 1 < arg1.length
                                require cd[((32 * t + 2) + arg1 + 36)] == address(cd[((32 * t + 2) + arg1 + 36)])
                                require 2 * t + 1 < arg2.length
                                require cd[((64 * t + 1) + arg2 + 36)] == address(cd[((64 * t + 1) + arg2 + 36)])
                                require (2 * t + 1) + 1 < arg2.length
                                require cd[((32 * (2 * t + 1) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t + 1) + 1) + arg2 + 36)])
                                mem[_5507 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                mem[100] = address(cd[((32 * t + 2) + arg1 + 36)])
                                require ext_code.size(comptrollerAddress)
                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                        gas gas_remaining wei
                                       args mem[_5507 + (2 * ceil32(return_data.size)) + 321 len -_5507 + -(2 * ceil32(return_data.size)) - 189]
                                mem[_5507 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                            else:
                                if not mem[_5472 + 12 len 20]:
                                    revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                _5508 = mem[64]
                                mem[mem[64] + 32] = address(mem[_5472])
                                mem[mem[64] + 52] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7000000000000000000000000
                                _5525 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _5527 = sha3(mem[_5525 + 32 len mem[_5525]])
                                mem[_5508 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_5508 + 105] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                mem[_5508 + 125] = _5527
                                mem[_5508 + 157] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                mem[_5508 + 72] = 85
                                mem[_5508 + 221] = address(cd[((32 * s) + arg1 + 36)])
                                mem[_5508 + 253] = address(cd[((64 * t) + arg2 + 36)])
                                mem[_5508 + 285] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                mem[_5508 + 189] = 96
                                require ext_code.size(address(sha3(0, 17269419903419772280, _5527, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                staticcall address(sha3(0, 17269419903419772280, _5527, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                        gas gas_remaining wei
                                mem[_5508 + 317] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                require ext_code.size(address(sha3(0, 17269419903419772280, _5527, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                staticcall address(sha3(0, 17269419903419772280, _5527, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                        gas gas_remaining wei
                                mem[_5508 + ceil32(return_data.size) + 317] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _5508 + (2 * ceil32(return_data.size)) + 317
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[_5508 + (2 * ceil32(return_data.size)) + 317] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                                    mem[_5508 + (2 * ceil32(return_data.size)) + 321] = 10^18 * _5458 / stor7 * _5466 / _5462
                                    if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                                        mem[_5508 + (2 * ceil32(return_data.size)) + 353] = 10^18 * _5458 / stor7 * _5466 / _5462
                                    else:
                                        mem[_5508 + (2 * ceil32(return_data.size)) + 353] = 0
                                else:
                                    mem[_5508 + (2 * ceil32(return_data.size)) + 321] = 0
                                    if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                                        mem[_5508 + (2 * ceil32(return_data.size)) + 353] = 10^18 * _5458 / stor7 * _5466 / _5462
                                    else:
                                        mem[_5508 + (2 * ceil32(return_data.size)) + 353] = 0
                                mem[_5508 + (2 * ceil32(return_data.size)) + 385] = this.address
                                mem[_5508 + (2 * ceil32(return_data.size)) + 417] = 128
                                mem[_5508 + (2 * ceil32(return_data.size)) + 449] = 96
                                idx = 0
                                while idx < 96:
                                    mem[idx + _5508 + (2 * ceil32(return_data.size)) + 481] = mem[idx + _5508 + 221]
                                    require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                    require 2 * t < arg2.length
                                    require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                    require (2 * t) + 1 < arg2.length
                                    require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                    mem[_5508 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                    mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                    require ext_code.size(comptrollerAddress)
                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                            gas gas_remaining wei
                                           args mem[_5508 + (2 * ceil32(return_data.size)) + 321 len -_5508 + -(2 * ceil32(return_data.size)) - 189]
                                    mem[_5508 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(sha3(0, 17269419903419772280, _5527, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                call address(sha3(0, 17269419903419772280, _5527, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5508 + (2 * ceil32(return_data.size)) + 317 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_5508 + (2 * ceil32(return_data.size)) + 321 len 96], 128, 96, mem[_5508 + (2 * ceil32(return_data.size)) + 481 len 96]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if gas_remaining < stor8:
                                if arg1.length == t + 1:
                                require t + 1 < arg1.length
                                require cd[((32 * t + 2) + arg1 + 36)] == address(cd[((32 * t + 2) + arg1 + 36)])
                                require 2 * t + 1 < arg2.length
                                require cd[((64 * t + 1) + arg2 + 36)] == address(cd[((64 * t + 1) + arg2 + 36)])
                                require (2 * t + 1) + 1 < arg2.length
                                require cd[((32 * (2 * t + 1) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t + 1) + 1) + arg2 + 36)])
                                mem[_5508 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                mem[100] = address(cd[((32 * t + 2) + arg1 + 36)])
                                require ext_code.size(comptrollerAddress)
                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                        gas gas_remaining wei
                                       args mem[_5508 + (2 * ceil32(return_data.size)) + 321 len -_5508 + -(2 * ceil32(return_data.size)) - 189]
                                mem[_5508 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                        else:
                            require ext_code.size(address(cd[((64 * t) + arg2 + 36)]))
                            staticcall address(cd[((64 * t) + arg2 + 36)]).underlying() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5494 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _5500 = mem[_5494]
                            require mem[_5494] == mem[_5494 + 12 len 20]
                            if mem[_5494 + 12 len 20] == address(_5474):
                                revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                            if mem[_5494 + 12 len 20] >= address(_5474):
                                if not address(_5474):
                                    revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                if mem[_5494 + 12 len 20] == address(_5474):
                                    revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                                if mem[_5494 + 12 len 20] < address(_5474):
                                    if not mem[_5494 + 12 len 20]:
                                        revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                    _5703 = mem[64]
                                    mem[mem[64] + 32] = address(mem[_5494])
                                    mem[mem[64] + 52] = address(_5474)
                                    _5749 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _5751 = sha3(mem[_5749 + 32 len mem[_5749]])
                                    mem[_5703 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_5703 + 105] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                    mem[_5703 + 125] = _5751
                                    mem[_5703 + 157] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                    mem[_5703 + 72] = 85
                                    require ext_code.size(address(sha3(0, 17269419903419772280, _5751, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    staticcall address(sha3(0, 17269419903419772280, _5751, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                                            gas gas_remaining wei
                                    mem[_5703 + 189 len 96] = ext_call.return_data[0 len 96]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 96
                                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                    if address(_5500) == address(_5474):
                                        revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                                    if address(_5500) < address(_5474):
                                        if not address(_5500):
                                            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                        mem[_5703 + ceil32(return_data.size) + 221] = address(_5500)
                                        mem[_5703 + ceil32(return_data.size) + 241] = address(_5474)
                                        mem[_5703 + ceil32(return_data.size) + 189] = 40
                                        mem[_5703 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_5703 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                        mem[_5703 + ceil32(return_data.size) + 314] = sha3(address(_5500), address(_5474))
                                        mem[_5703 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                        mem[_5703 + ceil32(return_data.size) + 261] = 85
                                        if 100000 * 10^18 * _5458 / stor7 * _5466 / _5462 <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                            mem[_5703 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                            mem[_5703 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                            mem[_5703 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                            mem[_5703 + ceil32(return_data.size) + 378] = 96
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5500), address(_5474)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            staticcall address(sha3(0, 17269419903419772280, sha3(address(_5500), address(_5474)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                    gas gas_remaining wei
                                            mem[_5703 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5703 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5500), address(_5474)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            staticcall address(sha3(0, 17269419903419772280, sha3(address(_5500), address(_5474)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                    gas gas_remaining wei
                                                   args mem[_5703 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                            mem[_5703 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[64] = _5703 + (4 * ceil32(return_data.size)) + 506
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5703 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            if ext_call.return_data[12 len 20] == address(_5500):
                                                mem[_5703 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                if ext_call.return_data[12 len 20] == address(_5500):
                                                    mem[_5703 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                else:
                                                    mem[_5703 + (4 * ceil32(return_data.size)) + 542] = 0
                                            else:
                                                mem[_5703 + (4 * ceil32(return_data.size)) + 510] = 0
                                                if ext_call.return_data[12 len 20] == address(_5500):
                                                    mem[_5703 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                else:
                                                    mem[_5703 + (4 * ceil32(return_data.size)) + 542] = 0
                                            mem[_5703 + (4 * ceil32(return_data.size)) + 574] = this.address
                                            mem[_5703 + (4 * ceil32(return_data.size)) + 606] = 128
                                            mem[_5703 + (4 * ceil32(return_data.size)) + 638] = 96
                                            idx = 0
                                            while idx < 96:
                                                mem[idx + _5703 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5703 + ceil32(return_data.size) + 410]
                                                require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                require 2 * t < arg2.length
                                                require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                require (2 * t) + 1 < arg2.length
                                                require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5703 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                require ext_code.size(comptrollerAddress)
                                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                        gas gas_remaining wei
                                                       args mem[_5703 + (4 * ceil32(return_data.size)) + 510 len -_5703 + -(4 * ceil32(return_data.size)) - 378]
                                                mem[_5703 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                idx = idx + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5500), address(_5474)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            call address(sha3(0, 17269419903419772280, sha3(address(_5500), address(_5474)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5703 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                 gas gas_remaining wei
                                                args mem[_5703 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5703 + (4 * ceil32(return_data.size)) + 670 len 96]
                                        else:
                                            mem[_5703 + ceil32(return_data.size) + 382] = address(_5500)
                                            mem[_5703 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                            require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                            staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                    gas gas_remaining wei
                                                   args address(_5500), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                            mem[_5703 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5703 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                            mem[_5703 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                            mem[_5703 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                            mem[_5703 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            staticcall address(ext_call.return_data[0]).token0() with:
                                                    gas gas_remaining wei
                                            mem[_5703 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5703 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            staticcall address(ext_call.return_data[0]).token1() with:
                                                    gas gas_remaining wei
                                                   args mem[_5703 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[64] = _5703 + (4 * ceil32(return_data.size)) + 506
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5703 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            if ext_call.return_data[12 len 20] == address(_5500):
                                                mem[_5703 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                if ext_call.return_data[12 len 20] == address(_5500):
                                                    mem[_5703 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                else:
                                                    mem[_5703 + (4 * ceil32(return_data.size)) + 542] = 0
                                            else:
                                                mem[_5703 + (4 * ceil32(return_data.size)) + 510] = 0
                                                if ext_call.return_data[12 len 20] == address(_5500):
                                                    mem[_5703 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                else:
                                                    mem[_5703 + (4 * ceil32(return_data.size)) + 542] = 0
                                            mem[_5703 + (4 * ceil32(return_data.size)) + 574] = this.address
                                            mem[_5703 + (4 * ceil32(return_data.size)) + 606] = 128
                                            mem[_5703 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                            idx = 0
                                            while idx < ceil32(return_data.size) + 96:
                                                mem[idx + _5703 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5703 + (2 * ceil32(return_data.size)) + 410]
                                                require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                require 2 * t < arg2.length
                                                require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                require (2 * t) + 1 < arg2.length
                                                require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5703 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                require ext_code.size(comptrollerAddress)
                                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                        gas gas_remaining wei
                                                       args mem[_5703 + (4 * ceil32(return_data.size)) + 510 len -_5703 + -(4 * ceil32(return_data.size)) - 378]
                                                mem[_5703 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                idx = idx + 32
                                                continue 
                                            if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                mem[_5703 + (6 * ceil32(return_data.size)) + 766] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).mem[_5703 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                 gas gas_remaining wei
                                                args mem[_5703 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5703 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                    else:
                                        if not address(_5474):
                                            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                        mem[_5703 + ceil32(return_data.size) + 221] = address(_5474)
                                        mem[_5703 + ceil32(return_data.size) + 241] = address(_5500)
                                        mem[_5703 + ceil32(return_data.size) + 189] = 40
                                        mem[_5703 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_5703 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                        mem[_5703 + ceil32(return_data.size) + 314] = sha3(address(_5474), address(_5500))
                                        mem[_5703 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                        mem[_5703 + ceil32(return_data.size) + 261] = 85
                                        if 100000 * 10^18 * _5458 / stor7 * _5466 / _5462 <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                            mem[_5703 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                            mem[_5703 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                            mem[_5703 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                            mem[_5703 + ceil32(return_data.size) + 378] = 96
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5474), address(_5500)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            staticcall address(sha3(0, 17269419903419772280, sha3(address(_5474), address(_5500)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                    gas gas_remaining wei
                                            mem[_5703 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5703 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5474), address(_5500)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            staticcall address(sha3(0, 17269419903419772280, sha3(address(_5474), address(_5500)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                    gas gas_remaining wei
                                                   args mem[_5703 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                            mem[_5703 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[64] = _5703 + (4 * ceil32(return_data.size)) + 506
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5703 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            if ext_call.return_data[12 len 20] == address(_5500):
                                                mem[_5703 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                if ext_call.return_data[12 len 20] == address(_5500):
                                                    mem[_5703 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                else:
                                                    mem[_5703 + (4 * ceil32(return_data.size)) + 542] = 0
                                            else:
                                                mem[_5703 + (4 * ceil32(return_data.size)) + 510] = 0
                                                if ext_call.return_data[12 len 20] == address(_5500):
                                                    mem[_5703 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                else:
                                                    mem[_5703 + (4 * ceil32(return_data.size)) + 542] = 0
                                            mem[_5703 + (4 * ceil32(return_data.size)) + 574] = this.address
                                            mem[_5703 + (4 * ceil32(return_data.size)) + 606] = 128
                                            mem[_5703 + (4 * ceil32(return_data.size)) + 638] = 96
                                            idx = 0
                                            while idx < 96:
                                                mem[idx + _5703 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5703 + ceil32(return_data.size) + 410]
                                                require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                require 2 * t < arg2.length
                                                require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                require (2 * t) + 1 < arg2.length
                                                require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5703 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                require ext_code.size(comptrollerAddress)
                                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                        gas gas_remaining wei
                                                       args mem[_5703 + (4 * ceil32(return_data.size)) + 510 len -_5703 + -(4 * ceil32(return_data.size)) - 378]
                                                mem[_5703 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                idx = idx + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5474), address(_5500)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            call address(sha3(0, 17269419903419772280, sha3(address(_5474), address(_5500)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5703 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                 gas gas_remaining wei
                                                args mem[_5703 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5703 + (4 * ceil32(return_data.size)) + 670 len 96]
                                        else:
                                            mem[_5703 + ceil32(return_data.size) + 382] = address(_5500)
                                            mem[_5703 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                            require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                            staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                    gas gas_remaining wei
                                                   args address(_5500), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                            mem[_5703 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5703 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                            mem[_5703 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                            mem[_5703 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                            mem[_5703 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            staticcall address(ext_call.return_data[0]).token0() with:
                                                    gas gas_remaining wei
                                            mem[_5703 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5703 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            staticcall address(ext_call.return_data[0]).token1() with:
                                                    gas gas_remaining wei
                                                   args mem[_5703 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[64] = _5703 + (4 * ceil32(return_data.size)) + 506
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5703 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            if ext_call.return_data[12 len 20] == address(_5500):
                                                mem[_5703 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                if ext_call.return_data[12 len 20] == address(_5500):
                                                    mem[_5703 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                else:
                                                    mem[_5703 + (4 * ceil32(return_data.size)) + 542] = 0
                                            else:
                                                mem[_5703 + (4 * ceil32(return_data.size)) + 510] = 0
                                                if ext_call.return_data[12 len 20] == address(_5500):
                                                    mem[_5703 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                else:
                                                    mem[_5703 + (4 * ceil32(return_data.size)) + 542] = 0
                                            mem[_5703 + (4 * ceil32(return_data.size)) + 574] = this.address
                                            mem[_5703 + (4 * ceil32(return_data.size)) + 606] = 128
                                            mem[_5703 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                            idx = 0
                                            while idx < ceil32(return_data.size) + 96:
                                                mem[idx + _5703 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5703 + (2 * ceil32(return_data.size)) + 410]
                                                require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                require 2 * t < arg2.length
                                                require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                require (2 * t) + 1 < arg2.length
                                                require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5703 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                require ext_code.size(comptrollerAddress)
                                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                        gas gas_remaining wei
                                                       args mem[_5703 + (4 * ceil32(return_data.size)) + 510 len -_5703 + -(4 * ceil32(return_data.size)) - 378]
                                                mem[_5703 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                idx = idx + 32
                                                continue 
                                            if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                mem[_5703 + (6 * ceil32(return_data.size)) + 766] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).mem[_5703 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                 gas gas_remaining wei
                                                args mem[_5703 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5703 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if gas_remaining < stor8:
                                    if arg1.length == t + 1:
                                    require t + 1 < arg1.length
                                    require cd[((32 * t + 2) + arg1 + 36)] == address(cd[((32 * t + 2) + arg1 + 36)])
                                    require 2 * t + 1 < arg2.length
                                    require cd[((64 * t + 1) + arg2 + 36)] == address(cd[((64 * t + 1) + arg2 + 36)])
                                    require (2 * t + 1) + 1 < arg2.length
                                    require cd[((32 * (2 * t + 1) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t + 1) + 1) + arg2 + 36)])
                                    mem[_5703 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                    mem[100] = address(cd[((32 * t + 2) + arg1 + 36)])
                                    require ext_code.size(comptrollerAddress)
                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                            gas gas_remaining wei
                                           args mem[_5703 + (4 * ceil32(return_data.size)) + 510 len -_5703 + -(4 * ceil32(return_data.size)) - 378]
                                    mem[_5703 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                else:
                                    if not address(_5474):
                                        revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                    _5704 = mem[64]
                                    mem[mem[64] + 32] = address(_5474)
                                    mem[mem[64] + 52] = address(_5500)
                                    _5753 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _5755 = sha3(mem[_5753 + 32 len mem[_5753]])
                                    mem[_5704 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_5704 + 105] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                    mem[_5704 + 125] = _5755
                                    mem[_5704 + 157] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                    mem[_5704 + 72] = 85
                                    require ext_code.size(address(sha3(0, 17269419903419772280, _5755, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    staticcall address(sha3(0, 17269419903419772280, _5755, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                                            gas gas_remaining wei
                                    mem[_5704 + 189 len 96] = ext_call.return_data[0 len 96]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 96
                                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                    if address(_5500) == address(_5474):
                                        revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                                    if address(_5500) < address(_5474):
                                        if not address(_5500):
                                            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                        mem[_5704 + ceil32(return_data.size) + 221] = address(_5500)
                                        mem[_5704 + ceil32(return_data.size) + 241] = address(_5474)
                                        mem[_5704 + ceil32(return_data.size) + 189] = 40
                                        mem[_5704 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_5704 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                        mem[_5704 + ceil32(return_data.size) + 314] = sha3(address(_5500), address(_5474))
                                        mem[_5704 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                        mem[_5704 + ceil32(return_data.size) + 261] = 85
                                        if 100000 * 10^18 * _5458 / stor7 * _5466 / _5462 <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                            mem[_5704 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                            mem[_5704 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                            mem[_5704 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                            mem[_5704 + ceil32(return_data.size) + 378] = 96
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5500), address(_5474)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            staticcall address(sha3(0, 17269419903419772280, sha3(address(_5500), address(_5474)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                    gas gas_remaining wei
                                            mem[_5704 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5704 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5500), address(_5474)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            staticcall address(sha3(0, 17269419903419772280, sha3(address(_5500), address(_5474)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                    gas gas_remaining wei
                                                   args mem[_5704 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                            mem[_5704 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[64] = _5704 + (4 * ceil32(return_data.size)) + 506
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5704 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            if ext_call.return_data[12 len 20] == address(_5500):
                                                mem[_5704 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                if ext_call.return_data[12 len 20] == address(_5500):
                                                    mem[_5704 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                else:
                                                    mem[_5704 + (4 * ceil32(return_data.size)) + 542] = 0
                                            else:
                                                mem[_5704 + (4 * ceil32(return_data.size)) + 510] = 0
                                                if ext_call.return_data[12 len 20] == address(_5500):
                                                    mem[_5704 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                else:
                                                    mem[_5704 + (4 * ceil32(return_data.size)) + 542] = 0
                                            mem[_5704 + (4 * ceil32(return_data.size)) + 574] = this.address
                                            mem[_5704 + (4 * ceil32(return_data.size)) + 606] = 128
                                            mem[_5704 + (4 * ceil32(return_data.size)) + 638] = 96
                                            idx = 0
                                            while idx < 96:
                                                mem[idx + _5704 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5704 + ceil32(return_data.size) + 410]
                                                require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                require 2 * t < arg2.length
                                                require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                require (2 * t) + 1 < arg2.length
                                                require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5704 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                require ext_code.size(comptrollerAddress)
                                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                        gas gas_remaining wei
                                                       args mem[_5704 + (4 * ceil32(return_data.size)) + 510 len -_5704 + -(4 * ceil32(return_data.size)) - 378]
                                                mem[_5704 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                idx = idx + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5500), address(_5474)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            call address(sha3(0, 17269419903419772280, sha3(address(_5500), address(_5474)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5704 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                 gas gas_remaining wei
                                                args mem[_5704 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5704 + (4 * ceil32(return_data.size)) + 670 len 96]
                                        else:
                                            mem[_5704 + ceil32(return_data.size) + 382] = address(_5500)
                                            mem[_5704 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                            require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                            staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                    gas gas_remaining wei
                                                   args address(_5500), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                            mem[_5704 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5704 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                            mem[_5704 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                            mem[_5704 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                            mem[_5704 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            staticcall address(ext_call.return_data[0]).token0() with:
                                                    gas gas_remaining wei
                                            mem[_5704 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5704 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            staticcall address(ext_call.return_data[0]).token1() with:
                                                    gas gas_remaining wei
                                                   args mem[_5704 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[64] = _5704 + (4 * ceil32(return_data.size)) + 506
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5704 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            if ext_call.return_data[12 len 20] == address(_5500):
                                                mem[_5704 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                if ext_call.return_data[12 len 20] == address(_5500):
                                                    mem[_5704 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                else:
                                                    mem[_5704 + (4 * ceil32(return_data.size)) + 542] = 0
                                            else:
                                                mem[_5704 + (4 * ceil32(return_data.size)) + 510] = 0
                                                if ext_call.return_data[12 len 20] == address(_5500):
                                                    mem[_5704 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                else:
                                                    mem[_5704 + (4 * ceil32(return_data.size)) + 542] = 0
                                            mem[_5704 + (4 * ceil32(return_data.size)) + 574] = this.address
                                            mem[_5704 + (4 * ceil32(return_data.size)) + 606] = 128
                                            mem[_5704 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                            idx = 0
                                            while idx < ceil32(return_data.size) + 96:
                                                mem[idx + _5704 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5704 + (2 * ceil32(return_data.size)) + 410]
                                                require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                require 2 * t < arg2.length
                                                require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                require (2 * t) + 1 < arg2.length
                                                require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5704 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                require ext_code.size(comptrollerAddress)
                                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                        gas gas_remaining wei
                                                       args mem[_5704 + (4 * ceil32(return_data.size)) + 510 len -_5704 + -(4 * ceil32(return_data.size)) - 378]
                                                mem[_5704 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                idx = idx + 32
                                                continue 
                                            if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                mem[_5704 + (6 * ceil32(return_data.size)) + 766] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).mem[_5704 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                 gas gas_remaining wei
                                                args mem[_5704 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5704 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                    else:
                                        if not address(_5474):
                                            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                        mem[_5704 + ceil32(return_data.size) + 221] = address(_5474)
                                        mem[_5704 + ceil32(return_data.size) + 241] = address(_5500)
                                        mem[_5704 + ceil32(return_data.size) + 189] = 40
                                        mem[_5704 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_5704 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                        mem[_5704 + ceil32(return_data.size) + 314] = sha3(address(_5474), address(_5500))
                                        mem[_5704 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                        mem[_5704 + ceil32(return_data.size) + 261] = 85
                                        if 100000 * 10^18 * _5458 / stor7 * _5466 / _5462 <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                            mem[_5704 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                            mem[_5704 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                            mem[_5704 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                            mem[_5704 + ceil32(return_data.size) + 378] = 96
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5474), address(_5500)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            staticcall address(sha3(0, 17269419903419772280, sha3(address(_5474), address(_5500)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                    gas gas_remaining wei
                                            mem[_5704 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5704 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5474), address(_5500)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            staticcall address(sha3(0, 17269419903419772280, sha3(address(_5474), address(_5500)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                    gas gas_remaining wei
                                                   args mem[_5704 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                            mem[_5704 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[64] = _5704 + (4 * ceil32(return_data.size)) + 506
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5704 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            if ext_call.return_data[12 len 20] == address(_5500):
                                                mem[_5704 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                if ext_call.return_data[12 len 20] == address(_5500):
                                                    mem[_5704 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                else:
                                                    mem[_5704 + (4 * ceil32(return_data.size)) + 542] = 0
                                            else:
                                                mem[_5704 + (4 * ceil32(return_data.size)) + 510] = 0
                                                if ext_call.return_data[12 len 20] == address(_5500):
                                                    mem[_5704 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                else:
                                                    mem[_5704 + (4 * ceil32(return_data.size)) + 542] = 0
                                            mem[_5704 + (4 * ceil32(return_data.size)) + 574] = this.address
                                            mem[_5704 + (4 * ceil32(return_data.size)) + 606] = 128
                                            mem[_5704 + (4 * ceil32(return_data.size)) + 638] = 96
                                            idx = 0
                                            while idx < 96:
                                                mem[idx + _5704 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5704 + ceil32(return_data.size) + 410]
                                                require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                require 2 * t < arg2.length
                                                require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                require (2 * t) + 1 < arg2.length
                                                require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5704 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                require ext_code.size(comptrollerAddress)
                                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                        gas gas_remaining wei
                                                       args mem[_5704 + (4 * ceil32(return_data.size)) + 510 len -_5704 + -(4 * ceil32(return_data.size)) - 378]
                                                mem[_5704 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                idx = idx + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5474), address(_5500)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            call address(sha3(0, 17269419903419772280, sha3(address(_5474), address(_5500)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5704 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                 gas gas_remaining wei
                                                args mem[_5704 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5704 + (4 * ceil32(return_data.size)) + 670 len 96]
                                        else:
                                            mem[_5704 + ceil32(return_data.size) + 382] = address(_5500)
                                            mem[_5704 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                            require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                            staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                    gas gas_remaining wei
                                                   args address(_5500), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                            mem[_5704 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5704 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                            mem[_5704 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                            mem[_5704 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                            mem[_5704 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            staticcall address(ext_call.return_data[0]).token0() with:
                                                    gas gas_remaining wei
                                            mem[_5704 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5704 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            staticcall address(ext_call.return_data[0]).token1() with:
                                                    gas gas_remaining wei
                                                   args mem[_5704 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[64] = _5704 + (4 * ceil32(return_data.size)) + 506
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5704 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            if ext_call.return_data[12 len 20] == address(_5500):
                                                mem[_5704 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                if ext_call.return_data[12 len 20] == address(_5500):
                                                    mem[_5704 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                else:
                                                    mem[_5704 + (4 * ceil32(return_data.size)) + 542] = 0
                                            else:
                                                mem[_5704 + (4 * ceil32(return_data.size)) + 510] = 0
                                                if ext_call.return_data[12 len 20] == address(_5500):
                                                    mem[_5704 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                else:
                                                    mem[_5704 + (4 * ceil32(return_data.size)) + 542] = 0
                                            mem[_5704 + (4 * ceil32(return_data.size)) + 574] = this.address
                                            mem[_5704 + (4 * ceil32(return_data.size)) + 606] = 128
                                            mem[_5704 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                            idx = 0
                                            while idx < ceil32(return_data.size) + 96:
                                                mem[idx + _5704 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5704 + (2 * ceil32(return_data.size)) + 410]
                                                require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                require 2 * t < arg2.length
                                                require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                require (2 * t) + 1 < arg2.length
                                                require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5704 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                require ext_code.size(comptrollerAddress)
                                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                        gas gas_remaining wei
                                                       args mem[_5704 + (4 * ceil32(return_data.size)) + 510 len -_5704 + -(4 * ceil32(return_data.size)) - 378]
                                                mem[_5704 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                idx = idx + 32
                                                continue 
                                            if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                mem[_5704 + (6 * ceil32(return_data.size)) + 766] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).mem[_5704 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                 gas gas_remaining wei
                                                args mem[_5704 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5704 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if gas_remaining < stor8:
                                    if arg1.length == t + 1:
                                    require t + 1 < arg1.length
                                    require cd[((32 * t + 2) + arg1 + 36)] == address(cd[((32 * t + 2) + arg1 + 36)])
                                    require 2 * t + 1 < arg2.length
                                    require cd[((64 * t + 1) + arg2 + 36)] == address(cd[((64 * t + 1) + arg2 + 36)])
                                    require (2 * t + 1) + 1 < arg2.length
                                    require cd[((32 * (2 * t + 1) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t + 1) + 1) + arg2 + 36)])
                                    mem[_5704 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                    mem[100] = address(cd[((32 * t + 2) + arg1 + 36)])
                                    require ext_code.size(comptrollerAddress)
                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                            gas gas_remaining wei
                                           args mem[_5704 + (4 * ceil32(return_data.size)) + 510 len -_5704 + -(4 * ceil32(return_data.size)) - 378]
                                    mem[_5704 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                            else:
                                if not mem[_5494 + 12 len 20]:
                                    revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                if mem[_5494 + 12 len 20] == address(_5474):
                                    revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                                if mem[_5494 + 12 len 20] < address(_5474):
                                    if not mem[_5494 + 12 len 20]:
                                        revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                    _5701 = mem[64]
                                    mem[mem[64] + 32] = address(mem[_5494])
                                    mem[mem[64] + 52] = address(_5474)
                                    _5741 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _5743 = sha3(mem[_5741 + 32 len mem[_5741]])
                                    mem[_5701 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_5701 + 105] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                    mem[_5701 + 125] = _5743
                                    mem[_5701 + 157] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                    mem[_5701 + 72] = 85
                                    require ext_code.size(address(sha3(0, 17269419903419772280, _5743, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    staticcall address(sha3(0, 17269419903419772280, _5743, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                                            gas gas_remaining wei
                                    mem[_5701 + 189 len 96] = ext_call.return_data[0 len 96]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 96
                                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                    if address(_5500) == address(_5474):
                                        revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                                    if address(_5500) == address(_5500):
                                        if address(_5500) < address(_5474):
                                            if not address(_5500):
                                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                            mem[_5701 + ceil32(return_data.size) + 221] = address(_5500)
                                            mem[_5701 + ceil32(return_data.size) + 241] = address(_5474)
                                            mem[_5701 + ceil32(return_data.size) + 189] = 40
                                            mem[_5701 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_5701 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                            mem[_5701 + ceil32(return_data.size) + 314] = sha3(address(_5500), address(_5474))
                                            mem[_5701 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                            mem[_5701 + ceil32(return_data.size) + 261] = 85
                                            if 100000 * 10^18 * _5458 / stor7 * _5466 / _5462 <= 985 * Mask(112, 0, ext_call.return_data[0]):
                                                mem[_5701 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                                mem[_5701 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                                mem[_5701 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5701 + ceil32(return_data.size) + 378] = 96
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5500), address(_5474)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5500), address(_5474)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5701 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5701 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5500), address(_5474)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5500), address(_5474)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5701 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                                mem[_5701 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5701 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5701 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5500):
                                                    mem[_5701 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    if ext_call.return_data[12 len 20] == address(_5500):
                                                        mem[_5701 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    else:
                                                        mem[_5701 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5701 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5500):
                                                        mem[_5701 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    else:
                                                        mem[_5701 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5701 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5701 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5701 + (4 * ceil32(return_data.size)) + 638] = 96
                                                idx = 0
                                                while idx < 96:
                                                    mem[idx + _5701 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5701 + ceil32(return_data.size) + 410]
                                                    require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                    require 2 * t < arg2.length
                                                    require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                    require (2 * t) + 1 < arg2.length
                                                    require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                    mem[_5701 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5701 + (4 * ceil32(return_data.size)) + 510 len -_5701 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5701 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5500), address(_5474)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                call address(sha3(0, 17269419903419772280, sha3(address(_5500), address(_5474)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5701 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5701 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5701 + (4 * ceil32(return_data.size)) + 670 len 96]
                                            else:
                                                mem[_5701 + ceil32(return_data.size) + 382] = address(_5500)
                                                mem[_5701 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                                staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                        gas gas_remaining wei
                                                       args address(_5500), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                mem[_5701 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5701 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                                mem[_5701 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                                mem[_5701 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5701 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5701 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5701 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5701 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5701 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5701 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5500):
                                                    mem[_5701 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    if ext_call.return_data[12 len 20] == address(_5500):
                                                        mem[_5701 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    else:
                                                        mem[_5701 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5701 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5500):
                                                        mem[_5701 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    else:
                                                        mem[_5701 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5701 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5701 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5701 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                                idx = 0
                                                while idx < ceil32(return_data.size) + 96:
                                                    mem[idx + _5701 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5701 + (2 * ceil32(return_data.size)) + 410]
                                                    require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                    require 2 * t < arg2.length
                                                    require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                    require (2 * t) + 1 < arg2.length
                                                    require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                    mem[_5701 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5701 + (4 * ceil32(return_data.size)) + 510 len -_5701 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5701 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                    mem[_5701 + (6 * ceil32(return_data.size)) + 766] = 0
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                call address(ext_call.return_data[0]).mem[_5701 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5701 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5701 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                        else:
                                            if not address(_5474):
                                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                            mem[_5701 + ceil32(return_data.size) + 221] = address(_5474)
                                            mem[_5701 + ceil32(return_data.size) + 241] = address(_5500)
                                            mem[_5701 + ceil32(return_data.size) + 189] = 40
                                            mem[_5701 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_5701 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                            mem[_5701 + ceil32(return_data.size) + 314] = sha3(address(_5474), address(_5500))
                                            mem[_5701 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                            mem[_5701 + ceil32(return_data.size) + 261] = 85
                                            if 100000 * 10^18 * _5458 / stor7 * _5466 / _5462 <= 985 * Mask(112, 0, ext_call.return_data[0]):
                                                mem[_5701 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                                mem[_5701 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                                mem[_5701 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5701 + ceil32(return_data.size) + 378] = 96
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5474), address(_5500)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5474), address(_5500)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5701 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5701 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5474), address(_5500)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5474), address(_5500)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5701 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                                mem[_5701 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5701 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5701 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5500):
                                                    mem[_5701 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    if ext_call.return_data[12 len 20] == address(_5500):
                                                        mem[_5701 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    else:
                                                        mem[_5701 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5701 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5500):
                                                        mem[_5701 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    else:
                                                        mem[_5701 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5701 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5701 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5701 + (4 * ceil32(return_data.size)) + 638] = 96
                                                idx = 0
                                                while idx < 96:
                                                    mem[idx + _5701 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5701 + ceil32(return_data.size) + 410]
                                                    require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                    require 2 * t < arg2.length
                                                    require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                    require (2 * t) + 1 < arg2.length
                                                    require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                    mem[_5701 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5701 + (4 * ceil32(return_data.size)) + 510 len -_5701 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5701 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5474), address(_5500)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                call address(sha3(0, 17269419903419772280, sha3(address(_5474), address(_5500)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5701 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5701 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5701 + (4 * ceil32(return_data.size)) + 670 len 96]
                                            else:
                                                mem[_5701 + ceil32(return_data.size) + 382] = address(_5500)
                                                mem[_5701 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                                staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                        gas gas_remaining wei
                                                       args address(_5500), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                mem[_5701 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5701 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                                mem[_5701 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                                mem[_5701 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5701 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5701 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5701 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5701 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5701 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5701 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5500):
                                                    mem[_5701 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    if ext_call.return_data[12 len 20] == address(_5500):
                                                        mem[_5701 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    else:
                                                        mem[_5701 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5701 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5500):
                                                        mem[_5701 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    else:
                                                        mem[_5701 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5701 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5701 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5701 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                                idx = 0
                                                while idx < ceil32(return_data.size) + 96:
                                                    mem[idx + _5701 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5701 + (2 * ceil32(return_data.size)) + 410]
                                                    require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                    require 2 * t < arg2.length
                                                    require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                    require (2 * t) + 1 < arg2.length
                                                    require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                    mem[_5701 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5701 + (4 * ceil32(return_data.size)) + 510 len -_5701 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5701 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                    mem[_5701 + (6 * ceil32(return_data.size)) + 766] = 0
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                call address(ext_call.return_data[0]).mem[_5701 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5701 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5701 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                    else:
                                        if address(_5500) < address(_5474):
                                            if not address(_5500):
                                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                            mem[_5701 + ceil32(return_data.size) + 221] = address(_5500)
                                            mem[_5701 + ceil32(return_data.size) + 241] = address(_5474)
                                            mem[_5701 + ceil32(return_data.size) + 189] = 40
                                            mem[_5701 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_5701 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                            mem[_5701 + ceil32(return_data.size) + 314] = sha3(address(_5500), address(_5474))
                                            mem[_5701 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                            mem[_5701 + ceil32(return_data.size) + 261] = 85
                                            if 100000 * 10^18 * _5458 / stor7 * _5466 / _5462 <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                                mem[_5701 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                                mem[_5701 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                                mem[_5701 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5701 + ceil32(return_data.size) + 378] = 96
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5500), address(_5474)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5500), address(_5474)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5701 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5701 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5500), address(_5474)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5500), address(_5474)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5701 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                                mem[_5701 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5701 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5701 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5500):
                                                    mem[_5701 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    if ext_call.return_data[12 len 20] == address(_5500):
                                                        mem[_5701 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    else:
                                                        mem[_5701 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5701 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5500):
                                                        mem[_5701 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    else:
                                                        mem[_5701 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5701 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5701 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5701 + (4 * ceil32(return_data.size)) + 638] = 96
                                                idx = 0
                                                while idx < 96:
                                                    mem[idx + _5701 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5701 + ceil32(return_data.size) + 410]
                                                    require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                    require 2 * t < arg2.length
                                                    require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                    require (2 * t) + 1 < arg2.length
                                                    require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                    mem[_5701 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5701 + (4 * ceil32(return_data.size)) + 510 len -_5701 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5701 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5500), address(_5474)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                call address(sha3(0, 17269419903419772280, sha3(address(_5500), address(_5474)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5701 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5701 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5701 + (4 * ceil32(return_data.size)) + 670 len 96]
                                            else:
                                                mem[_5701 + ceil32(return_data.size) + 382] = address(_5500)
                                                mem[_5701 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                                staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                        gas gas_remaining wei
                                                       args address(_5500), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                mem[_5701 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5701 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                                mem[_5701 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                                mem[_5701 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5701 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5701 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5701 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5701 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5701 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5701 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5500):
                                                    mem[_5701 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    if ext_call.return_data[12 len 20] == address(_5500):
                                                        mem[_5701 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    else:
                                                        mem[_5701 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5701 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5500):
                                                        mem[_5701 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    else:
                                                        mem[_5701 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5701 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5701 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5701 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                                idx = 0
                                                while idx < ceil32(return_data.size) + 96:
                                                    mem[idx + _5701 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5701 + (2 * ceil32(return_data.size)) + 410]
                                                    require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                    require 2 * t < arg2.length
                                                    require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                    require (2 * t) + 1 < arg2.length
                                                    require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                    mem[_5701 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5701 + (4 * ceil32(return_data.size)) + 510 len -_5701 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5701 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                    mem[_5701 + (6 * ceil32(return_data.size)) + 766] = 0
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                call address(ext_call.return_data[0]).mem[_5701 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5701 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5701 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                        else:
                                            if not address(_5474):
                                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                            mem[_5701 + ceil32(return_data.size) + 221] = address(_5474)
                                            mem[_5701 + ceil32(return_data.size) + 241] = address(_5500)
                                            mem[_5701 + ceil32(return_data.size) + 189] = 40
                                            mem[_5701 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_5701 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                            mem[_5701 + ceil32(return_data.size) + 314] = sha3(address(_5474), address(_5500))
                                            mem[_5701 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                            mem[_5701 + ceil32(return_data.size) + 261] = 85
                                            if 100000 * 10^18 * _5458 / stor7 * _5466 / _5462 <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                                mem[_5701 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                                mem[_5701 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                                mem[_5701 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5701 + ceil32(return_data.size) + 378] = 96
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5474), address(_5500)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5474), address(_5500)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5701 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5701 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5474), address(_5500)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5474), address(_5500)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5701 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                                mem[_5701 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5701 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5701 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5500):
                                                    mem[_5701 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    if ext_call.return_data[12 len 20] == address(_5500):
                                                        mem[_5701 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    else:
                                                        mem[_5701 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5701 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5500):
                                                        mem[_5701 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    else:
                                                        mem[_5701 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5701 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5701 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5701 + (4 * ceil32(return_data.size)) + 638] = 96
                                                idx = 0
                                                while idx < 96:
                                                    mem[idx + _5701 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5701 + ceil32(return_data.size) + 410]
                                                    require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                    require 2 * t < arg2.length
                                                    require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                    require (2 * t) + 1 < arg2.length
                                                    require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                    mem[_5701 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5701 + (4 * ceil32(return_data.size)) + 510 len -_5701 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5701 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5474), address(_5500)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                call address(sha3(0, 17269419903419772280, sha3(address(_5474), address(_5500)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5701 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5701 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5701 + (4 * ceil32(return_data.size)) + 670 len 96]
                                            else:
                                                mem[_5701 + ceil32(return_data.size) + 382] = address(_5500)
                                                mem[_5701 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                                staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                        gas gas_remaining wei
                                                       args address(_5500), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                mem[_5701 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5701 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                                mem[_5701 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                                mem[_5701 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5701 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5701 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5701 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5701 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5701 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5701 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5500):
                                                    mem[_5701 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    if ext_call.return_data[12 len 20] == address(_5500):
                                                        mem[_5701 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    else:
                                                        mem[_5701 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5701 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5500):
                                                        mem[_5701 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    else:
                                                        mem[_5701 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5701 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5701 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5701 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                                idx = 0
                                                while idx < ceil32(return_data.size) + 96:
                                                    mem[idx + _5701 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5701 + (2 * ceil32(return_data.size)) + 410]
                                                    require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                    require 2 * t < arg2.length
                                                    require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                    require (2 * t) + 1 < arg2.length
                                                    require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                    mem[_5701 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5701 + (4 * ceil32(return_data.size)) + 510 len -_5701 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5701 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                    mem[_5701 + (6 * ceil32(return_data.size)) + 766] = 0
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                call address(ext_call.return_data[0]).mem[_5701 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5701 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5701 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if gas_remaining < stor8:
                                    if arg1.length == t + 1:
                                    require t + 1 < arg1.length
                                    require cd[((32 * t + 2) + arg1 + 36)] == address(cd[((32 * t + 2) + arg1 + 36)])
                                    require 2 * t + 1 < arg2.length
                                    require cd[((64 * t + 1) + arg2 + 36)] == address(cd[((64 * t + 1) + arg2 + 36)])
                                    require (2 * t + 1) + 1 < arg2.length
                                    require cd[((32 * (2 * t + 1) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t + 1) + 1) + arg2 + 36)])
                                    mem[_5701 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                    mem[100] = address(cd[((32 * t + 2) + arg1 + 36)])
                                    require ext_code.size(comptrollerAddress)
                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                            gas gas_remaining wei
                                           args mem[_5701 + (4 * ceil32(return_data.size)) + 510 len -_5701 + -(4 * ceil32(return_data.size)) - 378]
                                    mem[_5701 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                else:
                                    if not address(_5474):
                                        revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                    _5702 = mem[64]
                                    mem[mem[64] + 32] = address(_5474)
                                    mem[mem[64] + 52] = address(_5500)
                                    _5745 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _5747 = sha3(mem[_5745 + 32 len mem[_5745]])
                                    mem[_5702 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_5702 + 105] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                    mem[_5702 + 125] = _5747
                                    mem[_5702 + 157] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                    mem[_5702 + 72] = 85
                                    require ext_code.size(address(sha3(0, 17269419903419772280, _5747, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    staticcall address(sha3(0, 17269419903419772280, _5747, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                                            gas gas_remaining wei
                                    mem[_5702 + 189 len 96] = ext_call.return_data[0 len 96]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 96
                                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                    if address(_5500) == address(_5474):
                                        revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                                    if address(_5500) == address(_5500):
                                        if address(_5500) < address(_5474):
                                            if not address(_5500):
                                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                            mem[_5702 + ceil32(return_data.size) + 221] = address(_5500)
                                            mem[_5702 + ceil32(return_data.size) + 241] = address(_5474)
                                            mem[_5702 + ceil32(return_data.size) + 189] = 40
                                            mem[_5702 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_5702 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                            mem[_5702 + ceil32(return_data.size) + 314] = sha3(address(_5500), address(_5474))
                                            mem[_5702 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                            mem[_5702 + ceil32(return_data.size) + 261] = 85
                                            if 100000 * 10^18 * _5458 / stor7 * _5466 / _5462 <= 985 * Mask(112, 0, ext_call.return_data[0]):
                                                mem[_5702 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                                mem[_5702 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                                mem[_5702 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5702 + ceil32(return_data.size) + 378] = 96
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5500), address(_5474)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5500), address(_5474)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5702 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5702 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5500), address(_5474)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5500), address(_5474)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5702 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                                mem[_5702 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5702 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5702 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5500):
                                                    mem[_5702 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    if ext_call.return_data[12 len 20] == address(_5500):
                                                        mem[_5702 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    else:
                                                        mem[_5702 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5702 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5500):
                                                        mem[_5702 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    else:
                                                        mem[_5702 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5702 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5702 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5702 + (4 * ceil32(return_data.size)) + 638] = 96
                                                idx = 0
                                                while idx < 96:
                                                    mem[idx + _5702 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5702 + ceil32(return_data.size) + 410]
                                                    require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                    require 2 * t < arg2.length
                                                    require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                    require (2 * t) + 1 < arg2.length
                                                    require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                    mem[_5702 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5702 + (4 * ceil32(return_data.size)) + 510 len -_5702 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5702 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5500), address(_5474)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                call address(sha3(0, 17269419903419772280, sha3(address(_5500), address(_5474)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5702 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5702 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5702 + (4 * ceil32(return_data.size)) + 670 len 96]
                                            else:
                                                mem[_5702 + ceil32(return_data.size) + 382] = address(_5500)
                                                mem[_5702 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                                staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                        gas gas_remaining wei
                                                       args address(_5500), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                mem[_5702 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5702 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                                mem[_5702 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                                mem[_5702 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5702 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5702 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5702 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5702 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5702 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5702 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5500):
                                                    mem[_5702 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    if ext_call.return_data[12 len 20] == address(_5500):
                                                        mem[_5702 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    else:
                                                        mem[_5702 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5702 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5500):
                                                        mem[_5702 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    else:
                                                        mem[_5702 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5702 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5702 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5702 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                                idx = 0
                                                while idx < ceil32(return_data.size) + 96:
                                                    mem[idx + _5702 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5702 + (2 * ceil32(return_data.size)) + 410]
                                                    require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                    require 2 * t < arg2.length
                                                    require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                    require (2 * t) + 1 < arg2.length
                                                    require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                    mem[_5702 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5702 + (4 * ceil32(return_data.size)) + 510 len -_5702 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5702 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                    mem[_5702 + (6 * ceil32(return_data.size)) + 766] = 0
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                call address(ext_call.return_data[0]).mem[_5702 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5702 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5702 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                        else:
                                            if not address(_5474):
                                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                            mem[_5702 + ceil32(return_data.size) + 221] = address(_5474)
                                            mem[_5702 + ceil32(return_data.size) + 241] = address(_5500)
                                            mem[_5702 + ceil32(return_data.size) + 189] = 40
                                            mem[_5702 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_5702 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                            mem[_5702 + ceil32(return_data.size) + 314] = sha3(address(_5474), address(_5500))
                                            mem[_5702 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                            mem[_5702 + ceil32(return_data.size) + 261] = 85
                                            if 100000 * 10^18 * _5458 / stor7 * _5466 / _5462 <= 985 * Mask(112, 0, ext_call.return_data[0]):
                                                mem[_5702 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                                mem[_5702 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                                mem[_5702 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5702 + ceil32(return_data.size) + 378] = 96
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5474), address(_5500)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5474), address(_5500)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5702 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5702 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5474), address(_5500)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5474), address(_5500)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5702 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                                mem[_5702 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5702 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5702 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5500):
                                                    mem[_5702 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    if ext_call.return_data[12 len 20] == address(_5500):
                                                        mem[_5702 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    else:
                                                        mem[_5702 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5702 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5500):
                                                        mem[_5702 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    else:
                                                        mem[_5702 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5702 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5702 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5702 + (4 * ceil32(return_data.size)) + 638] = 96
                                                idx = 0
                                                while idx < 96:
                                                    mem[idx + _5702 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5702 + ceil32(return_data.size) + 410]
                                                    require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                    require 2 * t < arg2.length
                                                    require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                    require (2 * t) + 1 < arg2.length
                                                    require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                    mem[_5702 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5702 + (4 * ceil32(return_data.size)) + 510 len -_5702 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5702 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5474), address(_5500)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                call address(sha3(0, 17269419903419772280, sha3(address(_5474), address(_5500)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5702 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5702 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5702 + (4 * ceil32(return_data.size)) + 670 len 96]
                                            else:
                                                mem[_5702 + ceil32(return_data.size) + 382] = address(_5500)
                                                mem[_5702 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                                staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                        gas gas_remaining wei
                                                       args address(_5500), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                mem[_5702 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5702 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                                mem[_5702 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                                mem[_5702 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5702 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5702 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5702 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5702 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5702 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5702 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5500):
                                                    mem[_5702 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    if ext_call.return_data[12 len 20] == address(_5500):
                                                        mem[_5702 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    else:
                                                        mem[_5702 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5702 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5500):
                                                        mem[_5702 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    else:
                                                        mem[_5702 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5702 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5702 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5702 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                                idx = 0
                                                while idx < ceil32(return_data.size) + 96:
                                                    mem[idx + _5702 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5702 + (2 * ceil32(return_data.size)) + 410]
                                                    require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                    require 2 * t < arg2.length
                                                    require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                    require (2 * t) + 1 < arg2.length
                                                    require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                    mem[_5702 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5702 + (4 * ceil32(return_data.size)) + 510 len -_5702 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5702 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                    mem[_5702 + (6 * ceil32(return_data.size)) + 766] = 0
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                call address(ext_call.return_data[0]).mem[_5702 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5702 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5702 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                    else:
                                        if address(_5500) < address(_5474):
                                            if not address(_5500):
                                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                            mem[_5702 + ceil32(return_data.size) + 221] = address(_5500)
                                            mem[_5702 + ceil32(return_data.size) + 241] = address(_5474)
                                            mem[_5702 + ceil32(return_data.size) + 189] = 40
                                            mem[_5702 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_5702 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                            mem[_5702 + ceil32(return_data.size) + 314] = sha3(address(_5500), address(_5474))
                                            mem[_5702 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                            mem[_5702 + ceil32(return_data.size) + 261] = 85
                                            if 100000 * 10^18 * _5458 / stor7 * _5466 / _5462 <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                                mem[_5702 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                                mem[_5702 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                                mem[_5702 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5702 + ceil32(return_data.size) + 378] = 96
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5500), address(_5474)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5500), address(_5474)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5702 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5702 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5500), address(_5474)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5500), address(_5474)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5702 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                                mem[_5702 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5702 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5702 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5500):
                                                    mem[_5702 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    if ext_call.return_data[12 len 20] == address(_5500):
                                                        mem[_5702 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    else:
                                                        mem[_5702 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5702 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5500):
                                                        mem[_5702 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    else:
                                                        mem[_5702 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5702 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5702 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5702 + (4 * ceil32(return_data.size)) + 638] = 96
                                                idx = 0
                                                while idx < 96:
                                                    mem[idx + _5702 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5702 + ceil32(return_data.size) + 410]
                                                    require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                    require 2 * t < arg2.length
                                                    require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                    require (2 * t) + 1 < arg2.length
                                                    require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                    mem[_5702 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5702 + (4 * ceil32(return_data.size)) + 510 len -_5702 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5702 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5500), address(_5474)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                call address(sha3(0, 17269419903419772280, sha3(address(_5500), address(_5474)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5702 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5702 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5702 + (4 * ceil32(return_data.size)) + 670 len 96]
                                            else:
                                                mem[_5702 + ceil32(return_data.size) + 382] = address(_5500)
                                                mem[_5702 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                                staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                        gas gas_remaining wei
                                                       args address(_5500), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                mem[_5702 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5702 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                                mem[_5702 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                                mem[_5702 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5702 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5702 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5702 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5702 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5702 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5702 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5500):
                                                    mem[_5702 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    if ext_call.return_data[12 len 20] == address(_5500):
                                                        mem[_5702 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    else:
                                                        mem[_5702 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5702 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5500):
                                                        mem[_5702 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    else:
                                                        mem[_5702 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5702 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5702 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5702 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                                idx = 0
                                                while idx < ceil32(return_data.size) + 96:
                                                    mem[idx + _5702 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5702 + (2 * ceil32(return_data.size)) + 410]
                                                    require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                    require 2 * t < arg2.length
                                                    require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                    require (2 * t) + 1 < arg2.length
                                                    require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                    mem[_5702 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5702 + (4 * ceil32(return_data.size)) + 510 len -_5702 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5702 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                    mem[_5702 + (6 * ceil32(return_data.size)) + 766] = 0
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                call address(ext_call.return_data[0]).mem[_5702 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5702 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5702 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                        else:
                                            if not address(_5474):
                                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                            mem[_5702 + ceil32(return_data.size) + 221] = address(_5474)
                                            mem[_5702 + ceil32(return_data.size) + 241] = address(_5500)
                                            mem[_5702 + ceil32(return_data.size) + 189] = 40
                                            mem[_5702 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_5702 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                            mem[_5702 + ceil32(return_data.size) + 314] = sha3(address(_5474), address(_5500))
                                            mem[_5702 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                            mem[_5702 + ceil32(return_data.size) + 261] = 85
                                            if 100000 * 10^18 * _5458 / stor7 * _5466 / _5462 <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                                mem[_5702 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                                mem[_5702 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                                mem[_5702 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5702 + ceil32(return_data.size) + 378] = 96
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5474), address(_5500)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5474), address(_5500)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5702 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5702 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5474), address(_5500)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5474), address(_5500)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5702 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                                mem[_5702 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5702 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5702 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5500):
                                                    mem[_5702 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    if ext_call.return_data[12 len 20] == address(_5500):
                                                        mem[_5702 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    else:
                                                        mem[_5702 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5702 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5500):
                                                        mem[_5702 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    else:
                                                        mem[_5702 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5702 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5702 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5702 + (4 * ceil32(return_data.size)) + 638] = 96
                                                idx = 0
                                                while idx < 96:
                                                    mem[idx + _5702 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5702 + ceil32(return_data.size) + 410]
                                                    require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                    require 2 * t < arg2.length
                                                    require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                    require (2 * t) + 1 < arg2.length
                                                    require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                    mem[_5702 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5702 + (4 * ceil32(return_data.size)) + 510 len -_5702 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5702 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5474), address(_5500)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                call address(sha3(0, 17269419903419772280, sha3(address(_5474), address(_5500)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5702 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5702 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5702 + (4 * ceil32(return_data.size)) + 670 len 96]
                                            else:
                                                mem[_5702 + ceil32(return_data.size) + 382] = address(_5500)
                                                mem[_5702 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                                staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                        gas gas_remaining wei
                                                       args address(_5500), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                mem[_5702 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5702 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg1 + 36)])
                                                mem[_5702 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg2 + 36)])
                                                mem[_5702 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                mem[_5702 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5702 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5702 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5702 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5702 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5702 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5500):
                                                    mem[_5702 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    if ext_call.return_data[12 len 20] == address(_5500):
                                                        mem[_5702 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    else:
                                                        mem[_5702 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5702 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5500):
                                                        mem[_5702 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _5458 / stor7 * _5466 / _5462
                                                    else:
                                                        mem[_5702 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5702 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5702 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5702 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                                idx = 0
                                                while idx < ceil32(return_data.size) + 96:
                                                    mem[idx + _5702 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5702 + (2 * ceil32(return_data.size)) + 410]
                                                    require cd[((32 * s) + arg1 + 36)] == address(cd[((32 * s) + arg1 + 36)])
                                                    require 2 * t < arg2.length
                                                    require cd[((64 * t) + arg2 + 36)] == address(cd[((64 * t) + arg2 + 36)])
                                                    require (2 * t) + 1 < arg2.length
                                                    require cd[((32 * (2 * t) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t) + 1) + arg2 + 36)])
                                                    mem[_5702 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg1 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5702 + (4 * ceil32(return_data.size)) + 510 len -_5702 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5702 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                    mem[_5702 + (6 * ceil32(return_data.size)) + 766] = 0
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                call address(ext_call.return_data[0]).mem[_5702 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5702 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5702 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if gas_remaining < stor8:
                                    if arg1.length == t + 1:
                                    require t + 1 < arg1.length
                                    require cd[((32 * t + 2) + arg1 + 36)] == address(cd[((32 * t + 2) + arg1 + 36)])
                                    require 2 * t + 1 < arg2.length
                                    require cd[((64 * t + 1) + arg2 + 36)] == address(cd[((64 * t + 1) + arg2 + 36)])
                                    require (2 * t + 1) + 1 < arg2.length
                                    require cd[((32 * (2 * t + 1) + 1) + arg2 + 36)] == address(cd[((32 * (2 * t + 1) + 1) + arg2 + 36)])
                                    mem[_5702 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                    mem[100] = address(cd[((32 * t + 2) + arg1 + 36)])
                                    require ext_code.size(comptrollerAddress)
                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                            gas gas_remaining wei
                                           args mem[_5702 + (4 * ceil32(return_data.size)) + 510 len -_5702 + -(4 * ceil32(return_data.size)) - 378]
                                    mem[_5702 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
        s = t + 1
        t = t + 1
        continue 
    revert with ext_call.return_data[0 len return_data.size]
}

function liquidateSNWithPrice(bytes[] arg1, bytes[] arg2, string[] arg3, address[] arg4, address[] arg5) payable {
    mem[64] = 96
    require not msg.value
    require calldata.size - 4 >= 160
    require arg1 <= test266151307()
    require arg1 + 35 < calldata.size
    require arg1.length <= test266151307()
    require arg1 + (32 * arg1.length) + 36 <= calldata.size
    require arg2 <= test266151307()
    require arg2 + 35 < calldata.size
    require arg2.length <= test266151307()
    require arg2 + (32 * arg2.length) + 36 <= calldata.size
    require arg3 <= test266151307()
    require arg3 + 35 < calldata.size
    require arg3.length <= test266151307()
    require arg3 + (32 * arg3.length) + 36 <= calldata.size
    require arg4 <= test266151307()
    require arg4 + 35 < calldata.size
    require arg4.length <= test266151307()
    require arg4 + (32 * arg4.length) + 36 <= calldata.size
    require arg5 <= test266151307()
    require arg5 + 35 < calldata.size
    require arg5.length <= test266151307()
    require arg5 + (32 * arg5.length) + 36 <= calldata.size
    require var74001 < arg4.length
    require cd[((32 * var74001) + arg4 + 36)] == address(cd[((32 * var74001) + arg4 + 36)])
    require 2 * var74001 < arg5.length
    require cd[((64 * var74001) + arg5 + 36)] == address(cd[((64 * var74001) + arg5 + 36)])
    require (2 * var74001) + 1 < arg5.length
    require cd[((32 * (2 * var74001) + 1) + arg5 + 36)] == address(cd[((32 * (2 * var74001) + 1) + arg5 + 36)])
    require ext_code.size(comptrollerAddress)
    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
            gas gas_remaining wei
           args address(cd[((32 * var74001) + arg4 + 36)])
    mem[96 len 96] = ext_call.return_data[0 len 96]
    s = var74001
    t = var74001
    while ext_call.success:
        _4967 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 96
        if mem[_4967 + 32]:
            if gas_remaining < stor8:
            if arg4.length == t + 1:
            require t + 1 < arg4.length
            require cd[((32 * t + 2) + arg4 + 36)] == address(cd[((32 * t + 2) + arg4 + 36)])
            require 2 * t + 1 < arg5.length
            require cd[((64 * t + 1) + arg5 + 36)] == address(cd[((64 * t + 1) + arg5 + 36)])
            require (2 * t + 1) + 1 < arg5.length
            require cd[((32 * (2 * t + 1) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t + 1) + 1) + arg5 + 36)])
            mem[mem[64]] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
            mem[100] = address(cd[((32 * t + 2) + arg4 + 36)])
            require ext_code.size(comptrollerAddress)
            staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len -mem[64] + 128]
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
        else:
            mem[mem[64] + 4] = address(cd[((32 * s) + arg4 + 36)])
            require ext_code.size(address(cd[((64 * t) + arg5 + 36)]))
            call address(cd[((64 * t) + arg5 + 36)]).borrowBalanceCurrent(address rg1) with:
                 gas gas_remaining wei
                args address(cd[((32 * s) + arg4 + 36)])
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4973 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4974 = mem[_4973]
            mem[mem[64] + 4] = address(cd[((32 * s) + arg4 + 36)])
            require ext_code.size(address(cd[((32 * (2 * t) + 1) + arg5 + 36)]))
            call address(cd[((32 * (2 * t) + 1) + arg5 + 36)]).balanceOfUnderlying(address rg1) with:
                 gas gas_remaining wei
                args address(cd[((32 * s) + arg4 + 36)])
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4977 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4978 = mem[_4977]
            require stor7
            mem[mem[64] + 4] = address(cd[((64 * t) + arg5 + 36)])
            require ext_code.size(priceOracleAddress)
            staticcall priceOracleAddress.getUnderlyingPrice(address rg1) with:
                    gas gas_remaining wei
                   args address(cd[((64 * t) + arg5 + 36)])
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4981 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4982 = mem[_4981]
            mem[mem[64] + 4] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
            require ext_code.size(priceOracleAddress)
            staticcall priceOracleAddress.getUnderlyingPrice(address rg1) with:
                    gas gas_remaining wei
                   args address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4985 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4986 = mem[_4985]
            require _4982
            require ext_code.size(address(cd[((32 * (2 * t) + 1) + arg5 + 36)]))
            staticcall address(cd[((32 * (2 * t) + 1) + arg5 + 36)]).underlying() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            if _4982 * _4974 * stor6 / 10^18 < 10^18 * _4978 / stor7 * mem[_4985]:
                _4991 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _4993 = mem[_4991]
                require mem[_4991] == mem[_4991 + 12 len 20]
                if address(cd[((64 * t) + arg5 + 36)]) == address(cd[((32 * (2 * t) + 1) + arg5 + 36)]):
                    require ext_code.size(address(cd[((64 * t) + arg5 + 36)]))
                    staticcall address(cd[((64 * t) + arg5 + 36)]).underlying() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5003 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _5011 = mem[_5003]
                    require mem[_5003] == mem[_5003 + 12 len 20]
                    if mem[_5003 + 12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                        revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                    if mem[_5003 + 12 len 20] >= 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                        _5072 = mem[64]
                        mem[mem[64] + 32] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7000000000000000000000000
                        mem[mem[64] + 52] = address(_5011)
                        _5097 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _5099 = sha3(mem[_5097 + 32 len mem[_5097]])
                        mem[_5072 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_5072 + 105] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                        mem[_5072 + 125] = _5099
                        mem[_5072 + 157] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                        mem[_5072 + 72] = 85
                        mem[_5072 + 221] = address(cd[((32 * s) + arg4 + 36)])
                        mem[_5072 + 253] = address(cd[((64 * t) + arg5 + 36)])
                        mem[_5072 + 285] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                        mem[_5072 + 189] = 96
                        require ext_code.size(address(sha3(0, 17269419903419772280, _5099, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        staticcall address(sha3(0, 17269419903419772280, _5099, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                gas gas_remaining wei
                        mem[_5072 + 317] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        require ext_code.size(address(sha3(0, 17269419903419772280, _5099, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        staticcall address(sha3(0, 17269419903419772280, _5099, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                gas gas_remaining wei
                        mem[_5072 + ceil32(return_data.size) + 317] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _5072 + (2 * ceil32(return_data.size)) + 317
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        mem[_5072 + (2 * ceil32(return_data.size)) + 317] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        if ext_call.return_data[12 len 20] == address(_5011):
                            mem[_5072 + (2 * ceil32(return_data.size)) + 321] = _4982 * _4974 * stor6 / 10^18 / _4982
                            if ext_call.return_data[12 len 20] == address(_5011):
                                mem[_5072 + (2 * ceil32(return_data.size)) + 353] = _4982 * _4974 * stor6 / 10^18 / _4982
                            else:
                                mem[_5072 + (2 * ceil32(return_data.size)) + 353] = 0
                        else:
                            mem[_5072 + (2 * ceil32(return_data.size)) + 321] = 0
                            if ext_call.return_data[12 len 20] == address(_5011):
                                mem[_5072 + (2 * ceil32(return_data.size)) + 353] = _4982 * _4974 * stor6 / 10^18 / _4982
                            else:
                                mem[_5072 + (2 * ceil32(return_data.size)) + 353] = 0
                        mem[_5072 + (2 * ceil32(return_data.size)) + 385] = this.address
                        mem[_5072 + (2 * ceil32(return_data.size)) + 417] = 128
                        mem[_5072 + (2 * ceil32(return_data.size)) + 449] = 96
                        idx = 0
                        while idx < 96:
                            mem[idx + _5072 + (2 * ceil32(return_data.size)) + 481] = mem[idx + _5072 + 221]
                            require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                            require 2 * t < arg5.length
                            require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                            require (2 * t) + 1 < arg5.length
                            require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                            mem[_5072 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                            mem[100] = address(cd[((32 * s) + arg4 + 36)])
                            require ext_code.size(comptrollerAddress)
                            staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                    gas gas_remaining wei
                                   args mem[_5072 + (2 * ceil32(return_data.size)) + 321 len -_5072 + -(2 * ceil32(return_data.size)) - 189]
                            mem[_5072 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                            idx = idx + 32
                            continue 
                        require ext_code.size(address(sha3(0, 17269419903419772280, _5099, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        call address(sha3(0, 17269419903419772280, _5099, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5072 + (2 * ceil32(return_data.size)) + 317 len 4] with:
                             gas gas_remaining wei
                            args mem[_5072 + (2 * ceil32(return_data.size)) + 321 len 96], 128, 96, mem[_5072 + (2 * ceil32(return_data.size)) + 481 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if gas_remaining < stor8:
                        if arg4.length == t + 1:
                        require t + 1 < arg4.length
                        require cd[((32 * t + 2) + arg4 + 36)] == address(cd[((32 * t + 2) + arg4 + 36)])
                        require 2 * t + 1 < arg5.length
                        require cd[((64 * t + 1) + arg5 + 36)] == address(cd[((64 * t + 1) + arg5 + 36)])
                        require (2 * t + 1) + 1 < arg5.length
                        require cd[((32 * (2 * t + 1) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t + 1) + 1) + arg5 + 36)])
                        mem[_5072 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                        mem[100] = address(cd[((32 * t + 2) + arg4 + 36)])
                        require ext_code.size(comptrollerAddress)
                        staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                gas gas_remaining wei
                               args mem[_5072 + (2 * ceil32(return_data.size)) + 321 len -_5072 + -(2 * ceil32(return_data.size)) - 189]
                        mem[_5072 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                    else:
                        if not mem[_5003 + 12 len 20]:
                            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                        _5071 = mem[64]
                        mem[mem[64] + 32] = address(mem[_5003])
                        mem[mem[64] + 52] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7000000000000000000000000
                        _5093 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _5095 = sha3(mem[_5093 + 32 len mem[_5093]])
                        mem[_5071 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_5071 + 105] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                        mem[_5071 + 125] = _5095
                        mem[_5071 + 157] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                        mem[_5071 + 72] = 85
                        mem[_5071 + 221] = address(cd[((32 * s) + arg4 + 36)])
                        mem[_5071 + 253] = address(cd[((64 * t) + arg5 + 36)])
                        mem[_5071 + 285] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                        mem[_5071 + 189] = 96
                        require ext_code.size(address(sha3(0, 17269419903419772280, _5095, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        staticcall address(sha3(0, 17269419903419772280, _5095, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                gas gas_remaining wei
                        mem[_5071 + 317] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        require ext_code.size(address(sha3(0, 17269419903419772280, _5095, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        staticcall address(sha3(0, 17269419903419772280, _5095, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                gas gas_remaining wei
                        mem[_5071 + ceil32(return_data.size) + 317] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _5071 + (2 * ceil32(return_data.size)) + 317
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        mem[_5071 + (2 * ceil32(return_data.size)) + 317] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        if ext_call.return_data[12 len 20] == address(_5011):
                            mem[_5071 + (2 * ceil32(return_data.size)) + 321] = _4982 * _4974 * stor6 / 10^18 / _4982
                            if ext_call.return_data[12 len 20] == address(_5011):
                                mem[_5071 + (2 * ceil32(return_data.size)) + 353] = _4982 * _4974 * stor6 / 10^18 / _4982
                            else:
                                mem[_5071 + (2 * ceil32(return_data.size)) + 353] = 0
                        else:
                            mem[_5071 + (2 * ceil32(return_data.size)) + 321] = 0
                            if ext_call.return_data[12 len 20] == address(_5011):
                                mem[_5071 + (2 * ceil32(return_data.size)) + 353] = _4982 * _4974 * stor6 / 10^18 / _4982
                            else:
                                mem[_5071 + (2 * ceil32(return_data.size)) + 353] = 0
                        mem[_5071 + (2 * ceil32(return_data.size)) + 385] = this.address
                        mem[_5071 + (2 * ceil32(return_data.size)) + 417] = 128
                        mem[_5071 + (2 * ceil32(return_data.size)) + 449] = 96
                        idx = 0
                        while idx < 96:
                            mem[idx + _5071 + (2 * ceil32(return_data.size)) + 481] = mem[idx + _5071 + 221]
                            require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                            require 2 * t < arg5.length
                            require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                            require (2 * t) + 1 < arg5.length
                            require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                            mem[_5071 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                            mem[100] = address(cd[((32 * s) + arg4 + 36)])
                            require ext_code.size(comptrollerAddress)
                            staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                    gas gas_remaining wei
                                   args mem[_5071 + (2 * ceil32(return_data.size)) + 321 len -_5071 + -(2 * ceil32(return_data.size)) - 189]
                            mem[_5071 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                            idx = idx + 32
                            continue 
                        require ext_code.size(address(sha3(0, 17269419903419772280, _5095, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        call address(sha3(0, 17269419903419772280, _5095, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5071 + (2 * ceil32(return_data.size)) + 317 len 4] with:
                             gas gas_remaining wei
                            args mem[_5071 + (2 * ceil32(return_data.size)) + 321 len 96], 128, 96, mem[_5071 + (2 * ceil32(return_data.size)) + 481 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if gas_remaining < stor8:
                        if arg4.length == t + 1:
                        require t + 1 < arg4.length
                        require cd[((32 * t + 2) + arg4 + 36)] == address(cd[((32 * t + 2) + arg4 + 36)])
                        require 2 * t + 1 < arg5.length
                        require cd[((64 * t + 1) + arg5 + 36)] == address(cd[((64 * t + 1) + arg5 + 36)])
                        require (2 * t + 1) + 1 < arg5.length
                        require cd[((32 * (2 * t + 1) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t + 1) + 1) + arg5 + 36)])
                        mem[_5071 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                        mem[100] = address(cd[((32 * t + 2) + arg4 + 36)])
                        require ext_code.size(comptrollerAddress)
                        staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                gas gas_remaining wei
                               args mem[_5071 + (2 * ceil32(return_data.size)) + 321 len -_5071 + -(2 * ceil32(return_data.size)) - 189]
                        mem[_5071 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                else:
                    if 0x5c0401e81bc07ca70fad469b451682c0d747ef1c == address(cd[((32 * (2 * t) + 1) + arg5 + 36)]):
                        require ext_code.size(address(cd[((64 * t) + arg5 + 36)]))
                        staticcall address(cd[((64 * t) + arg5 + 36)]).underlying() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5009 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _5016 = mem[_5009]
                        require mem[_5009] == mem[_5009 + 12 len 20]
                        if mem[_5009 + 12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                            revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                        if mem[_5009 + 12 len 20] >= 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                            _5087 = mem[64]
                            mem[mem[64] + 32] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7000000000000000000000000
                            mem[mem[64] + 52] = address(_5016)
                            _5129 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _5131 = sha3(mem[_5129 + 32 len mem[_5129]])
                            mem[_5087 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_5087 + 105] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                            mem[_5087 + 125] = _5131
                            mem[_5087 + 157] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                            mem[_5087 + 72] = 85
                            mem[_5087 + 221] = address(cd[((32 * s) + arg4 + 36)])
                            mem[_5087 + 253] = address(cd[((64 * t) + arg5 + 36)])
                            mem[_5087 + 285] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                            mem[_5087 + 189] = 96
                            require ext_code.size(address(sha3(0, 17269419903419772280, _5131, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            staticcall address(sha3(0, 17269419903419772280, _5131, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                    gas gas_remaining wei
                            mem[_5087 + 317] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            require ext_code.size(address(sha3(0, 17269419903419772280, _5131, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            staticcall address(sha3(0, 17269419903419772280, _5131, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                    gas gas_remaining wei
                            mem[_5087 + ceil32(return_data.size) + 317] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _5087 + (2 * ceil32(return_data.size)) + 317
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[_5087 + (2 * ceil32(return_data.size)) + 317] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            if ext_call.return_data[12 len 20] == address(_5016):
                                mem[_5087 + (2 * ceil32(return_data.size)) + 321] = _4982 * _4974 * stor6 / 10^18 / _4982
                                if ext_call.return_data[12 len 20] == address(_5016):
                                    mem[_5087 + (2 * ceil32(return_data.size)) + 353] = _4982 * _4974 * stor6 / 10^18 / _4982
                                else:
                                    mem[_5087 + (2 * ceil32(return_data.size)) + 353] = 0
                            else:
                                mem[_5087 + (2 * ceil32(return_data.size)) + 321] = 0
                                if ext_call.return_data[12 len 20] == address(_5016):
                                    mem[_5087 + (2 * ceil32(return_data.size)) + 353] = _4982 * _4974 * stor6 / 10^18 / _4982
                                else:
                                    mem[_5087 + (2 * ceil32(return_data.size)) + 353] = 0
                            mem[_5087 + (2 * ceil32(return_data.size)) + 385] = this.address
                            mem[_5087 + (2 * ceil32(return_data.size)) + 417] = 128
                            mem[_5087 + (2 * ceil32(return_data.size)) + 449] = 96
                            idx = 0
                            while idx < 96:
                                mem[idx + _5087 + (2 * ceil32(return_data.size)) + 481] = mem[idx + _5087 + 221]
                                require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                require 2 * t < arg5.length
                                require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                require (2 * t) + 1 < arg5.length
                                require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                mem[_5087 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                require ext_code.size(comptrollerAddress)
                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                        gas gas_remaining wei
                                       args mem[_5087 + (2 * ceil32(return_data.size)) + 321 len -_5087 + -(2 * ceil32(return_data.size)) - 189]
                                mem[_5087 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                                idx = idx + 32
                                continue 
                            require ext_code.size(address(sha3(0, 17269419903419772280, _5131, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            call address(sha3(0, 17269419903419772280, _5131, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5087 + (2 * ceil32(return_data.size)) + 317 len 4] with:
                                 gas gas_remaining wei
                                args mem[_5087 + (2 * ceil32(return_data.size)) + 321 len 96], 128, 96, mem[_5087 + (2 * ceil32(return_data.size)) + 481 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if gas_remaining < stor8:
                            if arg4.length == t + 1:
                            require t + 1 < arg4.length
                            require cd[((32 * t + 2) + arg4 + 36)] == address(cd[((32 * t + 2) + arg4 + 36)])
                            require 2 * t + 1 < arg5.length
                            require cd[((64 * t + 1) + arg5 + 36)] == address(cd[((64 * t + 1) + arg5 + 36)])
                            require (2 * t + 1) + 1 < arg5.length
                            require cd[((32 * (2 * t + 1) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t + 1) + 1) + arg5 + 36)])
                            mem[_5087 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                            mem[100] = address(cd[((32 * t + 2) + arg4 + 36)])
                            require ext_code.size(comptrollerAddress)
                            staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                    gas gas_remaining wei
                                   args mem[_5087 + (2 * ceil32(return_data.size)) + 321 len -_5087 + -(2 * ceil32(return_data.size)) - 189]
                            mem[_5087 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                        else:
                            if not mem[_5009 + 12 len 20]:
                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                            _5086 = mem[64]
                            mem[mem[64] + 32] = address(mem[_5009])
                            mem[mem[64] + 52] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7000000000000000000000000
                            _5125 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _5127 = sha3(mem[_5125 + 32 len mem[_5125]])
                            mem[_5086 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_5086 + 105] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                            mem[_5086 + 125] = _5127
                            mem[_5086 + 157] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                            mem[_5086 + 72] = 85
                            mem[_5086 + 221] = address(cd[((32 * s) + arg4 + 36)])
                            mem[_5086 + 253] = address(cd[((64 * t) + arg5 + 36)])
                            mem[_5086 + 285] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                            mem[_5086 + 189] = 96
                            require ext_code.size(address(sha3(0, 17269419903419772280, _5127, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            staticcall address(sha3(0, 17269419903419772280, _5127, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                    gas gas_remaining wei
                            mem[_5086 + 317] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            require ext_code.size(address(sha3(0, 17269419903419772280, _5127, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            staticcall address(sha3(0, 17269419903419772280, _5127, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                    gas gas_remaining wei
                            mem[_5086 + ceil32(return_data.size) + 317] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _5086 + (2 * ceil32(return_data.size)) + 317
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[_5086 + (2 * ceil32(return_data.size)) + 317] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            if ext_call.return_data[12 len 20] == address(_5016):
                                mem[_5086 + (2 * ceil32(return_data.size)) + 321] = _4982 * _4974 * stor6 / 10^18 / _4982
                                if ext_call.return_data[12 len 20] == address(_5016):
                                    mem[_5086 + (2 * ceil32(return_data.size)) + 353] = _4982 * _4974 * stor6 / 10^18 / _4982
                                else:
                                    mem[_5086 + (2 * ceil32(return_data.size)) + 353] = 0
                            else:
                                mem[_5086 + (2 * ceil32(return_data.size)) + 321] = 0
                                if ext_call.return_data[12 len 20] == address(_5016):
                                    mem[_5086 + (2 * ceil32(return_data.size)) + 353] = _4982 * _4974 * stor6 / 10^18 / _4982
                                else:
                                    mem[_5086 + (2 * ceil32(return_data.size)) + 353] = 0
                            mem[_5086 + (2 * ceil32(return_data.size)) + 385] = this.address
                            mem[_5086 + (2 * ceil32(return_data.size)) + 417] = 128
                            mem[_5086 + (2 * ceil32(return_data.size)) + 449] = 96
                            idx = 0
                            while idx < 96:
                                mem[idx + _5086 + (2 * ceil32(return_data.size)) + 481] = mem[idx + _5086 + 221]
                                require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                require 2 * t < arg5.length
                                require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                require (2 * t) + 1 < arg5.length
                                require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                mem[_5086 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                require ext_code.size(comptrollerAddress)
                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                        gas gas_remaining wei
                                       args mem[_5086 + (2 * ceil32(return_data.size)) + 321 len -_5086 + -(2 * ceil32(return_data.size)) - 189]
                                mem[_5086 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                                idx = idx + 32
                                continue 
                            require ext_code.size(address(sha3(0, 17269419903419772280, _5127, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            call address(sha3(0, 17269419903419772280, _5127, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5086 + (2 * ceil32(return_data.size)) + 317 len 4] with:
                                 gas gas_remaining wei
                                args mem[_5086 + (2 * ceil32(return_data.size)) + 321 len 96], 128, 96, mem[_5086 + (2 * ceil32(return_data.size)) + 481 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if gas_remaining < stor8:
                            if arg4.length == t + 1:
                            require t + 1 < arg4.length
                            require cd[((32 * t + 2) + arg4 + 36)] == address(cd[((32 * t + 2) + arg4 + 36)])
                            require 2 * t + 1 < arg5.length
                            require cd[((64 * t + 1) + arg5 + 36)] == address(cd[((64 * t + 1) + arg5 + 36)])
                            require (2 * t + 1) + 1 < arg5.length
                            require cd[((32 * (2 * t + 1) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t + 1) + 1) + arg5 + 36)])
                            mem[_5086 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                            mem[100] = address(cd[((32 * t + 2) + arg4 + 36)])
                            require ext_code.size(comptrollerAddress)
                            staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                    gas gas_remaining wei
                                   args mem[_5086 + (2 * ceil32(return_data.size)) + 321 len -_5086 + -(2 * ceil32(return_data.size)) - 189]
                            mem[_5086 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                    else:
                        if 0x5c0401e81bc07ca70fad469b451682c0d747ef1c == address(cd[((64 * t) + arg5 + 36)]):
                            if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == mem[_4991 + 12 len 20]:
                                revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                            if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 < mem[_4991 + 12 len 20]:
                                _5025 = mem[64]
                                mem[mem[64] + 32] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7000000000000000000000000
                                mem[mem[64] + 52] = address(_4993)
                                _5032 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _5034 = sha3(mem[_5032 + 32 len mem[_5032]])
                                mem[_5025 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_5025 + 105] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                mem[_5025 + 125] = _5034
                                mem[_5025 + 157] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                mem[_5025 + 72] = 85
                                mem[_5025 + 221] = address(cd[((32 * s) + arg4 + 36)])
                                mem[_5025 + 253] = address(cd[((64 * t) + arg5 + 36)])
                                mem[_5025 + 285] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                mem[_5025 + 189] = 96
                                require ext_code.size(address(sha3(0, 17269419903419772280, _5034, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                staticcall address(sha3(0, 17269419903419772280, _5034, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                        gas gas_remaining wei
                                mem[_5025 + 317] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                require ext_code.size(address(sha3(0, 17269419903419772280, _5034, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                staticcall address(sha3(0, 17269419903419772280, _5034, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                        gas gas_remaining wei
                                mem[_5025 + ceil32(return_data.size) + 317] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _5025 + (2 * ceil32(return_data.size)) + 317
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[_5025 + (2 * ceil32(return_data.size)) + 317] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                                    mem[_5025 + (2 * ceil32(return_data.size)) + 321] = _4982 * _4974 * stor6 / 10^18 / _4982
                                    if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                                        mem[_5025 + (2 * ceil32(return_data.size)) + 353] = _4982 * _4974 * stor6 / 10^18 / _4982
                                    else:
                                        mem[_5025 + (2 * ceil32(return_data.size)) + 353] = 0
                                else:
                                    mem[_5025 + (2 * ceil32(return_data.size)) + 321] = 0
                                    if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                                        mem[_5025 + (2 * ceil32(return_data.size)) + 353] = _4982 * _4974 * stor6 / 10^18 / _4982
                                    else:
                                        mem[_5025 + (2 * ceil32(return_data.size)) + 353] = 0
                                mem[_5025 + (2 * ceil32(return_data.size)) + 385] = this.address
                                mem[_5025 + (2 * ceil32(return_data.size)) + 417] = 128
                                mem[_5025 + (2 * ceil32(return_data.size)) + 449] = 96
                                idx = 0
                                while idx < 96:
                                    mem[idx + _5025 + (2 * ceil32(return_data.size)) + 481] = mem[idx + _5025 + 221]
                                    require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                    require 2 * t < arg5.length
                                    require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                    require (2 * t) + 1 < arg5.length
                                    require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                    mem[_5025 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                    mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                    require ext_code.size(comptrollerAddress)
                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                            gas gas_remaining wei
                                           args mem[_5025 + (2 * ceil32(return_data.size)) + 321 len -_5025 + -(2 * ceil32(return_data.size)) - 189]
                                    mem[_5025 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(sha3(0, 17269419903419772280, _5034, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                call address(sha3(0, 17269419903419772280, _5034, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5025 + (2 * ceil32(return_data.size)) + 317 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_5025 + (2 * ceil32(return_data.size)) + 321 len 96], 128, 96, mem[_5025 + (2 * ceil32(return_data.size)) + 481 len 96]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if gas_remaining < stor8:
                                if arg4.length == t + 1:
                                require t + 1 < arg4.length
                                require cd[((32 * t + 2) + arg4 + 36)] == address(cd[((32 * t + 2) + arg4 + 36)])
                                require 2 * t + 1 < arg5.length
                                require cd[((64 * t + 1) + arg5 + 36)] == address(cd[((64 * t + 1) + arg5 + 36)])
                                require (2 * t + 1) + 1 < arg5.length
                                require cd[((32 * (2 * t + 1) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t + 1) + 1) + arg5 + 36)])
                                mem[_5025 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                mem[100] = address(cd[((32 * t + 2) + arg4 + 36)])
                                require ext_code.size(comptrollerAddress)
                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                        gas gas_remaining wei
                                       args mem[_5025 + (2 * ceil32(return_data.size)) + 321 len -_5025 + -(2 * ceil32(return_data.size)) - 189]
                                mem[_5025 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                            else:
                                if not mem[_4991 + 12 len 20]:
                                    revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                _5026 = mem[64]
                                mem[mem[64] + 32] = address(mem[_4991])
                                mem[mem[64] + 52] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7000000000000000000000000
                                _5036 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _5038 = sha3(mem[_5036 + 32 len mem[_5036]])
                                mem[_5026 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_5026 + 105] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                mem[_5026 + 125] = _5038
                                mem[_5026 + 157] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                mem[_5026 + 72] = 85
                                mem[_5026 + 221] = address(cd[((32 * s) + arg4 + 36)])
                                mem[_5026 + 253] = address(cd[((64 * t) + arg5 + 36)])
                                mem[_5026 + 285] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                mem[_5026 + 189] = 96
                                require ext_code.size(address(sha3(0, 17269419903419772280, _5038, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                staticcall address(sha3(0, 17269419903419772280, _5038, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                        gas gas_remaining wei
                                mem[_5026 + 317] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                require ext_code.size(address(sha3(0, 17269419903419772280, _5038, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                staticcall address(sha3(0, 17269419903419772280, _5038, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                        gas gas_remaining wei
                                mem[_5026 + ceil32(return_data.size) + 317] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _5026 + (2 * ceil32(return_data.size)) + 317
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[_5026 + (2 * ceil32(return_data.size)) + 317] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                                    mem[_5026 + (2 * ceil32(return_data.size)) + 321] = _4982 * _4974 * stor6 / 10^18 / _4982
                                    if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                                        mem[_5026 + (2 * ceil32(return_data.size)) + 353] = _4982 * _4974 * stor6 / 10^18 / _4982
                                    else:
                                        mem[_5026 + (2 * ceil32(return_data.size)) + 353] = 0
                                else:
                                    mem[_5026 + (2 * ceil32(return_data.size)) + 321] = 0
                                    if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                                        mem[_5026 + (2 * ceil32(return_data.size)) + 353] = _4982 * _4974 * stor6 / 10^18 / _4982
                                    else:
                                        mem[_5026 + (2 * ceil32(return_data.size)) + 353] = 0
                                mem[_5026 + (2 * ceil32(return_data.size)) + 385] = this.address
                                mem[_5026 + (2 * ceil32(return_data.size)) + 417] = 128
                                mem[_5026 + (2 * ceil32(return_data.size)) + 449] = 96
                                idx = 0
                                while idx < 96:
                                    mem[idx + _5026 + (2 * ceil32(return_data.size)) + 481] = mem[idx + _5026 + 221]
                                    require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                    require 2 * t < arg5.length
                                    require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                    require (2 * t) + 1 < arg5.length
                                    require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                    mem[_5026 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                    mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                    require ext_code.size(comptrollerAddress)
                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                            gas gas_remaining wei
                                           args mem[_5026 + (2 * ceil32(return_data.size)) + 321 len -_5026 + -(2 * ceil32(return_data.size)) - 189]
                                    mem[_5026 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(sha3(0, 17269419903419772280, _5038, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                call address(sha3(0, 17269419903419772280, _5038, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5026 + (2 * ceil32(return_data.size)) + 317 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_5026 + (2 * ceil32(return_data.size)) + 321 len 96], 128, 96, mem[_5026 + (2 * ceil32(return_data.size)) + 481 len 96]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if gas_remaining < stor8:
                                if arg4.length == t + 1:
                                require t + 1 < arg4.length
                                require cd[((32 * t + 2) + arg4 + 36)] == address(cd[((32 * t + 2) + arg4 + 36)])
                                require 2 * t + 1 < arg5.length
                                require cd[((64 * t + 1) + arg5 + 36)] == address(cd[((64 * t + 1) + arg5 + 36)])
                                require (2 * t + 1) + 1 < arg5.length
                                require cd[((32 * (2 * t + 1) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t + 1) + 1) + arg5 + 36)])
                                mem[_5026 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                mem[100] = address(cd[((32 * t + 2) + arg4 + 36)])
                                require ext_code.size(comptrollerAddress)
                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                        gas gas_remaining wei
                                       args mem[_5026 + (2 * ceil32(return_data.size)) + 321 len -_5026 + -(2 * ceil32(return_data.size)) - 189]
                                mem[_5026 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                        else:
                            require ext_code.size(address(cd[((64 * t) + arg5 + 36)]))
                            staticcall address(cd[((64 * t) + arg5 + 36)]).underlying() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5012 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _5019 = mem[_5012]
                            require mem[_5012] == mem[_5012 + 12 len 20]
                            if mem[_5012 + 12 len 20] == address(_4993):
                                revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                            if mem[_5012 + 12 len 20] >= address(_4993):
                                if not address(_4993):
                                    revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                if mem[_5012 + 12 len 20] == address(_4993):
                                    revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                                if mem[_5012 + 12 len 20] < address(_4993):
                                    if not mem[_5012 + 12 len 20]:
                                        revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                    _5213 = mem[64]
                                    mem[mem[64] + 32] = address(mem[_5012])
                                    mem[mem[64] + 52] = address(_4993)
                                    _5251 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _5253 = sha3(mem[_5251 + 32 len mem[_5251]])
                                    mem[_5213 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_5213 + 105] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                    mem[_5213 + 125] = _5253
                                    mem[_5213 + 157] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                    mem[_5213 + 72] = 85
                                    require ext_code.size(address(sha3(0, 17269419903419772280, _5253, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    staticcall address(sha3(0, 17269419903419772280, _5253, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                                            gas gas_remaining wei
                                    mem[_5213 + 189 len 96] = ext_call.return_data[0 len 96]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 96
                                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                    if address(_5019) == address(_4993):
                                        revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                                    if address(_5019) < address(_4993):
                                        if not address(_5019):
                                            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                        mem[_5213 + ceil32(return_data.size) + 221] = address(_5019)
                                        mem[_5213 + ceil32(return_data.size) + 241] = address(_4993)
                                        mem[_5213 + ceil32(return_data.size) + 189] = 40
                                        mem[_5213 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_5213 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                        mem[_5213 + ceil32(return_data.size) + 314] = sha3(address(_5019), address(_4993))
                                        mem[_5213 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                        mem[_5213 + ceil32(return_data.size) + 261] = 85
                                        if 100000 * _4982 * _4974 * stor6 / 10^18 / _4982 <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                            mem[_5213 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                            mem[_5213 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                            mem[_5213 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                            mem[_5213 + ceil32(return_data.size) + 378] = 96
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5019), address(_4993)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            staticcall address(sha3(0, 17269419903419772280, sha3(address(_5019), address(_4993)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                    gas gas_remaining wei
                                            mem[_5213 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5213 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5019), address(_4993)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            staticcall address(sha3(0, 17269419903419772280, sha3(address(_5019), address(_4993)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                    gas gas_remaining wei
                                                   args mem[_5213 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                            mem[_5213 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[64] = _5213 + (4 * ceil32(return_data.size)) + 506
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5213 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            if ext_call.return_data[12 len 20] == address(_5019):
                                                mem[_5213 + (4 * ceil32(return_data.size)) + 510] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                if ext_call.return_data[12 len 20] == address(_5019):
                                                    mem[_5213 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                else:
                                                    mem[_5213 + (4 * ceil32(return_data.size)) + 542] = 0
                                            else:
                                                mem[_5213 + (4 * ceil32(return_data.size)) + 510] = 0
                                                if ext_call.return_data[12 len 20] == address(_5019):
                                                    mem[_5213 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                else:
                                                    mem[_5213 + (4 * ceil32(return_data.size)) + 542] = 0
                                            mem[_5213 + (4 * ceil32(return_data.size)) + 574] = this.address
                                            mem[_5213 + (4 * ceil32(return_data.size)) + 606] = 128
                                            mem[_5213 + (4 * ceil32(return_data.size)) + 638] = 96
                                            idx = 0
                                            while idx < 96:
                                                mem[idx + _5213 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5213 + ceil32(return_data.size) + 410]
                                                require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                require 2 * t < arg5.length
                                                require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                require (2 * t) + 1 < arg5.length
                                                require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5213 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                require ext_code.size(comptrollerAddress)
                                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                        gas gas_remaining wei
                                                       args mem[_5213 + (4 * ceil32(return_data.size)) + 510 len -_5213 + -(4 * ceil32(return_data.size)) - 378]
                                                mem[_5213 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                idx = idx + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5019), address(_4993)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            call address(sha3(0, 17269419903419772280, sha3(address(_5019), address(_4993)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5213 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                 gas gas_remaining wei
                                                args mem[_5213 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5213 + (4 * ceil32(return_data.size)) + 670 len 96]
                                        else:
                                            mem[_5213 + ceil32(return_data.size) + 382] = address(_5019)
                                            mem[_5213 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                            require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                            staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                    gas gas_remaining wei
                                                   args address(_5019), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                            mem[_5213 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5213 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                            mem[_5213 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                            mem[_5213 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                            mem[_5213 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            staticcall address(ext_call.return_data[0]).token0() with:
                                                    gas gas_remaining wei
                                            mem[_5213 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5213 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            staticcall address(ext_call.return_data[0]).token1() with:
                                                    gas gas_remaining wei
                                                   args mem[_5213 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[64] = _5213 + (4 * ceil32(return_data.size)) + 506
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5213 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            if ext_call.return_data[12 len 20] == address(_5019):
                                                mem[_5213 + (4 * ceil32(return_data.size)) + 510] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                if ext_call.return_data[12 len 20] == address(_5019):
                                                    mem[_5213 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                else:
                                                    mem[_5213 + (4 * ceil32(return_data.size)) + 542] = 0
                                            else:
                                                mem[_5213 + (4 * ceil32(return_data.size)) + 510] = 0
                                                if ext_call.return_data[12 len 20] == address(_5019):
                                                    mem[_5213 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                else:
                                                    mem[_5213 + (4 * ceil32(return_data.size)) + 542] = 0
                                            mem[_5213 + (4 * ceil32(return_data.size)) + 574] = this.address
                                            mem[_5213 + (4 * ceil32(return_data.size)) + 606] = 128
                                            mem[_5213 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                            idx = 0
                                            while idx < ceil32(return_data.size) + 96:
                                                mem[idx + _5213 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5213 + (2 * ceil32(return_data.size)) + 410]
                                                require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                require 2 * t < arg5.length
                                                require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                require (2 * t) + 1 < arg5.length
                                                require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5213 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                require ext_code.size(comptrollerAddress)
                                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                        gas gas_remaining wei
                                                       args mem[_5213 + (4 * ceil32(return_data.size)) + 510 len -_5213 + -(4 * ceil32(return_data.size)) - 378]
                                                mem[_5213 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                idx = idx + 32
                                                continue 
                                            if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                mem[_5213 + (6 * ceil32(return_data.size)) + 766] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).mem[_5213 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                 gas gas_remaining wei
                                                args mem[_5213 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5213 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                    else:
                                        if not address(_4993):
                                            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                        mem[_5213 + ceil32(return_data.size) + 221] = address(_4993)
                                        mem[_5213 + ceil32(return_data.size) + 241] = address(_5019)
                                        mem[_5213 + ceil32(return_data.size) + 189] = 40
                                        mem[_5213 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_5213 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                        mem[_5213 + ceil32(return_data.size) + 314] = sha3(address(_4993), address(_5019))
                                        mem[_5213 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                        mem[_5213 + ceil32(return_data.size) + 261] = 85
                                        if 100000 * _4982 * _4974 * stor6 / 10^18 / _4982 <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                            mem[_5213 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                            mem[_5213 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                            mem[_5213 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                            mem[_5213 + ceil32(return_data.size) + 378] = 96
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_4993), address(_5019)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            staticcall address(sha3(0, 17269419903419772280, sha3(address(_4993), address(_5019)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                    gas gas_remaining wei
                                            mem[_5213 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5213 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_4993), address(_5019)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            staticcall address(sha3(0, 17269419903419772280, sha3(address(_4993), address(_5019)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                    gas gas_remaining wei
                                                   args mem[_5213 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                            mem[_5213 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[64] = _5213 + (4 * ceil32(return_data.size)) + 506
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5213 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            if ext_call.return_data[12 len 20] == address(_5019):
                                                mem[_5213 + (4 * ceil32(return_data.size)) + 510] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                if ext_call.return_data[12 len 20] == address(_5019):
                                                    mem[_5213 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                else:
                                                    mem[_5213 + (4 * ceil32(return_data.size)) + 542] = 0
                                            else:
                                                mem[_5213 + (4 * ceil32(return_data.size)) + 510] = 0
                                                if ext_call.return_data[12 len 20] == address(_5019):
                                                    mem[_5213 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                else:
                                                    mem[_5213 + (4 * ceil32(return_data.size)) + 542] = 0
                                            mem[_5213 + (4 * ceil32(return_data.size)) + 574] = this.address
                                            mem[_5213 + (4 * ceil32(return_data.size)) + 606] = 128
                                            mem[_5213 + (4 * ceil32(return_data.size)) + 638] = 96
                                            idx = 0
                                            while idx < 96:
                                                mem[idx + _5213 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5213 + ceil32(return_data.size) + 410]
                                                require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                require 2 * t < arg5.length
                                                require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                require (2 * t) + 1 < arg5.length
                                                require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5213 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                require ext_code.size(comptrollerAddress)
                                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                        gas gas_remaining wei
                                                       args mem[_5213 + (4 * ceil32(return_data.size)) + 510 len -_5213 + -(4 * ceil32(return_data.size)) - 378]
                                                mem[_5213 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                idx = idx + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_4993), address(_5019)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            call address(sha3(0, 17269419903419772280, sha3(address(_4993), address(_5019)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5213 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                 gas gas_remaining wei
                                                args mem[_5213 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5213 + (4 * ceil32(return_data.size)) + 670 len 96]
                                        else:
                                            mem[_5213 + ceil32(return_data.size) + 382] = address(_5019)
                                            mem[_5213 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                            require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                            staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                    gas gas_remaining wei
                                                   args address(_5019), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                            mem[_5213 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5213 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                            mem[_5213 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                            mem[_5213 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                            mem[_5213 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            staticcall address(ext_call.return_data[0]).token0() with:
                                                    gas gas_remaining wei
                                            mem[_5213 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5213 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            staticcall address(ext_call.return_data[0]).token1() with:
                                                    gas gas_remaining wei
                                                   args mem[_5213 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[64] = _5213 + (4 * ceil32(return_data.size)) + 506
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5213 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            if ext_call.return_data[12 len 20] == address(_5019):
                                                mem[_5213 + (4 * ceil32(return_data.size)) + 510] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                if ext_call.return_data[12 len 20] == address(_5019):
                                                    mem[_5213 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                else:
                                                    mem[_5213 + (4 * ceil32(return_data.size)) + 542] = 0
                                            else:
                                                mem[_5213 + (4 * ceil32(return_data.size)) + 510] = 0
                                                if ext_call.return_data[12 len 20] == address(_5019):
                                                    mem[_5213 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                else:
                                                    mem[_5213 + (4 * ceil32(return_data.size)) + 542] = 0
                                            mem[_5213 + (4 * ceil32(return_data.size)) + 574] = this.address
                                            mem[_5213 + (4 * ceil32(return_data.size)) + 606] = 128
                                            mem[_5213 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                            idx = 0
                                            while idx < ceil32(return_data.size) + 96:
                                                mem[idx + _5213 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5213 + (2 * ceil32(return_data.size)) + 410]
                                                require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                require 2 * t < arg5.length
                                                require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                require (2 * t) + 1 < arg5.length
                                                require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5213 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                require ext_code.size(comptrollerAddress)
                                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                        gas gas_remaining wei
                                                       args mem[_5213 + (4 * ceil32(return_data.size)) + 510 len -_5213 + -(4 * ceil32(return_data.size)) - 378]
                                                mem[_5213 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                idx = idx + 32
                                                continue 
                                            if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                mem[_5213 + (6 * ceil32(return_data.size)) + 766] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).mem[_5213 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                 gas gas_remaining wei
                                                args mem[_5213 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5213 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if gas_remaining < stor8:
                                    if arg4.length == t + 1:
                                    require t + 1 < arg4.length
                                    require cd[((32 * t + 2) + arg4 + 36)] == address(cd[((32 * t + 2) + arg4 + 36)])
                                    require 2 * t + 1 < arg5.length
                                    require cd[((64 * t + 1) + arg5 + 36)] == address(cd[((64 * t + 1) + arg5 + 36)])
                                    require (2 * t + 1) + 1 < arg5.length
                                    require cd[((32 * (2 * t + 1) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t + 1) + 1) + arg5 + 36)])
                                    mem[_5213 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                    mem[100] = address(cd[((32 * t + 2) + arg4 + 36)])
                                    require ext_code.size(comptrollerAddress)
                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                            gas gas_remaining wei
                                           args mem[_5213 + (4 * ceil32(return_data.size)) + 510 len -_5213 + -(4 * ceil32(return_data.size)) - 378]
                                    mem[_5213 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                else:
                                    if not address(_4993):
                                        revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                    _5214 = mem[64]
                                    mem[mem[64] + 32] = address(_4993)
                                    mem[mem[64] + 52] = address(_5019)
                                    _5255 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _5257 = sha3(mem[_5255 + 32 len mem[_5255]])
                                    mem[_5214 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_5214 + 105] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                    mem[_5214 + 125] = _5257
                                    mem[_5214 + 157] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                    mem[_5214 + 72] = 85
                                    require ext_code.size(address(sha3(0, 17269419903419772280, _5257, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    staticcall address(sha3(0, 17269419903419772280, _5257, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                                            gas gas_remaining wei
                                    mem[_5214 + 189 len 96] = ext_call.return_data[0 len 96]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 96
                                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                    if address(_5019) == address(_4993):
                                        revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                                    if address(_5019) < address(_4993):
                                        if not address(_5019):
                                            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                        mem[_5214 + ceil32(return_data.size) + 221] = address(_5019)
                                        mem[_5214 + ceil32(return_data.size) + 241] = address(_4993)
                                        mem[_5214 + ceil32(return_data.size) + 189] = 40
                                        mem[_5214 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_5214 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                        mem[_5214 + ceil32(return_data.size) + 314] = sha3(address(_5019), address(_4993))
                                        mem[_5214 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                        mem[_5214 + ceil32(return_data.size) + 261] = 85
                                        if 100000 * _4982 * _4974 * stor6 / 10^18 / _4982 <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                            mem[_5214 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                            mem[_5214 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                            mem[_5214 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                            mem[_5214 + ceil32(return_data.size) + 378] = 96
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5019), address(_4993)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            staticcall address(sha3(0, 17269419903419772280, sha3(address(_5019), address(_4993)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                    gas gas_remaining wei
                                            mem[_5214 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5214 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5019), address(_4993)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            staticcall address(sha3(0, 17269419903419772280, sha3(address(_5019), address(_4993)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                    gas gas_remaining wei
                                                   args mem[_5214 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                            mem[_5214 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[64] = _5214 + (4 * ceil32(return_data.size)) + 506
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5214 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            if ext_call.return_data[12 len 20] == address(_5019):
                                                mem[_5214 + (4 * ceil32(return_data.size)) + 510] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                if ext_call.return_data[12 len 20] == address(_5019):
                                                    mem[_5214 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                else:
                                                    mem[_5214 + (4 * ceil32(return_data.size)) + 542] = 0
                                            else:
                                                mem[_5214 + (4 * ceil32(return_data.size)) + 510] = 0
                                                if ext_call.return_data[12 len 20] == address(_5019):
                                                    mem[_5214 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                else:
                                                    mem[_5214 + (4 * ceil32(return_data.size)) + 542] = 0
                                            mem[_5214 + (4 * ceil32(return_data.size)) + 574] = this.address
                                            mem[_5214 + (4 * ceil32(return_data.size)) + 606] = 128
                                            mem[_5214 + (4 * ceil32(return_data.size)) + 638] = 96
                                            idx = 0
                                            while idx < 96:
                                                mem[idx + _5214 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5214 + ceil32(return_data.size) + 410]
                                                require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                require 2 * t < arg5.length
                                                require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                require (2 * t) + 1 < arg5.length
                                                require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5214 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                require ext_code.size(comptrollerAddress)
                                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                        gas gas_remaining wei
                                                       args mem[_5214 + (4 * ceil32(return_data.size)) + 510 len -_5214 + -(4 * ceil32(return_data.size)) - 378]
                                                mem[_5214 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                idx = idx + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5019), address(_4993)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            call address(sha3(0, 17269419903419772280, sha3(address(_5019), address(_4993)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5214 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                 gas gas_remaining wei
                                                args mem[_5214 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5214 + (4 * ceil32(return_data.size)) + 670 len 96]
                                        else:
                                            mem[_5214 + ceil32(return_data.size) + 382] = address(_5019)
                                            mem[_5214 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                            require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                            staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                    gas gas_remaining wei
                                                   args address(_5019), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                            mem[_5214 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5214 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                            mem[_5214 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                            mem[_5214 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                            mem[_5214 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            staticcall address(ext_call.return_data[0]).token0() with:
                                                    gas gas_remaining wei
                                            mem[_5214 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5214 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            staticcall address(ext_call.return_data[0]).token1() with:
                                                    gas gas_remaining wei
                                                   args mem[_5214 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[64] = _5214 + (4 * ceil32(return_data.size)) + 506
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5214 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            if ext_call.return_data[12 len 20] == address(_5019):
                                                mem[_5214 + (4 * ceil32(return_data.size)) + 510] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                if ext_call.return_data[12 len 20] == address(_5019):
                                                    mem[_5214 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                else:
                                                    mem[_5214 + (4 * ceil32(return_data.size)) + 542] = 0
                                            else:
                                                mem[_5214 + (4 * ceil32(return_data.size)) + 510] = 0
                                                if ext_call.return_data[12 len 20] == address(_5019):
                                                    mem[_5214 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                else:
                                                    mem[_5214 + (4 * ceil32(return_data.size)) + 542] = 0
                                            mem[_5214 + (4 * ceil32(return_data.size)) + 574] = this.address
                                            mem[_5214 + (4 * ceil32(return_data.size)) + 606] = 128
                                            mem[_5214 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                            idx = 0
                                            while idx < ceil32(return_data.size) + 96:
                                                mem[idx + _5214 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5214 + (2 * ceil32(return_data.size)) + 410]
                                                require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                require 2 * t < arg5.length
                                                require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                require (2 * t) + 1 < arg5.length
                                                require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5214 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                require ext_code.size(comptrollerAddress)
                                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                        gas gas_remaining wei
                                                       args mem[_5214 + (4 * ceil32(return_data.size)) + 510 len -_5214 + -(4 * ceil32(return_data.size)) - 378]
                                                mem[_5214 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                idx = idx + 32
                                                continue 
                                            if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                mem[_5214 + (6 * ceil32(return_data.size)) + 766] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).mem[_5214 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                 gas gas_remaining wei
                                                args mem[_5214 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5214 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                    else:
                                        if not address(_4993):
                                            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                        mem[_5214 + ceil32(return_data.size) + 221] = address(_4993)
                                        mem[_5214 + ceil32(return_data.size) + 241] = address(_5019)
                                        mem[_5214 + ceil32(return_data.size) + 189] = 40
                                        mem[_5214 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_5214 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                        mem[_5214 + ceil32(return_data.size) + 314] = sha3(address(_4993), address(_5019))
                                        mem[_5214 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                        mem[_5214 + ceil32(return_data.size) + 261] = 85
                                        if 100000 * _4982 * _4974 * stor6 / 10^18 / _4982 <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                            mem[_5214 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                            mem[_5214 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                            mem[_5214 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                            mem[_5214 + ceil32(return_data.size) + 378] = 96
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_4993), address(_5019)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            staticcall address(sha3(0, 17269419903419772280, sha3(address(_4993), address(_5019)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                    gas gas_remaining wei
                                            mem[_5214 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5214 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_4993), address(_5019)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            staticcall address(sha3(0, 17269419903419772280, sha3(address(_4993), address(_5019)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                    gas gas_remaining wei
                                                   args mem[_5214 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                            mem[_5214 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[64] = _5214 + (4 * ceil32(return_data.size)) + 506
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5214 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            if ext_call.return_data[12 len 20] == address(_5019):
                                                mem[_5214 + (4 * ceil32(return_data.size)) + 510] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                if ext_call.return_data[12 len 20] == address(_5019):
                                                    mem[_5214 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                else:
                                                    mem[_5214 + (4 * ceil32(return_data.size)) + 542] = 0
                                            else:
                                                mem[_5214 + (4 * ceil32(return_data.size)) + 510] = 0
                                                if ext_call.return_data[12 len 20] == address(_5019):
                                                    mem[_5214 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                else:
                                                    mem[_5214 + (4 * ceil32(return_data.size)) + 542] = 0
                                            mem[_5214 + (4 * ceil32(return_data.size)) + 574] = this.address
                                            mem[_5214 + (4 * ceil32(return_data.size)) + 606] = 128
                                            mem[_5214 + (4 * ceil32(return_data.size)) + 638] = 96
                                            idx = 0
                                            while idx < 96:
                                                mem[idx + _5214 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5214 + ceil32(return_data.size) + 410]
                                                require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                require 2 * t < arg5.length
                                                require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                require (2 * t) + 1 < arg5.length
                                                require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5214 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                require ext_code.size(comptrollerAddress)
                                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                        gas gas_remaining wei
                                                       args mem[_5214 + (4 * ceil32(return_data.size)) + 510 len -_5214 + -(4 * ceil32(return_data.size)) - 378]
                                                mem[_5214 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                idx = idx + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_4993), address(_5019)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            call address(sha3(0, 17269419903419772280, sha3(address(_4993), address(_5019)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5214 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                 gas gas_remaining wei
                                                args mem[_5214 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5214 + (4 * ceil32(return_data.size)) + 670 len 96]
                                        else:
                                            mem[_5214 + ceil32(return_data.size) + 382] = address(_5019)
                                            mem[_5214 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                            require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                            staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                    gas gas_remaining wei
                                                   args address(_5019), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                            mem[_5214 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5214 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                            mem[_5214 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                            mem[_5214 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                            mem[_5214 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            staticcall address(ext_call.return_data[0]).token0() with:
                                                    gas gas_remaining wei
                                            mem[_5214 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5214 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            staticcall address(ext_call.return_data[0]).token1() with:
                                                    gas gas_remaining wei
                                                   args mem[_5214 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[64] = _5214 + (4 * ceil32(return_data.size)) + 506
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5214 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            if ext_call.return_data[12 len 20] == address(_5019):
                                                mem[_5214 + (4 * ceil32(return_data.size)) + 510] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                if ext_call.return_data[12 len 20] == address(_5019):
                                                    mem[_5214 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                else:
                                                    mem[_5214 + (4 * ceil32(return_data.size)) + 542] = 0
                                            else:
                                                mem[_5214 + (4 * ceil32(return_data.size)) + 510] = 0
                                                if ext_call.return_data[12 len 20] == address(_5019):
                                                    mem[_5214 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                else:
                                                    mem[_5214 + (4 * ceil32(return_data.size)) + 542] = 0
                                            mem[_5214 + (4 * ceil32(return_data.size)) + 574] = this.address
                                            mem[_5214 + (4 * ceil32(return_data.size)) + 606] = 128
                                            mem[_5214 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                            idx = 0
                                            while idx < ceil32(return_data.size) + 96:
                                                mem[idx + _5214 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5214 + (2 * ceil32(return_data.size)) + 410]
                                                require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                require 2 * t < arg5.length
                                                require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                require (2 * t) + 1 < arg5.length
                                                require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5214 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                require ext_code.size(comptrollerAddress)
                                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                        gas gas_remaining wei
                                                       args mem[_5214 + (4 * ceil32(return_data.size)) + 510 len -_5214 + -(4 * ceil32(return_data.size)) - 378]
                                                mem[_5214 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                idx = idx + 32
                                                continue 
                                            if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                mem[_5214 + (6 * ceil32(return_data.size)) + 766] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).mem[_5214 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                 gas gas_remaining wei
                                                args mem[_5214 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5214 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if gas_remaining < stor8:
                                    if arg4.length == t + 1:
                                    require t + 1 < arg4.length
                                    require cd[((32 * t + 2) + arg4 + 36)] == address(cd[((32 * t + 2) + arg4 + 36)])
                                    require 2 * t + 1 < arg5.length
                                    require cd[((64 * t + 1) + arg5 + 36)] == address(cd[((64 * t + 1) + arg5 + 36)])
                                    require (2 * t + 1) + 1 < arg5.length
                                    require cd[((32 * (2 * t + 1) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t + 1) + 1) + arg5 + 36)])
                                    mem[_5214 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                    mem[100] = address(cd[((32 * t + 2) + arg4 + 36)])
                                    require ext_code.size(comptrollerAddress)
                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                            gas gas_remaining wei
                                           args mem[_5214 + (4 * ceil32(return_data.size)) + 510 len -_5214 + -(4 * ceil32(return_data.size)) - 378]
                                    mem[_5214 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                            else:
                                if not mem[_5012 + 12 len 20]:
                                    revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                if mem[_5012 + 12 len 20] == address(_4993):
                                    revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                                if mem[_5012 + 12 len 20] < address(_4993):
                                    if not mem[_5012 + 12 len 20]:
                                        revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                    _5211 = mem[64]
                                    mem[mem[64] + 32] = address(mem[_5012])
                                    mem[mem[64] + 52] = address(_4993)
                                    _5243 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _5245 = sha3(mem[_5243 + 32 len mem[_5243]])
                                    mem[_5211 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_5211 + 105] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                    mem[_5211 + 125] = _5245
                                    mem[_5211 + 157] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                    mem[_5211 + 72] = 85
                                    require ext_code.size(address(sha3(0, 17269419903419772280, _5245, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    staticcall address(sha3(0, 17269419903419772280, _5245, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                                            gas gas_remaining wei
                                    mem[_5211 + 189 len 96] = ext_call.return_data[0 len 96]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 96
                                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                    if address(_5019) == address(_4993):
                                        revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                                    if address(_5019) == address(_5019):
                                        if address(_5019) < address(_4993):
                                            if not address(_5019):
                                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                            mem[_5211 + ceil32(return_data.size) + 221] = address(_5019)
                                            mem[_5211 + ceil32(return_data.size) + 241] = address(_4993)
                                            mem[_5211 + ceil32(return_data.size) + 189] = 40
                                            mem[_5211 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_5211 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                            mem[_5211 + ceil32(return_data.size) + 314] = sha3(address(_5019), address(_4993))
                                            mem[_5211 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                            mem[_5211 + ceil32(return_data.size) + 261] = 85
                                            if 100000 * _4982 * _4974 * stor6 / 10^18 / _4982 <= 985 * Mask(112, 0, ext_call.return_data[0]):
                                                mem[_5211 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                                mem[_5211 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                                mem[_5211 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5211 + ceil32(return_data.size) + 378] = 96
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5019), address(_4993)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5019), address(_4993)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5211 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5211 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5019), address(_4993)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5019), address(_4993)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5211 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                                mem[_5211 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5211 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5211 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5019):
                                                    mem[_5211 + (4 * ceil32(return_data.size)) + 510] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    if ext_call.return_data[12 len 20] == address(_5019):
                                                        mem[_5211 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    else:
                                                        mem[_5211 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5211 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5019):
                                                        mem[_5211 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    else:
                                                        mem[_5211 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5211 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5211 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5211 + (4 * ceil32(return_data.size)) + 638] = 96
                                                idx = 0
                                                while idx < 96:
                                                    mem[idx + _5211 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5211 + ceil32(return_data.size) + 410]
                                                    require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                    require 2 * t < arg5.length
                                                    require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                    require (2 * t) + 1 < arg5.length
                                                    require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                    mem[_5211 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5211 + (4 * ceil32(return_data.size)) + 510 len -_5211 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5211 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5019), address(_4993)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                call address(sha3(0, 17269419903419772280, sha3(address(_5019), address(_4993)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5211 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5211 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5211 + (4 * ceil32(return_data.size)) + 670 len 96]
                                            else:
                                                mem[_5211 + ceil32(return_data.size) + 382] = address(_5019)
                                                mem[_5211 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                                staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                        gas gas_remaining wei
                                                       args address(_5019), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                mem[_5211 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5211 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                                mem[_5211 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                                mem[_5211 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5211 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5211 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5211 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5211 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5211 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5211 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5019):
                                                    mem[_5211 + (4 * ceil32(return_data.size)) + 510] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    if ext_call.return_data[12 len 20] == address(_5019):
                                                        mem[_5211 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    else:
                                                        mem[_5211 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5211 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5019):
                                                        mem[_5211 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    else:
                                                        mem[_5211 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5211 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5211 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5211 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                                idx = 0
                                                while idx < ceil32(return_data.size) + 96:
                                                    mem[idx + _5211 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5211 + (2 * ceil32(return_data.size)) + 410]
                                                    require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                    require 2 * t < arg5.length
                                                    require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                    require (2 * t) + 1 < arg5.length
                                                    require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                    mem[_5211 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5211 + (4 * ceil32(return_data.size)) + 510 len -_5211 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5211 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                    mem[_5211 + (6 * ceil32(return_data.size)) + 766] = 0
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                call address(ext_call.return_data[0]).mem[_5211 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5211 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5211 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                        else:
                                            if not address(_4993):
                                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                            mem[_5211 + ceil32(return_data.size) + 221] = address(_4993)
                                            mem[_5211 + ceil32(return_data.size) + 241] = address(_5019)
                                            mem[_5211 + ceil32(return_data.size) + 189] = 40
                                            mem[_5211 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_5211 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                            mem[_5211 + ceil32(return_data.size) + 314] = sha3(address(_4993), address(_5019))
                                            mem[_5211 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                            mem[_5211 + ceil32(return_data.size) + 261] = 85
                                            if 100000 * _4982 * _4974 * stor6 / 10^18 / _4982 <= 985 * Mask(112, 0, ext_call.return_data[0]):
                                                mem[_5211 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                                mem[_5211 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                                mem[_5211 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5211 + ceil32(return_data.size) + 378] = 96
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_4993), address(_5019)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_4993), address(_5019)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5211 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5211 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_4993), address(_5019)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_4993), address(_5019)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5211 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                                mem[_5211 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5211 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5211 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5019):
                                                    mem[_5211 + (4 * ceil32(return_data.size)) + 510] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    if ext_call.return_data[12 len 20] == address(_5019):
                                                        mem[_5211 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    else:
                                                        mem[_5211 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5211 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5019):
                                                        mem[_5211 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    else:
                                                        mem[_5211 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5211 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5211 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5211 + (4 * ceil32(return_data.size)) + 638] = 96
                                                idx = 0
                                                while idx < 96:
                                                    mem[idx + _5211 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5211 + ceil32(return_data.size) + 410]
                                                    require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                    require 2 * t < arg5.length
                                                    require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                    require (2 * t) + 1 < arg5.length
                                                    require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                    mem[_5211 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5211 + (4 * ceil32(return_data.size)) + 510 len -_5211 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5211 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_4993), address(_5019)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                call address(sha3(0, 17269419903419772280, sha3(address(_4993), address(_5019)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5211 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5211 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5211 + (4 * ceil32(return_data.size)) + 670 len 96]
                                            else:
                                                mem[_5211 + ceil32(return_data.size) + 382] = address(_5019)
                                                mem[_5211 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                                staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                        gas gas_remaining wei
                                                       args address(_5019), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                mem[_5211 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5211 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                                mem[_5211 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                                mem[_5211 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5211 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5211 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5211 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5211 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5211 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5211 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5019):
                                                    mem[_5211 + (4 * ceil32(return_data.size)) + 510] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    if ext_call.return_data[12 len 20] == address(_5019):
                                                        mem[_5211 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    else:
                                                        mem[_5211 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5211 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5019):
                                                        mem[_5211 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    else:
                                                        mem[_5211 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5211 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5211 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5211 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                                idx = 0
                                                while idx < ceil32(return_data.size) + 96:
                                                    mem[idx + _5211 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5211 + (2 * ceil32(return_data.size)) + 410]
                                                    require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                    require 2 * t < arg5.length
                                                    require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                    require (2 * t) + 1 < arg5.length
                                                    require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                    mem[_5211 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5211 + (4 * ceil32(return_data.size)) + 510 len -_5211 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5211 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                    mem[_5211 + (6 * ceil32(return_data.size)) + 766] = 0
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                call address(ext_call.return_data[0]).mem[_5211 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5211 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5211 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                    else:
                                        if address(_5019) < address(_4993):
                                            if not address(_5019):
                                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                            mem[_5211 + ceil32(return_data.size) + 221] = address(_5019)
                                            mem[_5211 + ceil32(return_data.size) + 241] = address(_4993)
                                            mem[_5211 + ceil32(return_data.size) + 189] = 40
                                            mem[_5211 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_5211 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                            mem[_5211 + ceil32(return_data.size) + 314] = sha3(address(_5019), address(_4993))
                                            mem[_5211 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                            mem[_5211 + ceil32(return_data.size) + 261] = 85
                                            if 100000 * _4982 * _4974 * stor6 / 10^18 / _4982 <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                                mem[_5211 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                                mem[_5211 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                                mem[_5211 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5211 + ceil32(return_data.size) + 378] = 96
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5019), address(_4993)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5019), address(_4993)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5211 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5211 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5019), address(_4993)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5019), address(_4993)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5211 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                                mem[_5211 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5211 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5211 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5019):
                                                    mem[_5211 + (4 * ceil32(return_data.size)) + 510] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    if ext_call.return_data[12 len 20] == address(_5019):
                                                        mem[_5211 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    else:
                                                        mem[_5211 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5211 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5019):
                                                        mem[_5211 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    else:
                                                        mem[_5211 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5211 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5211 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5211 + (4 * ceil32(return_data.size)) + 638] = 96
                                                idx = 0
                                                while idx < 96:
                                                    mem[idx + _5211 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5211 + ceil32(return_data.size) + 410]
                                                    require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                    require 2 * t < arg5.length
                                                    require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                    require (2 * t) + 1 < arg5.length
                                                    require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                    mem[_5211 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5211 + (4 * ceil32(return_data.size)) + 510 len -_5211 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5211 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5019), address(_4993)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                call address(sha3(0, 17269419903419772280, sha3(address(_5019), address(_4993)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5211 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5211 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5211 + (4 * ceil32(return_data.size)) + 670 len 96]
                                            else:
                                                mem[_5211 + ceil32(return_data.size) + 382] = address(_5019)
                                                mem[_5211 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                                staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                        gas gas_remaining wei
                                                       args address(_5019), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                mem[_5211 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5211 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                                mem[_5211 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                                mem[_5211 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5211 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5211 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5211 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5211 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5211 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5211 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5019):
                                                    mem[_5211 + (4 * ceil32(return_data.size)) + 510] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    if ext_call.return_data[12 len 20] == address(_5019):
                                                        mem[_5211 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    else:
                                                        mem[_5211 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5211 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5019):
                                                        mem[_5211 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    else:
                                                        mem[_5211 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5211 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5211 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5211 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                                idx = 0
                                                while idx < ceil32(return_data.size) + 96:
                                                    mem[idx + _5211 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5211 + (2 * ceil32(return_data.size)) + 410]
                                                    require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                    require 2 * t < arg5.length
                                                    require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                    require (2 * t) + 1 < arg5.length
                                                    require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                    mem[_5211 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5211 + (4 * ceil32(return_data.size)) + 510 len -_5211 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5211 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                    mem[_5211 + (6 * ceil32(return_data.size)) + 766] = 0
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                call address(ext_call.return_data[0]).mem[_5211 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5211 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5211 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                        else:
                                            if not address(_4993):
                                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                            mem[_5211 + ceil32(return_data.size) + 221] = address(_4993)
                                            mem[_5211 + ceil32(return_data.size) + 241] = address(_5019)
                                            mem[_5211 + ceil32(return_data.size) + 189] = 40
                                            mem[_5211 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_5211 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                            mem[_5211 + ceil32(return_data.size) + 314] = sha3(address(_4993), address(_5019))
                                            mem[_5211 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                            mem[_5211 + ceil32(return_data.size) + 261] = 85
                                            if 100000 * _4982 * _4974 * stor6 / 10^18 / _4982 <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                                mem[_5211 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                                mem[_5211 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                                mem[_5211 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5211 + ceil32(return_data.size) + 378] = 96
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_4993), address(_5019)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_4993), address(_5019)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5211 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5211 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_4993), address(_5019)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_4993), address(_5019)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5211 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                                mem[_5211 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5211 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5211 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5019):
                                                    mem[_5211 + (4 * ceil32(return_data.size)) + 510] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    if ext_call.return_data[12 len 20] == address(_5019):
                                                        mem[_5211 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    else:
                                                        mem[_5211 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5211 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5019):
                                                        mem[_5211 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    else:
                                                        mem[_5211 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5211 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5211 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5211 + (4 * ceil32(return_data.size)) + 638] = 96
                                                idx = 0
                                                while idx < 96:
                                                    mem[idx + _5211 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5211 + ceil32(return_data.size) + 410]
                                                    require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                    require 2 * t < arg5.length
                                                    require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                    require (2 * t) + 1 < arg5.length
                                                    require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                    mem[_5211 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5211 + (4 * ceil32(return_data.size)) + 510 len -_5211 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5211 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_4993), address(_5019)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                call address(sha3(0, 17269419903419772280, sha3(address(_4993), address(_5019)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5211 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5211 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5211 + (4 * ceil32(return_data.size)) + 670 len 96]
                                            else:
                                                mem[_5211 + ceil32(return_data.size) + 382] = address(_5019)
                                                mem[_5211 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                                staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                        gas gas_remaining wei
                                                       args address(_5019), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                mem[_5211 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5211 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                                mem[_5211 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                                mem[_5211 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5211 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5211 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5211 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5211 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5211 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5211 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5019):
                                                    mem[_5211 + (4 * ceil32(return_data.size)) + 510] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    if ext_call.return_data[12 len 20] == address(_5019):
                                                        mem[_5211 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    else:
                                                        mem[_5211 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5211 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5019):
                                                        mem[_5211 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    else:
                                                        mem[_5211 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5211 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5211 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5211 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                                idx = 0
                                                while idx < ceil32(return_data.size) + 96:
                                                    mem[idx + _5211 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5211 + (2 * ceil32(return_data.size)) + 410]
                                                    require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                    require 2 * t < arg5.length
                                                    require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                    require (2 * t) + 1 < arg5.length
                                                    require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                    mem[_5211 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5211 + (4 * ceil32(return_data.size)) + 510 len -_5211 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5211 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                    mem[_5211 + (6 * ceil32(return_data.size)) + 766] = 0
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                call address(ext_call.return_data[0]).mem[_5211 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5211 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5211 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if gas_remaining < stor8:
                                    if arg4.length == t + 1:
                                    require t + 1 < arg4.length
                                    require cd[((32 * t + 2) + arg4 + 36)] == address(cd[((32 * t + 2) + arg4 + 36)])
                                    require 2 * t + 1 < arg5.length
                                    require cd[((64 * t + 1) + arg5 + 36)] == address(cd[((64 * t + 1) + arg5 + 36)])
                                    require (2 * t + 1) + 1 < arg5.length
                                    require cd[((32 * (2 * t + 1) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t + 1) + 1) + arg5 + 36)])
                                    mem[_5211 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                    mem[100] = address(cd[((32 * t + 2) + arg4 + 36)])
                                    require ext_code.size(comptrollerAddress)
                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                            gas gas_remaining wei
                                           args mem[_5211 + (4 * ceil32(return_data.size)) + 510 len -_5211 + -(4 * ceil32(return_data.size)) - 378]
                                    mem[_5211 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                else:
                                    if not address(_4993):
                                        revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                    _5212 = mem[64]
                                    mem[mem[64] + 32] = address(_4993)
                                    mem[mem[64] + 52] = address(_5019)
                                    _5247 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _5249 = sha3(mem[_5247 + 32 len mem[_5247]])
                                    mem[_5212 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_5212 + 105] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                    mem[_5212 + 125] = _5249
                                    mem[_5212 + 157] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                    mem[_5212 + 72] = 85
                                    require ext_code.size(address(sha3(0, 17269419903419772280, _5249, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    staticcall address(sha3(0, 17269419903419772280, _5249, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                                            gas gas_remaining wei
                                    mem[_5212 + 189 len 96] = ext_call.return_data[0 len 96]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 96
                                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                    if address(_5019) == address(_4993):
                                        revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                                    if address(_5019) == address(_5019):
                                        if address(_5019) < address(_4993):
                                            if not address(_5019):
                                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                            mem[_5212 + ceil32(return_data.size) + 221] = address(_5019)
                                            mem[_5212 + ceil32(return_data.size) + 241] = address(_4993)
                                            mem[_5212 + ceil32(return_data.size) + 189] = 40
                                            mem[_5212 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_5212 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                            mem[_5212 + ceil32(return_data.size) + 314] = sha3(address(_5019), address(_4993))
                                            mem[_5212 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                            mem[_5212 + ceil32(return_data.size) + 261] = 85
                                            if 100000 * _4982 * _4974 * stor6 / 10^18 / _4982 <= 985 * Mask(112, 0, ext_call.return_data[0]):
                                                mem[_5212 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                                mem[_5212 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                                mem[_5212 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5212 + ceil32(return_data.size) + 378] = 96
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5019), address(_4993)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5019), address(_4993)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5212 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5212 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5019), address(_4993)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5019), address(_4993)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5212 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                                mem[_5212 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5212 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5212 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5019):
                                                    mem[_5212 + (4 * ceil32(return_data.size)) + 510] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    if ext_call.return_data[12 len 20] == address(_5019):
                                                        mem[_5212 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    else:
                                                        mem[_5212 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5212 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5019):
                                                        mem[_5212 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    else:
                                                        mem[_5212 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5212 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5212 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5212 + (4 * ceil32(return_data.size)) + 638] = 96
                                                idx = 0
                                                while idx < 96:
                                                    mem[idx + _5212 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5212 + ceil32(return_data.size) + 410]
                                                    require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                    require 2 * t < arg5.length
                                                    require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                    require (2 * t) + 1 < arg5.length
                                                    require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                    mem[_5212 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5212 + (4 * ceil32(return_data.size)) + 510 len -_5212 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5212 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5019), address(_4993)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                call address(sha3(0, 17269419903419772280, sha3(address(_5019), address(_4993)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5212 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5212 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5212 + (4 * ceil32(return_data.size)) + 670 len 96]
                                            else:
                                                mem[_5212 + ceil32(return_data.size) + 382] = address(_5019)
                                                mem[_5212 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                                staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                        gas gas_remaining wei
                                                       args address(_5019), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                mem[_5212 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5212 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                                mem[_5212 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                                mem[_5212 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5212 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5212 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5212 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5212 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5212 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5212 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5019):
                                                    mem[_5212 + (4 * ceil32(return_data.size)) + 510] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    if ext_call.return_data[12 len 20] == address(_5019):
                                                        mem[_5212 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    else:
                                                        mem[_5212 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5212 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5019):
                                                        mem[_5212 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    else:
                                                        mem[_5212 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5212 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5212 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5212 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                                idx = 0
                                                while idx < ceil32(return_data.size) + 96:
                                                    mem[idx + _5212 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5212 + (2 * ceil32(return_data.size)) + 410]
                                                    require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                    require 2 * t < arg5.length
                                                    require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                    require (2 * t) + 1 < arg5.length
                                                    require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                    mem[_5212 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5212 + (4 * ceil32(return_data.size)) + 510 len -_5212 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5212 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                    mem[_5212 + (6 * ceil32(return_data.size)) + 766] = 0
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                call address(ext_call.return_data[0]).mem[_5212 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5212 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5212 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                        else:
                                            if not address(_4993):
                                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                            mem[_5212 + ceil32(return_data.size) + 221] = address(_4993)
                                            mem[_5212 + ceil32(return_data.size) + 241] = address(_5019)
                                            mem[_5212 + ceil32(return_data.size) + 189] = 40
                                            mem[_5212 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_5212 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                            mem[_5212 + ceil32(return_data.size) + 314] = sha3(address(_4993), address(_5019))
                                            mem[_5212 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                            mem[_5212 + ceil32(return_data.size) + 261] = 85
                                            if 100000 * _4982 * _4974 * stor6 / 10^18 / _4982 <= 985 * Mask(112, 0, ext_call.return_data[0]):
                                                mem[_5212 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                                mem[_5212 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                                mem[_5212 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5212 + ceil32(return_data.size) + 378] = 96
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_4993), address(_5019)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_4993), address(_5019)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5212 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5212 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_4993), address(_5019)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_4993), address(_5019)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5212 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                                mem[_5212 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5212 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5212 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5019):
                                                    mem[_5212 + (4 * ceil32(return_data.size)) + 510] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    if ext_call.return_data[12 len 20] == address(_5019):
                                                        mem[_5212 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    else:
                                                        mem[_5212 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5212 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5019):
                                                        mem[_5212 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    else:
                                                        mem[_5212 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5212 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5212 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5212 + (4 * ceil32(return_data.size)) + 638] = 96
                                                idx = 0
                                                while idx < 96:
                                                    mem[idx + _5212 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5212 + ceil32(return_data.size) + 410]
                                                    require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                    require 2 * t < arg5.length
                                                    require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                    require (2 * t) + 1 < arg5.length
                                                    require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                    mem[_5212 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5212 + (4 * ceil32(return_data.size)) + 510 len -_5212 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5212 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_4993), address(_5019)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                call address(sha3(0, 17269419903419772280, sha3(address(_4993), address(_5019)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5212 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5212 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5212 + (4 * ceil32(return_data.size)) + 670 len 96]
                                            else:
                                                mem[_5212 + ceil32(return_data.size) + 382] = address(_5019)
                                                mem[_5212 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                                staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                        gas gas_remaining wei
                                                       args address(_5019), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                mem[_5212 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5212 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                                mem[_5212 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                                mem[_5212 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5212 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5212 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5212 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5212 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5212 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5212 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5019):
                                                    mem[_5212 + (4 * ceil32(return_data.size)) + 510] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    if ext_call.return_data[12 len 20] == address(_5019):
                                                        mem[_5212 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    else:
                                                        mem[_5212 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5212 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5019):
                                                        mem[_5212 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    else:
                                                        mem[_5212 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5212 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5212 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5212 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                                idx = 0
                                                while idx < ceil32(return_data.size) + 96:
                                                    mem[idx + _5212 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5212 + (2 * ceil32(return_data.size)) + 410]
                                                    require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                    require 2 * t < arg5.length
                                                    require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                    require (2 * t) + 1 < arg5.length
                                                    require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                    mem[_5212 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5212 + (4 * ceil32(return_data.size)) + 510 len -_5212 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5212 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                    mem[_5212 + (6 * ceil32(return_data.size)) + 766] = 0
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                call address(ext_call.return_data[0]).mem[_5212 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5212 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5212 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                    else:
                                        if address(_5019) < address(_4993):
                                            if not address(_5019):
                                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                            mem[_5212 + ceil32(return_data.size) + 221] = address(_5019)
                                            mem[_5212 + ceil32(return_data.size) + 241] = address(_4993)
                                            mem[_5212 + ceil32(return_data.size) + 189] = 40
                                            mem[_5212 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_5212 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                            mem[_5212 + ceil32(return_data.size) + 314] = sha3(address(_5019), address(_4993))
                                            mem[_5212 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                            mem[_5212 + ceil32(return_data.size) + 261] = 85
                                            if 100000 * _4982 * _4974 * stor6 / 10^18 / _4982 <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                                mem[_5212 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                                mem[_5212 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                                mem[_5212 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5212 + ceil32(return_data.size) + 378] = 96
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5019), address(_4993)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5019), address(_4993)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5212 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5212 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5019), address(_4993)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5019), address(_4993)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5212 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                                mem[_5212 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5212 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5212 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5019):
                                                    mem[_5212 + (4 * ceil32(return_data.size)) + 510] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    if ext_call.return_data[12 len 20] == address(_5019):
                                                        mem[_5212 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    else:
                                                        mem[_5212 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5212 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5019):
                                                        mem[_5212 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    else:
                                                        mem[_5212 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5212 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5212 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5212 + (4 * ceil32(return_data.size)) + 638] = 96
                                                idx = 0
                                                while idx < 96:
                                                    mem[idx + _5212 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5212 + ceil32(return_data.size) + 410]
                                                    require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                    require 2 * t < arg5.length
                                                    require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                    require (2 * t) + 1 < arg5.length
                                                    require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                    mem[_5212 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5212 + (4 * ceil32(return_data.size)) + 510 len -_5212 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5212 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5019), address(_4993)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                call address(sha3(0, 17269419903419772280, sha3(address(_5019), address(_4993)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5212 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5212 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5212 + (4 * ceil32(return_data.size)) + 670 len 96]
                                            else:
                                                mem[_5212 + ceil32(return_data.size) + 382] = address(_5019)
                                                mem[_5212 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                                staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                        gas gas_remaining wei
                                                       args address(_5019), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                mem[_5212 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5212 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                                mem[_5212 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                                mem[_5212 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5212 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5212 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5212 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5212 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5212 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5212 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5019):
                                                    mem[_5212 + (4 * ceil32(return_data.size)) + 510] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    if ext_call.return_data[12 len 20] == address(_5019):
                                                        mem[_5212 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    else:
                                                        mem[_5212 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5212 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5019):
                                                        mem[_5212 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    else:
                                                        mem[_5212 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5212 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5212 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5212 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                                idx = 0
                                                while idx < ceil32(return_data.size) + 96:
                                                    mem[idx + _5212 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5212 + (2 * ceil32(return_data.size)) + 410]
                                                    require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                    require 2 * t < arg5.length
                                                    require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                    require (2 * t) + 1 < arg5.length
                                                    require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                    mem[_5212 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5212 + (4 * ceil32(return_data.size)) + 510 len -_5212 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5212 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                    mem[_5212 + (6 * ceil32(return_data.size)) + 766] = 0
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                call address(ext_call.return_data[0]).mem[_5212 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5212 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5212 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                        else:
                                            if not address(_4993):
                                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                            mem[_5212 + ceil32(return_data.size) + 221] = address(_4993)
                                            mem[_5212 + ceil32(return_data.size) + 241] = address(_5019)
                                            mem[_5212 + ceil32(return_data.size) + 189] = 40
                                            mem[_5212 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_5212 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                            mem[_5212 + ceil32(return_data.size) + 314] = sha3(address(_4993), address(_5019))
                                            mem[_5212 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                            mem[_5212 + ceil32(return_data.size) + 261] = 85
                                            if 100000 * _4982 * _4974 * stor6 / 10^18 / _4982 <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                                mem[_5212 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                                mem[_5212 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                                mem[_5212 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5212 + ceil32(return_data.size) + 378] = 96
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_4993), address(_5019)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_4993), address(_5019)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5212 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5212 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_4993), address(_5019)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_4993), address(_5019)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5212 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                                mem[_5212 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5212 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5212 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5019):
                                                    mem[_5212 + (4 * ceil32(return_data.size)) + 510] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    if ext_call.return_data[12 len 20] == address(_5019):
                                                        mem[_5212 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    else:
                                                        mem[_5212 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5212 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5019):
                                                        mem[_5212 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    else:
                                                        mem[_5212 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5212 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5212 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5212 + (4 * ceil32(return_data.size)) + 638] = 96
                                                idx = 0
                                                while idx < 96:
                                                    mem[idx + _5212 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5212 + ceil32(return_data.size) + 410]
                                                    require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                    require 2 * t < arg5.length
                                                    require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                    require (2 * t) + 1 < arg5.length
                                                    require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                    mem[_5212 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5212 + (4 * ceil32(return_data.size)) + 510 len -_5212 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5212 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_4993), address(_5019)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                call address(sha3(0, 17269419903419772280, sha3(address(_4993), address(_5019)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5212 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5212 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5212 + (4 * ceil32(return_data.size)) + 670 len 96]
                                            else:
                                                mem[_5212 + ceil32(return_data.size) + 382] = address(_5019)
                                                mem[_5212 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                                staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                        gas gas_remaining wei
                                                       args address(_5019), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                mem[_5212 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5212 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                                mem[_5212 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                                mem[_5212 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5212 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5212 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5212 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5212 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5212 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5212 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5019):
                                                    mem[_5212 + (4 * ceil32(return_data.size)) + 510] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    if ext_call.return_data[12 len 20] == address(_5019):
                                                        mem[_5212 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    else:
                                                        mem[_5212 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5212 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5019):
                                                        mem[_5212 + (4 * ceil32(return_data.size)) + 542] = _4982 * _4974 * stor6 / 10^18 / _4982
                                                    else:
                                                        mem[_5212 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5212 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5212 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5212 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                                idx = 0
                                                while idx < ceil32(return_data.size) + 96:
                                                    mem[idx + _5212 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5212 + (2 * ceil32(return_data.size)) + 410]
                                                    require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                    require 2 * t < arg5.length
                                                    require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                    require (2 * t) + 1 < arg5.length
                                                    require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                    mem[_5212 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5212 + (4 * ceil32(return_data.size)) + 510 len -_5212 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5212 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                    mem[_5212 + (6 * ceil32(return_data.size)) + 766] = 0
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                call address(ext_call.return_data[0]).mem[_5212 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5212 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5212 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if gas_remaining < stor8:
                                    if arg4.length == t + 1:
                                    require t + 1 < arg4.length
                                    require cd[((32 * t + 2) + arg4 + 36)] == address(cd[((32 * t + 2) + arg4 + 36)])
                                    require 2 * t + 1 < arg5.length
                                    require cd[((64 * t + 1) + arg5 + 36)] == address(cd[((64 * t + 1) + arg5 + 36)])
                                    require (2 * t + 1) + 1 < arg5.length
                                    require cd[((32 * (2 * t + 1) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t + 1) + 1) + arg5 + 36)])
                                    mem[_5212 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                    mem[100] = address(cd[((32 * t + 2) + arg4 + 36)])
                                    require ext_code.size(comptrollerAddress)
                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                            gas gas_remaining wei
                                           args mem[_5212 + (4 * ceil32(return_data.size)) + 510 len -_5212 + -(4 * ceil32(return_data.size)) - 378]
                                    mem[_5212 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
            else:
                _4992 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _4994 = mem[_4992]
                require mem[_4992] == mem[_4992 + 12 len 20]
                if address(cd[((64 * t) + arg5 + 36)]) == address(cd[((32 * (2 * t) + 1) + arg5 + 36)]):
                    require ext_code.size(address(cd[((64 * t) + arg5 + 36)]))
                    staticcall address(cd[((64 * t) + arg5 + 36)]).underlying() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5006 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _5013 = mem[_5006]
                    require mem[_5006] == mem[_5006 + 12 len 20]
                    if mem[_5006 + 12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                        revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                    if mem[_5006 + 12 len 20] >= 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                        _5078 = mem[64]
                        mem[mem[64] + 32] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7000000000000000000000000
                        mem[mem[64] + 52] = address(_5013)
                        _5112 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _5114 = sha3(mem[_5112 + 32 len mem[_5112]])
                        mem[_5078 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_5078 + 105] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                        mem[_5078 + 125] = _5114
                        mem[_5078 + 157] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                        mem[_5078 + 72] = 85
                        mem[_5078 + 221] = address(cd[((32 * s) + arg4 + 36)])
                        mem[_5078 + 253] = address(cd[((64 * t) + arg5 + 36)])
                        mem[_5078 + 285] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                        mem[_5078 + 189] = 96
                        require ext_code.size(address(sha3(0, 17269419903419772280, _5114, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        staticcall address(sha3(0, 17269419903419772280, _5114, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                gas gas_remaining wei
                        mem[_5078 + 317] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        require ext_code.size(address(sha3(0, 17269419903419772280, _5114, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        staticcall address(sha3(0, 17269419903419772280, _5114, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                gas gas_remaining wei
                        mem[_5078 + ceil32(return_data.size) + 317] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _5078 + (2 * ceil32(return_data.size)) + 317
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        mem[_5078 + (2 * ceil32(return_data.size)) + 317] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        if ext_call.return_data[12 len 20] == address(_5013):
                            mem[_5078 + (2 * ceil32(return_data.size)) + 321] = 10^18 * _4978 / stor7 * _4986 / _4982
                            if ext_call.return_data[12 len 20] == address(_5013):
                                mem[_5078 + (2 * ceil32(return_data.size)) + 353] = 10^18 * _4978 / stor7 * _4986 / _4982
                            else:
                                mem[_5078 + (2 * ceil32(return_data.size)) + 353] = 0
                        else:
                            mem[_5078 + (2 * ceil32(return_data.size)) + 321] = 0
                            if ext_call.return_data[12 len 20] == address(_5013):
                                mem[_5078 + (2 * ceil32(return_data.size)) + 353] = 10^18 * _4978 / stor7 * _4986 / _4982
                            else:
                                mem[_5078 + (2 * ceil32(return_data.size)) + 353] = 0
                        mem[_5078 + (2 * ceil32(return_data.size)) + 385] = this.address
                        mem[_5078 + (2 * ceil32(return_data.size)) + 417] = 128
                        mem[_5078 + (2 * ceil32(return_data.size)) + 449] = 96
                        idx = 0
                        while idx < 96:
                            mem[idx + _5078 + (2 * ceil32(return_data.size)) + 481] = mem[idx + _5078 + 221]
                            require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                            require 2 * t < arg5.length
                            require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                            require (2 * t) + 1 < arg5.length
                            require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                            mem[_5078 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                            mem[100] = address(cd[((32 * s) + arg4 + 36)])
                            require ext_code.size(comptrollerAddress)
                            staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                    gas gas_remaining wei
                                   args mem[_5078 + (2 * ceil32(return_data.size)) + 321 len -_5078 + -(2 * ceil32(return_data.size)) - 189]
                            mem[_5078 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                            idx = idx + 32
                            continue 
                        require ext_code.size(address(sha3(0, 17269419903419772280, _5114, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        call address(sha3(0, 17269419903419772280, _5114, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5078 + (2 * ceil32(return_data.size)) + 317 len 4] with:
                             gas gas_remaining wei
                            args mem[_5078 + (2 * ceil32(return_data.size)) + 321 len 96], 128, 96, mem[_5078 + (2 * ceil32(return_data.size)) + 481 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if gas_remaining < stor8:
                        if arg4.length == t + 1:
                        require t + 1 < arg4.length
                        require cd[((32 * t + 2) + arg4 + 36)] == address(cd[((32 * t + 2) + arg4 + 36)])
                        require 2 * t + 1 < arg5.length
                        require cd[((64 * t + 1) + arg5 + 36)] == address(cd[((64 * t + 1) + arg5 + 36)])
                        require (2 * t + 1) + 1 < arg5.length
                        require cd[((32 * (2 * t + 1) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t + 1) + 1) + arg5 + 36)])
                        mem[_5078 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                        mem[100] = address(cd[((32 * t + 2) + arg4 + 36)])
                        require ext_code.size(comptrollerAddress)
                        staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                gas gas_remaining wei
                               args mem[_5078 + (2 * ceil32(return_data.size)) + 321 len -_5078 + -(2 * ceil32(return_data.size)) - 189]
                        mem[_5078 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                    else:
                        if not mem[_5006 + 12 len 20]:
                            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                        _5077 = mem[64]
                        mem[mem[64] + 32] = address(mem[_5006])
                        mem[mem[64] + 52] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7000000000000000000000000
                        _5108 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _5110 = sha3(mem[_5108 + 32 len mem[_5108]])
                        mem[_5077 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_5077 + 105] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                        mem[_5077 + 125] = _5110
                        mem[_5077 + 157] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                        mem[_5077 + 72] = 85
                        mem[_5077 + 221] = address(cd[((32 * s) + arg4 + 36)])
                        mem[_5077 + 253] = address(cd[((64 * t) + arg5 + 36)])
                        mem[_5077 + 285] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                        mem[_5077 + 189] = 96
                        require ext_code.size(address(sha3(0, 17269419903419772280, _5110, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        staticcall address(sha3(0, 17269419903419772280, _5110, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                gas gas_remaining wei
                        mem[_5077 + 317] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        require ext_code.size(address(sha3(0, 17269419903419772280, _5110, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        staticcall address(sha3(0, 17269419903419772280, _5110, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                gas gas_remaining wei
                        mem[_5077 + ceil32(return_data.size) + 317] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _5077 + (2 * ceil32(return_data.size)) + 317
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        mem[_5077 + (2 * ceil32(return_data.size)) + 317] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        if ext_call.return_data[12 len 20] == address(_5013):
                            mem[_5077 + (2 * ceil32(return_data.size)) + 321] = 10^18 * _4978 / stor7 * _4986 / _4982
                            if ext_call.return_data[12 len 20] == address(_5013):
                                mem[_5077 + (2 * ceil32(return_data.size)) + 353] = 10^18 * _4978 / stor7 * _4986 / _4982
                            else:
                                mem[_5077 + (2 * ceil32(return_data.size)) + 353] = 0
                        else:
                            mem[_5077 + (2 * ceil32(return_data.size)) + 321] = 0
                            if ext_call.return_data[12 len 20] == address(_5013):
                                mem[_5077 + (2 * ceil32(return_data.size)) + 353] = 10^18 * _4978 / stor7 * _4986 / _4982
                            else:
                                mem[_5077 + (2 * ceil32(return_data.size)) + 353] = 0
                        mem[_5077 + (2 * ceil32(return_data.size)) + 385] = this.address
                        mem[_5077 + (2 * ceil32(return_data.size)) + 417] = 128
                        mem[_5077 + (2 * ceil32(return_data.size)) + 449] = 96
                        idx = 0
                        while idx < 96:
                            mem[idx + _5077 + (2 * ceil32(return_data.size)) + 481] = mem[idx + _5077 + 221]
                            require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                            require 2 * t < arg5.length
                            require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                            require (2 * t) + 1 < arg5.length
                            require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                            mem[_5077 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                            mem[100] = address(cd[((32 * s) + arg4 + 36)])
                            require ext_code.size(comptrollerAddress)
                            staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                    gas gas_remaining wei
                                   args mem[_5077 + (2 * ceil32(return_data.size)) + 321 len -_5077 + -(2 * ceil32(return_data.size)) - 189]
                            mem[_5077 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                            idx = idx + 32
                            continue 
                        require ext_code.size(address(sha3(0, 17269419903419772280, _5110, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                        call address(sha3(0, 17269419903419772280, _5110, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5077 + (2 * ceil32(return_data.size)) + 317 len 4] with:
                             gas gas_remaining wei
                            args mem[_5077 + (2 * ceil32(return_data.size)) + 321 len 96], 128, 96, mem[_5077 + (2 * ceil32(return_data.size)) + 481 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if gas_remaining < stor8:
                        if arg4.length == t + 1:
                        require t + 1 < arg4.length
                        require cd[((32 * t + 2) + arg4 + 36)] == address(cd[((32 * t + 2) + arg4 + 36)])
                        require 2 * t + 1 < arg5.length
                        require cd[((64 * t + 1) + arg5 + 36)] == address(cd[((64 * t + 1) + arg5 + 36)])
                        require (2 * t + 1) + 1 < arg5.length
                        require cd[((32 * (2 * t + 1) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t + 1) + 1) + arg5 + 36)])
                        mem[_5077 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                        mem[100] = address(cd[((32 * t + 2) + arg4 + 36)])
                        require ext_code.size(comptrollerAddress)
                        staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                gas gas_remaining wei
                               args mem[_5077 + (2 * ceil32(return_data.size)) + 321 len -_5077 + -(2 * ceil32(return_data.size)) - 189]
                        mem[_5077 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                else:
                    if 0x5c0401e81bc07ca70fad469b451682c0d747ef1c == address(cd[((32 * (2 * t) + 1) + arg5 + 36)]):
                        require ext_code.size(address(cd[((64 * t) + arg5 + 36)]))
                        staticcall address(cd[((64 * t) + arg5 + 36)]).underlying() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5010 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _5018 = mem[_5010]
                        require mem[_5010] == mem[_5010 + 12 len 20]
                        if mem[_5010 + 12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                            revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                        if mem[_5010 + 12 len 20] >= 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                            _5092 = mem[64]
                            mem[mem[64] + 32] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7000000000000000000000000
                            mem[mem[64] + 52] = address(_5018)
                            _5139 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _5141 = sha3(mem[_5139 + 32 len mem[_5139]])
                            mem[_5092 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_5092 + 105] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                            mem[_5092 + 125] = _5141
                            mem[_5092 + 157] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                            mem[_5092 + 72] = 85
                            mem[_5092 + 221] = address(cd[((32 * s) + arg4 + 36)])
                            mem[_5092 + 253] = address(cd[((64 * t) + arg5 + 36)])
                            mem[_5092 + 285] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                            mem[_5092 + 189] = 96
                            require ext_code.size(address(sha3(0, 17269419903419772280, _5141, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            staticcall address(sha3(0, 17269419903419772280, _5141, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                    gas gas_remaining wei
                            mem[_5092 + 317] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            require ext_code.size(address(sha3(0, 17269419903419772280, _5141, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            staticcall address(sha3(0, 17269419903419772280, _5141, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                    gas gas_remaining wei
                            mem[_5092 + ceil32(return_data.size) + 317] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _5092 + (2 * ceil32(return_data.size)) + 317
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[_5092 + (2 * ceil32(return_data.size)) + 317] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            if ext_call.return_data[12 len 20] == address(_5018):
                                mem[_5092 + (2 * ceil32(return_data.size)) + 321] = 10^18 * _4978 / stor7 * _4986 / _4982
                                if ext_call.return_data[12 len 20] == address(_5018):
                                    mem[_5092 + (2 * ceil32(return_data.size)) + 353] = 10^18 * _4978 / stor7 * _4986 / _4982
                                else:
                                    mem[_5092 + (2 * ceil32(return_data.size)) + 353] = 0
                            else:
                                mem[_5092 + (2 * ceil32(return_data.size)) + 321] = 0
                                if ext_call.return_data[12 len 20] == address(_5018):
                                    mem[_5092 + (2 * ceil32(return_data.size)) + 353] = 10^18 * _4978 / stor7 * _4986 / _4982
                                else:
                                    mem[_5092 + (2 * ceil32(return_data.size)) + 353] = 0
                            mem[_5092 + (2 * ceil32(return_data.size)) + 385] = this.address
                            mem[_5092 + (2 * ceil32(return_data.size)) + 417] = 128
                            mem[_5092 + (2 * ceil32(return_data.size)) + 449] = 96
                            idx = 0
                            while idx < 96:
                                mem[idx + _5092 + (2 * ceil32(return_data.size)) + 481] = mem[idx + _5092 + 221]
                                require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                require 2 * t < arg5.length
                                require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                require (2 * t) + 1 < arg5.length
                                require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                mem[_5092 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                require ext_code.size(comptrollerAddress)
                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                        gas gas_remaining wei
                                       args mem[_5092 + (2 * ceil32(return_data.size)) + 321 len -_5092 + -(2 * ceil32(return_data.size)) - 189]
                                mem[_5092 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                                idx = idx + 32
                                continue 
                            require ext_code.size(address(sha3(0, 17269419903419772280, _5141, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            call address(sha3(0, 17269419903419772280, _5141, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5092 + (2 * ceil32(return_data.size)) + 317 len 4] with:
                                 gas gas_remaining wei
                                args mem[_5092 + (2 * ceil32(return_data.size)) + 321 len 96], 128, 96, mem[_5092 + (2 * ceil32(return_data.size)) + 481 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if gas_remaining < stor8:
                            if arg4.length == t + 1:
                            require t + 1 < arg4.length
                            require cd[((32 * t + 2) + arg4 + 36)] == address(cd[((32 * t + 2) + arg4 + 36)])
                            require 2 * t + 1 < arg5.length
                            require cd[((64 * t + 1) + arg5 + 36)] == address(cd[((64 * t + 1) + arg5 + 36)])
                            require (2 * t + 1) + 1 < arg5.length
                            require cd[((32 * (2 * t + 1) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t + 1) + 1) + arg5 + 36)])
                            mem[_5092 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                            mem[100] = address(cd[((32 * t + 2) + arg4 + 36)])
                            require ext_code.size(comptrollerAddress)
                            staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                    gas gas_remaining wei
                                   args mem[_5092 + (2 * ceil32(return_data.size)) + 321 len -_5092 + -(2 * ceil32(return_data.size)) - 189]
                            mem[_5092 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                        else:
                            if not mem[_5010 + 12 len 20]:
                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                            _5091 = mem[64]
                            mem[mem[64] + 32] = address(mem[_5010])
                            mem[mem[64] + 52] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7000000000000000000000000
                            _5135 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _5137 = sha3(mem[_5135 + 32 len mem[_5135]])
                            mem[_5091 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_5091 + 105] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                            mem[_5091 + 125] = _5137
                            mem[_5091 + 157] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                            mem[_5091 + 72] = 85
                            mem[_5091 + 221] = address(cd[((32 * s) + arg4 + 36)])
                            mem[_5091 + 253] = address(cd[((64 * t) + arg5 + 36)])
                            mem[_5091 + 285] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                            mem[_5091 + 189] = 96
                            require ext_code.size(address(sha3(0, 17269419903419772280, _5137, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            staticcall address(sha3(0, 17269419903419772280, _5137, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                    gas gas_remaining wei
                            mem[_5091 + 317] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            require ext_code.size(address(sha3(0, 17269419903419772280, _5137, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            staticcall address(sha3(0, 17269419903419772280, _5137, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                    gas gas_remaining wei
                            mem[_5091 + ceil32(return_data.size) + 317] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _5091 + (2 * ceil32(return_data.size)) + 317
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[_5091 + (2 * ceil32(return_data.size)) + 317] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            if ext_call.return_data[12 len 20] == address(_5018):
                                mem[_5091 + (2 * ceil32(return_data.size)) + 321] = 10^18 * _4978 / stor7 * _4986 / _4982
                                if ext_call.return_data[12 len 20] == address(_5018):
                                    mem[_5091 + (2 * ceil32(return_data.size)) + 353] = 10^18 * _4978 / stor7 * _4986 / _4982
                                else:
                                    mem[_5091 + (2 * ceil32(return_data.size)) + 353] = 0
                            else:
                                mem[_5091 + (2 * ceil32(return_data.size)) + 321] = 0
                                if ext_call.return_data[12 len 20] == address(_5018):
                                    mem[_5091 + (2 * ceil32(return_data.size)) + 353] = 10^18 * _4978 / stor7 * _4986 / _4982
                                else:
                                    mem[_5091 + (2 * ceil32(return_data.size)) + 353] = 0
                            mem[_5091 + (2 * ceil32(return_data.size)) + 385] = this.address
                            mem[_5091 + (2 * ceil32(return_data.size)) + 417] = 128
                            mem[_5091 + (2 * ceil32(return_data.size)) + 449] = 96
                            idx = 0
                            while idx < 96:
                                mem[idx + _5091 + (2 * ceil32(return_data.size)) + 481] = mem[idx + _5091 + 221]
                                require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                require 2 * t < arg5.length
                                require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                require (2 * t) + 1 < arg5.length
                                require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                mem[_5091 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                require ext_code.size(comptrollerAddress)
                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                        gas gas_remaining wei
                                       args mem[_5091 + (2 * ceil32(return_data.size)) + 321 len -_5091 + -(2 * ceil32(return_data.size)) - 189]
                                mem[_5091 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                                idx = idx + 32
                                continue 
                            require ext_code.size(address(sha3(0, 17269419903419772280, _5137, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                            call address(sha3(0, 17269419903419772280, _5137, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5091 + (2 * ceil32(return_data.size)) + 317 len 4] with:
                                 gas gas_remaining wei
                                args mem[_5091 + (2 * ceil32(return_data.size)) + 321 len 96], 128, 96, mem[_5091 + (2 * ceil32(return_data.size)) + 481 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if gas_remaining < stor8:
                            if arg4.length == t + 1:
                            require t + 1 < arg4.length
                            require cd[((32 * t + 2) + arg4 + 36)] == address(cd[((32 * t + 2) + arg4 + 36)])
                            require 2 * t + 1 < arg5.length
                            require cd[((64 * t + 1) + arg5 + 36)] == address(cd[((64 * t + 1) + arg5 + 36)])
                            require (2 * t + 1) + 1 < arg5.length
                            require cd[((32 * (2 * t + 1) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t + 1) + 1) + arg5 + 36)])
                            mem[_5091 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                            mem[100] = address(cd[((32 * t + 2) + arg4 + 36)])
                            require ext_code.size(comptrollerAddress)
                            staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                    gas gas_remaining wei
                                   args mem[_5091 + (2 * ceil32(return_data.size)) + 321 len -_5091 + -(2 * ceil32(return_data.size)) - 189]
                            mem[_5091 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                    else:
                        if 0x5c0401e81bc07ca70fad469b451682c0d747ef1c == address(cd[((64 * t) + arg5 + 36)]):
                            if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == mem[_4992 + 12 len 20]:
                                revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                            if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 < mem[_4992 + 12 len 20]:
                                _5027 = mem[64]
                                mem[mem[64] + 32] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7000000000000000000000000
                                mem[mem[64] + 52] = address(_4994)
                                _5041 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _5043 = sha3(mem[_5041 + 32 len mem[_5041]])
                                mem[_5027 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_5027 + 105] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                mem[_5027 + 125] = _5043
                                mem[_5027 + 157] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                mem[_5027 + 72] = 85
                                mem[_5027 + 221] = address(cd[((32 * s) + arg4 + 36)])
                                mem[_5027 + 253] = address(cd[((64 * t) + arg5 + 36)])
                                mem[_5027 + 285] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                mem[_5027 + 189] = 96
                                require ext_code.size(address(sha3(0, 17269419903419772280, _5043, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                staticcall address(sha3(0, 17269419903419772280, _5043, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                        gas gas_remaining wei
                                mem[_5027 + 317] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                require ext_code.size(address(sha3(0, 17269419903419772280, _5043, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                staticcall address(sha3(0, 17269419903419772280, _5043, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                        gas gas_remaining wei
                                mem[_5027 + ceil32(return_data.size) + 317] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _5027 + (2 * ceil32(return_data.size)) + 317
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[_5027 + (2 * ceil32(return_data.size)) + 317] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                                    mem[_5027 + (2 * ceil32(return_data.size)) + 321] = 10^18 * _4978 / stor7 * _4986 / _4982
                                    if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                                        mem[_5027 + (2 * ceil32(return_data.size)) + 353] = 10^18 * _4978 / stor7 * _4986 / _4982
                                    else:
                                        mem[_5027 + (2 * ceil32(return_data.size)) + 353] = 0
                                else:
                                    mem[_5027 + (2 * ceil32(return_data.size)) + 321] = 0
                                    if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                                        mem[_5027 + (2 * ceil32(return_data.size)) + 353] = 10^18 * _4978 / stor7 * _4986 / _4982
                                    else:
                                        mem[_5027 + (2 * ceil32(return_data.size)) + 353] = 0
                                mem[_5027 + (2 * ceil32(return_data.size)) + 385] = this.address
                                mem[_5027 + (2 * ceil32(return_data.size)) + 417] = 128
                                mem[_5027 + (2 * ceil32(return_data.size)) + 449] = 96
                                idx = 0
                                while idx < 96:
                                    mem[idx + _5027 + (2 * ceil32(return_data.size)) + 481] = mem[idx + _5027 + 221]
                                    require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                    require 2 * t < arg5.length
                                    require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                    require (2 * t) + 1 < arg5.length
                                    require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                    mem[_5027 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                    mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                    require ext_code.size(comptrollerAddress)
                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                            gas gas_remaining wei
                                           args mem[_5027 + (2 * ceil32(return_data.size)) + 321 len -_5027 + -(2 * ceil32(return_data.size)) - 189]
                                    mem[_5027 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(sha3(0, 17269419903419772280, _5043, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                call address(sha3(0, 17269419903419772280, _5043, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5027 + (2 * ceil32(return_data.size)) + 317 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_5027 + (2 * ceil32(return_data.size)) + 321 len 96], 128, 96, mem[_5027 + (2 * ceil32(return_data.size)) + 481 len 96]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if gas_remaining < stor8:
                                if arg4.length == t + 1:
                                require t + 1 < arg4.length
                                require cd[((32 * t + 2) + arg4 + 36)] == address(cd[((32 * t + 2) + arg4 + 36)])
                                require 2 * t + 1 < arg5.length
                                require cd[((64 * t + 1) + arg5 + 36)] == address(cd[((64 * t + 1) + arg5 + 36)])
                                require (2 * t + 1) + 1 < arg5.length
                                require cd[((32 * (2 * t + 1) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t + 1) + 1) + arg5 + 36)])
                                mem[_5027 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                mem[100] = address(cd[((32 * t + 2) + arg4 + 36)])
                                require ext_code.size(comptrollerAddress)
                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                        gas gas_remaining wei
                                       args mem[_5027 + (2 * ceil32(return_data.size)) + 321 len -_5027 + -(2 * ceil32(return_data.size)) - 189]
                                mem[_5027 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                            else:
                                if not mem[_4992 + 12 len 20]:
                                    revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                _5028 = mem[64]
                                mem[mem[64] + 32] = address(mem[_4992])
                                mem[mem[64] + 52] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7000000000000000000000000
                                _5045 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _5047 = sha3(mem[_5045 + 32 len mem[_5045]])
                                mem[_5028 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_5028 + 105] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                mem[_5028 + 125] = _5047
                                mem[_5028 + 157] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                mem[_5028 + 72] = 85
                                mem[_5028 + 221] = address(cd[((32 * s) + arg4 + 36)])
                                mem[_5028 + 253] = address(cd[((64 * t) + arg5 + 36)])
                                mem[_5028 + 285] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                mem[_5028 + 189] = 96
                                require ext_code.size(address(sha3(0, 17269419903419772280, _5047, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                staticcall address(sha3(0, 17269419903419772280, _5047, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                        gas gas_remaining wei
                                mem[_5028 + 317] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                require ext_code.size(address(sha3(0, 17269419903419772280, _5047, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                staticcall address(sha3(0, 17269419903419772280, _5047, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                        gas gas_remaining wei
                                mem[_5028 + ceil32(return_data.size) + 317] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _5028 + (2 * ceil32(return_data.size)) + 317
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                mem[_5028 + (2 * ceil32(return_data.size)) + 317] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                                    mem[_5028 + (2 * ceil32(return_data.size)) + 321] = 10^18 * _4978 / stor7 * _4986 / _4982
                                    if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                                        mem[_5028 + (2 * ceil32(return_data.size)) + 353] = 10^18 * _4978 / stor7 * _4986 / _4982
                                    else:
                                        mem[_5028 + (2 * ceil32(return_data.size)) + 353] = 0
                                else:
                                    mem[_5028 + (2 * ceil32(return_data.size)) + 321] = 0
                                    if ext_call.return_data[12 len 20] == 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7:
                                        mem[_5028 + (2 * ceil32(return_data.size)) + 353] = 10^18 * _4978 / stor7 * _4986 / _4982
                                    else:
                                        mem[_5028 + (2 * ceil32(return_data.size)) + 353] = 0
                                mem[_5028 + (2 * ceil32(return_data.size)) + 385] = this.address
                                mem[_5028 + (2 * ceil32(return_data.size)) + 417] = 128
                                mem[_5028 + (2 * ceil32(return_data.size)) + 449] = 96
                                idx = 0
                                while idx < 96:
                                    mem[idx + _5028 + (2 * ceil32(return_data.size)) + 481] = mem[idx + _5028 + 221]
                                    require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                    require 2 * t < arg5.length
                                    require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                    require (2 * t) + 1 < arg5.length
                                    require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                    mem[_5028 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                    mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                    require ext_code.size(comptrollerAddress)
                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                            gas gas_remaining wei
                                           args mem[_5028 + (2 * ceil32(return_data.size)) + 321 len -_5028 + -(2 * ceil32(return_data.size)) - 189]
                                    mem[_5028 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(sha3(0, 17269419903419772280, _5047, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                call address(sha3(0, 17269419903419772280, _5047, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5028 + (2 * ceil32(return_data.size)) + 317 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_5028 + (2 * ceil32(return_data.size)) + 321 len 96], 128, 96, mem[_5028 + (2 * ceil32(return_data.size)) + 481 len 96]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if gas_remaining < stor8:
                                if arg4.length == t + 1:
                                require t + 1 < arg4.length
                                require cd[((32 * t + 2) + arg4 + 36)] == address(cd[((32 * t + 2) + arg4 + 36)])
                                require 2 * t + 1 < arg5.length
                                require cd[((64 * t + 1) + arg5 + 36)] == address(cd[((64 * t + 1) + arg5 + 36)])
                                require (2 * t + 1) + 1 < arg5.length
                                require cd[((32 * (2 * t + 1) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t + 1) + 1) + arg5 + 36)])
                                mem[_5028 + (2 * ceil32(return_data.size)) + 317] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                mem[100] = address(cd[((32 * t + 2) + arg4 + 36)])
                                require ext_code.size(comptrollerAddress)
                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                        gas gas_remaining wei
                                       args mem[_5028 + (2 * ceil32(return_data.size)) + 321 len -_5028 + -(2 * ceil32(return_data.size)) - 189]
                                mem[_5028 + (2 * ceil32(return_data.size)) + 317 len 96] = ext_call.return_data[0 len 96]
                        else:
                            require ext_code.size(address(cd[((64 * t) + arg5 + 36)]))
                            staticcall address(cd[((64 * t) + arg5 + 36)]).underlying() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5014 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _5020 = mem[_5014]
                            require mem[_5014] == mem[_5014 + 12 len 20]
                            if mem[_5014 + 12 len 20] == address(_4994):
                                revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                            if mem[_5014 + 12 len 20] >= address(_4994):
                                if not address(_4994):
                                    revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                if mem[_5014 + 12 len 20] == address(_4994):
                                    revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                                if mem[_5014 + 12 len 20] < address(_4994):
                                    if not mem[_5014 + 12 len 20]:
                                        revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                    _5223 = mem[64]
                                    mem[mem[64] + 32] = address(mem[_5014])
                                    mem[mem[64] + 52] = address(_4994)
                                    _5269 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _5271 = sha3(mem[_5269 + 32 len mem[_5269]])
                                    mem[_5223 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_5223 + 105] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                    mem[_5223 + 125] = _5271
                                    mem[_5223 + 157] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                    mem[_5223 + 72] = 85
                                    require ext_code.size(address(sha3(0, 17269419903419772280, _5271, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    staticcall address(sha3(0, 17269419903419772280, _5271, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                                            gas gas_remaining wei
                                    mem[_5223 + 189 len 96] = ext_call.return_data[0 len 96]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 96
                                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                    if address(_5020) == address(_4994):
                                        revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                                    if address(_5020) < address(_4994):
                                        if not address(_5020):
                                            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                        mem[_5223 + ceil32(return_data.size) + 221] = address(_5020)
                                        mem[_5223 + ceil32(return_data.size) + 241] = address(_4994)
                                        mem[_5223 + ceil32(return_data.size) + 189] = 40
                                        mem[_5223 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_5223 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                        mem[_5223 + ceil32(return_data.size) + 314] = sha3(address(_5020), address(_4994))
                                        mem[_5223 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                        mem[_5223 + ceil32(return_data.size) + 261] = 85
                                        if 100000 * 10^18 * _4978 / stor7 * _4986 / _4982 <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                            mem[_5223 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                            mem[_5223 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                            mem[_5223 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                            mem[_5223 + ceil32(return_data.size) + 378] = 96
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5020), address(_4994)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            staticcall address(sha3(0, 17269419903419772280, sha3(address(_5020), address(_4994)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                    gas gas_remaining wei
                                            mem[_5223 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5223 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5020), address(_4994)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            staticcall address(sha3(0, 17269419903419772280, sha3(address(_5020), address(_4994)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                    gas gas_remaining wei
                                                   args mem[_5223 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                            mem[_5223 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[64] = _5223 + (4 * ceil32(return_data.size)) + 506
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5223 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            if ext_call.return_data[12 len 20] == address(_5020):
                                                mem[_5223 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                if ext_call.return_data[12 len 20] == address(_5020):
                                                    mem[_5223 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                else:
                                                    mem[_5223 + (4 * ceil32(return_data.size)) + 542] = 0
                                            else:
                                                mem[_5223 + (4 * ceil32(return_data.size)) + 510] = 0
                                                if ext_call.return_data[12 len 20] == address(_5020):
                                                    mem[_5223 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                else:
                                                    mem[_5223 + (4 * ceil32(return_data.size)) + 542] = 0
                                            mem[_5223 + (4 * ceil32(return_data.size)) + 574] = this.address
                                            mem[_5223 + (4 * ceil32(return_data.size)) + 606] = 128
                                            mem[_5223 + (4 * ceil32(return_data.size)) + 638] = 96
                                            idx = 0
                                            while idx < 96:
                                                mem[idx + _5223 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5223 + ceil32(return_data.size) + 410]
                                                require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                require 2 * t < arg5.length
                                                require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                require (2 * t) + 1 < arg5.length
                                                require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5223 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                require ext_code.size(comptrollerAddress)
                                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                        gas gas_remaining wei
                                                       args mem[_5223 + (4 * ceil32(return_data.size)) + 510 len -_5223 + -(4 * ceil32(return_data.size)) - 378]
                                                mem[_5223 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                idx = idx + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5020), address(_4994)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            call address(sha3(0, 17269419903419772280, sha3(address(_5020), address(_4994)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5223 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                 gas gas_remaining wei
                                                args mem[_5223 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5223 + (4 * ceil32(return_data.size)) + 670 len 96]
                                        else:
                                            mem[_5223 + ceil32(return_data.size) + 382] = address(_5020)
                                            mem[_5223 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                            require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                            staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                    gas gas_remaining wei
                                                   args address(_5020), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                            mem[_5223 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5223 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                            mem[_5223 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                            mem[_5223 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                            mem[_5223 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            staticcall address(ext_call.return_data[0]).token0() with:
                                                    gas gas_remaining wei
                                            mem[_5223 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5223 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            staticcall address(ext_call.return_data[0]).token1() with:
                                                    gas gas_remaining wei
                                                   args mem[_5223 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[64] = _5223 + (4 * ceil32(return_data.size)) + 506
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5223 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            if ext_call.return_data[12 len 20] == address(_5020):
                                                mem[_5223 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                if ext_call.return_data[12 len 20] == address(_5020):
                                                    mem[_5223 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                else:
                                                    mem[_5223 + (4 * ceil32(return_data.size)) + 542] = 0
                                            else:
                                                mem[_5223 + (4 * ceil32(return_data.size)) + 510] = 0
                                                if ext_call.return_data[12 len 20] == address(_5020):
                                                    mem[_5223 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                else:
                                                    mem[_5223 + (4 * ceil32(return_data.size)) + 542] = 0
                                            mem[_5223 + (4 * ceil32(return_data.size)) + 574] = this.address
                                            mem[_5223 + (4 * ceil32(return_data.size)) + 606] = 128
                                            mem[_5223 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                            idx = 0
                                            while idx < ceil32(return_data.size) + 96:
                                                mem[idx + _5223 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5223 + (2 * ceil32(return_data.size)) + 410]
                                                require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                require 2 * t < arg5.length
                                                require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                require (2 * t) + 1 < arg5.length
                                                require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5223 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                require ext_code.size(comptrollerAddress)
                                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                        gas gas_remaining wei
                                                       args mem[_5223 + (4 * ceil32(return_data.size)) + 510 len -_5223 + -(4 * ceil32(return_data.size)) - 378]
                                                mem[_5223 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                idx = idx + 32
                                                continue 
                                            if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                mem[_5223 + (6 * ceil32(return_data.size)) + 766] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).mem[_5223 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                 gas gas_remaining wei
                                                args mem[_5223 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5223 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                    else:
                                        if not address(_4994):
                                            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                        mem[_5223 + ceil32(return_data.size) + 221] = address(_4994)
                                        mem[_5223 + ceil32(return_data.size) + 241] = address(_5020)
                                        mem[_5223 + ceil32(return_data.size) + 189] = 40
                                        mem[_5223 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_5223 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                        mem[_5223 + ceil32(return_data.size) + 314] = sha3(address(_4994), address(_5020))
                                        mem[_5223 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                        mem[_5223 + ceil32(return_data.size) + 261] = 85
                                        if 100000 * 10^18 * _4978 / stor7 * _4986 / _4982 <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                            mem[_5223 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                            mem[_5223 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                            mem[_5223 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                            mem[_5223 + ceil32(return_data.size) + 378] = 96
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_4994), address(_5020)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            staticcall address(sha3(0, 17269419903419772280, sha3(address(_4994), address(_5020)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                    gas gas_remaining wei
                                            mem[_5223 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5223 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_4994), address(_5020)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            staticcall address(sha3(0, 17269419903419772280, sha3(address(_4994), address(_5020)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                    gas gas_remaining wei
                                                   args mem[_5223 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                            mem[_5223 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[64] = _5223 + (4 * ceil32(return_data.size)) + 506
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5223 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            if ext_call.return_data[12 len 20] == address(_5020):
                                                mem[_5223 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                if ext_call.return_data[12 len 20] == address(_5020):
                                                    mem[_5223 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                else:
                                                    mem[_5223 + (4 * ceil32(return_data.size)) + 542] = 0
                                            else:
                                                mem[_5223 + (4 * ceil32(return_data.size)) + 510] = 0
                                                if ext_call.return_data[12 len 20] == address(_5020):
                                                    mem[_5223 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                else:
                                                    mem[_5223 + (4 * ceil32(return_data.size)) + 542] = 0
                                            mem[_5223 + (4 * ceil32(return_data.size)) + 574] = this.address
                                            mem[_5223 + (4 * ceil32(return_data.size)) + 606] = 128
                                            mem[_5223 + (4 * ceil32(return_data.size)) + 638] = 96
                                            idx = 0
                                            while idx < 96:
                                                mem[idx + _5223 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5223 + ceil32(return_data.size) + 410]
                                                require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                require 2 * t < arg5.length
                                                require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                require (2 * t) + 1 < arg5.length
                                                require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5223 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                require ext_code.size(comptrollerAddress)
                                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                        gas gas_remaining wei
                                                       args mem[_5223 + (4 * ceil32(return_data.size)) + 510 len -_5223 + -(4 * ceil32(return_data.size)) - 378]
                                                mem[_5223 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                idx = idx + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_4994), address(_5020)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            call address(sha3(0, 17269419903419772280, sha3(address(_4994), address(_5020)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5223 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                 gas gas_remaining wei
                                                args mem[_5223 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5223 + (4 * ceil32(return_data.size)) + 670 len 96]
                                        else:
                                            mem[_5223 + ceil32(return_data.size) + 382] = address(_5020)
                                            mem[_5223 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                            require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                            staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                    gas gas_remaining wei
                                                   args address(_5020), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                            mem[_5223 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5223 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                            mem[_5223 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                            mem[_5223 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                            mem[_5223 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            staticcall address(ext_call.return_data[0]).token0() with:
                                                    gas gas_remaining wei
                                            mem[_5223 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5223 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            staticcall address(ext_call.return_data[0]).token1() with:
                                                    gas gas_remaining wei
                                                   args mem[_5223 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[64] = _5223 + (4 * ceil32(return_data.size)) + 506
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5223 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            if ext_call.return_data[12 len 20] == address(_5020):
                                                mem[_5223 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                if ext_call.return_data[12 len 20] == address(_5020):
                                                    mem[_5223 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                else:
                                                    mem[_5223 + (4 * ceil32(return_data.size)) + 542] = 0
                                            else:
                                                mem[_5223 + (4 * ceil32(return_data.size)) + 510] = 0
                                                if ext_call.return_data[12 len 20] == address(_5020):
                                                    mem[_5223 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                else:
                                                    mem[_5223 + (4 * ceil32(return_data.size)) + 542] = 0
                                            mem[_5223 + (4 * ceil32(return_data.size)) + 574] = this.address
                                            mem[_5223 + (4 * ceil32(return_data.size)) + 606] = 128
                                            mem[_5223 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                            idx = 0
                                            while idx < ceil32(return_data.size) + 96:
                                                mem[idx + _5223 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5223 + (2 * ceil32(return_data.size)) + 410]
                                                require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                require 2 * t < arg5.length
                                                require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                require (2 * t) + 1 < arg5.length
                                                require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5223 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                require ext_code.size(comptrollerAddress)
                                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                        gas gas_remaining wei
                                                       args mem[_5223 + (4 * ceil32(return_data.size)) + 510 len -_5223 + -(4 * ceil32(return_data.size)) - 378]
                                                mem[_5223 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                idx = idx + 32
                                                continue 
                                            if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                mem[_5223 + (6 * ceil32(return_data.size)) + 766] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).mem[_5223 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                 gas gas_remaining wei
                                                args mem[_5223 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5223 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if gas_remaining < stor8:
                                    if arg4.length == t + 1:
                                    require t + 1 < arg4.length
                                    require cd[((32 * t + 2) + arg4 + 36)] == address(cd[((32 * t + 2) + arg4 + 36)])
                                    require 2 * t + 1 < arg5.length
                                    require cd[((64 * t + 1) + arg5 + 36)] == address(cd[((64 * t + 1) + arg5 + 36)])
                                    require (2 * t + 1) + 1 < arg5.length
                                    require cd[((32 * (2 * t + 1) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t + 1) + 1) + arg5 + 36)])
                                    mem[_5223 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                    mem[100] = address(cd[((32 * t + 2) + arg4 + 36)])
                                    require ext_code.size(comptrollerAddress)
                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                            gas gas_remaining wei
                                           args mem[_5223 + (4 * ceil32(return_data.size)) + 510 len -_5223 + -(4 * ceil32(return_data.size)) - 378]
                                    mem[_5223 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                else:
                                    if not address(_4994):
                                        revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                    _5224 = mem[64]
                                    mem[mem[64] + 32] = address(_4994)
                                    mem[mem[64] + 52] = address(_5020)
                                    _5273 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _5275 = sha3(mem[_5273 + 32 len mem[_5273]])
                                    mem[_5224 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_5224 + 105] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                    mem[_5224 + 125] = _5275
                                    mem[_5224 + 157] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                    mem[_5224 + 72] = 85
                                    require ext_code.size(address(sha3(0, 17269419903419772280, _5275, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    staticcall address(sha3(0, 17269419903419772280, _5275, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                                            gas gas_remaining wei
                                    mem[_5224 + 189 len 96] = ext_call.return_data[0 len 96]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 96
                                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                    if address(_5020) == address(_4994):
                                        revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                                    if address(_5020) < address(_4994):
                                        if not address(_5020):
                                            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                        mem[_5224 + ceil32(return_data.size) + 221] = address(_5020)
                                        mem[_5224 + ceil32(return_data.size) + 241] = address(_4994)
                                        mem[_5224 + ceil32(return_data.size) + 189] = 40
                                        mem[_5224 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_5224 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                        mem[_5224 + ceil32(return_data.size) + 314] = sha3(address(_5020), address(_4994))
                                        mem[_5224 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                        mem[_5224 + ceil32(return_data.size) + 261] = 85
                                        if 100000 * 10^18 * _4978 / stor7 * _4986 / _4982 <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                            mem[_5224 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                            mem[_5224 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                            mem[_5224 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                            mem[_5224 + ceil32(return_data.size) + 378] = 96
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5020), address(_4994)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            staticcall address(sha3(0, 17269419903419772280, sha3(address(_5020), address(_4994)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                    gas gas_remaining wei
                                            mem[_5224 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5224 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5020), address(_4994)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            staticcall address(sha3(0, 17269419903419772280, sha3(address(_5020), address(_4994)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                    gas gas_remaining wei
                                                   args mem[_5224 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                            mem[_5224 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[64] = _5224 + (4 * ceil32(return_data.size)) + 506
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5224 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            if ext_call.return_data[12 len 20] == address(_5020):
                                                mem[_5224 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                if ext_call.return_data[12 len 20] == address(_5020):
                                                    mem[_5224 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                else:
                                                    mem[_5224 + (4 * ceil32(return_data.size)) + 542] = 0
                                            else:
                                                mem[_5224 + (4 * ceil32(return_data.size)) + 510] = 0
                                                if ext_call.return_data[12 len 20] == address(_5020):
                                                    mem[_5224 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                else:
                                                    mem[_5224 + (4 * ceil32(return_data.size)) + 542] = 0
                                            mem[_5224 + (4 * ceil32(return_data.size)) + 574] = this.address
                                            mem[_5224 + (4 * ceil32(return_data.size)) + 606] = 128
                                            mem[_5224 + (4 * ceil32(return_data.size)) + 638] = 96
                                            idx = 0
                                            while idx < 96:
                                                mem[idx + _5224 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5224 + ceil32(return_data.size) + 410]
                                                require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                require 2 * t < arg5.length
                                                require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                require (2 * t) + 1 < arg5.length
                                                require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5224 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                require ext_code.size(comptrollerAddress)
                                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                        gas gas_remaining wei
                                                       args mem[_5224 + (4 * ceil32(return_data.size)) + 510 len -_5224 + -(4 * ceil32(return_data.size)) - 378]
                                                mem[_5224 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                idx = idx + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5020), address(_4994)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            call address(sha3(0, 17269419903419772280, sha3(address(_5020), address(_4994)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5224 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                 gas gas_remaining wei
                                                args mem[_5224 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5224 + (4 * ceil32(return_data.size)) + 670 len 96]
                                        else:
                                            mem[_5224 + ceil32(return_data.size) + 382] = address(_5020)
                                            mem[_5224 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                            require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                            staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                    gas gas_remaining wei
                                                   args address(_5020), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                            mem[_5224 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5224 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                            mem[_5224 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                            mem[_5224 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                            mem[_5224 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            staticcall address(ext_call.return_data[0]).token0() with:
                                                    gas gas_remaining wei
                                            mem[_5224 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5224 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            staticcall address(ext_call.return_data[0]).token1() with:
                                                    gas gas_remaining wei
                                                   args mem[_5224 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[64] = _5224 + (4 * ceil32(return_data.size)) + 506
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5224 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            if ext_call.return_data[12 len 20] == address(_5020):
                                                mem[_5224 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                if ext_call.return_data[12 len 20] == address(_5020):
                                                    mem[_5224 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                else:
                                                    mem[_5224 + (4 * ceil32(return_data.size)) + 542] = 0
                                            else:
                                                mem[_5224 + (4 * ceil32(return_data.size)) + 510] = 0
                                                if ext_call.return_data[12 len 20] == address(_5020):
                                                    mem[_5224 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                else:
                                                    mem[_5224 + (4 * ceil32(return_data.size)) + 542] = 0
                                            mem[_5224 + (4 * ceil32(return_data.size)) + 574] = this.address
                                            mem[_5224 + (4 * ceil32(return_data.size)) + 606] = 128
                                            mem[_5224 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                            idx = 0
                                            while idx < ceil32(return_data.size) + 96:
                                                mem[idx + _5224 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5224 + (2 * ceil32(return_data.size)) + 410]
                                                require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                require 2 * t < arg5.length
                                                require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                require (2 * t) + 1 < arg5.length
                                                require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5224 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                require ext_code.size(comptrollerAddress)
                                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                        gas gas_remaining wei
                                                       args mem[_5224 + (4 * ceil32(return_data.size)) + 510 len -_5224 + -(4 * ceil32(return_data.size)) - 378]
                                                mem[_5224 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                idx = idx + 32
                                                continue 
                                            if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                mem[_5224 + (6 * ceil32(return_data.size)) + 766] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).mem[_5224 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                 gas gas_remaining wei
                                                args mem[_5224 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5224 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                    else:
                                        if not address(_4994):
                                            revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                        mem[_5224 + ceil32(return_data.size) + 221] = address(_4994)
                                        mem[_5224 + ceil32(return_data.size) + 241] = address(_5020)
                                        mem[_5224 + ceil32(return_data.size) + 189] = 40
                                        mem[_5224 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_5224 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                        mem[_5224 + ceil32(return_data.size) + 314] = sha3(address(_4994), address(_5020))
                                        mem[_5224 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                        mem[_5224 + ceil32(return_data.size) + 261] = 85
                                        if 100000 * 10^18 * _4978 / stor7 * _4986 / _4982 <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                            mem[_5224 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                            mem[_5224 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                            mem[_5224 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                            mem[_5224 + ceil32(return_data.size) + 378] = 96
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_4994), address(_5020)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            staticcall address(sha3(0, 17269419903419772280, sha3(address(_4994), address(_5020)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                    gas gas_remaining wei
                                            mem[_5224 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5224 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_4994), address(_5020)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            staticcall address(sha3(0, 17269419903419772280, sha3(address(_4994), address(_5020)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                    gas gas_remaining wei
                                                   args mem[_5224 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                            mem[_5224 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[64] = _5224 + (4 * ceil32(return_data.size)) + 506
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5224 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            if ext_call.return_data[12 len 20] == address(_5020):
                                                mem[_5224 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                if ext_call.return_data[12 len 20] == address(_5020):
                                                    mem[_5224 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                else:
                                                    mem[_5224 + (4 * ceil32(return_data.size)) + 542] = 0
                                            else:
                                                mem[_5224 + (4 * ceil32(return_data.size)) + 510] = 0
                                                if ext_call.return_data[12 len 20] == address(_5020):
                                                    mem[_5224 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                else:
                                                    mem[_5224 + (4 * ceil32(return_data.size)) + 542] = 0
                                            mem[_5224 + (4 * ceil32(return_data.size)) + 574] = this.address
                                            mem[_5224 + (4 * ceil32(return_data.size)) + 606] = 128
                                            mem[_5224 + (4 * ceil32(return_data.size)) + 638] = 96
                                            idx = 0
                                            while idx < 96:
                                                mem[idx + _5224 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5224 + ceil32(return_data.size) + 410]
                                                require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                require 2 * t < arg5.length
                                                require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                require (2 * t) + 1 < arg5.length
                                                require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5224 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                require ext_code.size(comptrollerAddress)
                                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                        gas gas_remaining wei
                                                       args mem[_5224 + (4 * ceil32(return_data.size)) + 510 len -_5224 + -(4 * ceil32(return_data.size)) - 378]
                                                mem[_5224 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                idx = idx + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_4994), address(_5020)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                            call address(sha3(0, 17269419903419772280, sha3(address(_4994), address(_5020)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5224 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                 gas gas_remaining wei
                                                args mem[_5224 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5224 + (4 * ceil32(return_data.size)) + 670 len 96]
                                        else:
                                            mem[_5224 + ceil32(return_data.size) + 382] = address(_5020)
                                            mem[_5224 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                            require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                            staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                    gas gas_remaining wei
                                                   args address(_5020), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                            mem[_5224 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5224 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                            mem[_5224 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                            mem[_5224 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                            mem[_5224 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            staticcall address(ext_call.return_data[0]).token0() with:
                                                    gas gas_remaining wei
                                            mem[_5224 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5224 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            staticcall address(ext_call.return_data[0]).token1() with:
                                                    gas gas_remaining wei
                                                   args mem[_5224 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[64] = _5224 + (4 * ceil32(return_data.size)) + 506
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                            mem[_5224 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            if ext_call.return_data[12 len 20] == address(_5020):
                                                mem[_5224 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                if ext_call.return_data[12 len 20] == address(_5020):
                                                    mem[_5224 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                else:
                                                    mem[_5224 + (4 * ceil32(return_data.size)) + 542] = 0
                                            else:
                                                mem[_5224 + (4 * ceil32(return_data.size)) + 510] = 0
                                                if ext_call.return_data[12 len 20] == address(_5020):
                                                    mem[_5224 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                else:
                                                    mem[_5224 + (4 * ceil32(return_data.size)) + 542] = 0
                                            mem[_5224 + (4 * ceil32(return_data.size)) + 574] = this.address
                                            mem[_5224 + (4 * ceil32(return_data.size)) + 606] = 128
                                            mem[_5224 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                            idx = 0
                                            while idx < ceil32(return_data.size) + 96:
                                                mem[idx + _5224 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5224 + (2 * ceil32(return_data.size)) + 410]
                                                require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                require 2 * t < arg5.length
                                                require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                require (2 * t) + 1 < arg5.length
                                                require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5224 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                require ext_code.size(comptrollerAddress)
                                                staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                        gas gas_remaining wei
                                                       args mem[_5224 + (4 * ceil32(return_data.size)) + 510 len -_5224 + -(4 * ceil32(return_data.size)) - 378]
                                                mem[_5224 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                idx = idx + 32
                                                continue 
                                            if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                mem[_5224 + (6 * ceil32(return_data.size)) + 766] = 0
                                            require ext_code.size(address(ext_call.return_data[0]))
                                            call address(ext_call.return_data[0]).mem[_5224 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                 gas gas_remaining wei
                                                args mem[_5224 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5224 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if gas_remaining < stor8:
                                    if arg4.length == t + 1:
                                    require t + 1 < arg4.length
                                    require cd[((32 * t + 2) + arg4 + 36)] == address(cd[((32 * t + 2) + arg4 + 36)])
                                    require 2 * t + 1 < arg5.length
                                    require cd[((64 * t + 1) + arg5 + 36)] == address(cd[((64 * t + 1) + arg5 + 36)])
                                    require (2 * t + 1) + 1 < arg5.length
                                    require cd[((32 * (2 * t + 1) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t + 1) + 1) + arg5 + 36)])
                                    mem[_5224 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                    mem[100] = address(cd[((32 * t + 2) + arg4 + 36)])
                                    require ext_code.size(comptrollerAddress)
                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                            gas gas_remaining wei
                                           args mem[_5224 + (4 * ceil32(return_data.size)) + 510 len -_5224 + -(4 * ceil32(return_data.size)) - 378]
                                    mem[_5224 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                            else:
                                if not mem[_5014 + 12 len 20]:
                                    revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                if mem[_5014 + 12 len 20] == address(_4994):
                                    revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                                if mem[_5014 + 12 len 20] < address(_4994):
                                    if not mem[_5014 + 12 len 20]:
                                        revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                    _5221 = mem[64]
                                    mem[mem[64] + 32] = address(mem[_5014])
                                    mem[mem[64] + 52] = address(_4994)
                                    _5261 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _5263 = sha3(mem[_5261 + 32 len mem[_5261]])
                                    mem[_5221 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_5221 + 105] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                    mem[_5221 + 125] = _5263
                                    mem[_5221 + 157] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                    mem[_5221 + 72] = 85
                                    require ext_code.size(address(sha3(0, 17269419903419772280, _5263, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    staticcall address(sha3(0, 17269419903419772280, _5263, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                                            gas gas_remaining wei
                                    mem[_5221 + 189 len 96] = ext_call.return_data[0 len 96]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 96
                                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                    if address(_5020) == address(_4994):
                                        revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                                    if address(_5020) == address(_5020):
                                        if address(_5020) < address(_4994):
                                            if not address(_5020):
                                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                            mem[_5221 + ceil32(return_data.size) + 221] = address(_5020)
                                            mem[_5221 + ceil32(return_data.size) + 241] = address(_4994)
                                            mem[_5221 + ceil32(return_data.size) + 189] = 40
                                            mem[_5221 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_5221 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                            mem[_5221 + ceil32(return_data.size) + 314] = sha3(address(_5020), address(_4994))
                                            mem[_5221 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                            mem[_5221 + ceil32(return_data.size) + 261] = 85
                                            if 100000 * 10^18 * _4978 / stor7 * _4986 / _4982 <= 985 * Mask(112, 0, ext_call.return_data[0]):
                                                mem[_5221 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                                mem[_5221 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                                mem[_5221 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5221 + ceil32(return_data.size) + 378] = 96
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5020), address(_4994)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5020), address(_4994)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5221 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5221 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5020), address(_4994)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5020), address(_4994)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5221 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                                mem[_5221 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5221 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5221 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5020):
                                                    mem[_5221 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    if ext_call.return_data[12 len 20] == address(_5020):
                                                        mem[_5221 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    else:
                                                        mem[_5221 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5221 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5020):
                                                        mem[_5221 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    else:
                                                        mem[_5221 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5221 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5221 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5221 + (4 * ceil32(return_data.size)) + 638] = 96
                                                idx = 0
                                                while idx < 96:
                                                    mem[idx + _5221 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5221 + ceil32(return_data.size) + 410]
                                                    require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                    require 2 * t < arg5.length
                                                    require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                    require (2 * t) + 1 < arg5.length
                                                    require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                    mem[_5221 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5221 + (4 * ceil32(return_data.size)) + 510 len -_5221 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5221 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5020), address(_4994)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                call address(sha3(0, 17269419903419772280, sha3(address(_5020), address(_4994)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5221 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5221 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5221 + (4 * ceil32(return_data.size)) + 670 len 96]
                                            else:
                                                mem[_5221 + ceil32(return_data.size) + 382] = address(_5020)
                                                mem[_5221 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                                staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                        gas gas_remaining wei
                                                       args address(_5020), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                mem[_5221 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5221 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                                mem[_5221 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                                mem[_5221 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5221 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5221 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5221 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5221 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5221 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5221 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5020):
                                                    mem[_5221 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    if ext_call.return_data[12 len 20] == address(_5020):
                                                        mem[_5221 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    else:
                                                        mem[_5221 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5221 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5020):
                                                        mem[_5221 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    else:
                                                        mem[_5221 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5221 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5221 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5221 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                                idx = 0
                                                while idx < ceil32(return_data.size) + 96:
                                                    mem[idx + _5221 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5221 + (2 * ceil32(return_data.size)) + 410]
                                                    require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                    require 2 * t < arg5.length
                                                    require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                    require (2 * t) + 1 < arg5.length
                                                    require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                    mem[_5221 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5221 + (4 * ceil32(return_data.size)) + 510 len -_5221 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5221 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                    mem[_5221 + (6 * ceil32(return_data.size)) + 766] = 0
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                call address(ext_call.return_data[0]).mem[_5221 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5221 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5221 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                        else:
                                            if not address(_4994):
                                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                            mem[_5221 + ceil32(return_data.size) + 221] = address(_4994)
                                            mem[_5221 + ceil32(return_data.size) + 241] = address(_5020)
                                            mem[_5221 + ceil32(return_data.size) + 189] = 40
                                            mem[_5221 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_5221 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                            mem[_5221 + ceil32(return_data.size) + 314] = sha3(address(_4994), address(_5020))
                                            mem[_5221 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                            mem[_5221 + ceil32(return_data.size) + 261] = 85
                                            if 100000 * 10^18 * _4978 / stor7 * _4986 / _4982 <= 985 * Mask(112, 0, ext_call.return_data[0]):
                                                mem[_5221 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                                mem[_5221 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                                mem[_5221 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5221 + ceil32(return_data.size) + 378] = 96
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_4994), address(_5020)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_4994), address(_5020)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5221 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5221 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_4994), address(_5020)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_4994), address(_5020)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5221 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                                mem[_5221 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5221 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5221 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5020):
                                                    mem[_5221 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    if ext_call.return_data[12 len 20] == address(_5020):
                                                        mem[_5221 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    else:
                                                        mem[_5221 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5221 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5020):
                                                        mem[_5221 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    else:
                                                        mem[_5221 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5221 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5221 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5221 + (4 * ceil32(return_data.size)) + 638] = 96
                                                idx = 0
                                                while idx < 96:
                                                    mem[idx + _5221 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5221 + ceil32(return_data.size) + 410]
                                                    require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                    require 2 * t < arg5.length
                                                    require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                    require (2 * t) + 1 < arg5.length
                                                    require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                    mem[_5221 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5221 + (4 * ceil32(return_data.size)) + 510 len -_5221 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5221 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_4994), address(_5020)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                call address(sha3(0, 17269419903419772280, sha3(address(_4994), address(_5020)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5221 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5221 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5221 + (4 * ceil32(return_data.size)) + 670 len 96]
                                            else:
                                                mem[_5221 + ceil32(return_data.size) + 382] = address(_5020)
                                                mem[_5221 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                                staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                        gas gas_remaining wei
                                                       args address(_5020), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                mem[_5221 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5221 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                                mem[_5221 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                                mem[_5221 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5221 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5221 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5221 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5221 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5221 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5221 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5020):
                                                    mem[_5221 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    if ext_call.return_data[12 len 20] == address(_5020):
                                                        mem[_5221 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    else:
                                                        mem[_5221 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5221 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5020):
                                                        mem[_5221 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    else:
                                                        mem[_5221 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5221 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5221 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5221 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                                idx = 0
                                                while idx < ceil32(return_data.size) + 96:
                                                    mem[idx + _5221 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5221 + (2 * ceil32(return_data.size)) + 410]
                                                    require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                    require 2 * t < arg5.length
                                                    require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                    require (2 * t) + 1 < arg5.length
                                                    require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                    mem[_5221 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5221 + (4 * ceil32(return_data.size)) + 510 len -_5221 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5221 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                    mem[_5221 + (6 * ceil32(return_data.size)) + 766] = 0
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                call address(ext_call.return_data[0]).mem[_5221 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5221 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5221 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                    else:
                                        if address(_5020) < address(_4994):
                                            if not address(_5020):
                                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                            mem[_5221 + ceil32(return_data.size) + 221] = address(_5020)
                                            mem[_5221 + ceil32(return_data.size) + 241] = address(_4994)
                                            mem[_5221 + ceil32(return_data.size) + 189] = 40
                                            mem[_5221 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_5221 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                            mem[_5221 + ceil32(return_data.size) + 314] = sha3(address(_5020), address(_4994))
                                            mem[_5221 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                            mem[_5221 + ceil32(return_data.size) + 261] = 85
                                            if 100000 * 10^18 * _4978 / stor7 * _4986 / _4982 <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                                mem[_5221 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                                mem[_5221 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                                mem[_5221 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5221 + ceil32(return_data.size) + 378] = 96
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5020), address(_4994)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5020), address(_4994)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5221 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5221 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5020), address(_4994)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5020), address(_4994)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5221 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                                mem[_5221 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5221 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5221 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5020):
                                                    mem[_5221 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    if ext_call.return_data[12 len 20] == address(_5020):
                                                        mem[_5221 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    else:
                                                        mem[_5221 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5221 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5020):
                                                        mem[_5221 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    else:
                                                        mem[_5221 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5221 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5221 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5221 + (4 * ceil32(return_data.size)) + 638] = 96
                                                idx = 0
                                                while idx < 96:
                                                    mem[idx + _5221 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5221 + ceil32(return_data.size) + 410]
                                                    require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                    require 2 * t < arg5.length
                                                    require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                    require (2 * t) + 1 < arg5.length
                                                    require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                    mem[_5221 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5221 + (4 * ceil32(return_data.size)) + 510 len -_5221 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5221 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5020), address(_4994)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                call address(sha3(0, 17269419903419772280, sha3(address(_5020), address(_4994)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5221 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5221 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5221 + (4 * ceil32(return_data.size)) + 670 len 96]
                                            else:
                                                mem[_5221 + ceil32(return_data.size) + 382] = address(_5020)
                                                mem[_5221 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                                staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                        gas gas_remaining wei
                                                       args address(_5020), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                mem[_5221 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5221 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                                mem[_5221 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                                mem[_5221 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5221 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5221 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5221 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5221 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5221 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5221 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5020):
                                                    mem[_5221 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    if ext_call.return_data[12 len 20] == address(_5020):
                                                        mem[_5221 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    else:
                                                        mem[_5221 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5221 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5020):
                                                        mem[_5221 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    else:
                                                        mem[_5221 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5221 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5221 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5221 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                                idx = 0
                                                while idx < ceil32(return_data.size) + 96:
                                                    mem[idx + _5221 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5221 + (2 * ceil32(return_data.size)) + 410]
                                                    require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                    require 2 * t < arg5.length
                                                    require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                    require (2 * t) + 1 < arg5.length
                                                    require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                    mem[_5221 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5221 + (4 * ceil32(return_data.size)) + 510 len -_5221 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5221 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                    mem[_5221 + (6 * ceil32(return_data.size)) + 766] = 0
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                call address(ext_call.return_data[0]).mem[_5221 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5221 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5221 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                        else:
                                            if not address(_4994):
                                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                            mem[_5221 + ceil32(return_data.size) + 221] = address(_4994)
                                            mem[_5221 + ceil32(return_data.size) + 241] = address(_5020)
                                            mem[_5221 + ceil32(return_data.size) + 189] = 40
                                            mem[_5221 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_5221 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                            mem[_5221 + ceil32(return_data.size) + 314] = sha3(address(_4994), address(_5020))
                                            mem[_5221 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                            mem[_5221 + ceil32(return_data.size) + 261] = 85
                                            if 100000 * 10^18 * _4978 / stor7 * _4986 / _4982 <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                                mem[_5221 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                                mem[_5221 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                                mem[_5221 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5221 + ceil32(return_data.size) + 378] = 96
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_4994), address(_5020)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_4994), address(_5020)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5221 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5221 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_4994), address(_5020)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_4994), address(_5020)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5221 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                                mem[_5221 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5221 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5221 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5020):
                                                    mem[_5221 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    if ext_call.return_data[12 len 20] == address(_5020):
                                                        mem[_5221 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    else:
                                                        mem[_5221 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5221 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5020):
                                                        mem[_5221 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    else:
                                                        mem[_5221 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5221 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5221 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5221 + (4 * ceil32(return_data.size)) + 638] = 96
                                                idx = 0
                                                while idx < 96:
                                                    mem[idx + _5221 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5221 + ceil32(return_data.size) + 410]
                                                    require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                    require 2 * t < arg5.length
                                                    require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                    require (2 * t) + 1 < arg5.length
                                                    require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                    mem[_5221 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5221 + (4 * ceil32(return_data.size)) + 510 len -_5221 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5221 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_4994), address(_5020)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                call address(sha3(0, 17269419903419772280, sha3(address(_4994), address(_5020)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5221 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5221 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5221 + (4 * ceil32(return_data.size)) + 670 len 96]
                                            else:
                                                mem[_5221 + ceil32(return_data.size) + 382] = address(_5020)
                                                mem[_5221 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                                staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                        gas gas_remaining wei
                                                       args address(_5020), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                mem[_5221 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5221 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                                mem[_5221 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                                mem[_5221 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5221 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5221 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5221 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5221 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5221 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5221 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5020):
                                                    mem[_5221 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    if ext_call.return_data[12 len 20] == address(_5020):
                                                        mem[_5221 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    else:
                                                        mem[_5221 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5221 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5020):
                                                        mem[_5221 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    else:
                                                        mem[_5221 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5221 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5221 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5221 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                                idx = 0
                                                while idx < ceil32(return_data.size) + 96:
                                                    mem[idx + _5221 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5221 + (2 * ceil32(return_data.size)) + 410]
                                                    require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                    require 2 * t < arg5.length
                                                    require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                    require (2 * t) + 1 < arg5.length
                                                    require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                    mem[_5221 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5221 + (4 * ceil32(return_data.size)) + 510 len -_5221 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5221 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                    mem[_5221 + (6 * ceil32(return_data.size)) + 766] = 0
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                call address(ext_call.return_data[0]).mem[_5221 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5221 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5221 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if gas_remaining < stor8:
                                    if arg4.length == t + 1:
                                    require t + 1 < arg4.length
                                    require cd[((32 * t + 2) + arg4 + 36)] == address(cd[((32 * t + 2) + arg4 + 36)])
                                    require 2 * t + 1 < arg5.length
                                    require cd[((64 * t + 1) + arg5 + 36)] == address(cd[((64 * t + 1) + arg5 + 36)])
                                    require (2 * t + 1) + 1 < arg5.length
                                    require cd[((32 * (2 * t + 1) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t + 1) + 1) + arg5 + 36)])
                                    mem[_5221 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                    mem[100] = address(cd[((32 * t + 2) + arg4 + 36)])
                                    require ext_code.size(comptrollerAddress)
                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                            gas gas_remaining wei
                                           args mem[_5221 + (4 * ceil32(return_data.size)) + 510 len -_5221 + -(4 * ceil32(return_data.size)) - 378]
                                    mem[_5221 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                else:
                                    if not address(_4994):
                                        revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                    _5222 = mem[64]
                                    mem[mem[64] + 32] = address(_4994)
                                    mem[mem[64] + 52] = address(_5020)
                                    _5265 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _5267 = sha3(mem[_5265 + 32 len mem[_5265]])
                                    mem[_5222 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_5222 + 105] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                    mem[_5222 + 125] = _5267
                                    mem[_5222 + 157] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                    mem[_5222 + 72] = 85
                                    require ext_code.size(address(sha3(0, 17269419903419772280, _5267, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                    staticcall address(sha3(0, 17269419903419772280, _5267, 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).getReserves() with:
                                            gas gas_remaining wei
                                    mem[_5222 + 189 len 96] = ext_call.return_data[0 len 96]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 96
                                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                    if address(_5020) == address(_4994):
                                        revert with 0, 'PangolinLibrary: IDENTICAL_ADDRESSES'
                                    if address(_5020) == address(_5020):
                                        if address(_5020) < address(_4994):
                                            if not address(_5020):
                                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                            mem[_5222 + ceil32(return_data.size) + 221] = address(_5020)
                                            mem[_5222 + ceil32(return_data.size) + 241] = address(_4994)
                                            mem[_5222 + ceil32(return_data.size) + 189] = 40
                                            mem[_5222 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_5222 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                            mem[_5222 + ceil32(return_data.size) + 314] = sha3(address(_5020), address(_4994))
                                            mem[_5222 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                            mem[_5222 + ceil32(return_data.size) + 261] = 85
                                            if 100000 * 10^18 * _4978 / stor7 * _4986 / _4982 <= 985 * Mask(112, 0, ext_call.return_data[0]):
                                                mem[_5222 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                                mem[_5222 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                                mem[_5222 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5222 + ceil32(return_data.size) + 378] = 96
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5020), address(_4994)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5020), address(_4994)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5222 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5222 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5020), address(_4994)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5020), address(_4994)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5222 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                                mem[_5222 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5222 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5222 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5020):
                                                    mem[_5222 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    if ext_call.return_data[12 len 20] == address(_5020):
                                                        mem[_5222 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    else:
                                                        mem[_5222 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5222 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5020):
                                                        mem[_5222 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    else:
                                                        mem[_5222 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5222 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5222 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5222 + (4 * ceil32(return_data.size)) + 638] = 96
                                                idx = 0
                                                while idx < 96:
                                                    mem[idx + _5222 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5222 + ceil32(return_data.size) + 410]
                                                    require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                    require 2 * t < arg5.length
                                                    require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                    require (2 * t) + 1 < arg5.length
                                                    require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                    mem[_5222 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5222 + (4 * ceil32(return_data.size)) + 510 len -_5222 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5222 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5020), address(_4994)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                call address(sha3(0, 17269419903419772280, sha3(address(_5020), address(_4994)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5222 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5222 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5222 + (4 * ceil32(return_data.size)) + 670 len 96]
                                            else:
                                                mem[_5222 + ceil32(return_data.size) + 382] = address(_5020)
                                                mem[_5222 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                                staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                        gas gas_remaining wei
                                                       args address(_5020), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                mem[_5222 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5222 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                                mem[_5222 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                                mem[_5222 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5222 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5222 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5222 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5222 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5222 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5222 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5020):
                                                    mem[_5222 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    if ext_call.return_data[12 len 20] == address(_5020):
                                                        mem[_5222 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    else:
                                                        mem[_5222 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5222 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5020):
                                                        mem[_5222 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    else:
                                                        mem[_5222 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5222 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5222 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5222 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                                idx = 0
                                                while idx < ceil32(return_data.size) + 96:
                                                    mem[idx + _5222 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5222 + (2 * ceil32(return_data.size)) + 410]
                                                    require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                    require 2 * t < arg5.length
                                                    require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                    require (2 * t) + 1 < arg5.length
                                                    require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                    mem[_5222 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5222 + (4 * ceil32(return_data.size)) + 510 len -_5222 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5222 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                    mem[_5222 + (6 * ceil32(return_data.size)) + 766] = 0
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                call address(ext_call.return_data[0]).mem[_5222 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5222 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5222 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                        else:
                                            if not address(_4994):
                                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                            mem[_5222 + ceil32(return_data.size) + 221] = address(_4994)
                                            mem[_5222 + ceil32(return_data.size) + 241] = address(_5020)
                                            mem[_5222 + ceil32(return_data.size) + 189] = 40
                                            mem[_5222 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_5222 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                            mem[_5222 + ceil32(return_data.size) + 314] = sha3(address(_4994), address(_5020))
                                            mem[_5222 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                            mem[_5222 + ceil32(return_data.size) + 261] = 85
                                            if 100000 * 10^18 * _4978 / stor7 * _4986 / _4982 <= 985 * Mask(112, 0, ext_call.return_data[0]):
                                                mem[_5222 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                                mem[_5222 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                                mem[_5222 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5222 + ceil32(return_data.size) + 378] = 96
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_4994), address(_5020)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_4994), address(_5020)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5222 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5222 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_4994), address(_5020)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_4994), address(_5020)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5222 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                                mem[_5222 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5222 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5222 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5020):
                                                    mem[_5222 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    if ext_call.return_data[12 len 20] == address(_5020):
                                                        mem[_5222 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    else:
                                                        mem[_5222 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5222 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5020):
                                                        mem[_5222 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    else:
                                                        mem[_5222 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5222 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5222 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5222 + (4 * ceil32(return_data.size)) + 638] = 96
                                                idx = 0
                                                while idx < 96:
                                                    mem[idx + _5222 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5222 + ceil32(return_data.size) + 410]
                                                    require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                    require 2 * t < arg5.length
                                                    require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                    require (2 * t) + 1 < arg5.length
                                                    require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                    mem[_5222 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5222 + (4 * ceil32(return_data.size)) + 510 len -_5222 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5222 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_4994), address(_5020)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                call address(sha3(0, 17269419903419772280, sha3(address(_4994), address(_5020)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5222 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5222 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5222 + (4 * ceil32(return_data.size)) + 670 len 96]
                                            else:
                                                mem[_5222 + ceil32(return_data.size) + 382] = address(_5020)
                                                mem[_5222 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                                staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                        gas gas_remaining wei
                                                       args address(_5020), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                mem[_5222 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5222 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                                mem[_5222 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                                mem[_5222 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5222 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5222 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5222 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5222 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5222 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5222 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5020):
                                                    mem[_5222 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    if ext_call.return_data[12 len 20] == address(_5020):
                                                        mem[_5222 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    else:
                                                        mem[_5222 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5222 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5020):
                                                        mem[_5222 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    else:
                                                        mem[_5222 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5222 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5222 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5222 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                                idx = 0
                                                while idx < ceil32(return_data.size) + 96:
                                                    mem[idx + _5222 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5222 + (2 * ceil32(return_data.size)) + 410]
                                                    require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                    require 2 * t < arg5.length
                                                    require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                    require (2 * t) + 1 < arg5.length
                                                    require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                    mem[_5222 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5222 + (4 * ceil32(return_data.size)) + 510 len -_5222 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5222 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                    mem[_5222 + (6 * ceil32(return_data.size)) + 766] = 0
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                call address(ext_call.return_data[0]).mem[_5222 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5222 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5222 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                    else:
                                        if address(_5020) < address(_4994):
                                            if not address(_5020):
                                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                            mem[_5222 + ceil32(return_data.size) + 221] = address(_5020)
                                            mem[_5222 + ceil32(return_data.size) + 241] = address(_4994)
                                            mem[_5222 + ceil32(return_data.size) + 189] = 40
                                            mem[_5222 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_5222 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                            mem[_5222 + ceil32(return_data.size) + 314] = sha3(address(_5020), address(_4994))
                                            mem[_5222 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                            mem[_5222 + ceil32(return_data.size) + 261] = 85
                                            if 100000 * 10^18 * _4978 / stor7 * _4986 / _4982 <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                                mem[_5222 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                                mem[_5222 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                                mem[_5222 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5222 + ceil32(return_data.size) + 378] = 96
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5020), address(_4994)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5020), address(_4994)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5222 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5222 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5020), address(_4994)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_5020), address(_4994)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5222 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                                mem[_5222 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5222 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5222 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5020):
                                                    mem[_5222 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    if ext_call.return_data[12 len 20] == address(_5020):
                                                        mem[_5222 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    else:
                                                        mem[_5222 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5222 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5020):
                                                        mem[_5222 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    else:
                                                        mem[_5222 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5222 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5222 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5222 + (4 * ceil32(return_data.size)) + 638] = 96
                                                idx = 0
                                                while idx < 96:
                                                    mem[idx + _5222 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5222 + ceil32(return_data.size) + 410]
                                                    require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                    require 2 * t < arg5.length
                                                    require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                    require (2 * t) + 1 < arg5.length
                                                    require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                    mem[_5222 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5222 + (4 * ceil32(return_data.size)) + 510 len -_5222 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5222 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_5020), address(_4994)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                call address(sha3(0, 17269419903419772280, sha3(address(_5020), address(_4994)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5222 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5222 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5222 + (4 * ceil32(return_data.size)) + 670 len 96]
                                            else:
                                                mem[_5222 + ceil32(return_data.size) + 382] = address(_5020)
                                                mem[_5222 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                                staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                        gas gas_remaining wei
                                                       args address(_5020), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                mem[_5222 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5222 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                                mem[_5222 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                                mem[_5222 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5222 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5222 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5222 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5222 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5222 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5222 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5020):
                                                    mem[_5222 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    if ext_call.return_data[12 len 20] == address(_5020):
                                                        mem[_5222 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    else:
                                                        mem[_5222 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5222 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5020):
                                                        mem[_5222 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    else:
                                                        mem[_5222 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5222 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5222 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5222 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                                idx = 0
                                                while idx < ceil32(return_data.size) + 96:
                                                    mem[idx + _5222 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5222 + (2 * ceil32(return_data.size)) + 410]
                                                    require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                    require 2 * t < arg5.length
                                                    require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                    require (2 * t) + 1 < arg5.length
                                                    require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                    mem[_5222 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5222 + (4 * ceil32(return_data.size)) + 510 len -_5222 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5222 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                    mem[_5222 + (6 * ceil32(return_data.size)) + 766] = 0
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                call address(ext_call.return_data[0]).mem[_5222 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5222 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5222 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                        else:
                                            if not address(_4994):
                                                revert with 0, 'PangolinLibrary: ZERO_ADDRESS'
                                            mem[_5222 + ceil32(return_data.size) + 221] = address(_4994)
                                            mem[_5222 + ceil32(return_data.size) + 241] = address(_5020)
                                            mem[_5222 + ceil32(return_data.size) + 189] = 40
                                            mem[_5222 + ceil32(return_data.size) + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_5222 + ceil32(return_data.size) + 294] = 0xefa94de7a4656d787667c749f7e1223d71e9fd88000000000000000000000000
                                            mem[_5222 + ceil32(return_data.size) + 314] = sha3(address(_4994), address(_5020))
                                            mem[_5222 + ceil32(return_data.size) + 346] = 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545
                                            mem[_5222 + ceil32(return_data.size) + 261] = 85
                                            if 100000 * 10^18 * _4978 / stor7 * _4986 / _4982 <= 985 * Mask(112, 0, ext_call.return_data[32]):
                                                mem[_5222 + ceil32(return_data.size) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                                mem[_5222 + ceil32(return_data.size) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                                mem[_5222 + ceil32(return_data.size) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5222 + ceil32(return_data.size) + 378] = 96
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_4994), address(_5020)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_4994), address(_5020)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5222 + ceil32(return_data.size) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5222 + (2 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_4994), address(_5020)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                staticcall address(sha3(0, 17269419903419772280, sha3(address(_4994), address(_5020)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5222 + (2 * ceil32(return_data.size)) + 510 len ceil32(return_data.size)]
                                                mem[_5222 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5222 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5222 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5020):
                                                    mem[_5222 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    if ext_call.return_data[12 len 20] == address(_5020):
                                                        mem[_5222 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    else:
                                                        mem[_5222 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5222 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5020):
                                                        mem[_5222 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    else:
                                                        mem[_5222 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5222 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5222 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5222 + (4 * ceil32(return_data.size)) + 638] = 96
                                                idx = 0
                                                while idx < 96:
                                                    mem[idx + _5222 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5222 + ceil32(return_data.size) + 410]
                                                    require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                    require 2 * t < arg5.length
                                                    require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                    require (2 * t) + 1 < arg5.length
                                                    require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                    mem[_5222 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5222 + (4 * ceil32(return_data.size)) + 510 len -_5222 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5222 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                require ext_code.size(address(sha3(0, 17269419903419772280, sha3(address(_4994), address(_5020)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)))
                                                call address(sha3(0, 17269419903419772280, sha3(address(_4994), address(_5020)), 0x40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545)).mem[_5222 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5222 + (4 * ceil32(return_data.size)) + 510 len 96], 128, 96, mem[_5222 + (4 * ceil32(return_data.size)) + 670 len 96]
                                            else:
                                                mem[_5222 + ceil32(return_data.size) + 382] = address(_5020)
                                                mem[_5222 + ceil32(return_data.size) + 414] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                require ext_code.size(0xefa94de7a4656d787667c749f7e1223d71e9fd88)
                                                staticcall 0xefa94de7a4656d787667c749f7e1223d71e9fd88.getPair(address rg1, address rg2) with:
                                                        gas gas_remaining wei
                                                       args address(_5020), 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                                mem[_5222 + ceil32(return_data.size) + 378] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5222 + (2 * ceil32(return_data.size)) + 410] = address(cd[((32 * s) + arg4 + 36)])
                                                mem[_5222 + (2 * ceil32(return_data.size)) + 442] = address(cd[((64 * t) + arg5 + 36)])
                                                mem[_5222 + (2 * ceil32(return_data.size)) + 474] = address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                mem[_5222 + (2 * ceil32(return_data.size)) + 378] = ceil32(return_data.size) + 96
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token0() with:
                                                        gas gas_remaining wei
                                                mem[_5222 + (2 * ceil32(return_data.size)) + 506] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5222 + (4 * ceil32(return_data.size)) + 506] = 0xd21220a700000000000000000000000000000000000000000000000000000000
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                staticcall address(ext_call.return_data[0]).token1() with:
                                                        gas gas_remaining wei
                                                       args mem[_5222 + (4 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = _5222 + (4 * ceil32(return_data.size)) + 506
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                mem[_5222 + (4 * ceil32(return_data.size)) + 506] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                if ext_call.return_data[12 len 20] == address(_5020):
                                                    mem[_5222 + (4 * ceil32(return_data.size)) + 510] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    if ext_call.return_data[12 len 20] == address(_5020):
                                                        mem[_5222 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    else:
                                                        mem[_5222 + (4 * ceil32(return_data.size)) + 542] = 0
                                                else:
                                                    mem[_5222 + (4 * ceil32(return_data.size)) + 510] = 0
                                                    if ext_call.return_data[12 len 20] == address(_5020):
                                                        mem[_5222 + (4 * ceil32(return_data.size)) + 542] = 10^18 * _4978 / stor7 * _4986 / _4982
                                                    else:
                                                        mem[_5222 + (4 * ceil32(return_data.size)) + 542] = 0
                                                mem[_5222 + (4 * ceil32(return_data.size)) + 574] = this.address
                                                mem[_5222 + (4 * ceil32(return_data.size)) + 606] = 128
                                                mem[_5222 + (4 * ceil32(return_data.size)) + 638] = ceil32(return_data.size) + 96
                                                idx = 0
                                                while idx < ceil32(return_data.size) + 96:
                                                    mem[idx + _5222 + (4 * ceil32(return_data.size)) + 670] = mem[idx + _5222 + (2 * ceil32(return_data.size)) + 410]
                                                    require cd[((32 * s) + arg4 + 36)] == address(cd[((32 * s) + arg4 + 36)])
                                                    require 2 * t < arg5.length
                                                    require cd[((64 * t) + arg5 + 36)] == address(cd[((64 * t) + arg5 + 36)])
                                                    require (2 * t) + 1 < arg5.length
                                                    require cd[((32 * (2 * t) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t) + 1) + arg5 + 36)])
                                                    mem[_5222 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                                    mem[100] = address(cd[((32 * s) + arg4 + 36)])
                                                    require ext_code.size(comptrollerAddress)
                                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                                            gas gas_remaining wei
                                                           args mem[_5222 + (4 * ceil32(return_data.size)) + 510 len -_5222 + -(4 * ceil32(return_data.size)) - 378]
                                                    mem[_5222 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
                                                    idx = idx + 32
                                                    continue 
                                                if ceil32(ceil32(return_data.size)) + 3 > ceil32(return_data.size) + 96:
                                                    mem[_5222 + (6 * ceil32(return_data.size)) + 766] = 0
                                                require ext_code.size(address(ext_call.return_data[0]))
                                                call address(ext_call.return_data[0]).mem[_5222 + (4 * ceil32(return_data.size)) + 506 len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[_5222 + (4 * ceil32(return_data.size)) + 510 len 96], 128, ceil32(return_data.size) + 96, mem[_5222 + (4 * ceil32(return_data.size)) + 670 len ceil32(ceil32(return_data.size)) + 3]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if gas_remaining < stor8:
                                    if arg4.length == t + 1:
                                    require t + 1 < arg4.length
                                    require cd[((32 * t + 2) + arg4 + 36)] == address(cd[((32 * t + 2) + arg4 + 36)])
                                    require 2 * t + 1 < arg5.length
                                    require cd[((64 * t + 1) + arg5 + 36)] == address(cd[((64 * t + 1) + arg5 + 36)])
                                    require (2 * t + 1) + 1 < arg5.length
                                    require cd[((32 * (2 * t + 1) + 1) + arg5 + 36)] == address(cd[((32 * (2 * t + 1) + 1) + arg5 + 36)])
                                    mem[_5222 + (4 * ceil32(return_data.size)) + 506] = 0x5ec88c7900000000000000000000000000000000000000000000000000000000
                                    mem[100] = address(cd[((32 * t + 2) + arg4 + 36)])
                                    require ext_code.size(comptrollerAddress)
                                    staticcall comptrollerAddress.getAccountLiquidity(address rg1) with:
                                            gas gas_remaining wei
                                           args mem[_5222 + (4 * ceil32(return_data.size)) + 510 len -_5222 + -(4 * ceil32(return_data.size)) - 378]
                                    mem[_5222 + (4 * ceil32(return_data.size)) + 506 len 96] = ext_call.return_data[0 len 96]
        s = t + 1
        t = t + 1
        continue 
    revert with ext_call.return_data[0 len return_data.size]
}



}
