contract main {




// =====================  Runtime code  =====================


#
#  - withdraw(uint256 arg1)
#
const native = 0x8e5063634692c583a78c283b9e24489b8defa0c6


address owner;
uint256 stor1;
address rewardTokenAddress;
uint256 rewardPerSec;
array of struct poolInfo;
mapping of struct userInfo;
uint256 stor6;
uint256 startTimestamp;
uint256 bonusEndTimestamp;

function poolInfo(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 < poolInfo.length
    return poolInfo[arg1].field_0, poolInfo[arg1].field_256, poolInfo[arg1].field_512, poolInfo[arg1].field_768
}

function userInfo(address arg1) payable {
    require calldata.size - 4 >= 32
    return userInfo[arg1].field_0, userInfo[arg1].field_256
}

function rewardPerSec() payable {
    return rewardPerSec
}

function owner() payable {
    return owner
}

function bonusEndTimestamp() payable {
    return bonusEndTimestamp
}

function startTimestamp() payable {
    return startTimestamp
}

function rewardToken() payable {
    return rewardTokenAddress
}

function _fallback() payable {
    revert
}

function stopReward() payable {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    bonusEndTimestamp = block.timestamp
}

function renounceOwnership() payable {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    emit OwnershipTransferred(owner, 0);
    owner = 0
}

function getMultiplier(uint256 arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    if arg2 <= bonusEndTimestamp:
        if arg1 > arg2:
            revert with 0, 'SafeMath: subtraction overflow'
        return (arg2 - arg1)
    if arg1 >= bonusEndTimestamp:
        return 0
    if arg1 > bonusEndTimestamp:
        revert with 0, 'SafeMath: subtraction overflow'
    return (bonusEndTimestamp - arg1)
}

function transferOwnership(address arg1) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    38,
                    0x644f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573,
                    mem[202 len 26]
    emit OwnershipTransferred(owner, arg1);
    owner = arg1
}

function sub_a1bb5cd8(?) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if arg1 <= bonusEndTimestamp:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    52,
                    0x776e657720626f6e757320656e642074696d657374616d70206d7573742062652067726561746572207468616e2063757272656e,
                    mem[216 len 12]
    bonusEndTimestamp = arg1
    emit 0x8e27022c: arg1, msg.sender
}

function emergencyWithdraw() payable {
    if stor1 == 2:
        revert with 0, 'ReentrancyGuard: reentrant call'
    stor1 = 2
    require 0 < poolInfo.length
    userInfo[address(msg.sender)].field_0 = 0
    userInfo[address(msg.sender)].field_256 = 0
    if eth.balance(this.address) < 0:
        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
    if ext_code.size(address(poolInfo.field_0)) <= 0:
        revert with 0, 'Address: call to non-contract'
    mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, userInfo[address(msg.sender)].field_32
    call address(poolInfo.field_0) with:
       funct uint32(msg.sender)
         gas gas_remaining wei
        args userInfo[address(msg.sender)].field_0, mem[324 len 4]
    if not return_data.size:
        if not ext_call.success:
            revert with unknown_0xa9059cbb(?????), msg.sender, userInfo[address(msg.sender)].field_0
        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
            revert with 0, 32, 42, 0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
    else:
        mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
        if not ext_call.success:
            if return_data.size > 0:
                revert with ext_call.return_data[0 len return_data.size]
            revert with 0, 'SafeBEP20: low-level call failed'
        if return_data.size > 0:
            require return_data.size >= 32
            if not mem[292]:
                revert with 0, 
                            32,
                            42,
                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                            mem[ceil32(return_data.size) + 371 len 22]
    emit EmergencyWithdraw(userInfo[address(msg.sender)].field_0, msg.sender);
    stor1 = 1
}

function emergencyRewardWithdraw(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    require ext_code.size(rewardTokenAddress)
    staticcall rewardTokenAddress.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if arg1 >= ext_call.return_data[0]:
        revert with 0, 'not enough token'
    if eth.balance(this.address) < 0:
        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
    if ext_code.size(rewardTokenAddress) <= 0:
        revert with 0, 'Address: call to non-contract'
    mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, arg1) >> 32
    call rewardTokenAddress with:
       funct uint32(msg.sender)
         gas gas_remaining wei
        args Mask(224, 32, arg1) << 224, mem[324 len 4]
    if not return_data.size:
        if not ext_call.success:
            revert with unknown_0xa9059cbb(?????), msg.sender, arg1
        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
            revert with 0, 32, 42, 0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
    else:
        mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
        if not ext_call.success:
            if return_data.size > 0:
                revert with ext_call.return_data[0 len return_data.size]
            revert with 0, 'SafeBEP20: low-level call failed'
        if return_data.size > 0:
            require return_data.size >= 32
            if not mem[292]:
                revert with 0, 
                            32,
                            42,
                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                            mem[ceil32(return_data.size) + 371 len 22]
}

function massUpdatePools() payable {
    idx = 0
    while idx < poolInfo.length:
        mem[0] = 4
        if block.timestamp > poolInfo[idx].field_512:
            mem[100] = this.address
            require ext_code.size(poolInfo[idx].field_0)
            staticcall poolInfo[idx].field_0.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0]:
                if block.timestamp <= bonusEndTimestamp:
                    if poolInfo[idx].field_512 > block.timestamp:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if not block.timestamp - poolInfo[idx].field_512:
                        if stor6 <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require stor6
                        if not 0 / stor6:
                            if ext_call.return_data[0] <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_call.return_data[0]
                            if poolInfo[idx].field_768 + (0 / ext_call.return_data[0]) < poolInfo[idx].field_768:
                                revert with 0, 'SafeMath: addition overflow'
                            poolInfo[idx].field_768 += 0 / ext_call.return_data[0]
                        else:
                            require 0 / stor6
                            if 10^12 * 0 / stor6 / 0 / stor6 != 10^12:
                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[197 len 31]
                            if ext_call.return_data[0] <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_call.return_data[0]
                            if poolInfo[idx].field_768 + (10^12 * 0 / stor6 / ext_call.return_data[0]) < poolInfo[idx].field_768:
                                revert with 0, 'SafeMath: addition overflow'
                            poolInfo[idx].field_768 += 10^12 * 0 / stor6 / ext_call.return_data[0]
                    else:
                        require block.timestamp - poolInfo[idx].field_512
                        if (block.timestamp * rewardPerSec) - (poolInfo[idx].field_512 * rewardPerSec) / block.timestamp - poolInfo[idx].field_512 != rewardPerSec:
                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[197 len 31]
                        if not (block.timestamp * rewardPerSec) - (poolInfo[idx].field_512 * rewardPerSec):
                            if stor6 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require stor6
                            if not 0 / stor6:
                                if ext_call.return_data[0] <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_call.return_data[0]
                                if poolInfo[idx].field_768 + (0 / ext_call.return_data[0]) < poolInfo[idx].field_768:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[idx].field_768 += 0 / ext_call.return_data[0]
                            else:
                                require 0 / stor6
                                if 10^12 * 0 / stor6 / 0 / stor6 != 10^12:
                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[197 len 31]
                                if ext_call.return_data[0] <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_call.return_data[0]
                                if poolInfo[idx].field_768 + (10^12 * 0 / stor6 / ext_call.return_data[0]) < poolInfo[idx].field_768:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[idx].field_768 += 10^12 * 0 / stor6 / ext_call.return_data[0]
                        else:
                            require (block.timestamp * rewardPerSec) - (poolInfo[idx].field_512 * rewardPerSec)
                            if (block.timestamp * rewardPerSec * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * rewardPerSec * poolInfo[idx].field_256) / (block.timestamp * rewardPerSec) - (poolInfo[idx].field_512 * rewardPerSec) != poolInfo[idx].field_256:
                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[197 len 31]
                            if stor6 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require stor6
                            if not (block.timestamp * rewardPerSec * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * rewardPerSec * poolInfo[idx].field_256) / stor6:
                                if ext_call.return_data[0] <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_call.return_data[0]
                                if poolInfo[idx].field_768 + (0 / ext_call.return_data[0]) < poolInfo[idx].field_768:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[idx].field_768 += 0 / ext_call.return_data[0]
                            else:
                                require (block.timestamp * rewardPerSec * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * rewardPerSec * poolInfo[idx].field_256) / stor6
                                if 10^12 * (block.timestamp * rewardPerSec * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * rewardPerSec * poolInfo[idx].field_256) / stor6 / (block.timestamp * rewardPerSec * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * rewardPerSec * poolInfo[idx].field_256) / stor6 != 10^12:
                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[197 len 31]
                                if ext_call.return_data[0] <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_call.return_data[0]
                                if poolInfo[idx].field_768 + (10^12 * (block.timestamp * rewardPerSec * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * rewardPerSec * poolInfo[idx].field_256) / stor6 / ext_call.return_data[0]) < poolInfo[idx].field_768:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[idx].field_768 += 10^12 * (block.timestamp * rewardPerSec * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * rewardPerSec * poolInfo[idx].field_256) / stor6 / ext_call.return_data[0]
                else:
                    if poolInfo[idx].field_512 >= bonusEndTimestamp:
                        if stor6 <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require stor6
                        if not 0 / stor6:
                            if ext_call.return_data[0] <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_call.return_data[0]
                            if poolInfo[idx].field_768 + (0 / ext_call.return_data[0]) < poolInfo[idx].field_768:
                                revert with 0, 'SafeMath: addition overflow'
                            poolInfo[idx].field_768 += 0 / ext_call.return_data[0]
                        else:
                            require 0 / stor6
                            if 10^12 * 0 / stor6 / 0 / stor6 != 10^12:
                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[197 len 31]
                            if ext_call.return_data[0] <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_call.return_data[0]
                            if poolInfo[idx].field_768 + (10^12 * 0 / stor6 / ext_call.return_data[0]) < poolInfo[idx].field_768:
                                revert with 0, 'SafeMath: addition overflow'
                            poolInfo[idx].field_768 += 10^12 * 0 / stor6 / ext_call.return_data[0]
                    else:
                        if poolInfo[idx].field_512 > bonusEndTimestamp:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if not bonusEndTimestamp - poolInfo[idx].field_512:
                            if stor6 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require stor6
                            if not 0 / stor6:
                                if ext_call.return_data[0] <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_call.return_data[0]
                                if poolInfo[idx].field_768 + (0 / ext_call.return_data[0]) < poolInfo[idx].field_768:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[idx].field_768 += 0 / ext_call.return_data[0]
                            else:
                                require 0 / stor6
                                if 10^12 * 0 / stor6 / 0 / stor6 != 10^12:
                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[197 len 31]
                                if ext_call.return_data[0] <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_call.return_data[0]
                                if poolInfo[idx].field_768 + (10^12 * 0 / stor6 / ext_call.return_data[0]) < poolInfo[idx].field_768:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[idx].field_768 += 10^12 * 0 / stor6 / ext_call.return_data[0]
                        else:
                            require bonusEndTimestamp - poolInfo[idx].field_512
                            if (bonusEndTimestamp * rewardPerSec) - (poolInfo[idx].field_512 * rewardPerSec) / bonusEndTimestamp - poolInfo[idx].field_512 != rewardPerSec:
                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[197 len 31]
                            if not (bonusEndTimestamp * rewardPerSec) - (poolInfo[idx].field_512 * rewardPerSec):
                                if stor6 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require stor6
                                if not 0 / stor6:
                                    if ext_call.return_data[0] <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_call.return_data[0]
                                    if poolInfo[idx].field_768 + (0 / ext_call.return_data[0]) < poolInfo[idx].field_768:
                                        revert with 0, 'SafeMath: addition overflow'
                                    poolInfo[idx].field_768 += 0 / ext_call.return_data[0]
                                else:
                                    require 0 / stor6
                                    if 10^12 * 0 / stor6 / 0 / stor6 != 10^12:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[197 len 31]
                                    if ext_call.return_data[0] <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_call.return_data[0]
                                    if poolInfo[idx].field_768 + (10^12 * 0 / stor6 / ext_call.return_data[0]) < poolInfo[idx].field_768:
                                        revert with 0, 'SafeMath: addition overflow'
                                    poolInfo[idx].field_768 += 10^12 * 0 / stor6 / ext_call.return_data[0]
                            else:
                                require (bonusEndTimestamp * rewardPerSec) - (poolInfo[idx].field_512 * rewardPerSec)
                                if (bonusEndTimestamp * rewardPerSec * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * rewardPerSec * poolInfo[idx].field_256) / (bonusEndTimestamp * rewardPerSec) - (poolInfo[idx].field_512 * rewardPerSec) != poolInfo[idx].field_256:
                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[197 len 31]
                                if stor6 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require stor6
                                if not (bonusEndTimestamp * rewardPerSec * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * rewardPerSec * poolInfo[idx].field_256) / stor6:
                                    if ext_call.return_data[0] <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_call.return_data[0]
                                    if poolInfo[idx].field_768 + (0 / ext_call.return_data[0]) < poolInfo[idx].field_768:
                                        revert with 0, 'SafeMath: addition overflow'
                                    poolInfo[idx].field_768 += 0 / ext_call.return_data[0]
                                else:
                                    require (bonusEndTimestamp * rewardPerSec * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * rewardPerSec * poolInfo[idx].field_256) / stor6
                                    if 10^12 * (bonusEndTimestamp * rewardPerSec * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * rewardPerSec * poolInfo[idx].field_256) / stor6 / (bonusEndTimestamp * rewardPerSec * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * rewardPerSec * poolInfo[idx].field_256) / stor6 != 10^12:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[197 len 31]
                                    if ext_call.return_data[0] <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_call.return_data[0]
                                    if poolInfo[idx].field_768 + (10^12 * (bonusEndTimestamp * rewardPerSec * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * rewardPerSec * poolInfo[idx].field_256) / stor6 / ext_call.return_data[0]) < poolInfo[idx].field_768:
                                        revert with 0, 'SafeMath: addition overflow'
                                    poolInfo[idx].field_768 += 10^12 * (bonusEndTimestamp * rewardPerSec * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * rewardPerSec * poolInfo[idx].field_256) / stor6 / ext_call.return_data[0]
            poolInfo[idx].field_512 = block.timestamp
        idx = idx + 1
        continue 
}

function updateEmissionRate(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    idx = 0
    while idx < poolInfo.length:
        mem[0] = 4
        if block.timestamp > poolInfo[idx].field_512:
            mem[100] = this.address
            require ext_code.size(poolInfo[idx].field_0)
            staticcall poolInfo[idx].field_0.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0]:
                if block.timestamp <= bonusEndTimestamp:
                    if poolInfo[idx].field_512 > block.timestamp:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if not block.timestamp - poolInfo[idx].field_512:
                        if stor6 <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require stor6
                        if not 0 / stor6:
                            if ext_call.return_data[0] <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_call.return_data[0]
                            if poolInfo[idx].field_768 + (0 / ext_call.return_data[0]) < poolInfo[idx].field_768:
                                revert with 0, 'SafeMath: addition overflow'
                            poolInfo[idx].field_768 += 0 / ext_call.return_data[0]
                        else:
                            require 0 / stor6
                            if 10^12 * 0 / stor6 / 0 / stor6 != 10^12:
                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[197 len 31]
                            if ext_call.return_data[0] <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_call.return_data[0]
                            if poolInfo[idx].field_768 + (10^12 * 0 / stor6 / ext_call.return_data[0]) < poolInfo[idx].field_768:
                                revert with 0, 'SafeMath: addition overflow'
                            poolInfo[idx].field_768 += 10^12 * 0 / stor6 / ext_call.return_data[0]
                    else:
                        require block.timestamp - poolInfo[idx].field_512
                        if (block.timestamp * rewardPerSec) - (poolInfo[idx].field_512 * rewardPerSec) / block.timestamp - poolInfo[idx].field_512 != rewardPerSec:
                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[197 len 31]
                        if not (block.timestamp * rewardPerSec) - (poolInfo[idx].field_512 * rewardPerSec):
                            if stor6 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require stor6
                            if not 0 / stor6:
                                if ext_call.return_data[0] <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_call.return_data[0]
                                if poolInfo[idx].field_768 + (0 / ext_call.return_data[0]) < poolInfo[idx].field_768:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[idx].field_768 += 0 / ext_call.return_data[0]
                            else:
                                require 0 / stor6
                                if 10^12 * 0 / stor6 / 0 / stor6 != 10^12:
                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[197 len 31]
                                if ext_call.return_data[0] <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_call.return_data[0]
                                if poolInfo[idx].field_768 + (10^12 * 0 / stor6 / ext_call.return_data[0]) < poolInfo[idx].field_768:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[idx].field_768 += 10^12 * 0 / stor6 / ext_call.return_data[0]
                        else:
                            require (block.timestamp * rewardPerSec) - (poolInfo[idx].field_512 * rewardPerSec)
                            if (block.timestamp * rewardPerSec * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * rewardPerSec * poolInfo[idx].field_256) / (block.timestamp * rewardPerSec) - (poolInfo[idx].field_512 * rewardPerSec) != poolInfo[idx].field_256:
                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[197 len 31]
                            if stor6 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require stor6
                            if not (block.timestamp * rewardPerSec * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * rewardPerSec * poolInfo[idx].field_256) / stor6:
                                if ext_call.return_data[0] <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_call.return_data[0]
                                if poolInfo[idx].field_768 + (0 / ext_call.return_data[0]) < poolInfo[idx].field_768:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[idx].field_768 += 0 / ext_call.return_data[0]
                            else:
                                require (block.timestamp * rewardPerSec * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * rewardPerSec * poolInfo[idx].field_256) / stor6
                                if 10^12 * (block.timestamp * rewardPerSec * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * rewardPerSec * poolInfo[idx].field_256) / stor6 / (block.timestamp * rewardPerSec * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * rewardPerSec * poolInfo[idx].field_256) / stor6 != 10^12:
                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[197 len 31]
                                if ext_call.return_data[0] <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_call.return_data[0]
                                if poolInfo[idx].field_768 + (10^12 * (block.timestamp * rewardPerSec * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * rewardPerSec * poolInfo[idx].field_256) / stor6 / ext_call.return_data[0]) < poolInfo[idx].field_768:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[idx].field_768 += 10^12 * (block.timestamp * rewardPerSec * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * rewardPerSec * poolInfo[idx].field_256) / stor6 / ext_call.return_data[0]
                else:
                    if poolInfo[idx].field_512 >= bonusEndTimestamp:
                        if stor6 <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require stor6
                        if not 0 / stor6:
                            if ext_call.return_data[0] <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_call.return_data[0]
                            if poolInfo[idx].field_768 + (0 / ext_call.return_data[0]) < poolInfo[idx].field_768:
                                revert with 0, 'SafeMath: addition overflow'
                            poolInfo[idx].field_768 += 0 / ext_call.return_data[0]
                        else:
                            require 0 / stor6
                            if 10^12 * 0 / stor6 / 0 / stor6 != 10^12:
                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[197 len 31]
                            if ext_call.return_data[0] <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_call.return_data[0]
                            if poolInfo[idx].field_768 + (10^12 * 0 / stor6 / ext_call.return_data[0]) < poolInfo[idx].field_768:
                                revert with 0, 'SafeMath: addition overflow'
                            poolInfo[idx].field_768 += 10^12 * 0 / stor6 / ext_call.return_data[0]
                    else:
                        if poolInfo[idx].field_512 > bonusEndTimestamp:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if not bonusEndTimestamp - poolInfo[idx].field_512:
                            if stor6 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require stor6
                            if not 0 / stor6:
                                if ext_call.return_data[0] <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_call.return_data[0]
                                if poolInfo[idx].field_768 + (0 / ext_call.return_data[0]) < poolInfo[idx].field_768:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[idx].field_768 += 0 / ext_call.return_data[0]
                            else:
                                require 0 / stor6
                                if 10^12 * 0 / stor6 / 0 / stor6 != 10^12:
                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[197 len 31]
                                if ext_call.return_data[0] <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_call.return_data[0]
                                if poolInfo[idx].field_768 + (10^12 * 0 / stor6 / ext_call.return_data[0]) < poolInfo[idx].field_768:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[idx].field_768 += 10^12 * 0 / stor6 / ext_call.return_data[0]
                        else:
                            require bonusEndTimestamp - poolInfo[idx].field_512
                            if (bonusEndTimestamp * rewardPerSec) - (poolInfo[idx].field_512 * rewardPerSec) / bonusEndTimestamp - poolInfo[idx].field_512 != rewardPerSec:
                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[197 len 31]
                            if not (bonusEndTimestamp * rewardPerSec) - (poolInfo[idx].field_512 * rewardPerSec):
                                if stor6 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require stor6
                                if not 0 / stor6:
                                    if ext_call.return_data[0] <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_call.return_data[0]
                                    if poolInfo[idx].field_768 + (0 / ext_call.return_data[0]) < poolInfo[idx].field_768:
                                        revert with 0, 'SafeMath: addition overflow'
                                    poolInfo[idx].field_768 += 0 / ext_call.return_data[0]
                                else:
                                    require 0 / stor6
                                    if 10^12 * 0 / stor6 / 0 / stor6 != 10^12:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[197 len 31]
                                    if ext_call.return_data[0] <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_call.return_data[0]
                                    if poolInfo[idx].field_768 + (10^12 * 0 / stor6 / ext_call.return_data[0]) < poolInfo[idx].field_768:
                                        revert with 0, 'SafeMath: addition overflow'
                                    poolInfo[idx].field_768 += 10^12 * 0 / stor6 / ext_call.return_data[0]
                            else:
                                require (bonusEndTimestamp * rewardPerSec) - (poolInfo[idx].field_512 * rewardPerSec)
                                if (bonusEndTimestamp * rewardPerSec * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * rewardPerSec * poolInfo[idx].field_256) / (bonusEndTimestamp * rewardPerSec) - (poolInfo[idx].field_512 * rewardPerSec) != poolInfo[idx].field_256:
                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[197 len 31]
                                if stor6 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require stor6
                                if not (bonusEndTimestamp * rewardPerSec * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * rewardPerSec * poolInfo[idx].field_256) / stor6:
                                    if ext_call.return_data[0] <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_call.return_data[0]
                                    if poolInfo[idx].field_768 + (0 / ext_call.return_data[0]) < poolInfo[idx].field_768:
                                        revert with 0, 'SafeMath: addition overflow'
                                    poolInfo[idx].field_768 += 0 / ext_call.return_data[0]
                                else:
                                    require (bonusEndTimestamp * rewardPerSec * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * rewardPerSec * poolInfo[idx].field_256) / stor6
                                    if 10^12 * (bonusEndTimestamp * rewardPerSec * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * rewardPerSec * poolInfo[idx].field_256) / stor6 / (bonusEndTimestamp * rewardPerSec * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * rewardPerSec * poolInfo[idx].field_256) / stor6 != 10^12:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[197 len 31]
                                    if ext_call.return_data[0] <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_call.return_data[0]
                                    if poolInfo[idx].field_768 + (10^12 * (bonusEndTimestamp * rewardPerSec * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * rewardPerSec * poolInfo[idx].field_256) / stor6 / ext_call.return_data[0]) < poolInfo[idx].field_768:
                                        revert with 0, 'SafeMath: addition overflow'
                                    poolInfo[idx].field_768 += 10^12 * (bonusEndTimestamp * rewardPerSec * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * rewardPerSec * poolInfo[idx].field_256) / stor6 / ext_call.return_data[0]
            poolInfo[idx].field_512 = block.timestamp
        idx = idx + 1
        continue 
    rewardPerSec = arg1
    emit UpdateEmissionRate(arg1, msg.sender);
}

function updatePool(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 < poolInfo.length
    if block.timestamp > poolInfo[arg1].field_512:
        require ext_code.size(poolInfo[arg1].field_0)
        staticcall poolInfo[arg1].field_0.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0]:
            if block.timestamp <= bonusEndTimestamp:
                if poolInfo[arg1].field_512 > block.timestamp:
                    revert with 0, 'SafeMath: subtraction overflow'
                if not block.timestamp - poolInfo[arg1].field_512:
                    if stor6 <= 0:
                        revert with 0, 'SafeMath: division by zero'
                    require stor6
                    if not 0 / stor6:
                        if ext_call.return_data[0] <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_call.return_data[0]
                        if poolInfo[arg1].field_768 + (0 / ext_call.return_data[0]) < poolInfo[arg1].field_768:
                            revert with 0, 'SafeMath: addition overflow'
                        poolInfo[arg1].field_768 += 0 / ext_call.return_data[0]
                    else:
                        require 0 / stor6
                        if 10^12 * 0 / stor6 / 0 / stor6 != 10^12:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        if ext_call.return_data[0] <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_call.return_data[0]
                        if poolInfo[arg1].field_768 + (10^12 * 0 / stor6 / ext_call.return_data[0]) < poolInfo[arg1].field_768:
                            revert with 0, 'SafeMath: addition overflow'
                        poolInfo[arg1].field_768 += 10^12 * 0 / stor6 / ext_call.return_data[0]
                else:
                    require block.timestamp - poolInfo[arg1].field_512
                    if (block.timestamp * rewardPerSec) - (poolInfo[arg1].field_512 * rewardPerSec) / block.timestamp - poolInfo[arg1].field_512 != rewardPerSec:
                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                    32,
                                    33,
                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[197 len 31]
                    if not (block.timestamp * rewardPerSec) - (poolInfo[arg1].field_512 * rewardPerSec):
                        if stor6 <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require stor6
                        if not 0 / stor6:
                            if ext_call.return_data[0] <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_call.return_data[0]
                            if poolInfo[arg1].field_768 + (0 / ext_call.return_data[0]) < poolInfo[arg1].field_768:
                                revert with 0, 'SafeMath: addition overflow'
                            poolInfo[arg1].field_768 += 0 / ext_call.return_data[0]
                        else:
                            require 0 / stor6
                            if 10^12 * 0 / stor6 / 0 / stor6 != 10^12:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if ext_call.return_data[0] <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_call.return_data[0]
                            if poolInfo[arg1].field_768 + (10^12 * 0 / stor6 / ext_call.return_data[0]) < poolInfo[arg1].field_768:
                                revert with 0, 'SafeMath: addition overflow'
                            poolInfo[arg1].field_768 += 10^12 * 0 / stor6 / ext_call.return_data[0]
                    else:
                        require (block.timestamp * rewardPerSec) - (poolInfo[arg1].field_512 * rewardPerSec)
                        if (block.timestamp * rewardPerSec * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * rewardPerSec * poolInfo[arg1].field_256) / (block.timestamp * rewardPerSec) - (poolInfo[arg1].field_512 * rewardPerSec) != poolInfo[arg1].field_256:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        if stor6 <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require stor6
                        if not (block.timestamp * rewardPerSec * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * rewardPerSec * poolInfo[arg1].field_256) / stor6:
                            if ext_call.return_data[0] <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_call.return_data[0]
                            if poolInfo[arg1].field_768 + (0 / ext_call.return_data[0]) < poolInfo[arg1].field_768:
                                revert with 0, 'SafeMath: addition overflow'
                            poolInfo[arg1].field_768 += 0 / ext_call.return_data[0]
                        else:
                            require (block.timestamp * rewardPerSec * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * rewardPerSec * poolInfo[arg1].field_256) / stor6
                            if 10^12 * (block.timestamp * rewardPerSec * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * rewardPerSec * poolInfo[arg1].field_256) / stor6 / (block.timestamp * rewardPerSec * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * rewardPerSec * poolInfo[arg1].field_256) / stor6 != 10^12:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if ext_call.return_data[0] <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_call.return_data[0]
                            if poolInfo[arg1].field_768 + (10^12 * (block.timestamp * rewardPerSec * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * rewardPerSec * poolInfo[arg1].field_256) / stor6 / ext_call.return_data[0]) < poolInfo[arg1].field_768:
                                revert with 0, 'SafeMath: addition overflow'
                            poolInfo[arg1].field_768 += 10^12 * (block.timestamp * rewardPerSec * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * rewardPerSec * poolInfo[arg1].field_256) / stor6 / ext_call.return_data[0]
            else:
                if poolInfo[arg1].field_512 >= bonusEndTimestamp:
                    if stor6 <= 0:
                        revert with 0, 'SafeMath: division by zero'
                    require stor6
                    if not 0 / stor6:
                        if ext_call.return_data[0] <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_call.return_data[0]
                        if poolInfo[arg1].field_768 + (0 / ext_call.return_data[0]) < poolInfo[arg1].field_768:
                            revert with 0, 'SafeMath: addition overflow'
                        poolInfo[arg1].field_768 += 0 / ext_call.return_data[0]
                    else:
                        require 0 / stor6
                        if 10^12 * 0 / stor6 / 0 / stor6 != 10^12:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        if ext_call.return_data[0] <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_call.return_data[0]
                        if poolInfo[arg1].field_768 + (10^12 * 0 / stor6 / ext_call.return_data[0]) < poolInfo[arg1].field_768:
                            revert with 0, 'SafeMath: addition overflow'
                        poolInfo[arg1].field_768 += 10^12 * 0 / stor6 / ext_call.return_data[0]
                else:
                    if poolInfo[arg1].field_512 > bonusEndTimestamp:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if not bonusEndTimestamp - poolInfo[arg1].field_512:
                        if stor6 <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require stor6
                        if not 0 / stor6:
                            if ext_call.return_data[0] <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_call.return_data[0]
                            if poolInfo[arg1].field_768 + (0 / ext_call.return_data[0]) < poolInfo[arg1].field_768:
                                revert with 0, 'SafeMath: addition overflow'
                            poolInfo[arg1].field_768 += 0 / ext_call.return_data[0]
                        else:
                            require 0 / stor6
                            if 10^12 * 0 / stor6 / 0 / stor6 != 10^12:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if ext_call.return_data[0] <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_call.return_data[0]
                            if poolInfo[arg1].field_768 + (10^12 * 0 / stor6 / ext_call.return_data[0]) < poolInfo[arg1].field_768:
                                revert with 0, 'SafeMath: addition overflow'
                            poolInfo[arg1].field_768 += 10^12 * 0 / stor6 / ext_call.return_data[0]
                    else:
                        require bonusEndTimestamp - poolInfo[arg1].field_512
                        if (bonusEndTimestamp * rewardPerSec) - (poolInfo[arg1].field_512 * rewardPerSec) / bonusEndTimestamp - poolInfo[arg1].field_512 != rewardPerSec:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        if not (bonusEndTimestamp * rewardPerSec) - (poolInfo[arg1].field_512 * rewardPerSec):
                            if stor6 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require stor6
                            if not 0 / stor6:
                                if ext_call.return_data[0] <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_call.return_data[0]
                                if poolInfo[arg1].field_768 + (0 / ext_call.return_data[0]) < poolInfo[arg1].field_768:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[arg1].field_768 += 0 / ext_call.return_data[0]
                            else:
                                require 0 / stor6
                                if 10^12 * 0 / stor6 / 0 / stor6 != 10^12:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if ext_call.return_data[0] <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_call.return_data[0]
                                if poolInfo[arg1].field_768 + (10^12 * 0 / stor6 / ext_call.return_data[0]) < poolInfo[arg1].field_768:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[arg1].field_768 += 10^12 * 0 / stor6 / ext_call.return_data[0]
                        else:
                            require (bonusEndTimestamp * rewardPerSec) - (poolInfo[arg1].field_512 * rewardPerSec)
                            if (bonusEndTimestamp * rewardPerSec * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * rewardPerSec * poolInfo[arg1].field_256) / (bonusEndTimestamp * rewardPerSec) - (poolInfo[arg1].field_512 * rewardPerSec) != poolInfo[arg1].field_256:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if stor6 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require stor6
                            if not (bonusEndTimestamp * rewardPerSec * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * rewardPerSec * poolInfo[arg1].field_256) / stor6:
                                if ext_call.return_data[0] <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_call.return_data[0]
                                if poolInfo[arg1].field_768 + (0 / ext_call.return_data[0]) < poolInfo[arg1].field_768:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[arg1].field_768 += 0 / ext_call.return_data[0]
                            else:
                                require (bonusEndTimestamp * rewardPerSec * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * rewardPerSec * poolInfo[arg1].field_256) / stor6
                                if 10^12 * (bonusEndTimestamp * rewardPerSec * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * rewardPerSec * poolInfo[arg1].field_256) / stor6 / (bonusEndTimestamp * rewardPerSec * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * rewardPerSec * poolInfo[arg1].field_256) / stor6 != 10^12:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if ext_call.return_data[0] <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_call.return_data[0]
                                if poolInfo[arg1].field_768 + (10^12 * (bonusEndTimestamp * rewardPerSec * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * rewardPerSec * poolInfo[arg1].field_256) / stor6 / ext_call.return_data[0]) < poolInfo[arg1].field_768:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[arg1].field_768 += 10^12 * (bonusEndTimestamp * rewardPerSec * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * rewardPerSec * poolInfo[arg1].field_256) / stor6 / ext_call.return_data[0]
        poolInfo[arg1].field_512 = block.timestamp
}

function pendingReward(address arg1) payable {
    require calldata.size - 4 >= 32
    require 0 < poolInfo.length
    require ext_code.size(address(poolInfo.field_0))
    staticcall address(poolInfo.field_0).0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if block.timestamp <= uint256(poolInfo.field_512):
        if not userInfo[address(arg1)].field_0:
            if userInfo[address(arg1)].field_256 > 0:
                revert with 0, 'SafeMath: subtraction overflow'
            return -userInfo[address(arg1)].field_256
        require userInfo[address(arg1)].field_0
        if userInfo[address(arg1)].field_0 * uint256(poolInfo.field_768) / userInfo[address(arg1)].field_0 != uint256(poolInfo.field_768):
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        if userInfo[address(arg1)].field_256 > userInfo[address(arg1)].field_0 * uint256(poolInfo.field_768) / 10^12:
            revert with 0, 'SafeMath: subtraction overflow'
        return ((userInfo[address(arg1)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(arg1)].field_256)
    if not ext_call.return_data[0]:
        if not userInfo[address(arg1)].field_0:
            if userInfo[address(arg1)].field_256 > 0:
                revert with 0, 'SafeMath: subtraction overflow'
            return -userInfo[address(arg1)].field_256
        require userInfo[address(arg1)].field_0
        if userInfo[address(arg1)].field_0 * uint256(poolInfo.field_768) / userInfo[address(arg1)].field_0 != uint256(poolInfo.field_768):
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        if userInfo[address(arg1)].field_256 > userInfo[address(arg1)].field_0 * uint256(poolInfo.field_768) / 10^12:
            revert with 0, 'SafeMath: subtraction overflow'
        return ((userInfo[address(arg1)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(arg1)].field_256)
    if block.timestamp <= bonusEndTimestamp:
        if uint256(poolInfo.field_512) > block.timestamp:
            revert with 0, 'SafeMath: subtraction overflow'
        if not block.timestamp - uint256(poolInfo.field_512):
            if stor6 <= 0:
                revert with 0, 'SafeMath: division by zero'
            require stor6
            if not 0 / stor6:
                if ext_call.return_data[0] <= 0:
                    revert with 0, 'SafeMath: division by zero'
                require ext_call.return_data[0]
                if uint256(poolInfo.field_768) + (0 / ext_call.return_data[0]) < uint256(poolInfo.field_768):
                    revert with 0, 'SafeMath: addition overflow'
                if not userInfo[address(arg1)].field_0:
                    if userInfo[address(arg1)].field_256 > 0:
                        revert with 0, 'SafeMath: subtraction overflow'
                    return -userInfo[address(arg1)].field_256
                require userInfo[address(arg1)].field_0
                if (uint256(poolInfo.field_768) * userInfo[address(arg1)].field_0) + (0 / ext_call.return_data[0] * userInfo[address(arg1)].field_0) / userInfo[address(arg1)].field_0 != uint256(poolInfo.field_768) + (0 / ext_call.return_data[0]):
                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                32,
                                33,
                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                mem[197 len 31]
                if userInfo[address(arg1)].field_256 > (uint256(poolInfo.field_768) * userInfo[address(arg1)].field_0) + (0 / ext_call.return_data[0] * userInfo[address(arg1)].field_0) / 10^12:
                    revert with 0, 'SafeMath: subtraction overflow'
                return (((uint256(poolInfo.field_768) * userInfo[address(arg1)].field_0) + (0 / ext_call.return_data[0] * userInfo[address(arg1)].field_0) / 10^12) - userInfo[address(arg1)].field_256)
            require 0 / stor6
            if 10^12 * 0 / stor6 / 0 / stor6 != 10^12:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            33,
                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[197 len 31]
            if ext_call.return_data[0] <= 0:
                revert with 0, 'SafeMath: division by zero'
            require ext_call.return_data[0]
            if uint256(poolInfo.field_768) + (10^12 * 0 / stor6 / ext_call.return_data[0]) < uint256(poolInfo.field_768):
                revert with 0, 'SafeMath: addition overflow'
            if not userInfo[address(arg1)].field_0:
                if userInfo[address(arg1)].field_256 > 0:
                    revert with 0, 'SafeMath: subtraction overflow'
                return -userInfo[address(arg1)].field_256
            require userInfo[address(arg1)].field_0
            if (uint256(poolInfo.field_768) * userInfo[address(arg1)].field_0) + (10^12 * 0 / stor6 / ext_call.return_data[0] * userInfo[address(arg1)].field_0) / userInfo[address(arg1)].field_0 != uint256(poolInfo.field_768) + (10^12 * 0 / stor6 / ext_call.return_data[0]):
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            33,
                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[197 len 31]
            if userInfo[address(arg1)].field_256 > (uint256(poolInfo.field_768) * userInfo[address(arg1)].field_0) + (10^12 * 0 / stor6 / ext_call.return_data[0] * userInfo[address(arg1)].field_0) / 10^12:
                revert with 0, 'SafeMath: subtraction overflow'
            return (((uint256(poolInfo.field_768) * userInfo[address(arg1)].field_0) + (10^12 * 0 / stor6 / ext_call.return_data[0] * userInfo[address(arg1)].field_0) / 10^12) - userInfo[address(arg1)].field_256)
        require block.timestamp - uint256(poolInfo.field_512)
        if (block.timestamp * rewardPerSec) - (uint256(poolInfo.field_512) * rewardPerSec) / block.timestamp - uint256(poolInfo.field_512) != rewardPerSec:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        if not (block.timestamp * rewardPerSec) - (uint256(poolInfo.field_512) * rewardPerSec):
            if stor6 <= 0:
                revert with 0, 'SafeMath: division by zero'
            require stor6
            if not 0 / stor6:
                if ext_call.return_data[0] <= 0:
                    revert with 0, 'SafeMath: division by zero'
                require ext_call.return_data[0]
                if uint256(poolInfo.field_768) + (0 / ext_call.return_data[0]) < uint256(poolInfo.field_768):
                    revert with 0, 'SafeMath: addition overflow'
                if not userInfo[address(arg1)].field_0:
                    if userInfo[address(arg1)].field_256 > 0:
                        revert with 0, 'SafeMath: subtraction overflow'
                    return -userInfo[address(arg1)].field_256
                require userInfo[address(arg1)].field_0
                if (uint256(poolInfo.field_768) * userInfo[address(arg1)].field_0) + (0 / ext_call.return_data[0] * userInfo[address(arg1)].field_0) / userInfo[address(arg1)].field_0 != uint256(poolInfo.field_768) + (0 / ext_call.return_data[0]):
                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                32,
                                33,
                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                mem[197 len 31]
                if userInfo[address(arg1)].field_256 > (uint256(poolInfo.field_768) * userInfo[address(arg1)].field_0) + (0 / ext_call.return_data[0] * userInfo[address(arg1)].field_0) / 10^12:
                    revert with 0, 'SafeMath: subtraction overflow'
                return (((uint256(poolInfo.field_768) * userInfo[address(arg1)].field_0) + (0 / ext_call.return_data[0] * userInfo[address(arg1)].field_0) / 10^12) - userInfo[address(arg1)].field_256)
            require 0 / stor6
            if 10^12 * 0 / stor6 / 0 / stor6 != 10^12:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            33,
                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[197 len 31]
            if ext_call.return_data[0] <= 0:
                revert with 0, 'SafeMath: division by zero'
            require ext_call.return_data[0]
            if uint256(poolInfo.field_768) + (10^12 * 0 / stor6 / ext_call.return_data[0]) < uint256(poolInfo.field_768):
                revert with 0, 'SafeMath: addition overflow'
            if not userInfo[address(arg1)].field_0:
                if userInfo[address(arg1)].field_256 > 0:
                    revert with 0, 'SafeMath: subtraction overflow'
                return -userInfo[address(arg1)].field_256
            require userInfo[address(arg1)].field_0
            if (uint256(poolInfo.field_768) * userInfo[address(arg1)].field_0) + (10^12 * 0 / stor6 / ext_call.return_data[0] * userInfo[address(arg1)].field_0) / userInfo[address(arg1)].field_0 != uint256(poolInfo.field_768) + (10^12 * 0 / stor6 / ext_call.return_data[0]):
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            33,
                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[197 len 31]
            if userInfo[address(arg1)].field_256 > (uint256(poolInfo.field_768) * userInfo[address(arg1)].field_0) + (10^12 * 0 / stor6 / ext_call.return_data[0] * userInfo[address(arg1)].field_0) / 10^12:
                revert with 0, 'SafeMath: subtraction overflow'
            return (((uint256(poolInfo.field_768) * userInfo[address(arg1)].field_0) + (10^12 * 0 / stor6 / ext_call.return_data[0] * userInfo[address(arg1)].field_0) / 10^12) - userInfo[address(arg1)].field_256)
        require (block.timestamp * rewardPerSec) - (uint256(poolInfo.field_512) * rewardPerSec)
        if (block.timestamp * rewardPerSec * uint256(poolInfo.field_256)) - (uint256(poolInfo.field_512) * rewardPerSec * uint256(poolInfo.field_256)) / (block.timestamp * rewardPerSec) - (uint256(poolInfo.field_512) * rewardPerSec) != uint256(poolInfo.field_256):
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        if stor6 <= 0:
            revert with 0, 'SafeMath: division by zero'
        require stor6
        if not (block.timestamp * rewardPerSec * uint256(poolInfo.field_256)) - (uint256(poolInfo.field_512) * rewardPerSec * uint256(poolInfo.field_256)) / stor6:
            if ext_call.return_data[0] <= 0:
                revert with 0, 'SafeMath: division by zero'
            require ext_call.return_data[0]
            if uint256(poolInfo.field_768) + (0 / ext_call.return_data[0]) < uint256(poolInfo.field_768):
                revert with 0, 'SafeMath: addition overflow'
            if not userInfo[address(arg1)].field_0:
                if userInfo[address(arg1)].field_256 > 0:
                    revert with 0, 'SafeMath: subtraction overflow'
                return -userInfo[address(arg1)].field_256
            require userInfo[address(arg1)].field_0
            if (uint256(poolInfo.field_768) * userInfo[address(arg1)].field_0) + (0 / ext_call.return_data[0] * userInfo[address(arg1)].field_0) / userInfo[address(arg1)].field_0 != uint256(poolInfo.field_768) + (0 / ext_call.return_data[0]):
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            33,
                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[197 len 31]
            if userInfo[address(arg1)].field_256 > (uint256(poolInfo.field_768) * userInfo[address(arg1)].field_0) + (0 / ext_call.return_data[0] * userInfo[address(arg1)].field_0) / 10^12:
                revert with 0, 'SafeMath: subtraction overflow'
            return (((uint256(poolInfo.field_768) * userInfo[address(arg1)].field_0) + (0 / ext_call.return_data[0] * userInfo[address(arg1)].field_0) / 10^12) - userInfo[address(arg1)].field_256)
        require (block.timestamp * rewardPerSec * uint256(poolInfo.field_256)) - (uint256(poolInfo.field_512) * rewardPerSec * uint256(poolInfo.field_256)) / stor6
        if 10^12 * (block.timestamp * rewardPerSec * uint256(poolInfo.field_256)) - (uint256(poolInfo.field_512) * rewardPerSec * uint256(poolInfo.field_256)) / stor6 / (block.timestamp * rewardPerSec * uint256(poolInfo.field_256)) - (uint256(poolInfo.field_512) * rewardPerSec * uint256(poolInfo.field_256)) / stor6 != 10^12:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        if ext_call.return_data[0] <= 0:
            revert with 0, 'SafeMath: division by zero'
        require ext_call.return_data[0]
        if uint256(poolInfo.field_768) + (10^12 * (block.timestamp * rewardPerSec * uint256(poolInfo.field_256)) - (uint256(poolInfo.field_512) * rewardPerSec * uint256(poolInfo.field_256)) / stor6 / ext_call.return_data[0]) < uint256(poolInfo.field_768):
            revert with 0, 'SafeMath: addition overflow'
        if not userInfo[address(arg1)].field_0:
            if userInfo[address(arg1)].field_256 > 0:
                revert with 0, 'SafeMath: subtraction overflow'
            return -userInfo[address(arg1)].field_256
        require userInfo[address(arg1)].field_0
        if (uint256(poolInfo.field_768) * userInfo[address(arg1)].field_0) + (10^12 * (block.timestamp * rewardPerSec * uint256(poolInfo.field_256)) - (uint256(poolInfo.field_512) * rewardPerSec * uint256(poolInfo.field_256)) / stor6 / ext_call.return_data[0] * userInfo[address(arg1)].field_0) / userInfo[address(arg1)].field_0 != uint256(poolInfo.field_768) + (10^12 * (block.timestamp * rewardPerSec * uint256(poolInfo.field_256)) - (uint256(poolInfo.field_512) * rewardPerSec * uint256(poolInfo.field_256)) / stor6 / ext_call.return_data[0]):
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        if userInfo[address(arg1)].field_256 > (uint256(poolInfo.field_768) * userInfo[address(arg1)].field_0) + (10^12 * (block.timestamp * rewardPerSec * uint256(poolInfo.field_256)) - (uint256(poolInfo.field_512) * rewardPerSec * uint256(poolInfo.field_256)) / stor6 / ext_call.return_data[0] * userInfo[address(arg1)].field_0) / 10^12:
            revert with 0, 'SafeMath: subtraction overflow'
        return (((uint256(poolInfo.field_768) * userInfo[address(arg1)].field_0) + (10^12 * (block.timestamp * rewardPerSec * uint256(poolInfo.field_256)) - (uint256(poolInfo.field_512) * rewardPerSec * uint256(poolInfo.field_256)) / stor6 / ext_call.return_data[0] * userInfo[address(arg1)].field_0) / 10^12) - userInfo[address(arg1)].field_256)
    if uint256(poolInfo.field_512) >= bonusEndTimestamp:
        if stor6 <= 0:
            revert with 0, 'SafeMath: division by zero'
        require stor6
        if not 0 / stor6:
            if ext_call.return_data[0] <= 0:
                revert with 0, 'SafeMath: division by zero'
            require ext_call.return_data[0]
            if uint256(poolInfo.field_768) + (0 / ext_call.return_data[0]) < uint256(poolInfo.field_768):
                revert with 0, 'SafeMath: addition overflow'
            if not userInfo[address(arg1)].field_0:
                if userInfo[address(arg1)].field_256 > 0:
                    revert with 0, 'SafeMath: subtraction overflow'
                return -userInfo[address(arg1)].field_256
            require userInfo[address(arg1)].field_0
            if (uint256(poolInfo.field_768) * userInfo[address(arg1)].field_0) + (0 / ext_call.return_data[0] * userInfo[address(arg1)].field_0) / userInfo[address(arg1)].field_0 != uint256(poolInfo.field_768) + (0 / ext_call.return_data[0]):
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            33,
                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[197 len 31]
            if userInfo[address(arg1)].field_256 > (uint256(poolInfo.field_768) * userInfo[address(arg1)].field_0) + (0 / ext_call.return_data[0] * userInfo[address(arg1)].field_0) / 10^12:
                revert with 0, 'SafeMath: subtraction overflow'
            return (((uint256(poolInfo.field_768) * userInfo[address(arg1)].field_0) + (0 / ext_call.return_data[0] * userInfo[address(arg1)].field_0) / 10^12) - userInfo[address(arg1)].field_256)
        require 0 / stor6
        if 10^12 * 0 / stor6 / 0 / stor6 != 10^12:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        if ext_call.return_data[0] <= 0:
            revert with 0, 'SafeMath: division by zero'
        require ext_call.return_data[0]
        if uint256(poolInfo.field_768) + (10^12 * 0 / stor6 / ext_call.return_data[0]) < uint256(poolInfo.field_768):
            revert with 0, 'SafeMath: addition overflow'
        if not userInfo[address(arg1)].field_0:
            if userInfo[address(arg1)].field_256 > 0:
                revert with 0, 'SafeMath: subtraction overflow'
            return -userInfo[address(arg1)].field_256
        require userInfo[address(arg1)].field_0
        if (uint256(poolInfo.field_768) * userInfo[address(arg1)].field_0) + (10^12 * 0 / stor6 / ext_call.return_data[0] * userInfo[address(arg1)].field_0) / userInfo[address(arg1)].field_0 != uint256(poolInfo.field_768) + (10^12 * 0 / stor6 / ext_call.return_data[0]):
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        if userInfo[address(arg1)].field_256 > (uint256(poolInfo.field_768) * userInfo[address(arg1)].field_0) + (10^12 * 0 / stor6 / ext_call.return_data[0] * userInfo[address(arg1)].field_0) / 10^12:
            revert with 0, 'SafeMath: subtraction overflow'
        return (((uint256(poolInfo.field_768) * userInfo[address(arg1)].field_0) + (10^12 * 0 / stor6 / ext_call.return_data[0] * userInfo[address(arg1)].field_0) / 10^12) - userInfo[address(arg1)].field_256)
    if uint256(poolInfo.field_512) > bonusEndTimestamp:
        revert with 0, 'SafeMath: subtraction overflow'
    if not bonusEndTimestamp - uint256(poolInfo.field_512):
        if stor6 <= 0:
            revert with 0, 'SafeMath: division by zero'
        require stor6
        if not 0 / stor6:
            if ext_call.return_data[0] <= 0:
                revert with 0, 'SafeMath: division by zero'
            require ext_call.return_data[0]
            if uint256(poolInfo.field_768) + (0 / ext_call.return_data[0]) < uint256(poolInfo.field_768):
                revert with 0, 'SafeMath: addition overflow'
            if not userInfo[address(arg1)].field_0:
                if userInfo[address(arg1)].field_256 > 0:
                    revert with 0, 'SafeMath: subtraction overflow'
                return -userInfo[address(arg1)].field_256
            require userInfo[address(arg1)].field_0
            if (uint256(poolInfo.field_768) * userInfo[address(arg1)].field_0) + (0 / ext_call.return_data[0] * userInfo[address(arg1)].field_0) / userInfo[address(arg1)].field_0 != uint256(poolInfo.field_768) + (0 / ext_call.return_data[0]):
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            33,
                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[197 len 31]
            if userInfo[address(arg1)].field_256 > (uint256(poolInfo.field_768) * userInfo[address(arg1)].field_0) + (0 / ext_call.return_data[0] * userInfo[address(arg1)].field_0) / 10^12:
                revert with 0, 'SafeMath: subtraction overflow'
            return (((uint256(poolInfo.field_768) * userInfo[address(arg1)].field_0) + (0 / ext_call.return_data[0] * userInfo[address(arg1)].field_0) / 10^12) - userInfo[address(arg1)].field_256)
        require 0 / stor6
        if 10^12 * 0 / stor6 / 0 / stor6 != 10^12:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        if ext_call.return_data[0] <= 0:
            revert with 0, 'SafeMath: division by zero'
        require ext_call.return_data[0]
        if uint256(poolInfo.field_768) + (10^12 * 0 / stor6 / ext_call.return_data[0]) < uint256(poolInfo.field_768):
            revert with 0, 'SafeMath: addition overflow'
        if not userInfo[address(arg1)].field_0:
            if userInfo[address(arg1)].field_256 > 0:
                revert with 0, 'SafeMath: subtraction overflow'
            return -userInfo[address(arg1)].field_256
        require userInfo[address(arg1)].field_0
        if (uint256(poolInfo.field_768) * userInfo[address(arg1)].field_0) + (10^12 * 0 / stor6 / ext_call.return_data[0] * userInfo[address(arg1)].field_0) / userInfo[address(arg1)].field_0 != uint256(poolInfo.field_768) + (10^12 * 0 / stor6 / ext_call.return_data[0]):
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        if userInfo[address(arg1)].field_256 > (uint256(poolInfo.field_768) * userInfo[address(arg1)].field_0) + (10^12 * 0 / stor6 / ext_call.return_data[0] * userInfo[address(arg1)].field_0) / 10^12:
            revert with 0, 'SafeMath: subtraction overflow'
        return (((uint256(poolInfo.field_768) * userInfo[address(arg1)].field_0) + (10^12 * 0 / stor6 / ext_call.return_data[0] * userInfo[address(arg1)].field_0) / 10^12) - userInfo[address(arg1)].field_256)
    require bonusEndTimestamp - uint256(poolInfo.field_512)
    if (bonusEndTimestamp * rewardPerSec) - (uint256(poolInfo.field_512) * rewardPerSec) / bonusEndTimestamp - uint256(poolInfo.field_512) != rewardPerSec:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    33,
                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                    mem[197 len 31]
    if not (bonusEndTimestamp * rewardPerSec) - (uint256(poolInfo.field_512) * rewardPerSec):
        if stor6 <= 0:
            revert with 0, 'SafeMath: division by zero'
        require stor6
        if not 0 / stor6:
            if ext_call.return_data[0] <= 0:
                revert with 0, 'SafeMath: division by zero'
            require ext_call.return_data[0]
            if uint256(poolInfo.field_768) + (0 / ext_call.return_data[0]) < uint256(poolInfo.field_768):
                revert with 0, 'SafeMath: addition overflow'
            if not userInfo[address(arg1)].field_0:
                if userInfo[address(arg1)].field_256 > 0:
                    revert with 0, 'SafeMath: subtraction overflow'
                return -userInfo[address(arg1)].field_256
            require userInfo[address(arg1)].field_0
            if (uint256(poolInfo.field_768) * userInfo[address(arg1)].field_0) + (0 / ext_call.return_data[0] * userInfo[address(arg1)].field_0) / userInfo[address(arg1)].field_0 != uint256(poolInfo.field_768) + (0 / ext_call.return_data[0]):
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            33,
                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[197 len 31]
            if userInfo[address(arg1)].field_256 > (uint256(poolInfo.field_768) * userInfo[address(arg1)].field_0) + (0 / ext_call.return_data[0] * userInfo[address(arg1)].field_0) / 10^12:
                revert with 0, 'SafeMath: subtraction overflow'
            return (((uint256(poolInfo.field_768) * userInfo[address(arg1)].field_0) + (0 / ext_call.return_data[0] * userInfo[address(arg1)].field_0) / 10^12) - userInfo[address(arg1)].field_256)
        require 0 / stor6
        if 10^12 * 0 / stor6 / 0 / stor6 != 10^12:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        if ext_call.return_data[0] <= 0:
            revert with 0, 'SafeMath: division by zero'
        require ext_call.return_data[0]
        if uint256(poolInfo.field_768) + (10^12 * 0 / stor6 / ext_call.return_data[0]) < uint256(poolInfo.field_768):
            revert with 0, 'SafeMath: addition overflow'
        if not userInfo[address(arg1)].field_0:
            if userInfo[address(arg1)].field_256 > 0:
                revert with 0, 'SafeMath: subtraction overflow'
            return -userInfo[address(arg1)].field_256
        require userInfo[address(arg1)].field_0
        if (uint256(poolInfo.field_768) * userInfo[address(arg1)].field_0) + (10^12 * 0 / stor6 / ext_call.return_data[0] * userInfo[address(arg1)].field_0) / userInfo[address(arg1)].field_0 != uint256(poolInfo.field_768) + (10^12 * 0 / stor6 / ext_call.return_data[0]):
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        if userInfo[address(arg1)].field_256 > (uint256(poolInfo.field_768) * userInfo[address(arg1)].field_0) + (10^12 * 0 / stor6 / ext_call.return_data[0] * userInfo[address(arg1)].field_0) / 10^12:
            revert with 0, 'SafeMath: subtraction overflow'
        return (((uint256(poolInfo.field_768) * userInfo[address(arg1)].field_0) + (10^12 * 0 / stor6 / ext_call.return_data[0] * userInfo[address(arg1)].field_0) / 10^12) - userInfo[address(arg1)].field_256)
    require (bonusEndTimestamp * rewardPerSec) - (uint256(poolInfo.field_512) * rewardPerSec)
    if (bonusEndTimestamp * rewardPerSec * uint256(poolInfo.field_256)) - (uint256(poolInfo.field_512) * rewardPerSec * uint256(poolInfo.field_256)) / (bonusEndTimestamp * rewardPerSec) - (uint256(poolInfo.field_512) * rewardPerSec) != uint256(poolInfo.field_256):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    33,
                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                    mem[197 len 31]
    if stor6 <= 0:
        revert with 0, 'SafeMath: division by zero'
    require stor6
    if not (bonusEndTimestamp * rewardPerSec * uint256(poolInfo.field_256)) - (uint256(poolInfo.field_512) * rewardPerSec * uint256(poolInfo.field_256)) / stor6:
        if ext_call.return_data[0] <= 0:
            revert with 0, 'SafeMath: division by zero'
        require ext_call.return_data[0]
        if uint256(poolInfo.field_768) + (0 / ext_call.return_data[0]) < uint256(poolInfo.field_768):
            revert with 0, 'SafeMath: addition overflow'
        if not userInfo[address(arg1)].field_0:
            if userInfo[address(arg1)].field_256 > 0:
                revert with 0, 'SafeMath: subtraction overflow'
            return -userInfo[address(arg1)].field_256
        require userInfo[address(arg1)].field_0
        if (uint256(poolInfo.field_768) * userInfo[address(arg1)].field_0) + (0 / ext_call.return_data[0] * userInfo[address(arg1)].field_0) / userInfo[address(arg1)].field_0 != uint256(poolInfo.field_768) + (0 / ext_call.return_data[0]):
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        if userInfo[address(arg1)].field_256 > (uint256(poolInfo.field_768) * userInfo[address(arg1)].field_0) + (0 / ext_call.return_data[0] * userInfo[address(arg1)].field_0) / 10^12:
            revert with 0, 'SafeMath: subtraction overflow'
        return (((uint256(poolInfo.field_768) * userInfo[address(arg1)].field_0) + (0 / ext_call.return_data[0] * userInfo[address(arg1)].field_0) / 10^12) - userInfo[address(arg1)].field_256)
    require (bonusEndTimestamp * rewardPerSec * uint256(poolInfo.field_256)) - (uint256(poolInfo.field_512) * rewardPerSec * uint256(poolInfo.field_256)) / stor6
    if 10^12 * (bonusEndTimestamp * rewardPerSec * uint256(poolInfo.field_256)) - (uint256(poolInfo.field_512) * rewardPerSec * uint256(poolInfo.field_256)) / stor6 / (bonusEndTimestamp * rewardPerSec * uint256(poolInfo.field_256)) - (uint256(poolInfo.field_512) * rewardPerSec * uint256(poolInfo.field_256)) / stor6 != 10^12:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    33,
                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                    mem[197 len 31]
    if ext_call.return_data[0] <= 0:
        revert with 0, 'SafeMath: division by zero'
    require ext_call.return_data[0]
    if uint256(poolInfo.field_768) + (10^12 * (bonusEndTimestamp * rewardPerSec * uint256(poolInfo.field_256)) - (uint256(poolInfo.field_512) * rewardPerSec * uint256(poolInfo.field_256)) / stor6 / ext_call.return_data[0]) < uint256(poolInfo.field_768):
        revert with 0, 'SafeMath: addition overflow'
    if not userInfo[address(arg1)].field_0:
        if userInfo[address(arg1)].field_256 > 0:
            revert with 0, 'SafeMath: subtraction overflow'
        return -userInfo[address(arg1)].field_256
    require userInfo[address(arg1)].field_0
    if (uint256(poolInfo.field_768) * userInfo[address(arg1)].field_0) + (10^12 * (bonusEndTimestamp * rewardPerSec * uint256(poolInfo.field_256)) - (uint256(poolInfo.field_512) * rewardPerSec * uint256(poolInfo.field_256)) / stor6 / ext_call.return_data[0] * userInfo[address(arg1)].field_0) / userInfo[address(arg1)].field_0 != uint256(poolInfo.field_768) + (10^12 * (bonusEndTimestamp * rewardPerSec * uint256(poolInfo.field_256)) - (uint256(poolInfo.field_512) * rewardPerSec * uint256(poolInfo.field_256)) / stor6 / ext_call.return_data[0]):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    33,
                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                    mem[197 len 31]
    if userInfo[address(arg1)].field_256 > (uint256(poolInfo.field_768) * userInfo[address(arg1)].field_0) + (10^12 * (bonusEndTimestamp * rewardPerSec * uint256(poolInfo.field_256)) - (uint256(poolInfo.field_512) * rewardPerSec * uint256(poolInfo.field_256)) / stor6 / ext_call.return_data[0] * userInfo[address(arg1)].field_0) / 10^12:
        revert with 0, 'SafeMath: subtraction overflow'
    return (((uint256(poolInfo.field_768) * userInfo[address(arg1)].field_0) + (10^12 * (bonusEndTimestamp * rewardPerSec * uint256(poolInfo.field_256)) - (uint256(poolInfo.field_512) * rewardPerSec * uint256(poolInfo.field_256)) / stor6 / ext_call.return_data[0] * userInfo[address(arg1)].field_0) / 10^12) - userInfo[address(arg1)].field_256)
}

function deposit(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if stor1 == 2:
        revert with 0, 'ReentrancyGuard: reentrant call'
    stor1 = 2
    require 0 < poolInfo.length
    if block.timestamp <= uint256(poolInfo.field_512):
        if userInfo[address(msg.sender)].field_0 <= 0:
            if arg1 <= 0:
                if not userInfo[address(msg.sender)].field_0:
                    userInfo[address(msg.sender)].field_256 = 0
                else:
                    require userInfo[address(msg.sender)].field_0
                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                    32,
                                    33,
                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[197 len 31]
                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                emit Deposit(arg1, msg.sender);
            else:
                require ext_code.size(address(poolInfo.field_0))
                staticcall address(poolInfo.field_0).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if eth.balance(this.address) < 0:
                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                if ext_code.size(address(poolInfo.field_0)) <= 0:
                    revert with 0, 'Address: call to non-contract'
                mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                mem[416 len 4] = 0
                call address(poolInfo.field_0) with:
                     gas gas_remaining wei
                    args Mask(224, 32, arg1) << 480, mem[388 len 4]
                if not return_data.size:
                    if not ext_call.success:
                        revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                    if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                        revert with 0, 
                                    32,
                                    42,
                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[402 len 14],
                                    0,
                                    mem[420 len 4]
                    require ext_code.size(address(poolInfo.field_0))
                    staticcall address(poolInfo.field_0).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] > ext_call.return_data[0]:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                        revert with 0, 'SafeMath: addition overflow'
                    if not userInfo[address(msg.sender)].field_0:
                        userInfo[address(msg.sender)].field_256 = 0
                    else:
                        require userInfo[address(msg.sender)].field_0
                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                else:
                    mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        if return_data.size > 0:
                            revert with ext_call.return_data[0 len return_data.size]
                        revert with 0, 'SafeBEP20: low-level call failed'
                    if return_data.size > 0:
                        require return_data.size >= 32
                        if not mem[324]:
                            revert with 0, 
                                        32,
                                        42,
                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[ceil32(return_data.size) + 403 len 22]
                    require ext_code.size(address(poolInfo.field_0))
                    staticcall address(poolInfo.field_0).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] > ext_call.return_data[0]:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                        revert with 0, 'SafeMath: addition overflow'
                    if not userInfo[address(msg.sender)].field_0:
                        userInfo[address(msg.sender)].field_256 = 0
                    else:
                        require userInfo[address(msg.sender)].field_0
                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                            revert with 0, 
                                        32,
                                        33,
                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[ceil32(return_data.size) + 394 len 31]
                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                emit Deposit(0, msg.sender);
        else:
            if not userInfo[address(msg.sender)].field_0:
                if userInfo[address(msg.sender)].field_256 > 0:
                    revert with 0, 'SafeMath: subtraction overflow'
                if -userInfo[address(msg.sender)].field_256 <= 0:
                    if arg1 <= 0:
                        if not userInfo[address(msg.sender)].field_0:
                            userInfo[address(msg.sender)].field_256 = 0
                        else:
                            require userInfo[address(msg.sender)].field_0
                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                        emit Deposit(arg1, msg.sender);
                    else:
                        require ext_code.size(address(poolInfo.field_0))
                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                        if ext_code.size(address(poolInfo.field_0)) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                        mem[416 len 4] = 0
                        call address(poolInfo.field_0) with:
                             gas gas_remaining wei
                            args Mask(224, 32, arg1) << 480, mem[388 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                            if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                revert with 0, 
                                            32,
                                            42,
                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[402 len 14],
                                            0,
                                            mem[420 len 4]
                            require ext_code.size(address(poolInfo.field_0))
                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                revert with 0, 'SafeMath: addition overflow'
                            if not userInfo[address(msg.sender)].field_0:
                                userInfo[address(msg.sender)].field_256 = 0
                            else:
                                require userInfo[address(msg.sender)].field_0
                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                        else:
                            mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeBEP20: low-level call failed'
                            if return_data.size > 0:
                                require return_data.size >= 32
                                if not mem[324]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[ceil32(return_data.size) + 403 len 22]
                            require ext_code.size(address(poolInfo.field_0))
                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                revert with 0, 'SafeMath: addition overflow'
                            if not userInfo[address(msg.sender)].field_0:
                                userInfo[address(msg.sender)].field_256 = 0
                            else:
                                require userInfo[address(msg.sender)].field_0
                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                    revert with 0, 
                                                32,
                                                33,
                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[ceil32(return_data.size) + 394 len 31]
                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                        emit Deposit(0, msg.sender);
                else:
                    if eth.balance(this.address) < 0:
                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                    if ext_code.size(rewardTokenAddress) <= 0:
                        revert with 0, 'Address: call to non-contract'
                    mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, -userInfo[address(msg.sender)].field_256) >> 32
                    call rewardTokenAddress with:
                       funct uint32(msg.sender)
                         gas gas_remaining wei
                        args Mask(224, 32, -userInfo[address(msg.sender)].field_256) << 224, mem[324 len 4]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                            revert with 0, 32, 42, 0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                        if arg1 <= 0:
                            if not userInfo[address(msg.sender)].field_0:
                                userInfo[address(msg.sender)].field_256 = 0
                            else:
                                require userInfo[address(msg.sender)].field_0
                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                            emit Deposit(arg1, msg.sender);
                        else:
                            require ext_code.size(address(poolInfo.field_0))
                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                            if ext_code.size(address(poolInfo.field_0)) <= 0:
                                revert with 0, 'Address: call to non-contract'
                            mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                            mem[580 len 4] = 0
                            call address(poolInfo.field_0) with:
                                 gas gas_remaining wei
                                args Mask(224, 32, arg1) << 480, mem[552 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                    revert with 0, 
                                                32,
                                                42,
                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[566 len 14],
                                                0,
                                                mem[584 len 4]
                                require ext_code.size(address(poolInfo.field_0))
                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not userInfo[address(msg.sender)].field_0:
                                    userInfo[address(msg.sender)].field_256 = 0
                                else:
                                    require userInfo[address(msg.sender)].field_0
                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                            else:
                                mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size > 0:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeBEP20: low-level call failed'
                                if return_data.size > 0:
                                    require return_data.size >= 32
                                    if not mem[488]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[ceil32(return_data.size) + 567 len 22]
                                require ext_code.size(address(poolInfo.field_0))
                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not userInfo[address(msg.sender)].field_0:
                                    userInfo[address(msg.sender)].field_256 = 0
                                else:
                                    require userInfo[address(msg.sender)].field_0
                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[ceil32(return_data.size) + 558 len 31]
                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                            emit Deposit(0, msg.sender);
                    else:
                        mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size > 0:
                                revert with ext_call.return_data[0 len return_data.size]
                            revert with 0, 'SafeBEP20: low-level call failed'
                        if return_data.size <= 0:
                            if arg1 <= 0:
                                if not userInfo[address(msg.sender)].field_0:
                                    userInfo[address(msg.sender)].field_256 = 0
                                else:
                                    require userInfo[address(msg.sender)].field_0
                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[ceil32(return_data.size) + 362 len 31]
                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                emit Deposit(arg1, msg.sender);
                            else:
                                require ext_code.size(address(poolInfo.field_0))
                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if eth.balance(this.address) < 0:
                                    revert with 0, 
                                                32,
                                                38,
                                                0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                mem[ceil32(return_data.size) + 563 len 26]
                                if ext_code.size(address(poolInfo.field_0)) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                mem[ceil32(return_data.size) + 581 len 4] = 0
                                mem[ceil32(return_data.size) + 553 len 0] = 0
                                call address(poolInfo.field_0) with:
                                     gas gas_remaining wei
                                    args Mask(224, 32, arg1) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[ceil32(return_data.size) + 567 len 14],
                                                    0,
                                                    mem[ceil32(return_data.size) + 585 len 4]
                                    require ext_code.size(address(poolInfo.field_0))
                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if not userInfo[address(msg.sender)].field_0:
                                        userInfo[address(msg.sender)].field_256 = 0
                                    else:
                                        require userInfo[address(msg.sender)].field_0
                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[ceil32(return_data.size) + 558 len 23],
                                                        0,
                                                        mem[ceil32(return_data.size) + 585 len 4]
                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                else:
                                    mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeBEP20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(2 * ceil32(return_data.size)) + 568 len 22]
                                    require ext_code.size(address(poolInfo.field_0))
                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if not userInfo[address(msg.sender)].field_0:
                                        userInfo[address(msg.sender)].field_256 = 0
                                    else:
                                        require userInfo[address(msg.sender)].field_0
                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(2 * ceil32(return_data.size)) + 559 len 31]
                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                emit Deposit(0, msg.sender);
                        else:
                            require return_data.size >= 32
                            if not mem[292]:
                                revert with 0, 
                                            32,
                                            42,
                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 371 len 22]
                            if arg1 <= 0:
                                if not userInfo[address(msg.sender)].field_0:
                                    userInfo[address(msg.sender)].field_256 = 0
                                else:
                                    require userInfo[address(msg.sender)].field_0
                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[ceil32(return_data.size) + 362 len 31]
                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                emit Deposit(arg1, msg.sender);
                            else:
                                require ext_code.size(address(poolInfo.field_0))
                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if eth.balance(this.address) < 0:
                                    revert with 0, 
                                                32,
                                                38,
                                                0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                mem[ceil32(return_data.size) + 563 len 26]
                                if ext_code.size(address(poolInfo.field_0)) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                mem[ceil32(return_data.size) + 581 len 4] = 0
                                call address(poolInfo.field_0) with:
                                     gas gas_remaining wei
                                    args Mask(224, 32, arg1) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[ceil32(return_data.size) + 567 len 14],
                                                    0,
                                                    mem[ceil32(return_data.size) + 585 len 4]
                                    require ext_code.size(address(poolInfo.field_0))
                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if not userInfo[address(msg.sender)].field_0:
                                        userInfo[address(msg.sender)].field_256 = 0
                                    else:
                                        require userInfo[address(msg.sender)].field_0
                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[ceil32(return_data.size) + 558 len 23],
                                                        0,
                                                        mem[ceil32(return_data.size) + 585 len 4]
                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                    emit Deposit(0, msg.sender);
                                else:
                                    mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeBEP20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    require ext_code.size(address(poolInfo.field_0))
                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address), mem[(2 * ceil32(return_data.size)) + 494 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                        revert with 0, 
                                                    'SafeMath: subtraction overflow',
                                                    mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                        revert with 0, 
                                                    'SafeMath: addition overflow',
                                                    mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    if not userInfo[address(msg.sender)].field_0:
                                        userInfo[address(msg.sender)].field_256 = 0
                                    else:
                                        require userInfo[address(msg.sender)].field_0
                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                    emit Deposit(address arg1, uint256 arg2):
                                                 0,
                                                 mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                 msg.sender,
            else:
                require userInfo[address(msg.sender)].field_0
                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                32,
                                33,
                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                mem[197 len 31]
                if userInfo[address(msg.sender)].field_256 > userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12:
                    revert with 0, 'SafeMath: subtraction overflow'
                if (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256 <= 0:
                    if arg1 <= 0:
                        if not userInfo[address(msg.sender)].field_0:
                            userInfo[address(msg.sender)].field_256 = 0
                        else:
                            require userInfo[address(msg.sender)].field_0
                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                        emit Deposit(arg1, msg.sender);
                    else:
                        require ext_code.size(address(poolInfo.field_0))
                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                        if ext_code.size(address(poolInfo.field_0)) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                        mem[416 len 4] = 0
                        mem[388 len 0] = 0
                        call address(poolInfo.field_0) with:
                             gas gas_remaining wei
                            args Mask(224, 32, arg1) << 480, mem[388 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                            if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                revert with 0, 
                                            32,
                                            42,
                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[402 len 14],
                                            0,
                                            mem[420 len 4]
                            require ext_code.size(address(poolInfo.field_0))
                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                revert with 0, 'SafeMath: addition overflow'
                            if not userInfo[address(msg.sender)].field_0:
                                userInfo[address(msg.sender)].field_256 = 0
                            else:
                                require userInfo[address(msg.sender)].field_0
                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                        else:
                            mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeBEP20: low-level call failed'
                            if return_data.size > 0:
                                require return_data.size >= 32
                                if not mem[324]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[ceil32(return_data.size) + 403 len 22]
                            require ext_code.size(address(poolInfo.field_0))
                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                revert with 0, 'SafeMath: addition overflow'
                            if not userInfo[address(msg.sender)].field_0:
                                userInfo[address(msg.sender)].field_256 = 0
                            else:
                                require userInfo[address(msg.sender)].field_0
                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                    revert with 0, 
                                                32,
                                                33,
                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[ceil32(return_data.size) + 394 len 31]
                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                        emit Deposit(0, msg.sender);
                else:
                    if eth.balance(this.address) < 0:
                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                    if ext_code.size(rewardTokenAddress) <= 0:
                        revert with 0, 'Address: call to non-contract'
                    mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256) >> 32
                    mem[324 len 0] = 0
                    call rewardTokenAddress with:
                       funct uint32(msg.sender)
                         gas gas_remaining wei
                        args Mask(224, 32, (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256) << 224, mem[324 len 4]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with unknown_0xa9059cbb(?????), 
                                        msg.sender,
                                        (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                            revert with 0, 32, 42, 0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                        if arg1 <= 0:
                            if not userInfo[address(msg.sender)].field_0:
                                userInfo[address(msg.sender)].field_256 = 0
                            else:
                                require userInfo[address(msg.sender)].field_0
                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                            emit Deposit(arg1, msg.sender);
                        else:
                            require ext_code.size(address(poolInfo.field_0))
                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                            if ext_code.size(address(poolInfo.field_0)) <= 0:
                                revert with 0, 'Address: call to non-contract'
                            mem[456 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                            mem[580 len 4] = 0
                            call address(poolInfo.field_0) with:
                                 gas gas_remaining wei
                                args arg1, mem[392 len 60], mem[552 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    revert with unknown_0xa9059cbb(?????), 
                                                msg.sender,
                                                (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                    revert with 0, 
                                                32,
                                                42,
                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[566 len 14],
                                                0,
                                                mem[584 len 4]
                                require ext_code.size(address(poolInfo.field_0))
                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not userInfo[address(msg.sender)].field_0:
                                    userInfo[address(msg.sender)].field_256 = 0
                                else:
                                    require userInfo[address(msg.sender)].field_0
                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                            else:
                                mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size > 0:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeBEP20: low-level call failed'
                                if return_data.size > 0:
                                    require return_data.size >= 32
                                    if not mem[488]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[ceil32(return_data.size) + 567 len 22]
                                require ext_code.size(address(poolInfo.field_0))
                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not userInfo[address(msg.sender)].field_0:
                                    userInfo[address(msg.sender)].field_256 = 0
                                else:
                                    require userInfo[address(msg.sender)].field_0
                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[ceil32(return_data.size) + 558 len 31]
                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                            emit Deposit(0, msg.sender);
                    else:
                        mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size > 0:
                                revert with ext_call.return_data[0 len return_data.size]
                            revert with 0, 'SafeBEP20: low-level call failed'
                        if return_data.size > 0:
                            require return_data.size >= 32
                            if not mem[292]:
                                revert with 0, 
                                            32,
                                            42,
                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 371 len 22]
                        if arg1 <= 0:
                            if not userInfo[address(msg.sender)].field_0:
                                userInfo[address(msg.sender)].field_256 = 0
                            else:
                                require userInfo[address(msg.sender)].field_0
                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                    revert with 0, 
                                                32,
                                                33,
                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[ceil32(return_data.size) + 362 len 31]
                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                            emit Deposit(arg1, msg.sender);
                        else:
                            require ext_code.size(address(poolInfo.field_0))
                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if eth.balance(this.address) < 0:
                                revert with 0, 
                                            32,
                                            38,
                                            0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                            mem[ceil32(return_data.size) + 563 len 26]
                            if ext_code.size(address(poolInfo.field_0)) <= 0:
                                revert with 0, 'Address: call to non-contract'
                            mem[ceil32(return_data.size) + 457 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                            mem[ceil32(return_data.size) + 581 len 4] = 0
                            call address(poolInfo.field_0) with:
                                 gas gas_remaining wei
                                args arg1, mem[ceil32(return_data.size) + 393 len 60], mem[ceil32(return_data.size) + 553 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    revert with unknown_0xa9059cbb(?????), 
                                                msg.sender,
                                                (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                    revert with 0, 
                                                32,
                                                42,
                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[ceil32(return_data.size) + 567 len 14],
                                                0,
                                                mem[ceil32(return_data.size) + 585 len 4]
                                require ext_code.size(address(poolInfo.field_0))
                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not userInfo[address(msg.sender)].field_0:
                                    userInfo[address(msg.sender)].field_256 = 0
                                else:
                                    require userInfo[address(msg.sender)].field_0
                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[ceil32(return_data.size) + 558 len 23],
                                                    0,
                                                    mem[ceil32(return_data.size) + 585 len 4]
                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                            else:
                                mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size > 0:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeBEP20: low-level call failed'
                                if return_data.size > 0:
                                    require return_data.size >= 32
                                    if not mem[ceil32(return_data.size) + 489]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[(2 * ceil32(return_data.size)) + 568 len 22]
                                require ext_code.size(address(poolInfo.field_0))
                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not userInfo[address(msg.sender)].field_0:
                                    userInfo[address(msg.sender)].field_256 = 0
                                else:
                                    require userInfo[address(msg.sender)].field_0
                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[(2 * ceil32(return_data.size)) + 559 len 31]
                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                            emit Deposit(0, msg.sender);
    else:
        require ext_code.size(address(poolInfo.field_0))
        staticcall address(poolInfo.field_0).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            uint256(poolInfo.field_512) = block.timestamp
            if userInfo[address(msg.sender)].field_0 <= 0:
                if arg1 <= 0:
                    if not userInfo[address(msg.sender)].field_0:
                        userInfo[address(msg.sender)].field_256 = 0
                    else:
                        require userInfo[address(msg.sender)].field_0
                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                    emit Deposit(arg1, msg.sender);
                else:
                    require ext_code.size(address(poolInfo.field_0))
                    staticcall address(poolInfo.field_0).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if eth.balance(this.address) < 0:
                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                    if ext_code.size(address(poolInfo.field_0)) <= 0:
                        revert with 0, 'Address: call to non-contract'
                    mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                    mem[416 len 4] = 0
                    call address(poolInfo.field_0) with:
                         gas gas_remaining wei
                        args Mask(224, 32, arg1) << 480, mem[388 len 4]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                        if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                            revert with 0, 
                                        32,
                                        42,
                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[402 len 14],
                                        0,
                                        mem[420 len 4]
                        require ext_code.size(address(poolInfo.field_0))
                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > ext_call.return_data[0]:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                            revert with 0, 'SafeMath: addition overflow'
                        if not userInfo[address(msg.sender)].field_0:
                            userInfo[address(msg.sender)].field_256 = 0
                        else:
                            require userInfo[address(msg.sender)].field_0
                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                    else:
                        mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size > 0:
                                revert with ext_call.return_data[0 len return_data.size]
                            revert with 0, 'SafeBEP20: low-level call failed'
                        if return_data.size > 0:
                            require return_data.size >= 32
                            if not mem[324]:
                                revert with 0, 
                                            32,
                                            42,
                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 403 len 22]
                        require ext_code.size(address(poolInfo.field_0))
                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > ext_call.return_data[0]:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                            revert with 0, 'SafeMath: addition overflow'
                        if not userInfo[address(msg.sender)].field_0:
                            userInfo[address(msg.sender)].field_256 = 0
                        else:
                            require userInfo[address(msg.sender)].field_0
                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                revert with 0, 
                                            32,
                                            33,
                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[ceil32(return_data.size) + 394 len 31]
                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                    emit Deposit(0, msg.sender);
            else:
                if not userInfo[address(msg.sender)].field_0:
                    if userInfo[address(msg.sender)].field_256 > 0:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if -userInfo[address(msg.sender)].field_256 <= 0:
                        if arg1 <= 0:
                            if not userInfo[address(msg.sender)].field_0:
                                userInfo[address(msg.sender)].field_256 = 0
                            else:
                                require userInfo[address(msg.sender)].field_0
                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                            emit Deposit(arg1, msg.sender);
                        else:
                            require ext_code.size(address(poolInfo.field_0))
                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                            if ext_code.size(address(poolInfo.field_0)) <= 0:
                                revert with 0, 'Address: call to non-contract'
                            mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                            mem[416 len 4] = 0
                            mem[388 len 0] = 0
                            call address(poolInfo.field_0) with:
                                 gas gas_remaining wei
                                args Mask(224, 32, arg1) << 480, mem[388 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                    revert with 0, 
                                                32,
                                                42,
                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[402 len 14],
                                                0,
                                                mem[420 len 4]
                                require ext_code.size(address(poolInfo.field_0))
                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not userInfo[address(msg.sender)].field_0:
                                    userInfo[address(msg.sender)].field_256 = 0
                                else:
                                    require userInfo[address(msg.sender)].field_0
                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                            else:
                                mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size > 0:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeBEP20: low-level call failed'
                                if return_data.size > 0:
                                    require return_data.size >= 32
                                    if not mem[324]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[ceil32(return_data.size) + 403 len 22]
                                require ext_code.size(address(poolInfo.field_0))
                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not userInfo[address(msg.sender)].field_0:
                                    userInfo[address(msg.sender)].field_256 = 0
                                else:
                                    require userInfo[address(msg.sender)].field_0
                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[ceil32(return_data.size) + 394 len 31]
                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                            emit Deposit(0, msg.sender);
                    else:
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                        if ext_code.size(rewardTokenAddress) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, -userInfo[address(msg.sender)].field_256) >> 32
                        call rewardTokenAddress with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, -userInfo[address(msg.sender)].field_256) << 224, mem[324 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                revert with 0, 32, 42, 0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                            if arg1 <= 0:
                                if not userInfo[address(msg.sender)].field_0:
                                    userInfo[address(msg.sender)].field_256 = 0
                                else:
                                    require userInfo[address(msg.sender)].field_0
                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                emit Deposit(arg1, msg.sender);
                            else:
                                require ext_code.size(address(poolInfo.field_0))
                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                if ext_code.size(address(poolInfo.field_0)) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                mem[580 len 4] = 0
                                call address(poolInfo.field_0) with:
                                     gas gas_remaining wei
                                    args Mask(224, 32, arg1) << 480, mem[552 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[566 len 14],
                                                    0,
                                                    mem[584 len 4]
                                    require ext_code.size(address(poolInfo.field_0))
                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if not userInfo[address(msg.sender)].field_0:
                                        userInfo[address(msg.sender)].field_256 = 0
                                    else:
                                        require userInfo[address(msg.sender)].field_0
                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                else:
                                    mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeBEP20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[488]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[ceil32(return_data.size) + 567 len 22]
                                    require ext_code.size(address(poolInfo.field_0))
                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if not userInfo[address(msg.sender)].field_0:
                                        userInfo[address(msg.sender)].field_256 = 0
                                    else:
                                        require userInfo[address(msg.sender)].field_0
                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[ceil32(return_data.size) + 558 len 31]
                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                emit Deposit(0, msg.sender);
                        else:
                            mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeBEP20: low-level call failed'
                            if return_data.size <= 0:
                                if arg1 <= 0:
                                    if not userInfo[address(msg.sender)].field_0:
                                        userInfo[address(msg.sender)].field_256 = 0
                                    else:
                                        require userInfo[address(msg.sender)].field_0
                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[ceil32(return_data.size) + 362 len 31]
                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                    emit Deposit(arg1, msg.sender);
                                else:
                                    require ext_code.size(address(poolInfo.field_0))
                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 
                                                    32,
                                                    38,
                                                    0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                    mem[ceil32(return_data.size) + 563 len 26]
                                    if ext_code.size(address(poolInfo.field_0)) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                    mem[ceil32(return_data.size) + 581 len 4] = 0
                                    mem[ceil32(return_data.size) + 553 len 0] = 0
                                    call address(poolInfo.field_0) with:
                                         gas gas_remaining wei
                                        args Mask(224, 32, arg1) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[ceil32(return_data.size) + 567 len 14],
                                                        0,
                                                        mem[ceil32(return_data.size) + 585 len 4]
                                        require ext_code.size(address(poolInfo.field_0))
                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if not userInfo[address(msg.sender)].field_0:
                                            userInfo[address(msg.sender)].field_256 = 0
                                        else:
                                            require userInfo[address(msg.sender)].field_0
                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[ceil32(return_data.size) + 558 len 23],
                                                            0,
                                                            mem[ceil32(return_data.size) + 585 len 4]
                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                    else:
                                        mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeBEP20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(2 * ceil32(return_data.size)) + 568 len 22]
                                        require ext_code.size(address(poolInfo.field_0))
                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if not userInfo[address(msg.sender)].field_0:
                                            userInfo[address(msg.sender)].field_256 = 0
                                        else:
                                            require userInfo[address(msg.sender)].field_0
                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(2 * ceil32(return_data.size)) + 559 len 31]
                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                    emit Deposit(0, msg.sender);
                            else:
                                require return_data.size >= 32
                                if not mem[292]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[ceil32(return_data.size) + 371 len 22]
                                if arg1 <= 0:
                                    if not userInfo[address(msg.sender)].field_0:
                                        userInfo[address(msg.sender)].field_256 = 0
                                    else:
                                        require userInfo[address(msg.sender)].field_0
                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[ceil32(return_data.size) + 362 len 31]
                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                    emit Deposit(arg1, msg.sender);
                                else:
                                    require ext_code.size(address(poolInfo.field_0))
                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 
                                                    32,
                                                    38,
                                                    0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                    mem[ceil32(return_data.size) + 563 len 26]
                                    if ext_code.size(address(poolInfo.field_0)) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                    mem[ceil32(return_data.size) + 581 len 4] = 0
                                    call address(poolInfo.field_0) with:
                                         gas gas_remaining wei
                                        args Mask(224, 32, arg1) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[ceil32(return_data.size) + 567 len 14],
                                                        0,
                                                        mem[ceil32(return_data.size) + 585 len 4]
                                        require ext_code.size(address(poolInfo.field_0))
                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if not userInfo[address(msg.sender)].field_0:
                                            userInfo[address(msg.sender)].field_256 = 0
                                        else:
                                            require userInfo[address(msg.sender)].field_0
                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[ceil32(return_data.size) + 558 len 23],
                                                            0,
                                                            mem[ceil32(return_data.size) + 585 len 4]
                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                        emit Deposit(0, msg.sender);
                                    else:
                                        mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeBEP20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                        require ext_code.size(address(poolInfo.field_0))
                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address), mem[(2 * ceil32(return_data.size)) + 494 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                            revert with 0, 
                                                        'SafeMath: subtraction overflow',
                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                            revert with 0, 
                                                        'SafeMath: addition overflow',
                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if not userInfo[address(msg.sender)].field_0:
                                            userInfo[address(msg.sender)].field_256 = 0
                                        else:
                                            require userInfo[address(msg.sender)].field_0
                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                        emit Deposit(address arg1, uint256 arg2):
                                                     0,
                                                     mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                     msg.sender,
                else:
                    require userInfo[address(msg.sender)].field_0
                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                    32,
                                    33,
                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[197 len 31]
                    if userInfo[address(msg.sender)].field_256 > userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256 <= 0:
                        if arg1 <= 0:
                            if not userInfo[address(msg.sender)].field_0:
                                userInfo[address(msg.sender)].field_256 = 0
                            else:
                                require userInfo[address(msg.sender)].field_0
                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                            emit Deposit(arg1, msg.sender);
                        else:
                            require ext_code.size(address(poolInfo.field_0))
                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                            if ext_code.size(address(poolInfo.field_0)) <= 0:
                                revert with 0, 'Address: call to non-contract'
                            mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                            mem[416 len 4] = 0
                            call address(poolInfo.field_0) with:
                                 gas gas_remaining wei
                                args Mask(224, 32, arg1) << 480, mem[388 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                    revert with 0, 
                                                32,
                                                42,
                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[402 len 14],
                                                0,
                                                mem[420 len 4]
                                require ext_code.size(address(poolInfo.field_0))
                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not userInfo[address(msg.sender)].field_0:
                                    userInfo[address(msg.sender)].field_256 = 0
                                else:
                                    require userInfo[address(msg.sender)].field_0
                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                            else:
                                mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size > 0:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeBEP20: low-level call failed'
                                if return_data.size > 0:
                                    require return_data.size >= 32
                                    if not mem[324]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[ceil32(return_data.size) + 403 len 22]
                                require ext_code.size(address(poolInfo.field_0))
                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not userInfo[address(msg.sender)].field_0:
                                    userInfo[address(msg.sender)].field_256 = 0
                                else:
                                    require userInfo[address(msg.sender)].field_0
                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[ceil32(return_data.size) + 394 len 31]
                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                            emit Deposit(0, msg.sender);
                    else:
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                        if ext_code.size(rewardTokenAddress) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256) >> 32
                        mem[324 len 0] = 0
                        call rewardTokenAddress with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256) << 224, mem[324 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with unknown_0xa9059cbb(?????), 
                                            msg.sender,
                                            (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                revert with 0, 32, 42, 0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                            if arg1 <= 0:
                                if not userInfo[address(msg.sender)].field_0:
                                    userInfo[address(msg.sender)].field_256 = 0
                                else:
                                    require userInfo[address(msg.sender)].field_0
                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                emit Deposit(arg1, msg.sender);
                            else:
                                require ext_code.size(address(poolInfo.field_0))
                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                if ext_code.size(address(poolInfo.field_0)) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[456 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                mem[580 len 4] = 0
                                call address(poolInfo.field_0) with:
                                     gas gas_remaining wei
                                    args arg1, mem[392 len 60], mem[552 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        revert with unknown_0xa9059cbb(?????), 
                                                    msg.sender,
                                                    (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[566 len 14],
                                                    0,
                                                    mem[584 len 4]
                                    require ext_code.size(address(poolInfo.field_0))
                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if not userInfo[address(msg.sender)].field_0:
                                        userInfo[address(msg.sender)].field_256 = 0
                                    else:
                                        require userInfo[address(msg.sender)].field_0
                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                else:
                                    mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeBEP20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[488]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[ceil32(return_data.size) + 567 len 22]
                                    require ext_code.size(address(poolInfo.field_0))
                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if not userInfo[address(msg.sender)].field_0:
                                        userInfo[address(msg.sender)].field_256 = 0
                                    else:
                                        require userInfo[address(msg.sender)].field_0
                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[ceil32(return_data.size) + 558 len 31]
                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                emit Deposit(0, msg.sender);
                        else:
                            mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeBEP20: low-level call failed'
                            if return_data.size <= 0:
                                if arg1 <= 0:
                                    if not userInfo[address(msg.sender)].field_0:
                                        userInfo[address(msg.sender)].field_256 = 0
                                    else:
                                        require userInfo[address(msg.sender)].field_0
                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[ceil32(return_data.size) + 362 len 31]
                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                    emit Deposit(arg1, msg.sender);
                                else:
                                    require ext_code.size(address(poolInfo.field_0))
                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 
                                                    32,
                                                    38,
                                                    0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                    mem[ceil32(return_data.size) + 563 len 26]
                                    if ext_code.size(address(poolInfo.field_0)) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[ceil32(return_data.size) + 457 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                    mem[ceil32(return_data.size) + 581 len 4] = 0
                                    call address(poolInfo.field_0) with:
                                         gas gas_remaining wei
                                        args arg1, mem[ceil32(return_data.size) + 393 len 60], mem[ceil32(return_data.size) + 553 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with unknown_0xa9059cbb(?????), 
                                                        msg.sender,
                                                        (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[ceil32(return_data.size) + 567 len 14],
                                                        0,
                                                        mem[ceil32(return_data.size) + 585 len 4]
                                        require ext_code.size(address(poolInfo.field_0))
                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if not userInfo[address(msg.sender)].field_0:
                                            userInfo[address(msg.sender)].field_256 = 0
                                        else:
                                            require userInfo[address(msg.sender)].field_0
                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[ceil32(return_data.size) + 558 len 23],
                                                            0,
                                                            mem[ceil32(return_data.size) + 585 len 4]
                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                    else:
                                        mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeBEP20: low-level call failed',
                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                        require ext_code.size(address(poolInfo.field_0))
                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                            revert with 0, 
                                                        'SafeMath: subtraction overflow',
                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                            revert with 0, 
                                                        'SafeMath: addition overflow',
                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if not userInfo[address(msg.sender)].field_0:
                                            userInfo[address(msg.sender)].field_256 = 0
                                        else:
                                            require userInfo[address(msg.sender)].field_0
                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                    emit Deposit(0, msg.sender);
                            else:
                                require return_data.size >= 32
                                if not mem[292]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[ceil32(return_data.size) + 371 len 22]
                                if arg1 <= 0:
                                    if not userInfo[address(msg.sender)].field_0:
                                        userInfo[address(msg.sender)].field_256 = 0
                                    else:
                                        require userInfo[address(msg.sender)].field_0
                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[ceil32(return_data.size) + 362 len 31]
                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                    emit Deposit(arg1, msg.sender);
                                else:
                                    require ext_code.size(address(poolInfo.field_0))
                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 
                                                    32,
                                                    38,
                                                    0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                    mem[ceil32(return_data.size) + 563 len 26]
                                    if ext_code.size(address(poolInfo.field_0)) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[ceil32(return_data.size) + 457 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                    mem[ceil32(return_data.size) + 581 len 4] = 0
                                    call address(poolInfo.field_0) with:
                                         gas gas_remaining wei
                                        args arg1, mem[ceil32(return_data.size) + 393 len 60], mem[ceil32(return_data.size) + 553 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with unknown_0xa9059cbb(?????), 
                                                        msg.sender,
                                                        (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[ceil32(return_data.size) + 567 len 14],
                                                        0,
                                                        mem[ceil32(return_data.size) + 585 len 4]
                                        require ext_code.size(address(poolInfo.field_0))
                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if not userInfo[address(msg.sender)].field_0:
                                            userInfo[address(msg.sender)].field_256 = 0
                                        else:
                                            require userInfo[address(msg.sender)].field_0
                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[ceil32(return_data.size) + 558 len 23],
                                                            0,
                                                            mem[ceil32(return_data.size) + 585 len 4]
                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                    else:
                                        mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeBEP20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(2 * ceil32(return_data.size)) + 568 len 22]
                                        require ext_code.size(address(poolInfo.field_0))
                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if not userInfo[address(msg.sender)].field_0:
                                            userInfo[address(msg.sender)].field_256 = 0
                                        else:
                                            require userInfo[address(msg.sender)].field_0
                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(2 * ceil32(return_data.size)) + 559 len 31]
                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                    emit Deposit(0, msg.sender);
        else:
            if block.timestamp <= bonusEndTimestamp:
                if uint256(poolInfo.field_512) > block.timestamp:
                    revert with 0, 'SafeMath: subtraction overflow'
                if not block.timestamp - uint256(poolInfo.field_512):
                    if stor6 <= 0:
                        revert with 0, 'SafeMath: division by zero'
                    require stor6
                    if not 0 / stor6:
                        if ext_call.return_data[0] <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_call.return_data[0]
                        if uint256(poolInfo.field_768) + (0 / ext_call.return_data[0]) < uint256(poolInfo.field_768):
                            revert with 0, 'SafeMath: addition overflow'
                        uint256(poolInfo.field_768) += 0 / ext_call.return_data[0]
                        uint256(poolInfo.field_512) = block.timestamp
                        if userInfo[address(msg.sender)].field_0 <= 0:
                            if arg1 <= 0:
                                if not userInfo[address(msg.sender)].field_0:
                                    userInfo[address(msg.sender)].field_256 = 0
                                else:
                                    require userInfo[address(msg.sender)].field_0
                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                emit Deposit(arg1, msg.sender);
                            else:
                                require ext_code.size(address(poolInfo.field_0))
                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                if ext_code.size(address(poolInfo.field_0)) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                mem[416 len 4] = 0
                                mem[388 len 0] = 0
                                call address(poolInfo.field_0) with:
                                     gas gas_remaining wei
                                    args Mask(224, 32, arg1) << 480, mem[388 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                    if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[402 len 14],
                                                    0,
                                                    mem[420 len 4]
                                    require ext_code.size(address(poolInfo.field_0))
                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if not userInfo[address(msg.sender)].field_0:
                                        userInfo[address(msg.sender)].field_256 = 0
                                    else:
                                        require userInfo[address(msg.sender)].field_0
                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                else:
                                    mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeBEP20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[324]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[ceil32(return_data.size) + 403 len 22]
                                    require ext_code.size(address(poolInfo.field_0))
                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if not userInfo[address(msg.sender)].field_0:
                                        userInfo[address(msg.sender)].field_256 = 0
                                    else:
                                        require userInfo[address(msg.sender)].field_0
                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[ceil32(return_data.size) + 394 len 31]
                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                emit Deposit(0, msg.sender);
                        else:
                            if not userInfo[address(msg.sender)].field_0:
                                if userInfo[address(msg.sender)].field_256 > 0:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if -userInfo[address(msg.sender)].field_256 <= 0:
                                    if arg1 <= 0:
                                        if not userInfo[address(msg.sender)].field_0:
                                            userInfo[address(msg.sender)].field_256 = 0
                                        else:
                                            require userInfo[address(msg.sender)].field_0
                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                        emit Deposit(arg1, msg.sender);
                                    else:
                                        require ext_code.size(address(poolInfo.field_0))
                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                        if ext_code.size(address(poolInfo.field_0)) <= 0:
                                            revert with 0, 'Address: call to non-contract'
                                        mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                        mem[416 len 4] = 0
                                        call address(poolInfo.field_0) with:
                                             gas gas_remaining wei
                                            args Mask(224, 32, arg1) << 480, mem[388 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                            if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[402 len 14],
                                                            0,
                                                            mem[420 len 4]
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                        else:
                                            mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size > 0:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeBEP20: low-level call failed'
                                            if return_data.size > 0:
                                                require return_data.size >= 32
                                                if not mem[324]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 403 len 22]
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[ceil32(return_data.size) + 394 len 31]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                        emit Deposit(0, msg.sender);
                                else:
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                    if ext_code.size(rewardTokenAddress) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, -userInfo[address(msg.sender)].field_256) >> 32
                                    call rewardTokenAddress with:
                                       funct uint32(msg.sender)
                                         gas gas_remaining wei
                                        args Mask(224, 32, -userInfo[address(msg.sender)].field_256) << 224, mem[324 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                            revert with 0, 32, 42, 0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                        if arg1 <= 0:
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(arg1, msg.sender);
                                        else:
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                            if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                revert with 0, 'Address: call to non-contract'
                                            mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                            mem[580 len 4] = 0
                                            mem[552 len 0] = 0
                                            call address(poolInfo.field_0) with:
                                                 gas gas_remaining wei
                                                args Mask(224, 32, arg1) << 480, mem[552 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[566 len 14],
                                                                0,
                                                                mem[584 len 4]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            else:
                                                mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size > 0:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeBEP20: low-level call failed'
                                                if return_data.size > 0:
                                                    require return_data.size >= 32
                                                    if not mem[488]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 567 len 22]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 558 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(0, msg.sender);
                                    else:
                                        mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeBEP20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[292]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[ceil32(return_data.size) + 371 len 22]
                                        if arg1 <= 0:
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[ceil32(return_data.size) + 362 len 31]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(arg1, msg.sender);
                                        else:
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 
                                                            32,
                                                            38,
                                                            0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                            mem[ceil32(return_data.size) + 563 len 26]
                                            if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                revert with 0, 'Address: call to non-contract'
                                            mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                            mem[ceil32(return_data.size) + 581 len 4] = 0
                                            call address(poolInfo.field_0) with:
                                                 gas gas_remaining wei
                                                args Mask(224, 32, arg1) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 567 len 14],
                                                                0,
                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 558 len 23],
                                                                    0,
                                                                    mem[ceil32(return_data.size) + 585 len 4]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(0, msg.sender);
                                            else:
                                                mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size > 0:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeBEP20: low-level call failed'
                                                if return_data.size > 0:
                                                    require return_data.size >= 32
                                                    if not mem[ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args address(this.address), mem[(2 * ceil32(return_data.size)) + 494 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 
                                                                'SafeMath: subtraction overflow',
                                                                mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 
                                                                'SafeMath: addition overflow',
                                                                mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(address arg1, uint256 arg2):
                                                             0,
                                                             mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                             msg.sender,
                            else:
                                require userInfo[address(msg.sender)].field_0
                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if userInfo[address(msg.sender)].field_256 > userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256 <= 0:
                                    if arg1 <= 0:
                                        if not userInfo[address(msg.sender)].field_0:
                                            userInfo[address(msg.sender)].field_256 = 0
                                        else:
                                            require userInfo[address(msg.sender)].field_0
                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                        emit Deposit(arg1, msg.sender);
                                    else:
                                        require ext_code.size(address(poolInfo.field_0))
                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                        if ext_code.size(address(poolInfo.field_0)) <= 0:
                                            revert with 0, 'Address: call to non-contract'
                                        mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                        mem[416 len 4] = 0
                                        mem[388 len 0] = 0
                                        call address(poolInfo.field_0) with:
                                             gas gas_remaining wei
                                            args Mask(224, 32, arg1) << 480, mem[388 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                            if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[402 len 14],
                                                            0,
                                                            mem[420 len 4]
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                        else:
                                            mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size > 0:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeBEP20: low-level call failed'
                                            if return_data.size > 0:
                                                require return_data.size >= 32
                                                if not mem[324]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 403 len 22]
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[ceil32(return_data.size) + 394 len 31]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                        emit Deposit(0, msg.sender);
                                else:
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                    if ext_code.size(rewardTokenAddress) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256) >> 32
                                    call rewardTokenAddress with:
                                       funct uint32(msg.sender)
                                         gas gas_remaining wei
                                        args Mask(224, 32, (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256) << 224, mem[324 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with unknown_0xa9059cbb(?????), 
                                                        msg.sender,
                                                        (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                            revert with 0, 32, 42, 0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                        if arg1 <= 0:
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(arg1, msg.sender);
                                        else:
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                            if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                revert with 0, 'Address: call to non-contract'
                                            mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                            mem[580 len 4] = 0
                                            mem[552 len 0] = 0
                                            call address(poolInfo.field_0) with:
                                                 gas gas_remaining wei
                                                args Mask(224, 32, arg1) << 480, mem[552 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0xa9059cbb(?????), 
                                                                msg.sender,
                                                                (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[566 len 14],
                                                                0,
                                                                mem[584 len 4]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            else:
                                                mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size > 0:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeBEP20: low-level call failed'
                                                if return_data.size > 0:
                                                    require return_data.size >= 32
                                                    if not mem[488]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 567 len 22]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 558 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(0, msg.sender);
                                    else:
                                        mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeBEP20: low-level call failed'
                                        if return_data.size <= 0:
                                            if arg1 <= 0:
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 362 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(arg1, msg.sender);
                                            else:
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 
                                                                32,
                                                                38,
                                                                0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                mem[ceil32(return_data.size) + 563 len 26]
                                                if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                mem[ceil32(return_data.size) + 581 len 4] = 0
                                                call address(poolInfo.field_0) with:
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, arg1) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), 
                                                                    msg.sender,
                                                                    (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 567 len 14],
                                                                    0,
                                                                    mem[ceil32(return_data.size) + 585 len 4]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 558 len 23],
                                                                        0,
                                                                        mem[ceil32(return_data.size) + 585 len 4]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(0, msg.sender);
                                                else:
                                                    mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size > 0:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeBEP20: low-level call failed'
                                                    if return_data.size > 0:
                                                        require return_data.size >= 32
                                                        if not mem[ceil32(return_data.size) + 489]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address), mem[(2 * ceil32(return_data.size)) + 494 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 
                                                                    'SafeMath: subtraction overflow',
                                                                    mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 
                                                                    'SafeMath: addition overflow',
                                                                    mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(address arg1, uint256 arg2):
                                                                 0,
                                                                 mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                                 msg.sender,
                                        else:
                                            require return_data.size >= 32
                                            if not mem[292]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[ceil32(return_data.size) + 371 len 22]
                                            if arg1 <= 0:
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 362 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(arg1, msg.sender);
                                            else:
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 
                                                                32,
                                                                38,
                                                                0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                mem[ceil32(return_data.size) + 563 len 26]
                                                if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                mem[ceil32(return_data.size) + 581 len 4] = 0
                                                mem[ceil32(return_data.size) + 553 len 0] = 0
                                                call address(poolInfo.field_0) with:
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, arg1) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), 
                                                                    msg.sender,
                                                                    (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 567 len 14],
                                                                    0,
                                                                    mem[ceil32(return_data.size) + 585 len 4]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 558 len 23],
                                                                        0,
                                                                        mem[ceil32(return_data.size) + 585 len 4]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                else:
                                                    mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size > 0:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeBEP20: low-level call failed'
                                                    if return_data.size > 0:
                                                        require return_data.size >= 32
                                                        if not mem[ceil32(return_data.size) + 489]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[(2 * ceil32(return_data.size)) + 568 len 22]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[(2 * ceil32(return_data.size)) + 559 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(0, msg.sender);
                    else:
                        require 0 / stor6
                        if 10^12 * 0 / stor6 / 0 / stor6 != 10^12:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        if ext_call.return_data[0] <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_call.return_data[0]
                        if uint256(poolInfo.field_768) + (10^12 * 0 / stor6 / ext_call.return_data[0]) < uint256(poolInfo.field_768):
                            revert with 0, 'SafeMath: addition overflow'
                        uint256(poolInfo.field_768) += 10^12 * 0 / stor6 / ext_call.return_data[0]
                        uint256(poolInfo.field_512) = block.timestamp
                        if userInfo[address(msg.sender)].field_0 <= 0:
                            if arg1 <= 0:
                                if not userInfo[address(msg.sender)].field_0:
                                    userInfo[address(msg.sender)].field_256 = 0
                                else:
                                    require userInfo[address(msg.sender)].field_0
                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                emit Deposit(arg1, msg.sender);
                            else:
                                require ext_code.size(address(poolInfo.field_0))
                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                if ext_code.size(address(poolInfo.field_0)) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                mem[416 len 4] = 0
                                mem[388 len 0] = 0
                                call address(poolInfo.field_0) with:
                                     gas gas_remaining wei
                                    args Mask(224, 32, arg1) << 480, mem[388 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                    if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[402 len 14],
                                                    0,
                                                    mem[420 len 4]
                                    require ext_code.size(address(poolInfo.field_0))
                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if not userInfo[address(msg.sender)].field_0:
                                        userInfo[address(msg.sender)].field_256 = 0
                                    else:
                                        require userInfo[address(msg.sender)].field_0
                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                else:
                                    mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeBEP20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[324]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[ceil32(return_data.size) + 403 len 22]
                                    require ext_code.size(address(poolInfo.field_0))
                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if not userInfo[address(msg.sender)].field_0:
                                        userInfo[address(msg.sender)].field_256 = 0
                                    else:
                                        require userInfo[address(msg.sender)].field_0
                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[ceil32(return_data.size) + 394 len 31]
                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                emit Deposit(0, msg.sender);
                        else:
                            if not userInfo[address(msg.sender)].field_0:
                                if userInfo[address(msg.sender)].field_256 > 0:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if -userInfo[address(msg.sender)].field_256 <= 0:
                                    if arg1 <= 0:
                                        if not userInfo[address(msg.sender)].field_0:
                                            userInfo[address(msg.sender)].field_256 = 0
                                        else:
                                            require userInfo[address(msg.sender)].field_0
                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                        emit Deposit(arg1, msg.sender);
                                    else:
                                        require ext_code.size(address(poolInfo.field_0))
                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                        if ext_code.size(address(poolInfo.field_0)) <= 0:
                                            revert with 0, 'Address: call to non-contract'
                                        mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                        mem[416 len 4] = 0
                                        mem[388 len 0] = 0
                                        call address(poolInfo.field_0) with:
                                             gas gas_remaining wei
                                            args Mask(224, 32, arg1) << 480, mem[388 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                            if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[402 len 14],
                                                            0,
                                                            mem[420 len 4]
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                        else:
                                            mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size > 0:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeBEP20: low-level call failed'
                                            if return_data.size > 0:
                                                require return_data.size >= 32
                                                if not mem[324]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 403 len 22]
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[ceil32(return_data.size) + 394 len 31]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                        emit Deposit(0, msg.sender);
                                else:
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                    if ext_code.size(rewardTokenAddress) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, -userInfo[address(msg.sender)].field_256) >> 32
                                    mem[324 len 0] = 0
                                    call rewardTokenAddress with:
                                       funct uint32(msg.sender)
                                         gas gas_remaining wei
                                        args Mask(224, 32, -userInfo[address(msg.sender)].field_256) << 224, mem[324 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                            revert with 0, 32, 42, 0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                        if arg1 <= 0:
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(arg1, msg.sender);
                                        else:
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                            if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                revert with 0, 'Address: call to non-contract'
                                            mem[456 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                            mem[580 len 4] = 0
                                            call address(poolInfo.field_0) with:
                                                 gas gas_remaining wei
                                                args arg1, mem[392 len 60], mem[552 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[566 len 14],
                                                                0,
                                                                mem[584 len 4]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            else:
                                                mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size > 0:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeBEP20: low-level call failed'
                                                if return_data.size > 0:
                                                    require return_data.size >= 32
                                                    if not mem[488]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 567 len 22]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 558 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(0, msg.sender);
                                    else:
                                        mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeBEP20: low-level call failed'
                                        if return_data.size <= 0:
                                            if arg1 <= 0:
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 362 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(arg1, msg.sender);
                                            else:
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 
                                                                32,
                                                                38,
                                                                0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                mem[ceil32(return_data.size) + 563 len 26]
                                                if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[ceil32(return_data.size) + 457 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                mem[ceil32(return_data.size) + 581 len 4] = 0
                                                call address(poolInfo.field_0) with:
                                                     gas gas_remaining wei
                                                    args arg1, mem[ceil32(return_data.size) + 393 len 60], mem[ceil32(return_data.size) + 553 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 567 len 14],
                                                                    0,
                                                                    mem[ceil32(return_data.size) + 585 len 4]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 558 len 23],
                                                                        0,
                                                                        mem[ceil32(return_data.size) + 585 len 4]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                else:
                                                    mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size > 0:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 
                                                                    'SafeBEP20: low-level call failed',
                                                                    mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                    if return_data.size > 0:
                                                        require return_data.size >= 32
                                                        if not mem[ceil32(return_data.size) + 489]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 
                                                                    'SafeMath: subtraction overflow',
                                                                    mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 
                                                                    'SafeMath: addition overflow',
                                                                    mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(0, msg.sender);
                                        else:
                                            require return_data.size >= 32
                                            if not mem[292]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[ceil32(return_data.size) + 371 len 22]
                                            if arg1 <= 0:
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 362 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(arg1, msg.sender);
                                            else:
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 
                                                                32,
                                                                38,
                                                                0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                mem[ceil32(return_data.size) + 563 len 26]
                                                if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[ceil32(return_data.size) + 457 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                mem[ceil32(return_data.size) + 581 len 4] = 0
                                                call address(poolInfo.field_0) with:
                                                     gas gas_remaining wei
                                                    args arg1, mem[ceil32(return_data.size) + 393 len 60], mem[ceil32(return_data.size) + 553 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 567 len 14],
                                                                    0,
                                                                    mem[ceil32(return_data.size) + 585 len 4]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 558 len 23],
                                                                        0,
                                                                        mem[ceil32(return_data.size) + 585 len 4]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                else:
                                                    mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size > 0:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeBEP20: low-level call failed'
                                                    if return_data.size > 0:
                                                        require return_data.size >= 32
                                                        if not mem[ceil32(return_data.size) + 489]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[(2 * ceil32(return_data.size)) + 568 len 22]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[(2 * ceil32(return_data.size)) + 559 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(0, msg.sender);
                            else:
                                require userInfo[address(msg.sender)].field_0
                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if userInfo[address(msg.sender)].field_256 > userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256 <= 0:
                                    if arg1 <= 0:
                                        if not userInfo[address(msg.sender)].field_0:
                                            userInfo[address(msg.sender)].field_256 = 0
                                        else:
                                            require userInfo[address(msg.sender)].field_0
                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                        emit Deposit(arg1, msg.sender);
                                    else:
                                        require ext_code.size(address(poolInfo.field_0))
                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                        if ext_code.size(address(poolInfo.field_0)) <= 0:
                                            revert with 0, 'Address: call to non-contract'
                                        mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                        mem[416 len 4] = 0
                                        mem[388 len 0] = 0
                                        call address(poolInfo.field_0) with:
                                             gas gas_remaining wei
                                            args Mask(224, 32, arg1) << 480, mem[388 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                            if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[402 len 14],
                                                            0,
                                                            mem[420 len 4]
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                        else:
                                            mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size > 0:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeBEP20: low-level call failed'
                                            if return_data.size > 0:
                                                require return_data.size >= 32
                                                if not mem[324]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 403 len 22]
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[ceil32(return_data.size) + 394 len 31]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                        emit Deposit(0, msg.sender);
                                else:
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                    if ext_code.size(rewardTokenAddress) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256) >> 32
                                    mem[324 len 0] = 0
                                    call rewardTokenAddress with:
                                       funct uint32(msg.sender)
                                         gas gas_remaining wei
                                        args Mask(224, 32, (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256) << 224, mem[324 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with unknown_0xa9059cbb(?????), 
                                                        msg.sender,
                                                        (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                            revert with 0, 32, 42, 0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                        if arg1 <= 0:
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(arg1, msg.sender);
                                        else:
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                            if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                revert with 0, 'Address: call to non-contract'
                                            mem[456 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                            mem[580 len 4] = 0
                                            call address(poolInfo.field_0) with:
                                                 gas gas_remaining wei
                                                args arg1, mem[392 len 60], mem[552 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0xa9059cbb(?????), 
                                                                msg.sender,
                                                                (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[566 len 14],
                                                                0,
                                                                mem[584 len 4]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            else:
                                                mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size > 0:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeBEP20: low-level call failed'
                                                if return_data.size > 0:
                                                    require return_data.size >= 32
                                                    if not mem[488]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 567 len 22]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 558 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(0, msg.sender);
                                    else:
                                        mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeBEP20: low-level call failed'
                                        if return_data.size <= 0:
                                            if arg1 <= 0:
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 362 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(arg1, msg.sender);
                                            else:
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 
                                                                32,
                                                                38,
                                                                0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                mem[ceil32(return_data.size) + 563 len 26]
                                                if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[ceil32(return_data.size) + 457 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                mem[ceil32(return_data.size) + 581 len 4] = 0
                                                call address(poolInfo.field_0) with:
                                                     gas gas_remaining wei
                                                    args arg1, mem[ceil32(return_data.size) + 393 len 60], mem[ceil32(return_data.size) + 553 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), 
                                                                    msg.sender,
                                                                    (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 567 len 14],
                                                                    0,
                                                                    mem[ceil32(return_data.size) + 585 len 4]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 558 len 23],
                                                                        0,
                                                                        mem[ceil32(return_data.size) + 585 len 4]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                else:
                                                    mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size > 0:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 
                                                                    'SafeBEP20: low-level call failed',
                                                                    mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                    if return_data.size > 0:
                                                        require return_data.size >= 32
                                                        if not mem[ceil32(return_data.size) + 489]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 
                                                                    'SafeMath: subtraction overflow',
                                                                    mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 
                                                                    'SafeMath: addition overflow',
                                                                    mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(0, msg.sender);
                                        else:
                                            require return_data.size >= 32
                                            if not mem[292]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[ceil32(return_data.size) + 371 len 22]
                                            if arg1 <= 0:
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 362 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(arg1, msg.sender);
                                            else:
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 
                                                                32,
                                                                38,
                                                                0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                mem[ceil32(return_data.size) + 563 len 26]
                                                if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[ceil32(return_data.size) + 457 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                mem[ceil32(return_data.size) + 581 len 4] = 0
                                                call address(poolInfo.field_0) with:
                                                     gas gas_remaining wei
                                                    args arg1, mem[ceil32(return_data.size) + 393 len 60], mem[ceil32(return_data.size) + 553 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), 
                                                                    msg.sender,
                                                                    (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 567 len 14],
                                                                    0,
                                                                    mem[ceil32(return_data.size) + 585 len 4]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 558 len 23],
                                                                        0,
                                                                        mem[ceil32(return_data.size) + 585 len 4]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                else:
                                                    mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size > 0:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeBEP20: low-level call failed'
                                                    if return_data.size > 0:
                                                        require return_data.size >= 32
                                                        if not mem[ceil32(return_data.size) + 489]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[(2 * ceil32(return_data.size)) + 568 len 22]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[(2 * ceil32(return_data.size)) + 559 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(0, msg.sender);
                else:
                    require block.timestamp - uint256(poolInfo.field_512)
                    if (block.timestamp * rewardPerSec) - (uint256(poolInfo.field_512) * rewardPerSec) / block.timestamp - uint256(poolInfo.field_512) != rewardPerSec:
                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                    32,
                                    33,
                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[197 len 31]
                    if not (block.timestamp * rewardPerSec) - (uint256(poolInfo.field_512) * rewardPerSec):
                        if stor6 <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require stor6
                        if not 0 / stor6:
                            if ext_call.return_data[0] <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_call.return_data[0]
                            if uint256(poolInfo.field_768) + (0 / ext_call.return_data[0]) < uint256(poolInfo.field_768):
                                revert with 0, 'SafeMath: addition overflow'
                            uint256(poolInfo.field_768) += 0 / ext_call.return_data[0]
                            uint256(poolInfo.field_512) = block.timestamp
                            if userInfo[address(msg.sender)].field_0 <= 0:
                                if arg1 <= 0:
                                    if not userInfo[address(msg.sender)].field_0:
                                        userInfo[address(msg.sender)].field_256 = 0
                                    else:
                                        require userInfo[address(msg.sender)].field_0
                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                    emit Deposit(arg1, msg.sender);
                                else:
                                    require ext_code.size(address(poolInfo.field_0))
                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                    if ext_code.size(address(poolInfo.field_0)) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                    mem[416 len 4] = 0
                                    call address(poolInfo.field_0) with:
                                         gas gas_remaining wei
                                        args Mask(224, 32, arg1) << 480, mem[388 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                        if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[402 len 14],
                                                        0,
                                                        mem[420 len 4]
                                        require ext_code.size(address(poolInfo.field_0))
                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if not userInfo[address(msg.sender)].field_0:
                                            userInfo[address(msg.sender)].field_256 = 0
                                        else:
                                            require userInfo[address(msg.sender)].field_0
                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                    else:
                                        mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeBEP20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[324]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[ceil32(return_data.size) + 403 len 22]
                                        require ext_code.size(address(poolInfo.field_0))
                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if not userInfo[address(msg.sender)].field_0:
                                            userInfo[address(msg.sender)].field_256 = 0
                                        else:
                                            require userInfo[address(msg.sender)].field_0
                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[ceil32(return_data.size) + 394 len 31]
                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                    emit Deposit(0, msg.sender);
                            else:
                                if not userInfo[address(msg.sender)].field_0:
                                    if userInfo[address(msg.sender)].field_256 > 0:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if -userInfo[address(msg.sender)].field_256 <= 0:
                                        if arg1 <= 0:
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(arg1, msg.sender);
                                        else:
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                            if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                revert with 0, 'Address: call to non-contract'
                                            mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                            mem[416 len 4] = 0
                                            call address(poolInfo.field_0) with:
                                                 gas gas_remaining wei
                                                args Mask(224, 32, arg1) << 480, mem[388 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                                if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[402 len 14],
                                                                0,
                                                                mem[420 len 4]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            else:
                                                mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size > 0:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeBEP20: low-level call failed'
                                                if return_data.size > 0:
                                                    require return_data.size >= 32
                                                    if not mem[324]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 403 len 22]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 394 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(0, msg.sender);
                                    else:
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                        if ext_code.size(rewardTokenAddress) <= 0:
                                            revert with 0, 'Address: call to non-contract'
                                        mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, -userInfo[address(msg.sender)].field_256) >> 32
                                        call rewardTokenAddress with:
                                           funct uint32(msg.sender)
                                             gas gas_remaining wei
                                            args Mask(224, 32, -userInfo[address(msg.sender)].field_256) << 224, mem[324 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                revert with 0, 32, 42, 0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                            if arg1 <= 0:
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(arg1, msg.sender);
                                            else:
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                mem[580 len 4] = 0
                                                call address(poolInfo.field_0) with:
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, arg1) << 480, mem[552 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[566 len 14],
                                                                    0,
                                                                    mem[584 len 4]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                else:
                                                    mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size > 0:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeBEP20: low-level call failed'
                                                    if return_data.size > 0:
                                                        require return_data.size >= 32
                                                        if not mem[488]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 567 len 22]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 558 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(0, msg.sender);
                                        else:
                                            mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size > 0:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeBEP20: low-level call failed'
                                            if return_data.size <= 0:
                                                if arg1 <= 0:
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 362 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(arg1, msg.sender);
                                                else:
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if eth.balance(this.address) < 0:
                                                        revert with 0, 
                                                                    32,
                                                                    38,
                                                                    0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                    mem[ceil32(return_data.size) + 563 len 26]
                                                    if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                        revert with 0, 'Address: call to non-contract'
                                                    mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                    mem[ceil32(return_data.size) + 581 len 4] = 0
                                                    call address(poolInfo.field_0) with:
                                                         gas gas_remaining wei
                                                        args Mask(224, 32, arg1) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                    if not return_data.size:
                                                        if not ext_call.success:
                                                            revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 567 len 14],
                                                                        0,
                                                                        mem[ceil32(return_data.size) + 585 len 4]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 558 len 23],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                        emit Deposit(0, msg.sender);
                                                    else:
                                                        mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        if not ext_call.success:
                                                            if return_data.size > 0:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            revert with 0, 'SafeBEP20: low-level call failed'
                                                        if return_data.size > 0:
                                                            require return_data.size >= 32
                                                            if not mem[ceil32(return_data.size) + 489]:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address), mem[(2 * ceil32(return_data.size)) + 494 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 
                                                                        'SafeMath: subtraction overflow',
                                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 
                                                                        'SafeMath: addition overflow',
                                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                        emit Deposit(address arg1, uint256 arg2):
                                                                     0,
                                                                     mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                                     msg.sender,
                                            else:
                                                require return_data.size >= 32
                                                if not mem[292]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 371 len 22]
                                                if arg1 <= 0:
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 362 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(arg1, msg.sender);
                                                else:
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if eth.balance(this.address) < 0:
                                                        revert with 0, 
                                                                    32,
                                                                    38,
                                                                    0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                    mem[ceil32(return_data.size) + 563 len 26]
                                                    if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                        revert with 0, 'Address: call to non-contract'
                                                    mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                    mem[ceil32(return_data.size) + 581 len 4] = 0
                                                    mem[ceil32(return_data.size) + 553 len 0] = 0
                                                    call address(poolInfo.field_0) with:
                                                         gas gas_remaining wei
                                                        args Mask(224, 32, arg1) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                    if not return_data.size:
                                                        if not ext_call.success:
                                                            revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 567 len 14],
                                                                        0,
                                                                        mem[ceil32(return_data.size) + 585 len 4]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 558 len 23],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    else:
                                                        mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        if not ext_call.success:
                                                            if return_data.size > 0:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            revert with 0, 'SafeBEP20: low-level call failed'
                                                        if return_data.size > 0:
                                                            require return_data.size >= 32
                                                            if not mem[ceil32(return_data.size) + 489]:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[(2 * ceil32(return_data.size)) + 568 len 22]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[(2 * ceil32(return_data.size)) + 559 len 31]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(0, msg.sender);
                                else:
                                    require userInfo[address(msg.sender)].field_0
                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if userInfo[address(msg.sender)].field_256 > userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256 <= 0:
                                        if arg1 <= 0:
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(arg1, msg.sender);
                                        else:
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                            if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                revert with 0, 'Address: call to non-contract'
                                            mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                            mem[416 len 4] = 0
                                            call address(poolInfo.field_0) with:
                                                 gas gas_remaining wei
                                                args Mask(224, 32, arg1) << 480, mem[388 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                                if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[402 len 14],
                                                                0,
                                                                mem[420 len 4]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            else:
                                                mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size > 0:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeBEP20: low-level call failed'
                                                if return_data.size > 0:
                                                    require return_data.size >= 32
                                                    if not mem[324]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 403 len 22]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 394 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(0, msg.sender);
                                    else:
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                        if ext_code.size(rewardTokenAddress) <= 0:
                                            revert with 0, 'Address: call to non-contract'
                                        mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256) >> 32
                                        mem[324 len 0] = 0
                                        call rewardTokenAddress with:
                                           funct uint32(msg.sender)
                                             gas gas_remaining wei
                                            args Mask(224, 32, (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256) << 224, mem[324 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                revert with unknown_0xa9059cbb(?????), 
                                                            msg.sender,
                                                            (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                revert with 0, 32, 42, 0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                            if arg1 <= 0:
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(arg1, msg.sender);
                                            else:
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[456 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                mem[580 len 4] = 0
                                                call address(poolInfo.field_0) with:
                                                     gas gas_remaining wei
                                                    args arg1, mem[392 len 60], mem[552 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), 
                                                                    msg.sender,
                                                                    (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[566 len 14],
                                                                    0,
                                                                    mem[584 len 4]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                else:
                                                    mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size > 0:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeBEP20: low-level call failed'
                                                    if return_data.size > 0:
                                                        require return_data.size >= 32
                                                        if not mem[488]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 567 len 22]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 558 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(0, msg.sender);
                                        else:
                                            mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size > 0:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeBEP20: low-level call failed'
                                            if return_data.size <= 0:
                                                if arg1 <= 0:
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 362 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(arg1, msg.sender);
                                                else:
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if eth.balance(this.address) < 0:
                                                        revert with 0, 
                                                                    32,
                                                                    38,
                                                                    0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                    mem[ceil32(return_data.size) + 563 len 26]
                                                    if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                        revert with 0, 'Address: call to non-contract'
                                                    mem[ceil32(return_data.size) + 457 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                    mem[ceil32(return_data.size) + 581 len 4] = 0
                                                    call address(poolInfo.field_0) with:
                                                         gas gas_remaining wei
                                                        args arg1, mem[ceil32(return_data.size) + 393 len 60], mem[ceil32(return_data.size) + 553 len 4]
                                                    if not return_data.size:
                                                        if not ext_call.success:
                                                            revert with unknown_0xa9059cbb(?????), 
                                                                        msg.sender,
                                                                        (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 567 len 14],
                                                                        0,
                                                                        mem[ceil32(return_data.size) + 585 len 4]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 558 len 23],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    else:
                                                        mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        if not ext_call.success:
                                                            if return_data.size > 0:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            revert with 0, 
                                                                        'SafeBEP20: low-level call failed',
                                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                        if return_data.size > 0:
                                                            require return_data.size >= 32
                                                            if not mem[ceil32(return_data.size) + 489]:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 
                                                                        'SafeMath: subtraction overflow',
                                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 
                                                                        'SafeMath: addition overflow',
                                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(0, msg.sender);
                                            else:
                                                require return_data.size >= 32
                                                if not mem[292]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 371 len 22]
                                                if arg1 <= 0:
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 362 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(arg1, msg.sender);
                                                else:
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if eth.balance(this.address) < 0:
                                                        revert with 0, 
                                                                    32,
                                                                    38,
                                                                    0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                    mem[ceil32(return_data.size) + 563 len 26]
                                                    if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                        revert with 0, 'Address: call to non-contract'
                                                    mem[ceil32(return_data.size) + 457 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                    mem[ceil32(return_data.size) + 581 len 4] = 0
                                                    call address(poolInfo.field_0) with:
                                                         gas gas_remaining wei
                                                        args arg1, mem[ceil32(return_data.size) + 393 len 60], mem[ceil32(return_data.size) + 553 len 4]
                                                    if not return_data.size:
                                                        if not ext_call.success:
                                                            revert with unknown_0xa9059cbb(?????), 
                                                                        msg.sender,
                                                                        (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 567 len 14],
                                                                        0,
                                                                        mem[ceil32(return_data.size) + 585 len 4]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 558 len 23],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    else:
                                                        mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        if not ext_call.success:
                                                            if return_data.size > 0:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            revert with 0, 'SafeBEP20: low-level call failed'
                                                        if return_data.size > 0:
                                                            require return_data.size >= 32
                                                            if not mem[ceil32(return_data.size) + 489]:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[(2 * ceil32(return_data.size)) + 568 len 22]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[(2 * ceil32(return_data.size)) + 559 len 31]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(0, msg.sender);
                        else:
                            require 0 / stor6
                            if 10^12 * 0 / stor6 / 0 / stor6 != 10^12:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if ext_call.return_data[0] <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_call.return_data[0]
                            if uint256(poolInfo.field_768) + (10^12 * 0 / stor6 / ext_call.return_data[0]) < uint256(poolInfo.field_768):
                                revert with 0, 'SafeMath: addition overflow'
                            uint256(poolInfo.field_768) += 10^12 * 0 / stor6 / ext_call.return_data[0]
                            uint256(poolInfo.field_512) = block.timestamp
                            if userInfo[address(msg.sender)].field_0 <= 0:
                                if arg1 <= 0:
                                    if not userInfo[address(msg.sender)].field_0:
                                        userInfo[address(msg.sender)].field_256 = 0
                                    else:
                                        require userInfo[address(msg.sender)].field_0
                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                    emit Deposit(arg1, msg.sender);
                                else:
                                    require ext_code.size(address(poolInfo.field_0))
                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                    if ext_code.size(address(poolInfo.field_0)) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                    mem[416 len 4] = 0
                                    mem[388 len 0] = 0
                                    call address(poolInfo.field_0) with:
                                         gas gas_remaining wei
                                        args Mask(224, 32, arg1) << 480, mem[388 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                        if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[402 len 14],
                                                        0,
                                                        mem[420 len 4]
                                        require ext_code.size(address(poolInfo.field_0))
                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if not userInfo[address(msg.sender)].field_0:
                                            userInfo[address(msg.sender)].field_256 = 0
                                        else:
                                            require userInfo[address(msg.sender)].field_0
                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                    else:
                                        mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeBEP20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[324]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[ceil32(return_data.size) + 403 len 22]
                                        require ext_code.size(address(poolInfo.field_0))
                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if not userInfo[address(msg.sender)].field_0:
                                            userInfo[address(msg.sender)].field_256 = 0
                                        else:
                                            require userInfo[address(msg.sender)].field_0
                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[ceil32(return_data.size) + 394 len 31]
                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                    emit Deposit(0, msg.sender);
                            else:
                                if not userInfo[address(msg.sender)].field_0:
                                    if userInfo[address(msg.sender)].field_256 > 0:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if -userInfo[address(msg.sender)].field_256 <= 0:
                                        if arg1 <= 0:
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(arg1, msg.sender);
                                        else:
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                            if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                revert with 0, 'Address: call to non-contract'
                                            mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                            mem[416 len 4] = 0
                                            call address(poolInfo.field_0) with:
                                                 gas gas_remaining wei
                                                args Mask(224, 32, arg1) << 480, mem[388 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                                if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[402 len 14],
                                                                0,
                                                                mem[420 len 4]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            else:
                                                mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size > 0:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeBEP20: low-level call failed'
                                                if return_data.size > 0:
                                                    require return_data.size >= 32
                                                    if not mem[324]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 403 len 22]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 394 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(0, msg.sender);
                                    else:
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                        if ext_code.size(rewardTokenAddress) <= 0:
                                            revert with 0, 'Address: call to non-contract'
                                        mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, -userInfo[address(msg.sender)].field_256) >> 32
                                        call rewardTokenAddress with:
                                           funct uint32(msg.sender)
                                             gas gas_remaining wei
                                            args Mask(224, 32, -userInfo[address(msg.sender)].field_256) << 224, mem[324 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                revert with 0, 32, 42, 0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                            if arg1 <= 0:
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(arg1, msg.sender);
                                            else:
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                mem[580 len 4] = 0
                                                call address(poolInfo.field_0) with:
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, arg1) << 480, mem[552 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[566 len 14],
                                                                    0,
                                                                    mem[584 len 4]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                else:
                                                    mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size > 0:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeBEP20: low-level call failed'
                                                    if return_data.size > 0:
                                                        require return_data.size >= 32
                                                        if not mem[488]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 567 len 22]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 558 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(0, msg.sender);
                                        else:
                                            mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size > 0:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeBEP20: low-level call failed'
                                            if return_data.size <= 0:
                                                if arg1 <= 0:
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 362 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(arg1, msg.sender);
                                                else:
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if eth.balance(this.address) < 0:
                                                        revert with 0, 
                                                                    32,
                                                                    38,
                                                                    0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                    mem[ceil32(return_data.size) + 563 len 26]
                                                    if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                        revert with 0, 'Address: call to non-contract'
                                                    mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                    mem[ceil32(return_data.size) + 581 len 4] = 0
                                                    mem[ceil32(return_data.size) + 553 len 0] = 0
                                                    call address(poolInfo.field_0) with:
                                                         gas gas_remaining wei
                                                        args Mask(224, 32, arg1) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                    if not return_data.size:
                                                        if not ext_call.success:
                                                            revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 567 len 14],
                                                                        0,
                                                                        mem[ceil32(return_data.size) + 585 len 4]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 558 len 23],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    else:
                                                        mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        if not ext_call.success:
                                                            if return_data.size > 0:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            revert with 0, 'SafeBEP20: low-level call failed'
                                                        if return_data.size > 0:
                                                            require return_data.size >= 32
                                                            if not mem[ceil32(return_data.size) + 489]:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[(2 * ceil32(return_data.size)) + 568 len 22]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[(2 * ceil32(return_data.size)) + 559 len 31]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(0, msg.sender);
                                            else:
                                                require return_data.size >= 32
                                                if not mem[292]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 371 len 22]
                                                if arg1 <= 0:
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 362 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(arg1, msg.sender);
                                                else:
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if eth.balance(this.address) < 0:
                                                        revert with 0, 
                                                                    32,
                                                                    38,
                                                                    0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                    mem[ceil32(return_data.size) + 563 len 26]
                                                    if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                        revert with 0, 'Address: call to non-contract'
                                                    mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                    mem[ceil32(return_data.size) + 581 len 4] = 0
                                                    call address(poolInfo.field_0) with:
                                                         gas gas_remaining wei
                                                        args Mask(224, 32, arg1) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                    if not return_data.size:
                                                        if not ext_call.success:
                                                            revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 567 len 14],
                                                                        0,
                                                                        mem[ceil32(return_data.size) + 585 len 4]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 558 len 23],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                        emit Deposit(0, msg.sender);
                                                    else:
                                                        mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        if not ext_call.success:
                                                            if return_data.size > 0:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            revert with 0, 'SafeBEP20: low-level call failed'
                                                        if return_data.size > 0:
                                                            require return_data.size >= 32
                                                            if not mem[ceil32(return_data.size) + 489]:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address), mem[(2 * ceil32(return_data.size)) + 494 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 
                                                                        'SafeMath: subtraction overflow',
                                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 
                                                                        'SafeMath: addition overflow',
                                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                        emit Deposit(address arg1, uint256 arg2):
                                                                     0,
                                                                     mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                                     msg.sender,
                                else:
                                    require userInfo[address(msg.sender)].field_0
                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if userInfo[address(msg.sender)].field_256 > userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256 <= 0:
                                        if arg1 <= 0:
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(arg1, msg.sender);
                                        else:
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                            if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                revert with 0, 'Address: call to non-contract'
                                            mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                            mem[416 len 4] = 0
                                            call address(poolInfo.field_0) with:
                                                 gas gas_remaining wei
                                                args Mask(224, 32, arg1) << 480, mem[388 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                                if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[402 len 14],
                                                                0,
                                                                mem[420 len 4]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            else:
                                                mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size > 0:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeBEP20: low-level call failed'
                                                if return_data.size > 0:
                                                    require return_data.size >= 32
                                                    if not mem[324]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 403 len 22]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 394 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(0, msg.sender);
                                    else:
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                        if ext_code.size(rewardTokenAddress) <= 0:
                                            revert with 0, 'Address: call to non-contract'
                                        mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256) >> 32
                                        mem[324 len 0] = 0
                                        call rewardTokenAddress with:
                                           funct uint32(msg.sender)
                                             gas gas_remaining wei
                                            args Mask(224, 32, (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256) << 224, mem[324 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                revert with unknown_0xa9059cbb(?????), 
                                                            msg.sender,
                                                            (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                revert with 0, 32, 42, 0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                            if arg1 <= 0:
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(arg1, msg.sender);
                                            else:
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[456 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                mem[580 len 4] = 0
                                                call address(poolInfo.field_0) with:
                                                     gas gas_remaining wei
                                                    args arg1, mem[392 len 60], mem[552 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), 
                                                                    msg.sender,
                                                                    (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[566 len 14],
                                                                    0,
                                                                    mem[584 len 4]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                else:
                                                    mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size > 0:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeBEP20: low-level call failed'
                                                    if return_data.size > 0:
                                                        require return_data.size >= 32
                                                        if not mem[488]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 567 len 22]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 558 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(0, msg.sender);
                                        else:
                                            mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size > 0:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeBEP20: low-level call failed'
                                            if return_data.size > 0:
                                                require return_data.size >= 32
                                                if not mem[292]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 371 len 22]
                                            if arg1 <= 0:
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 362 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(arg1, msg.sender);
                                            else:
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 
                                                                32,
                                                                38,
                                                                0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                mem[ceil32(return_data.size) + 563 len 26]
                                                if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[ceil32(return_data.size) + 457 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                mem[ceil32(return_data.size) + 581 len 4] = 0
                                                call address(poolInfo.field_0) with:
                                                     gas gas_remaining wei
                                                    args arg1, mem[ceil32(return_data.size) + 393 len 60], mem[ceil32(return_data.size) + 553 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), 
                                                                    msg.sender,
                                                                    (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 567 len 14],
                                                                    0,
                                                                    mem[ceil32(return_data.size) + 585 len 4]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 558 len 23],
                                                                        0,
                                                                        mem[ceil32(return_data.size) + 585 len 4]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                else:
                                                    mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size > 0:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeBEP20: low-level call failed'
                                                    if return_data.size > 0:
                                                        require return_data.size >= 32
                                                        if not mem[ceil32(return_data.size) + 489]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[(2 * ceil32(return_data.size)) + 568 len 22]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[(2 * ceil32(return_data.size)) + 559 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(0, msg.sender);
                    else:
                        require (block.timestamp * rewardPerSec) - (uint256(poolInfo.field_512) * rewardPerSec)
                        if (block.timestamp * rewardPerSec * uint256(poolInfo.field_256)) - (uint256(poolInfo.field_512) * rewardPerSec * uint256(poolInfo.field_256)) / (block.timestamp * rewardPerSec) - (uint256(poolInfo.field_512) * rewardPerSec) != uint256(poolInfo.field_256):
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        if stor6 <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require stor6
                        if not (block.timestamp * rewardPerSec * uint256(poolInfo.field_256)) - (uint256(poolInfo.field_512) * rewardPerSec * uint256(poolInfo.field_256)) / stor6:
                            if ext_call.return_data[0] <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_call.return_data[0]
                            if uint256(poolInfo.field_768) + (0 / ext_call.return_data[0]) < uint256(poolInfo.field_768):
                                revert with 0, 'SafeMath: addition overflow'
                            uint256(poolInfo.field_768) += 0 / ext_call.return_data[0]
                            uint256(poolInfo.field_512) = block.timestamp
                            if userInfo[address(msg.sender)].field_0 <= 0:
                                if arg1 <= 0:
                                    if not userInfo[address(msg.sender)].field_0:
                                        userInfo[address(msg.sender)].field_256 = 0
                                    else:
                                        require userInfo[address(msg.sender)].field_0
                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                    emit Deposit(arg1, msg.sender);
                                else:
                                    require ext_code.size(address(poolInfo.field_0))
                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                    if ext_code.size(address(poolInfo.field_0)) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                    mem[416 len 4] = 0
                                    call address(poolInfo.field_0) with:
                                         gas gas_remaining wei
                                        args Mask(224, 32, arg1) << 480, mem[388 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                        if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[402 len 14],
                                                        0,
                                                        mem[420 len 4]
                                        require ext_code.size(address(poolInfo.field_0))
                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if not userInfo[address(msg.sender)].field_0:
                                            userInfo[address(msg.sender)].field_256 = 0
                                        else:
                                            require userInfo[address(msg.sender)].field_0
                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                    else:
                                        mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeBEP20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[324]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[ceil32(return_data.size) + 403 len 22]
                                        require ext_code.size(address(poolInfo.field_0))
                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if not userInfo[address(msg.sender)].field_0:
                                            userInfo[address(msg.sender)].field_256 = 0
                                        else:
                                            require userInfo[address(msg.sender)].field_0
                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[ceil32(return_data.size) + 394 len 31]
                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                    emit Deposit(0, msg.sender);
                            else:
                                if not userInfo[address(msg.sender)].field_0:
                                    if userInfo[address(msg.sender)].field_256 > 0:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if -userInfo[address(msg.sender)].field_256 <= 0:
                                        if arg1 <= 0:
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(arg1, msg.sender);
                                        else:
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                            if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                revert with 0, 'Address: call to non-contract'
                                            mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                            mem[416 len 4] = 0
                                            mem[388 len 0] = 0
                                            call address(poolInfo.field_0) with:
                                                 gas gas_remaining wei
                                                args Mask(224, 32, arg1) << 480, mem[388 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                                if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[402 len 14],
                                                                0,
                                                                mem[420 len 4]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            else:
                                                mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size > 0:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeBEP20: low-level call failed'
                                                if return_data.size > 0:
                                                    require return_data.size >= 32
                                                    if not mem[324]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 403 len 22]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 394 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(0, msg.sender);
                                    else:
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                        if ext_code.size(rewardTokenAddress) <= 0:
                                            revert with 0, 'Address: call to non-contract'
                                        mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, -userInfo[address(msg.sender)].field_256) >> 32
                                        call rewardTokenAddress with:
                                           funct uint32(msg.sender)
                                             gas gas_remaining wei
                                            args Mask(224, 32, -userInfo[address(msg.sender)].field_256) << 224, mem[324 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                revert with 0, 32, 42, 0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                            if arg1 <= 0:
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(arg1, msg.sender);
                                            else:
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                mem[580 len 4] = 0
                                                call address(poolInfo.field_0) with:
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, arg1) << 480, mem[552 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[566 len 14],
                                                                    0,
                                                                    mem[584 len 4]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                else:
                                                    mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size > 0:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeBEP20: low-level call failed'
                                                    if return_data.size > 0:
                                                        require return_data.size >= 32
                                                        if not mem[488]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 567 len 22]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 558 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(0, msg.sender);
                                        else:
                                            mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size > 0:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeBEP20: low-level call failed'
                                            if return_data.size > 0:
                                                require return_data.size >= 32
                                                if not mem[292]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 371 len 22]
                                            if arg1 <= 0:
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 362 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(arg1, msg.sender);
                                            else:
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 
                                                                32,
                                                                38,
                                                                0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                mem[ceil32(return_data.size) + 563 len 26]
                                                if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                mem[ceil32(return_data.size) + 581 len 4] = 0
                                                call address(poolInfo.field_0) with:
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, arg1) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 567 len 14],
                                                                    0,
                                                                    mem[ceil32(return_data.size) + 585 len 4]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 558 len 23],
                                                                        0,
                                                                        mem[ceil32(return_data.size) + 585 len 4]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(0, msg.sender);
                                                else:
                                                    mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size > 0:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeBEP20: low-level call failed'
                                                    if return_data.size > 0:
                                                        require return_data.size >= 32
                                                        if not mem[ceil32(return_data.size) + 489]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address), mem[(2 * ceil32(return_data.size)) + 494 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 
                                                                    'SafeMath: subtraction overflow',
                                                                    mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 
                                                                    'SafeMath: addition overflow',
                                                                    mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(address arg1, uint256 arg2):
                                                                 0,
                                                                 mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                                 msg.sender,
                                else:
                                    require userInfo[address(msg.sender)].field_0
                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if userInfo[address(msg.sender)].field_256 > userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256 <= 0:
                                        if arg1 <= 0:
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(arg1, msg.sender);
                                        else:
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                            if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                revert with 0, 'Address: call to non-contract'
                                            mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                            mem[416 len 4] = 0
                                            mem[388 len 0] = 0
                                            call address(poolInfo.field_0) with:
                                                 gas gas_remaining wei
                                                args Mask(224, 32, arg1) << 480, mem[388 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                                if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[402 len 14],
                                                                0,
                                                                mem[420 len 4]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            else:
                                                mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size > 0:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeBEP20: low-level call failed'
                                                if return_data.size > 0:
                                                    require return_data.size >= 32
                                                    if not mem[324]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 403 len 22]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 394 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(0, msg.sender);
                                    else:
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                        if ext_code.size(rewardTokenAddress) <= 0:
                                            revert with 0, 'Address: call to non-contract'
                                        mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256) >> 32
                                        mem[324 len 0] = 0
                                        call rewardTokenAddress with:
                                           funct uint32(msg.sender)
                                             gas gas_remaining wei
                                            args Mask(224, 32, (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256) << 224, mem[324 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                revert with unknown_0xa9059cbb(?????), 
                                                            msg.sender,
                                                            (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                revert with 0, 32, 42, 0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                            if arg1 <= 0:
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(arg1, msg.sender);
                                            else:
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[456 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                mem[580 len 4] = 0
                                                call address(poolInfo.field_0) with:
                                                     gas gas_remaining wei
                                                    args arg1, mem[392 len 60], mem[552 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), 
                                                                    msg.sender,
                                                                    (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[566 len 14],
                                                                    0,
                                                                    mem[584 len 4]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                else:
                                                    mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size > 0:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeBEP20: low-level call failed'
                                                    if return_data.size > 0:
                                                        require return_data.size >= 32
                                                        if not mem[488]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 567 len 22]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 558 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(0, msg.sender);
                                        else:
                                            mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size > 0:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeBEP20: low-level call failed'
                                            if return_data.size <= 0:
                                                if arg1 <= 0:
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 362 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(arg1, msg.sender);
                                                else:
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if eth.balance(this.address) < 0:
                                                        revert with 0, 
                                                                    32,
                                                                    38,
                                                                    0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                    mem[ceil32(return_data.size) + 563 len 26]
                                                    if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                        revert with 0, 'Address: call to non-contract'
                                                    mem[ceil32(return_data.size) + 457 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                    mem[ceil32(return_data.size) + 581 len 4] = 0
                                                    call address(poolInfo.field_0) with:
                                                         gas gas_remaining wei
                                                        args arg1, mem[ceil32(return_data.size) + 393 len 60], mem[ceil32(return_data.size) + 553 len 4]
                                                    if not return_data.size:
                                                        if not ext_call.success:
                                                            revert with unknown_0xa9059cbb(?????), 
                                                                        msg.sender,
                                                                        (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 567 len 14],
                                                                        0,
                                                                        mem[ceil32(return_data.size) + 585 len 4]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 558 len 23],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    else:
                                                        mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        if not ext_call.success:
                                                            if return_data.size > 0:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            revert with 0, 
                                                                        'SafeBEP20: low-level call failed',
                                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                        if return_data.size > 0:
                                                            require return_data.size >= 32
                                                            if not mem[ceil32(return_data.size) + 489]:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 
                                                                        'SafeMath: subtraction overflow',
                                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 
                                                                        'SafeMath: addition overflow',
                                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(0, msg.sender);
                                            else:
                                                require return_data.size >= 32
                                                if not mem[292]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 371 len 22]
                                                if arg1 <= 0:
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 362 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(arg1, msg.sender);
                                                else:
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if eth.balance(this.address) < 0:
                                                        revert with 0, 
                                                                    32,
                                                                    38,
                                                                    0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                    mem[ceil32(return_data.size) + 563 len 26]
                                                    if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                        revert with 0, 'Address: call to non-contract'
                                                    mem[ceil32(return_data.size) + 457 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                    mem[ceil32(return_data.size) + 581 len 4] = 0
                                                    call address(poolInfo.field_0) with:
                                                         gas gas_remaining wei
                                                        args arg1, mem[ceil32(return_data.size) + 393 len 60], mem[ceil32(return_data.size) + 553 len 4]
                                                    if not return_data.size:
                                                        if not ext_call.success:
                                                            revert with unknown_0xa9059cbb(?????), 
                                                                        msg.sender,
                                                                        (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 567 len 14],
                                                                        0,
                                                                        mem[ceil32(return_data.size) + 585 len 4]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 558 len 23],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    else:
                                                        mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        if not ext_call.success:
                                                            if return_data.size > 0:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            revert with 0, 'SafeBEP20: low-level call failed'
                                                        if return_data.size > 0:
                                                            require return_data.size >= 32
                                                            if not mem[ceil32(return_data.size) + 489]:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[(2 * ceil32(return_data.size)) + 568 len 22]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[(2 * ceil32(return_data.size)) + 559 len 31]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(0, msg.sender);
                        else:
                            require (block.timestamp * rewardPerSec * uint256(poolInfo.field_256)) - (uint256(poolInfo.field_512) * rewardPerSec * uint256(poolInfo.field_256)) / stor6
                            if 10^12 * (block.timestamp * rewardPerSec * uint256(poolInfo.field_256)) - (uint256(poolInfo.field_512) * rewardPerSec * uint256(poolInfo.field_256)) / stor6 / (block.timestamp * rewardPerSec * uint256(poolInfo.field_256)) - (uint256(poolInfo.field_512) * rewardPerSec * uint256(poolInfo.field_256)) / stor6 != 10^12:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if ext_call.return_data[0] <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_call.return_data[0]
                            if uint256(poolInfo.field_768) + (10^12 * (block.timestamp * rewardPerSec * uint256(poolInfo.field_256)) - (uint256(poolInfo.field_512) * rewardPerSec * uint256(poolInfo.field_256)) / stor6 / ext_call.return_data[0]) < uint256(poolInfo.field_768):
                                revert with 0, 'SafeMath: addition overflow'
                            uint256(poolInfo.field_768) += 10^12 * (block.timestamp * rewardPerSec * uint256(poolInfo.field_256)) - (uint256(poolInfo.field_512) * rewardPerSec * uint256(poolInfo.field_256)) / stor6 / ext_call.return_data[0]
                            uint256(poolInfo.field_512) = block.timestamp
                            if userInfo[address(msg.sender)].field_0 <= 0:
                                if arg1 <= 0:
                                    if not userInfo[address(msg.sender)].field_0:
                                        userInfo[address(msg.sender)].field_256 = 0
                                    else:
                                        require userInfo[address(msg.sender)].field_0
                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                    emit Deposit(arg1, msg.sender);
                                else:
                                    require ext_code.size(address(poolInfo.field_0))
                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                    if ext_code.size(address(poolInfo.field_0)) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                    mem[416 len 4] = 0
                                    call address(poolInfo.field_0) with:
                                         gas gas_remaining wei
                                        args Mask(224, 32, arg1) << 480, mem[388 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                        if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[402 len 14],
                                                        0,
                                                        mem[420 len 4]
                                        require ext_code.size(address(poolInfo.field_0))
                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if not userInfo[address(msg.sender)].field_0:
                                            userInfo[address(msg.sender)].field_256 = 0
                                        else:
                                            require userInfo[address(msg.sender)].field_0
                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                    else:
                                        mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeBEP20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[324]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[ceil32(return_data.size) + 403 len 22]
                                        require ext_code.size(address(poolInfo.field_0))
                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if not userInfo[address(msg.sender)].field_0:
                                            userInfo[address(msg.sender)].field_256 = 0
                                        else:
                                            require userInfo[address(msg.sender)].field_0
                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[ceil32(return_data.size) + 394 len 31]
                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                    emit Deposit(0, msg.sender);
                            else:
                                if not userInfo[address(msg.sender)].field_0:
                                    if userInfo[address(msg.sender)].field_256 > 0:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if -userInfo[address(msg.sender)].field_256 <= 0:
                                        if arg1 <= 0:
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(arg1, msg.sender);
                                        else:
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                            if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                revert with 0, 'Address: call to non-contract'
                                            mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                            mem[416 len 4] = 0
                                            mem[388 len 0] = 0
                                            call address(poolInfo.field_0) with:
                                                 gas gas_remaining wei
                                                args Mask(224, 32, arg1) << 480, mem[388 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                                if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[402 len 14],
                                                                0,
                                                                mem[420 len 4]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            else:
                                                mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size > 0:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeBEP20: low-level call failed'
                                                if return_data.size > 0:
                                                    require return_data.size >= 32
                                                    if not mem[324]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 403 len 22]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 394 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(0, msg.sender);
                                    else:
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                        if ext_code.size(rewardTokenAddress) <= 0:
                                            revert with 0, 'Address: call to non-contract'
                                        mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, -userInfo[address(msg.sender)].field_256) >> 32
                                        mem[324 len 0] = 0
                                        call rewardTokenAddress with:
                                           funct uint32(msg.sender)
                                             gas gas_remaining wei
                                            args Mask(224, 32, -userInfo[address(msg.sender)].field_256) << 224, mem[324 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                revert with 0, 32, 42, 0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                            if arg1 <= 0:
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(arg1, msg.sender);
                                            else:
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[456 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                mem[580 len 4] = 0
                                                call address(poolInfo.field_0) with:
                                                     gas gas_remaining wei
                                                    args arg1, mem[392 len 60], mem[552 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[566 len 14],
                                                                    0,
                                                                    mem[584 len 4]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                else:
                                                    mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size > 0:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeBEP20: low-level call failed'
                                                    if return_data.size > 0:
                                                        require return_data.size >= 32
                                                        if not mem[488]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 567 len 22]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 558 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(0, msg.sender);
                                        else:
                                            mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size > 0:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeBEP20: low-level call failed'
                                            if return_data.size <= 0:
                                                if arg1 <= 0:
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 362 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(arg1, msg.sender);
                                                else:
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if eth.balance(this.address) < 0:
                                                        revert with 0, 
                                                                    32,
                                                                    38,
                                                                    0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                    mem[ceil32(return_data.size) + 563 len 26]
                                                    if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                        revert with 0, 'Address: call to non-contract'
                                                    mem[ceil32(return_data.size) + 457 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                    mem[ceil32(return_data.size) + 581 len 4] = 0
                                                    call address(poolInfo.field_0) with:
                                                         gas gas_remaining wei
                                                        args arg1, mem[ceil32(return_data.size) + 393 len 60], mem[ceil32(return_data.size) + 553 len 4]
                                                    if not return_data.size:
                                                        if not ext_call.success:
                                                            revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 567 len 14],
                                                                        0,
                                                                        mem[ceil32(return_data.size) + 585 len 4]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 558 len 23],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    else:
                                                        mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        if not ext_call.success:
                                                            if return_data.size > 0:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            revert with 0, 'SafeBEP20: low-level call failed'
                                                        if return_data.size > 0:
                                                            require return_data.size >= 32
                                                            if not mem[ceil32(return_data.size) + 489]:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[(2 * ceil32(return_data.size)) + 568 len 22]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[(2 * ceil32(return_data.size)) + 559 len 31]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(0, msg.sender);
                                            else:
                                                require return_data.size >= 32
                                                if not mem[292]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 371 len 22]
                                                if arg1 <= 0:
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 362 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(arg1, msg.sender);
                                                else:
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if eth.balance(this.address) < 0:
                                                        revert with 0, 
                                                                    32,
                                                                    38,
                                                                    0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                    mem[ceil32(return_data.size) + 563 len 26]
                                                    if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                        revert with 0, 'Address: call to non-contract'
                                                    mem[ceil32(return_data.size) + 457 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                    mem[ceil32(return_data.size) + 581 len 4] = 0
                                                    call address(poolInfo.field_0) with:
                                                         gas gas_remaining wei
                                                        args arg1, mem[ceil32(return_data.size) + 393 len 60], mem[ceil32(return_data.size) + 553 len 4]
                                                    if not return_data.size:
                                                        if not ext_call.success:
                                                            revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 567 len 14],
                                                                        0,
                                                                        mem[ceil32(return_data.size) + 585 len 4]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 558 len 23],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    else:
                                                        mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        if not ext_call.success:
                                                            if return_data.size > 0:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            revert with 0, 
                                                                        'SafeBEP20: low-level call failed',
                                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                        if return_data.size > 0:
                                                            require return_data.size >= 32
                                                            if not mem[ceil32(return_data.size) + 489]:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 
                                                                        'SafeMath: subtraction overflow',
                                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 
                                                                        'SafeMath: addition overflow',
                                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(0, msg.sender);
                                else:
                                    require userInfo[address(msg.sender)].field_0
                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if userInfo[address(msg.sender)].field_256 > userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256 <= 0:
                                        if arg1 <= 0:
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(arg1, msg.sender);
                                        else:
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                            if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                revert with 0, 'Address: call to non-contract'
                                            mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                            mem[416 len 4] = 0
                                            call address(poolInfo.field_0) with:
                                                 gas gas_remaining wei
                                                args Mask(224, 32, arg1) << 480, mem[388 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                                if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[402 len 14],
                                                                0,
                                                                mem[420 len 4]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            else:
                                                mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size > 0:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeBEP20: low-level call failed'
                                                if return_data.size > 0:
                                                    require return_data.size >= 32
                                                    if not mem[324]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 403 len 22]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 394 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(0, msg.sender);
                                    else:
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                        if ext_code.size(rewardTokenAddress) <= 0:
                                            revert with 0, 'Address: call to non-contract'
                                        mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256) >> 32
                                        call rewardTokenAddress with:
                                           funct uint32(msg.sender)
                                             gas gas_remaining wei
                                            args Mask(224, 32, (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256) << 224, mem[324 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                revert with unknown_0xa9059cbb(?????), 
                                                            msg.sender,
                                                            (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                revert with 0, 32, 42, 0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                            if arg1 <= 0:
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(arg1, msg.sender);
                                            else:
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                mem[580 len 4] = 0
                                                call address(poolInfo.field_0) with:
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, arg1) << 480, mem[552 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), 
                                                                    msg.sender,
                                                                    (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[566 len 14],
                                                                    0,
                                                                    mem[584 len 4]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                else:
                                                    mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size > 0:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeBEP20: low-level call failed'
                                                    if return_data.size > 0:
                                                        require return_data.size >= 32
                                                        if not mem[488]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 567 len 22]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 558 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(0, msg.sender);
                                        else:
                                            mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size > 0:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeBEP20: low-level call failed'
                                            if return_data.size > 0:
                                                require return_data.size >= 32
                                                if not mem[292]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 371 len 22]
                                            if arg1 <= 0:
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 362 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(arg1, msg.sender);
                                            else:
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 
                                                                32,
                                                                38,
                                                                0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                mem[ceil32(return_data.size) + 563 len 26]
                                                if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                mem[ceil32(return_data.size) + 581 len 4] = 0
                                                call address(poolInfo.field_0) with:
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, arg1) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), 
                                                                    msg.sender,
                                                                    (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 567 len 14],
                                                                    0,
                                                                    mem[ceil32(return_data.size) + 585 len 4]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 558 len 23],
                                                                        0,
                                                                        mem[ceil32(return_data.size) + 585 len 4]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(0, msg.sender);
                                                else:
                                                    mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size > 0:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeBEP20: low-level call failed'
                                                    if return_data.size > 0:
                                                        require return_data.size >= 32
                                                        if not mem[ceil32(return_data.size) + 489]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address), mem[(2 * ceil32(return_data.size)) + 494 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 
                                                                    'SafeMath: subtraction overflow',
                                                                    mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 
                                                                    'SafeMath: addition overflow',
                                                                    mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(address arg1, uint256 arg2):
                                                                 0,
                                                                 mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                                 msg.sender,
            else:
                if uint256(poolInfo.field_512) >= bonusEndTimestamp:
                    if stor6 <= 0:
                        revert with 0, 'SafeMath: division by zero'
                    require stor6
                    if not 0 / stor6:
                        if ext_call.return_data[0] <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_call.return_data[0]
                        if uint256(poolInfo.field_768) + (0 / ext_call.return_data[0]) < uint256(poolInfo.field_768):
                            revert with 0, 'SafeMath: addition overflow'
                        uint256(poolInfo.field_768) += 0 / ext_call.return_data[0]
                        uint256(poolInfo.field_512) = block.timestamp
                        if userInfo[address(msg.sender)].field_0 <= 0:
                            if arg1 <= 0:
                                if not userInfo[address(msg.sender)].field_0:
                                    userInfo[address(msg.sender)].field_256 = 0
                                else:
                                    require userInfo[address(msg.sender)].field_0
                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                emit Deposit(arg1, msg.sender);
                            else:
                                require ext_code.size(address(poolInfo.field_0))
                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                if ext_code.size(address(poolInfo.field_0)) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                mem[416 len 4] = 0
                                mem[388 len 0] = 0
                                call address(poolInfo.field_0) with:
                                     gas gas_remaining wei
                                    args Mask(224, 32, arg1) << 480, mem[388 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                    if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[402 len 14],
                                                    0,
                                                    mem[420 len 4]
                                    require ext_code.size(address(poolInfo.field_0))
                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if not userInfo[address(msg.sender)].field_0:
                                        userInfo[address(msg.sender)].field_256 = 0
                                    else:
                                        require userInfo[address(msg.sender)].field_0
                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                else:
                                    mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeBEP20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[324]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[ceil32(return_data.size) + 403 len 22]
                                    require ext_code.size(address(poolInfo.field_0))
                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if not userInfo[address(msg.sender)].field_0:
                                        userInfo[address(msg.sender)].field_256 = 0
                                    else:
                                        require userInfo[address(msg.sender)].field_0
                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[ceil32(return_data.size) + 394 len 31]
                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                emit Deposit(0, msg.sender);
                        else:
                            if not userInfo[address(msg.sender)].field_0:
                                if userInfo[address(msg.sender)].field_256 > 0:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if -userInfo[address(msg.sender)].field_256 <= 0:
                                    if arg1 <= 0:
                                        if not userInfo[address(msg.sender)].field_0:
                                            userInfo[address(msg.sender)].field_256 = 0
                                        else:
                                            require userInfo[address(msg.sender)].field_0
                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                        emit Deposit(arg1, msg.sender);
                                    else:
                                        require ext_code.size(address(poolInfo.field_0))
                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                        if ext_code.size(address(poolInfo.field_0)) <= 0:
                                            revert with 0, 'Address: call to non-contract'
                                        mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                        mem[416 len 4] = 0
                                        mem[388 len 0] = 0
                                        call address(poolInfo.field_0) with:
                                             gas gas_remaining wei
                                            args Mask(224, 32, arg1) << 480, mem[388 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                            if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[402 len 14],
                                                            0,
                                                            mem[420 len 4]
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                        else:
                                            mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size > 0:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeBEP20: low-level call failed'
                                            if return_data.size > 0:
                                                require return_data.size >= 32
                                                if not mem[324]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 403 len 22]
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[ceil32(return_data.size) + 394 len 31]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                        emit Deposit(0, msg.sender);
                                else:
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                    if ext_code.size(rewardTokenAddress) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, -userInfo[address(msg.sender)].field_256) >> 32
                                    call rewardTokenAddress with:
                                       funct uint32(msg.sender)
                                         gas gas_remaining wei
                                        args Mask(224, 32, -userInfo[address(msg.sender)].field_256) << 224, mem[324 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                            revert with 0, 32, 42, 0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                        if arg1 <= 0:
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(arg1, msg.sender);
                                        else:
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                            if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                revert with 0, 'Address: call to non-contract'
                                            mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                            mem[580 len 4] = 0
                                            mem[552 len 0] = 0
                                            call address(poolInfo.field_0) with:
                                                 gas gas_remaining wei
                                                args Mask(224, 32, arg1) << 480, mem[552 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[566 len 14],
                                                                0,
                                                                mem[584 len 4]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            else:
                                                mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size > 0:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeBEP20: low-level call failed'
                                                if return_data.size > 0:
                                                    require return_data.size >= 32
                                                    if not mem[488]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 567 len 22]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 558 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(0, msg.sender);
                                    else:
                                        mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeBEP20: low-level call failed'
                                        if return_data.size <= 0:
                                            if arg1 <= 0:
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 362 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(arg1, msg.sender);
                                            else:
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 
                                                                32,
                                                                38,
                                                                0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                mem[ceil32(return_data.size) + 563 len 26]
                                                if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                mem[ceil32(return_data.size) + 581 len 4] = 0
                                                mem[ceil32(return_data.size) + 553 len 0] = 0
                                                call address(poolInfo.field_0) with:
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, arg1) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 567 len 14],
                                                                    0,
                                                                    mem[ceil32(return_data.size) + 585 len 4]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 558 len 23],
                                                                        0,
                                                                        mem[ceil32(return_data.size) + 585 len 4]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                else:
                                                    mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size > 0:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeBEP20: low-level call failed'
                                                    if return_data.size > 0:
                                                        require return_data.size >= 32
                                                        if not mem[ceil32(return_data.size) + 489]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[(2 * ceil32(return_data.size)) + 568 len 22]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[(2 * ceil32(return_data.size)) + 559 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(0, msg.sender);
                                        else:
                                            require return_data.size >= 32
                                            if not mem[292]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[ceil32(return_data.size) + 371 len 22]
                                            if arg1 <= 0:
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 362 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(arg1, msg.sender);
                                            else:
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 
                                                                32,
                                                                38,
                                                                0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                mem[ceil32(return_data.size) + 563 len 26]
                                                if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                mem[ceil32(return_data.size) + 581 len 4] = 0
                                                call address(poolInfo.field_0) with:
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, arg1) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 567 len 14],
                                                                    0,
                                                                    mem[ceil32(return_data.size) + 585 len 4]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 558 len 23],
                                                                        0,
                                                                        mem[ceil32(return_data.size) + 585 len 4]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(0, msg.sender);
                                                else:
                                                    mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size > 0:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeBEP20: low-level call failed'
                                                    if return_data.size > 0:
                                                        require return_data.size >= 32
                                                        if not mem[ceil32(return_data.size) + 489]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args address(this.address), mem[(2 * ceil32(return_data.size)) + 494 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 
                                                                    'SafeMath: subtraction overflow',
                                                                    mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 
                                                                    'SafeMath: addition overflow',
                                                                    mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(address arg1, uint256 arg2):
                                                                 0,
                                                                 mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                                 msg.sender,
                            else:
                                require userInfo[address(msg.sender)].field_0
                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if userInfo[address(msg.sender)].field_256 > userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256 <= 0:
                                    if arg1 <= 0:
                                        if not userInfo[address(msg.sender)].field_0:
                                            userInfo[address(msg.sender)].field_256 = 0
                                        else:
                                            require userInfo[address(msg.sender)].field_0
                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                        emit Deposit(arg1, msg.sender);
                                    else:
                                        require ext_code.size(address(poolInfo.field_0))
                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                        if ext_code.size(address(poolInfo.field_0)) <= 0:
                                            revert with 0, 'Address: call to non-contract'
                                        mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                        mem[416 len 4] = 0
                                        mem[388 len 0] = 0
                                        call address(poolInfo.field_0) with:
                                             gas gas_remaining wei
                                            args Mask(224, 32, arg1) << 480, mem[388 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                            if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[402 len 14],
                                                            0,
                                                            mem[420 len 4]
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                        else:
                                            mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size > 0:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeBEP20: low-level call failed'
                                            if return_data.size > 0:
                                                require return_data.size >= 32
                                                if not mem[324]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 403 len 22]
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[ceil32(return_data.size) + 394 len 31]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                        emit Deposit(0, msg.sender);
                                else:
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                    if ext_code.size(rewardTokenAddress) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256) >> 32
                                    mem[324 len 0] = 0
                                    call rewardTokenAddress with:
                                       funct uint32(msg.sender)
                                         gas gas_remaining wei
                                        args Mask(224, 32, (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256) << 224, mem[324 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with unknown_0xa9059cbb(?????), 
                                                        msg.sender,
                                                        (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                            revert with 0, 32, 42, 0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                        if arg1 <= 0:
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(arg1, msg.sender);
                                        else:
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                            if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                revert with 0, 'Address: call to non-contract'
                                            mem[456 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                            mem[580 len 4] = 0
                                            call address(poolInfo.field_0) with:
                                                 gas gas_remaining wei
                                                args arg1, mem[392 len 60], mem[552 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0xa9059cbb(?????), 
                                                                msg.sender,
                                                                (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[566 len 14],
                                                                0,
                                                                mem[584 len 4]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            else:
                                                mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size > 0:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeBEP20: low-level call failed'
                                                if return_data.size > 0:
                                                    require return_data.size >= 32
                                                    if not mem[488]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 567 len 22]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 558 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(0, msg.sender);
                                    else:
                                        mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeBEP20: low-level call failed'
                                        if return_data.size <= 0:
                                            if arg1 <= 0:
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 362 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(arg1, msg.sender);
                                            else:
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 
                                                                32,
                                                                38,
                                                                0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                mem[ceil32(return_data.size) + 563 len 26]
                                                if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[ceil32(return_data.size) + 457 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                mem[ceil32(return_data.size) + 581 len 4] = 0
                                                call address(poolInfo.field_0) with:
                                                     gas gas_remaining wei
                                                    args arg1, mem[ceil32(return_data.size) + 393 len 60], mem[ceil32(return_data.size) + 553 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), 
                                                                    msg.sender,
                                                                    (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 567 len 14],
                                                                    0,
                                                                    mem[ceil32(return_data.size) + 585 len 4]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 558 len 23],
                                                                        0,
                                                                        mem[ceil32(return_data.size) + 585 len 4]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                else:
                                                    mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size > 0:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 
                                                                    'SafeBEP20: low-level call failed',
                                                                    mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                    if return_data.size > 0:
                                                        require return_data.size >= 32
                                                        if not mem[ceil32(return_data.size) + 489]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 
                                                                    'SafeMath: subtraction overflow',
                                                                    mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 
                                                                    'SafeMath: addition overflow',
                                                                    mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(0, msg.sender);
                                        else:
                                            require return_data.size >= 32
                                            if not mem[292]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[ceil32(return_data.size) + 371 len 22]
                                            if arg1 <= 0:
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 362 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(arg1, msg.sender);
                                            else:
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 
                                                                32,
                                                                38,
                                                                0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                mem[ceil32(return_data.size) + 563 len 26]
                                                if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[ceil32(return_data.size) + 457 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                mem[ceil32(return_data.size) + 581 len 4] = 0
                                                call address(poolInfo.field_0) with:
                                                     gas gas_remaining wei
                                                    args arg1, mem[ceil32(return_data.size) + 393 len 60], mem[ceil32(return_data.size) + 553 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), 
                                                                    msg.sender,
                                                                    (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 567 len 14],
                                                                    0,
                                                                    mem[ceil32(return_data.size) + 585 len 4]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 558 len 23],
                                                                        0,
                                                                        mem[ceil32(return_data.size) + 585 len 4]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                else:
                                                    mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size > 0:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeBEP20: low-level call failed'
                                                    if return_data.size > 0:
                                                        require return_data.size >= 32
                                                        if not mem[ceil32(return_data.size) + 489]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[(2 * ceil32(return_data.size)) + 568 len 22]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[(2 * ceil32(return_data.size)) + 559 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(0, msg.sender);
                    else:
                        require 0 / stor6
                        if 10^12 * 0 / stor6 / 0 / stor6 != 10^12:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        if ext_call.return_data[0] <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_call.return_data[0]
                        if uint256(poolInfo.field_768) + (10^12 * 0 / stor6 / ext_call.return_data[0]) < uint256(poolInfo.field_768):
                            revert with 0, 'SafeMath: addition overflow'
                        uint256(poolInfo.field_768) += 10^12 * 0 / stor6 / ext_call.return_data[0]
                        uint256(poolInfo.field_512) = block.timestamp
                        if userInfo[address(msg.sender)].field_0 <= 0:
                            if arg1 <= 0:
                                if not userInfo[address(msg.sender)].field_0:
                                    userInfo[address(msg.sender)].field_256 = 0
                                else:
                                    require userInfo[address(msg.sender)].field_0
                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                emit Deposit(arg1, msg.sender);
                            else:
                                require ext_code.size(address(poolInfo.field_0))
                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                if ext_code.size(address(poolInfo.field_0)) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                mem[416 len 4] = 0
                                call address(poolInfo.field_0) with:
                                     gas gas_remaining wei
                                    args Mask(224, 32, arg1) << 480, mem[388 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                    if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[402 len 14],
                                                    0,
                                                    mem[420 len 4]
                                    require ext_code.size(address(poolInfo.field_0))
                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if not userInfo[address(msg.sender)].field_0:
                                        userInfo[address(msg.sender)].field_256 = 0
                                    else:
                                        require userInfo[address(msg.sender)].field_0
                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                else:
                                    mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeBEP20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[324]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[ceil32(return_data.size) + 403 len 22]
                                    require ext_code.size(address(poolInfo.field_0))
                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if not userInfo[address(msg.sender)].field_0:
                                        userInfo[address(msg.sender)].field_256 = 0
                                    else:
                                        require userInfo[address(msg.sender)].field_0
                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[ceil32(return_data.size) + 394 len 31]
                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                emit Deposit(0, msg.sender);
                        else:
                            if not userInfo[address(msg.sender)].field_0:
                                if userInfo[address(msg.sender)].field_256 > 0:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if -userInfo[address(msg.sender)].field_256 <= 0:
                                    if arg1 <= 0:
                                        if not userInfo[address(msg.sender)].field_0:
                                            userInfo[address(msg.sender)].field_256 = 0
                                        else:
                                            require userInfo[address(msg.sender)].field_0
                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                        emit Deposit(arg1, msg.sender);
                                    else:
                                        require ext_code.size(address(poolInfo.field_0))
                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                        if ext_code.size(address(poolInfo.field_0)) <= 0:
                                            revert with 0, 'Address: call to non-contract'
                                        mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                        mem[416 len 4] = 0
                                        mem[388 len 0] = 0
                                        call address(poolInfo.field_0) with:
                                             gas gas_remaining wei
                                            args Mask(224, 32, arg1) << 480, mem[388 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                            if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[402 len 14],
                                                            0,
                                                            mem[420 len 4]
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                        else:
                                            mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size > 0:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeBEP20: low-level call failed'
                                            if return_data.size > 0:
                                                require return_data.size >= 32
                                                if not mem[324]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 403 len 22]
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[ceil32(return_data.size) + 394 len 31]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                        emit Deposit(0, msg.sender);
                                else:
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                    if ext_code.size(rewardTokenAddress) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, -userInfo[address(msg.sender)].field_256) >> 32
                                    mem[324 len 0] = 0
                                    call rewardTokenAddress with:
                                       funct uint32(msg.sender)
                                         gas gas_remaining wei
                                        args Mask(224, 32, -userInfo[address(msg.sender)].field_256) << 224, mem[324 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                            revert with 0, 32, 42, 0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                        if arg1 <= 0:
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(arg1, msg.sender);
                                        else:
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                            if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                revert with 0, 'Address: call to non-contract'
                                            mem[456 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                            mem[580 len 4] = 0
                                            call address(poolInfo.field_0) with:
                                                 gas gas_remaining wei
                                                args arg1, mem[392 len 60], mem[552 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[566 len 14],
                                                                0,
                                                                mem[584 len 4]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            else:
                                                mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size > 0:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeBEP20: low-level call failed'
                                                if return_data.size > 0:
                                                    require return_data.size >= 32
                                                    if not mem[488]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 567 len 22]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 558 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(0, msg.sender);
                                    else:
                                        mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeBEP20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[292]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[ceil32(return_data.size) + 371 len 22]
                                        if arg1 <= 0:
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[ceil32(return_data.size) + 362 len 31]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(arg1, msg.sender);
                                        else:
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 
                                                            32,
                                                            38,
                                                            0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                            mem[ceil32(return_data.size) + 563 len 26]
                                            if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                revert with 0, 'Address: call to non-contract'
                                            mem[ceil32(return_data.size) + 457 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                            mem[ceil32(return_data.size) + 581 len 4] = 0
                                            call address(poolInfo.field_0) with:
                                                 gas gas_remaining wei
                                                args arg1, mem[ceil32(return_data.size) + 393 len 60], mem[ceil32(return_data.size) + 553 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 567 len 14],
                                                                0,
                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 558 len 23],
                                                                    0,
                                                                    mem[ceil32(return_data.size) + 585 len 4]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            else:
                                                mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size > 0:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeBEP20: low-level call failed'
                                                if return_data.size > 0:
                                                    require return_data.size >= 32
                                                    if not mem[ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(2 * ceil32(return_data.size)) + 568 len 22]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[(2 * ceil32(return_data.size)) + 559 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(0, msg.sender);
                            else:
                                require userInfo[address(msg.sender)].field_0
                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if userInfo[address(msg.sender)].field_256 > userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256 <= 0:
                                    if arg1 <= 0:
                                        if not userInfo[address(msg.sender)].field_0:
                                            userInfo[address(msg.sender)].field_256 = 0
                                        else:
                                            require userInfo[address(msg.sender)].field_0
                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                        emit Deposit(arg1, msg.sender);
                                    else:
                                        require ext_code.size(address(poolInfo.field_0))
                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                        if ext_code.size(address(poolInfo.field_0)) <= 0:
                                            revert with 0, 'Address: call to non-contract'
                                        mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                        mem[416 len 4] = 0
                                        call address(poolInfo.field_0) with:
                                             gas gas_remaining wei
                                            args Mask(224, 32, arg1) << 480, mem[388 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                            if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[402 len 14],
                                                            0,
                                                            mem[420 len 4]
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                        else:
                                            mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size > 0:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeBEP20: low-level call failed'
                                            if return_data.size > 0:
                                                require return_data.size >= 32
                                                if not mem[324]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 403 len 22]
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[ceil32(return_data.size) + 394 len 31]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                        emit Deposit(0, msg.sender);
                                else:
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                    if ext_code.size(rewardTokenAddress) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256) >> 32
                                    mem[324 len 0] = 0
                                    call rewardTokenAddress with:
                                       funct uint32(msg.sender)
                                         gas gas_remaining wei
                                        args Mask(224, 32, (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256) << 224, mem[324 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with unknown_0xa9059cbb(?????), 
                                                        msg.sender,
                                                        (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                            revert with 0, 32, 42, 0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                        if arg1 <= 0:
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(arg1, msg.sender);
                                        else:
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                            if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                revert with 0, 'Address: call to non-contract'
                                            mem[456 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                            mem[580 len 4] = 0
                                            call address(poolInfo.field_0) with:
                                                 gas gas_remaining wei
                                                args arg1, mem[392 len 60], mem[552 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0xa9059cbb(?????), 
                                                                msg.sender,
                                                                (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[566 len 14],
                                                                0,
                                                                mem[584 len 4]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            else:
                                                mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size > 0:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeBEP20: low-level call failed'
                                                if return_data.size > 0:
                                                    require return_data.size >= 32
                                                    if not mem[488]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 567 len 22]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 558 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(0, msg.sender);
                                    else:
                                        mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeBEP20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[292]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[ceil32(return_data.size) + 371 len 22]
                                        if arg1 <= 0:
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[ceil32(return_data.size) + 362 len 31]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(arg1, msg.sender);
                                        else:
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 
                                                            32,
                                                            38,
                                                            0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                            mem[ceil32(return_data.size) + 563 len 26]
                                            if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                revert with 0, 'Address: call to non-contract'
                                            mem[ceil32(return_data.size) + 457 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                            mem[ceil32(return_data.size) + 581 len 4] = 0
                                            call address(poolInfo.field_0) with:
                                                 gas gas_remaining wei
                                                args arg1, mem[ceil32(return_data.size) + 393 len 60], mem[ceil32(return_data.size) + 553 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0xa9059cbb(?????), 
                                                                msg.sender,
                                                                (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 567 len 14],
                                                                0,
                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 558 len 23],
                                                                    0,
                                                                    mem[ceil32(return_data.size) + 585 len 4]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            else:
                                                mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size > 0:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeBEP20: low-level call failed'
                                                if return_data.size > 0:
                                                    require return_data.size >= 32
                                                    if not mem[ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(2 * ceil32(return_data.size)) + 568 len 22]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[(2 * ceil32(return_data.size)) + 559 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(0, msg.sender);
                else:
                    if uint256(poolInfo.field_512) > bonusEndTimestamp:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if not bonusEndTimestamp - uint256(poolInfo.field_512):
                        if stor6 <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require stor6
                        if not 0 / stor6:
                            if ext_call.return_data[0] <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_call.return_data[0]
                            if uint256(poolInfo.field_768) + (0 / ext_call.return_data[0]) < uint256(poolInfo.field_768):
                                revert with 0, 'SafeMath: addition overflow'
                            uint256(poolInfo.field_768) += 0 / ext_call.return_data[0]
                            uint256(poolInfo.field_512) = block.timestamp
                            if userInfo[address(msg.sender)].field_0 <= 0:
                                if arg1 <= 0:
                                    if not userInfo[address(msg.sender)].field_0:
                                        userInfo[address(msg.sender)].field_256 = 0
                                    else:
                                        require userInfo[address(msg.sender)].field_0
                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                    emit Deposit(arg1, msg.sender);
                                else:
                                    require ext_code.size(address(poolInfo.field_0))
                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                    if ext_code.size(address(poolInfo.field_0)) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                    mem[416 len 4] = 0
                                    call address(poolInfo.field_0) with:
                                         gas gas_remaining wei
                                        args Mask(224, 32, arg1) << 480, mem[388 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                        if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[402 len 14],
                                                        0,
                                                        mem[420 len 4]
                                        require ext_code.size(address(poolInfo.field_0))
                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if not userInfo[address(msg.sender)].field_0:
                                            userInfo[address(msg.sender)].field_256 = 0
                                        else:
                                            require userInfo[address(msg.sender)].field_0
                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                    else:
                                        mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeBEP20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[324]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[ceil32(return_data.size) + 403 len 22]
                                        require ext_code.size(address(poolInfo.field_0))
                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if not userInfo[address(msg.sender)].field_0:
                                            userInfo[address(msg.sender)].field_256 = 0
                                        else:
                                            require userInfo[address(msg.sender)].field_0
                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[ceil32(return_data.size) + 394 len 31]
                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                    emit Deposit(0, msg.sender);
                            else:
                                if not userInfo[address(msg.sender)].field_0:
                                    if userInfo[address(msg.sender)].field_256 > 0:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if -userInfo[address(msg.sender)].field_256 <= 0:
                                        if arg1 <= 0:
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(arg1, msg.sender);
                                        else:
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                            if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                revert with 0, 'Address: call to non-contract'
                                            mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                            mem[416 len 4] = 0
                                            mem[388 len 0] = 0
                                            call address(poolInfo.field_0) with:
                                                 gas gas_remaining wei
                                                args Mask(224, 32, arg1) << 480, mem[388 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                                if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[402 len 14],
                                                                0,
                                                                mem[420 len 4]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            else:
                                                mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size > 0:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeBEP20: low-level call failed'
                                                if return_data.size > 0:
                                                    require return_data.size >= 32
                                                    if not mem[324]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 403 len 22]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 394 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(0, msg.sender);
                                    else:
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                        if ext_code.size(rewardTokenAddress) <= 0:
                                            revert with 0, 'Address: call to non-contract'
                                        mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, -userInfo[address(msg.sender)].field_256) >> 32
                                        call rewardTokenAddress with:
                                           funct uint32(msg.sender)
                                             gas gas_remaining wei
                                            args Mask(224, 32, -userInfo[address(msg.sender)].field_256) << 224, mem[324 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                revert with 0, 32, 42, 0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                            if arg1 <= 0:
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(arg1, msg.sender);
                                            else:
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                mem[580 len 4] = 0
                                                call address(poolInfo.field_0) with:
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, arg1) << 480, mem[552 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[566 len 14],
                                                                    0,
                                                                    mem[584 len 4]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                else:
                                                    mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size > 0:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeBEP20: low-level call failed'
                                                    if return_data.size > 0:
                                                        require return_data.size >= 32
                                                        if not mem[488]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 567 len 22]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 558 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(0, msg.sender);
                                        else:
                                            mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size > 0:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeBEP20: low-level call failed'
                                            if return_data.size <= 0:
                                                if arg1 <= 0:
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 362 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(arg1, msg.sender);
                                                else:
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if eth.balance(this.address) < 0:
                                                        revert with 0, 
                                                                    32,
                                                                    38,
                                                                    0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                    mem[ceil32(return_data.size) + 563 len 26]
                                                    if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                        revert with 0, 'Address: call to non-contract'
                                                    mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                    mem[ceil32(return_data.size) + 581 len 4] = 0
                                                    call address(poolInfo.field_0) with:
                                                         gas gas_remaining wei
                                                        args Mask(224, 32, arg1) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                    if not return_data.size:
                                                        if not ext_call.success:
                                                            revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 567 len 14],
                                                                        0,
                                                                        mem[ceil32(return_data.size) + 585 len 4]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 558 len 23],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                        emit Deposit(0, msg.sender);
                                                    else:
                                                        mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        if not ext_call.success:
                                                            if return_data.size > 0:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            revert with 0, 'SafeBEP20: low-level call failed'
                                                        if return_data.size > 0:
                                                            require return_data.size >= 32
                                                            if not mem[ceil32(return_data.size) + 489]:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address), mem[(2 * ceil32(return_data.size)) + 494 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 
                                                                        'SafeMath: subtraction overflow',
                                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 
                                                                        'SafeMath: addition overflow',
                                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                        emit Deposit(address arg1, uint256 arg2):
                                                                     0,
                                                                     mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                                     msg.sender,
                                            else:
                                                require return_data.size >= 32
                                                if not mem[292]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 371 len 22]
                                                if arg1 <= 0:
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 362 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(arg1, msg.sender);
                                                else:
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if eth.balance(this.address) < 0:
                                                        revert with 0, 
                                                                    32,
                                                                    38,
                                                                    0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                    mem[ceil32(return_data.size) + 563 len 26]
                                                    if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                        revert with 0, 'Address: call to non-contract'
                                                    mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                    mem[ceil32(return_data.size) + 581 len 4] = 0
                                                    mem[ceil32(return_data.size) + 553 len 0] = 0
                                                    call address(poolInfo.field_0) with:
                                                         gas gas_remaining wei
                                                        args Mask(224, 32, arg1) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                    if not return_data.size:
                                                        if not ext_call.success:
                                                            revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 567 len 14],
                                                                        0,
                                                                        mem[ceil32(return_data.size) + 585 len 4]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 558 len 23],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    else:
                                                        mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        if not ext_call.success:
                                                            if return_data.size > 0:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            revert with 0, 'SafeBEP20: low-level call failed'
                                                        if return_data.size > 0:
                                                            require return_data.size >= 32
                                                            if not mem[ceil32(return_data.size) + 489]:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[(2 * ceil32(return_data.size)) + 568 len 22]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[(2 * ceil32(return_data.size)) + 559 len 31]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(0, msg.sender);
                                else:
                                    require userInfo[address(msg.sender)].field_0
                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if userInfo[address(msg.sender)].field_256 > userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256 <= 0:
                                        if arg1 <= 0:
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(arg1, msg.sender);
                                        else:
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                            if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                revert with 0, 'Address: call to non-contract'
                                            mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                            mem[416 len 4] = 0
                                            call address(poolInfo.field_0) with:
                                                 gas gas_remaining wei
                                                args Mask(224, 32, arg1) << 480, mem[388 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                                if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[402 len 14],
                                                                0,
                                                                mem[420 len 4]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            else:
                                                mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size > 0:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeBEP20: low-level call failed'
                                                if return_data.size > 0:
                                                    require return_data.size >= 32
                                                    if not mem[324]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 403 len 22]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 394 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(0, msg.sender);
                                    else:
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                        if ext_code.size(rewardTokenAddress) <= 0:
                                            revert with 0, 'Address: call to non-contract'
                                        mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256) >> 32
                                        call rewardTokenAddress with:
                                           funct uint32(msg.sender)
                                             gas gas_remaining wei
                                            args Mask(224, 32, (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256) << 224, mem[324 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                revert with unknown_0xa9059cbb(?????), 
                                                            msg.sender,
                                                            (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                revert with 0, 32, 42, 0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                            if arg1 <= 0:
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(arg1, msg.sender);
                                            else:
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                mem[580 len 4] = 0
                                                call address(poolInfo.field_0) with:
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, arg1) << 480, mem[552 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), 
                                                                    msg.sender,
                                                                    (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[566 len 14],
                                                                    0,
                                                                    mem[584 len 4]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                else:
                                                    mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size > 0:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeBEP20: low-level call failed'
                                                    if return_data.size > 0:
                                                        require return_data.size >= 32
                                                        if not mem[488]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 567 len 22]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 558 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(0, msg.sender);
                                        else:
                                            mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size > 0:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeBEP20: low-level call failed'
                                            if return_data.size <= 0:
                                                if arg1 <= 0:
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 362 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(arg1, msg.sender);
                                                else:
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if eth.balance(this.address) < 0:
                                                        revert with 0, 
                                                                    32,
                                                                    38,
                                                                    0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                    mem[ceil32(return_data.size) + 563 len 26]
                                                    if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                        revert with 0, 'Address: call to non-contract'
                                                    mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                    mem[ceil32(return_data.size) + 581 len 4] = 0
                                                    call address(poolInfo.field_0) with:
                                                         gas gas_remaining wei
                                                        args Mask(224, 32, arg1) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                    if not return_data.size:
                                                        if not ext_call.success:
                                                            revert with unknown_0xa9059cbb(?????), 
                                                                        msg.sender,
                                                                        (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 567 len 14],
                                                                        0,
                                                                        mem[ceil32(return_data.size) + 585 len 4]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 558 len 23],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                        emit Deposit(0, msg.sender);
                                                    else:
                                                        mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        if not ext_call.success:
                                                            if return_data.size > 0:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            revert with 0, 'SafeBEP20: low-level call failed'
                                                        if return_data.size > 0:
                                                            require return_data.size >= 32
                                                            if not mem[ceil32(return_data.size) + 489]:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address), mem[(2 * ceil32(return_data.size)) + 494 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 
                                                                        'SafeMath: subtraction overflow',
                                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 
                                                                        'SafeMath: addition overflow',
                                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                        emit Deposit(address arg1, uint256 arg2):
                                                                     0,
                                                                     mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                                     msg.sender,
                                            else:
                                                require return_data.size >= 32
                                                if not mem[292]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 371 len 22]
                                                if arg1 <= 0:
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 362 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(arg1, msg.sender);
                                                else:
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if eth.balance(this.address) < 0:
                                                        revert with 0, 
                                                                    32,
                                                                    38,
                                                                    0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                    mem[ceil32(return_data.size) + 563 len 26]
                                                    if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                        revert with 0, 'Address: call to non-contract'
                                                    mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                    mem[ceil32(return_data.size) + 581 len 4] = 0
                                                    mem[ceil32(return_data.size) + 553 len 0] = 0
                                                    call address(poolInfo.field_0) with:
                                                         gas gas_remaining wei
                                                        args Mask(224, 32, arg1) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                    if not return_data.size:
                                                        if not ext_call.success:
                                                            revert with unknown_0xa9059cbb(?????), 
                                                                        msg.sender,
                                                                        (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 567 len 14],
                                                                        0,
                                                                        mem[ceil32(return_data.size) + 585 len 4]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 558 len 23],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    else:
                                                        mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        if not ext_call.success:
                                                            if return_data.size > 0:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            revert with 0, 'SafeBEP20: low-level call failed'
                                                        if return_data.size > 0:
                                                            require return_data.size >= 32
                                                            if not mem[ceil32(return_data.size) + 489]:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[(2 * ceil32(return_data.size)) + 568 len 22]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[(2 * ceil32(return_data.size)) + 559 len 31]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(0, msg.sender);
                        else:
                            require 0 / stor6
                            if 10^12 * 0 / stor6 / 0 / stor6 != 10^12:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if ext_call.return_data[0] <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_call.return_data[0]
                            if uint256(poolInfo.field_768) + (10^12 * 0 / stor6 / ext_call.return_data[0]) < uint256(poolInfo.field_768):
                                revert with 0, 'SafeMath: addition overflow'
                            uint256(poolInfo.field_768) += 10^12 * 0 / stor6 / ext_call.return_data[0]
                            uint256(poolInfo.field_512) = block.timestamp
                            if userInfo[address(msg.sender)].field_0 <= 0:
                                if arg1 <= 0:
                                    if not userInfo[address(msg.sender)].field_0:
                                        userInfo[address(msg.sender)].field_256 = 0
                                    else:
                                        require userInfo[address(msg.sender)].field_0
                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                    emit Deposit(arg1, msg.sender);
                                else:
                                    require ext_code.size(address(poolInfo.field_0))
                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                    if ext_code.size(address(poolInfo.field_0)) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                    mem[416 len 4] = 0
                                    mem[388 len 0] = 0
                                    call address(poolInfo.field_0) with:
                                         gas gas_remaining wei
                                        args Mask(224, 32, arg1) << 480, mem[388 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                        if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[402 len 14],
                                                        0,
                                                        mem[420 len 4]
                                        require ext_code.size(address(poolInfo.field_0))
                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if not userInfo[address(msg.sender)].field_0:
                                            userInfo[address(msg.sender)].field_256 = 0
                                        else:
                                            require userInfo[address(msg.sender)].field_0
                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                    else:
                                        mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeBEP20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[324]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[ceil32(return_data.size) + 403 len 22]
                                        require ext_code.size(address(poolInfo.field_0))
                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if not userInfo[address(msg.sender)].field_0:
                                            userInfo[address(msg.sender)].field_256 = 0
                                        else:
                                            require userInfo[address(msg.sender)].field_0
                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[ceil32(return_data.size) + 394 len 31]
                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                    emit Deposit(0, msg.sender);
                            else:
                                if not userInfo[address(msg.sender)].field_0:
                                    if userInfo[address(msg.sender)].field_256 > 0:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if -userInfo[address(msg.sender)].field_256 <= 0:
                                        if arg1 <= 0:
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(arg1, msg.sender);
                                        else:
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                            if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                revert with 0, 'Address: call to non-contract'
                                            mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                            mem[416 len 4] = 0
                                            mem[388 len 0] = 0
                                            call address(poolInfo.field_0) with:
                                                 gas gas_remaining wei
                                                args Mask(224, 32, arg1) << 480, mem[388 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                                if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[402 len 14],
                                                                0,
                                                                mem[420 len 4]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            else:
                                                mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size > 0:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeBEP20: low-level call failed'
                                                if return_data.size > 0:
                                                    require return_data.size >= 32
                                                    if not mem[324]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 403 len 22]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 394 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(0, msg.sender);
                                    else:
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                        if ext_code.size(rewardTokenAddress) <= 0:
                                            revert with 0, 'Address: call to non-contract'
                                        mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, -userInfo[address(msg.sender)].field_256) >> 32
                                        mem[324 len 0] = 0
                                        call rewardTokenAddress with:
                                           funct uint32(msg.sender)
                                             gas gas_remaining wei
                                            args Mask(224, 32, -userInfo[address(msg.sender)].field_256) << 224, mem[324 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                revert with 0, 32, 42, 0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                            if arg1 <= 0:
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(arg1, msg.sender);
                                            else:
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[456 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                mem[580 len 4] = 0
                                                call address(poolInfo.field_0) with:
                                                     gas gas_remaining wei
                                                    args arg1, mem[392 len 60], mem[552 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[566 len 14],
                                                                    0,
                                                                    mem[584 len 4]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                else:
                                                    mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size > 0:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeBEP20: low-level call failed'
                                                    if return_data.size > 0:
                                                        require return_data.size >= 32
                                                        if not mem[488]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 567 len 22]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 558 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(0, msg.sender);
                                        else:
                                            mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size > 0:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeBEP20: low-level call failed'
                                            if return_data.size <= 0:
                                                if arg1 <= 0:
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 362 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(arg1, msg.sender);
                                                else:
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if eth.balance(this.address) < 0:
                                                        revert with 0, 
                                                                    32,
                                                                    38,
                                                                    0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                    mem[ceil32(return_data.size) + 563 len 26]
                                                    if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                        revert with 0, 'Address: call to non-contract'
                                                    mem[ceil32(return_data.size) + 457 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                    mem[ceil32(return_data.size) + 581 len 4] = 0
                                                    call address(poolInfo.field_0) with:
                                                         gas gas_remaining wei
                                                        args arg1, mem[ceil32(return_data.size) + 393 len 60], mem[ceil32(return_data.size) + 553 len 4]
                                                    if not return_data.size:
                                                        if not ext_call.success:
                                                            revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 567 len 14],
                                                                        0,
                                                                        mem[ceil32(return_data.size) + 585 len 4]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 558 len 23],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    else:
                                                        mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        if not ext_call.success:
                                                            if return_data.size > 0:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            revert with 0, 
                                                                        'SafeBEP20: low-level call failed',
                                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                        if return_data.size > 0:
                                                            require return_data.size >= 32
                                                            if not mem[ceil32(return_data.size) + 489]:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 
                                                                        'SafeMath: subtraction overflow',
                                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 
                                                                        'SafeMath: addition overflow',
                                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(0, msg.sender);
                                            else:
                                                require return_data.size >= 32
                                                if not mem[292]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 371 len 22]
                                                if arg1 <= 0:
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 362 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(arg1, msg.sender);
                                                else:
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if eth.balance(this.address) < 0:
                                                        revert with 0, 
                                                                    32,
                                                                    38,
                                                                    0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                    mem[ceil32(return_data.size) + 563 len 26]
                                                    if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                        revert with 0, 'Address: call to non-contract'
                                                    mem[ceil32(return_data.size) + 457 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                    mem[ceil32(return_data.size) + 581 len 4] = 0
                                                    call address(poolInfo.field_0) with:
                                                         gas gas_remaining wei
                                                        args arg1, mem[ceil32(return_data.size) + 393 len 60], mem[ceil32(return_data.size) + 553 len 4]
                                                    if not return_data.size:
                                                        if not ext_call.success:
                                                            revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 567 len 14],
                                                                        0,
                                                                        mem[ceil32(return_data.size) + 585 len 4]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 558 len 23],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    else:
                                                        mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        if not ext_call.success:
                                                            if return_data.size > 0:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            revert with 0, 'SafeBEP20: low-level call failed'
                                                        if return_data.size > 0:
                                                            require return_data.size >= 32
                                                            if not mem[ceil32(return_data.size) + 489]:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[(2 * ceil32(return_data.size)) + 568 len 22]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[(2 * ceil32(return_data.size)) + 559 len 31]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(0, msg.sender);
                                else:
                                    require userInfo[address(msg.sender)].field_0
                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if userInfo[address(msg.sender)].field_256 > userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256 <= 0:
                                        if arg1 <= 0:
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(arg1, msg.sender);
                                        else:
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                            if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                revert with 0, 'Address: call to non-contract'
                                            mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                            mem[416 len 4] = 0
                                            call address(poolInfo.field_0) with:
                                                 gas gas_remaining wei
                                                args Mask(224, 32, arg1) << 480, mem[388 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                                if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[402 len 14],
                                                                0,
                                                                mem[420 len 4]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            else:
                                                mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size > 0:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeBEP20: low-level call failed'
                                                if return_data.size > 0:
                                                    require return_data.size >= 32
                                                    if not mem[324]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 403 len 22]
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 394 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                            emit Deposit(0, msg.sender);
                                    else:
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                        if ext_code.size(rewardTokenAddress) <= 0:
                                            revert with 0, 'Address: call to non-contract'
                                        mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256) >> 32
                                        mem[324 len 0] = 0
                                        call rewardTokenAddress with:
                                           funct uint32(msg.sender)
                                             gas gas_remaining wei
                                            args Mask(224, 32, (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256) << 224, mem[324 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                revert with unknown_0xa9059cbb(?????), 
                                                            msg.sender,
                                                            (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                revert with 0, 32, 42, 0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                            if arg1 <= 0:
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(arg1, msg.sender);
                                            else:
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[456 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                mem[580 len 4] = 0
                                                call address(poolInfo.field_0) with:
                                                     gas gas_remaining wei
                                                    args arg1, mem[392 len 60], mem[552 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), 
                                                                    msg.sender,
                                                                    (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[566 len 14],
                                                                    0,
                                                                    mem[584 len 4]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                else:
                                                    mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size > 0:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeBEP20: low-level call failed'
                                                    if return_data.size > 0:
                                                        require return_data.size >= 32
                                                        if not mem[488]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 567 len 22]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 558 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(0, msg.sender);
                                        else:
                                            mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size > 0:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeBEP20: low-level call failed'
                                            if return_data.size <= 0:
                                                if arg1 <= 0:
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 362 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(arg1, msg.sender);
                                                else:
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if eth.balance(this.address) < 0:
                                                        revert with 0, 
                                                                    32,
                                                                    38,
                                                                    0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                    mem[ceil32(return_data.size) + 563 len 26]
                                                    if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                        revert with 0, 'Address: call to non-contract'
                                                    mem[ceil32(return_data.size) + 457 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                    mem[ceil32(return_data.size) + 581 len 4] = 0
                                                    call address(poolInfo.field_0) with:
                                                         gas gas_remaining wei
                                                        args arg1, mem[ceil32(return_data.size) + 393 len 60], mem[ceil32(return_data.size) + 553 len 4]
                                                    if not return_data.size:
                                                        if not ext_call.success:
                                                            revert with unknown_0xa9059cbb(?????), 
                                                                        msg.sender,
                                                                        (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 567 len 14],
                                                                        0,
                                                                        mem[ceil32(return_data.size) + 585 len 4]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 558 len 23],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    else:
                                                        mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        if not ext_call.success:
                                                            if return_data.size > 0:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            revert with 0, 
                                                                        'SafeBEP20: low-level call failed',
                                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                        if return_data.size > 0:
                                                            require return_data.size >= 32
                                                            if not mem[ceil32(return_data.size) + 489]:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 
                                                                        'SafeMath: subtraction overflow',
                                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 
                                                                        'SafeMath: addition overflow',
                                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(0, msg.sender);
                                            else:
                                                require return_data.size >= 32
                                                if not mem[292]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 371 len 22]
                                                if arg1 <= 0:
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 362 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(arg1, msg.sender);
                                                else:
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if eth.balance(this.address) < 0:
                                                        revert with 0, 
                                                                    32,
                                                                    38,
                                                                    0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                    mem[ceil32(return_data.size) + 563 len 26]
                                                    if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                        revert with 0, 'Address: call to non-contract'
                                                    mem[ceil32(return_data.size) + 457 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                    mem[ceil32(return_data.size) + 581 len 4] = 0
                                                    call address(poolInfo.field_0) with:
                                                         gas gas_remaining wei
                                                        args arg1, mem[ceil32(return_data.size) + 393 len 60], mem[ceil32(return_data.size) + 553 len 4]
                                                    if not return_data.size:
                                                        if not ext_call.success:
                                                            revert with unknown_0xa9059cbb(?????), 
                                                                        msg.sender,
                                                                        (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 567 len 14],
                                                                        0,
                                                                        mem[ceil32(return_data.size) + 585 len 4]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 558 len 23],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    else:
                                                        mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        if not ext_call.success:
                                                            if return_data.size > 0:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            revert with 0, 'SafeBEP20: low-level call failed'
                                                        if return_data.size > 0:
                                                            require return_data.size >= 32
                                                            if not mem[ceil32(return_data.size) + 489]:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[(2 * ceil32(return_data.size)) + 568 len 22]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[(2 * ceil32(return_data.size)) + 559 len 31]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(0, msg.sender);
                    else:
                        require bonusEndTimestamp - uint256(poolInfo.field_512)
                        if (bonusEndTimestamp * rewardPerSec) - (uint256(poolInfo.field_512) * rewardPerSec) / bonusEndTimestamp - uint256(poolInfo.field_512) != rewardPerSec:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        if not (bonusEndTimestamp * rewardPerSec) - (uint256(poolInfo.field_512) * rewardPerSec):
                            if stor6 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require stor6
                            if not 0 / stor6:
                                if ext_call.return_data[0] <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_call.return_data[0]
                                if uint256(poolInfo.field_768) + (0 / ext_call.return_data[0]) < uint256(poolInfo.field_768):
                                    revert with 0, 'SafeMath: addition overflow'
                                uint256(poolInfo.field_768) += 0 / ext_call.return_data[0]
                                uint256(poolInfo.field_512) = block.timestamp
                                if userInfo[address(msg.sender)].field_0 <= 0:
                                    if arg1 <= 0:
                                        if not userInfo[address(msg.sender)].field_0:
                                            userInfo[address(msg.sender)].field_256 = 0
                                        else:
                                            require userInfo[address(msg.sender)].field_0
                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                        emit Deposit(arg1, msg.sender);
                                    else:
                                        require ext_code.size(address(poolInfo.field_0))
                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                        if ext_code.size(address(poolInfo.field_0)) <= 0:
                                            revert with 0, 'Address: call to non-contract'
                                        mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                        mem[416 len 4] = 0
                                        mem[388 len 0] = 0
                                        call address(poolInfo.field_0) with:
                                             gas gas_remaining wei
                                            args Mask(224, 32, arg1) << 480, mem[388 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                            if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[402 len 14],
                                                            0,
                                                            mem[420 len 4]
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                        else:
                                            mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size > 0:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeBEP20: low-level call failed'
                                            if return_data.size > 0:
                                                require return_data.size >= 32
                                                if not mem[324]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 403 len 22]
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[ceil32(return_data.size) + 394 len 31]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                        emit Deposit(0, msg.sender);
                                else:
                                    if not userInfo[address(msg.sender)].field_0:
                                        if userInfo[address(msg.sender)].field_256 > 0:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if -userInfo[address(msg.sender)].field_256 <= 0:
                                            if arg1 <= 0:
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[197 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(arg1, msg.sender);
                                            else:
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                                if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                mem[416 len 4] = 0
                                                call address(poolInfo.field_0) with:
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, arg1) << 480, mem[388 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                                    if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[402 len 14],
                                                                    0,
                                                                    mem[420 len 4]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                else:
                                                    mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size > 0:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeBEP20: low-level call failed'
                                                    if return_data.size > 0:
                                                        require return_data.size >= 32
                                                        if not mem[324]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 403 len 22]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 394 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(0, msg.sender);
                                        else:
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                            if ext_code.size(rewardTokenAddress) <= 0:
                                                revert with 0, 'Address: call to non-contract'
                                            mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, -userInfo[address(msg.sender)].field_256) >> 32
                                            call rewardTokenAddress with:
                                               funct uint32(msg.sender)
                                                 gas gas_remaining wei
                                                args Mask(224, 32, -userInfo[address(msg.sender)].field_256) << 224, mem[324 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 32, 42, 0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                                if arg1 <= 0:
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(arg1, msg.sender);
                                                else:
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if eth.balance(this.address) < 0:
                                                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                    if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                        revert with 0, 'Address: call to non-contract'
                                                    mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                    mem[580 len 4] = 0
                                                    call address(poolInfo.field_0) with:
                                                         gas gas_remaining wei
                                                        args Mask(224, 32, arg1) << 480, mem[552 len 4]
                                                    if not return_data.size:
                                                        if not ext_call.success:
                                                            revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[566 len 14],
                                                                        0,
                                                                        mem[584 len 4]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    else:
                                                        mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        if not ext_call.success:
                                                            if return_data.size > 0:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            revert with 0, 'SafeBEP20: low-level call failed'
                                                        if return_data.size > 0:
                                                            require return_data.size >= 32
                                                            if not mem[488]:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[ceil32(return_data.size) + 567 len 22]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 558 len 31]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(0, msg.sender);
                                            else:
                                                mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size > 0:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeBEP20: low-level call failed'
                                                if return_data.size > 0:
                                                    require return_data.size >= 32
                                                    if not mem[292]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 371 len 22]
                                                if arg1 <= 0:
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 362 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(arg1, msg.sender);
                                                else:
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if eth.balance(this.address) < 0:
                                                        revert with 0, 
                                                                    32,
                                                                    38,
                                                                    0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                    mem[ceil32(return_data.size) + 563 len 26]
                                                    if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                        revert with 0, 'Address: call to non-contract'
                                                    mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                    mem[ceil32(return_data.size) + 581 len 4] = 0
                                                    call address(poolInfo.field_0) with:
                                                         gas gas_remaining wei
                                                        args Mask(224, 32, arg1) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                    if not return_data.size:
                                                        if not ext_call.success:
                                                            revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 567 len 14],
                                                                        0,
                                                                        mem[ceil32(return_data.size) + 585 len 4]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 558 len 23],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                        emit Deposit(0, msg.sender);
                                                    else:
                                                        mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        if not ext_call.success:
                                                            if return_data.size > 0:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            revert with 0, 'SafeBEP20: low-level call failed'
                                                        if return_data.size > 0:
                                                            require return_data.size >= 32
                                                            if not mem[ceil32(return_data.size) + 489]:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args address(this.address), mem[(2 * ceil32(return_data.size)) + 494 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 
                                                                        'SafeMath: subtraction overflow',
                                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 
                                                                        'SafeMath: addition overflow',
                                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                        emit Deposit(address arg1, uint256 arg2):
                                                                     0,
                                                                     mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                                     msg.sender,
                                    else:
                                        require userInfo[address(msg.sender)].field_0
                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if userInfo[address(msg.sender)].field_256 > userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256 <= 0:
                                            if arg1 <= 0:
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[197 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(arg1, msg.sender);
                                            else:
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                                if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                mem[416 len 4] = 0
                                                mem[388 len 0] = 0
                                                call address(poolInfo.field_0) with:
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, arg1) << 480, mem[388 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                                    if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[402 len 14],
                                                                    0,
                                                                    mem[420 len 4]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                else:
                                                    mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size > 0:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeBEP20: low-level call failed'
                                                    if return_data.size > 0:
                                                        require return_data.size >= 32
                                                        if not mem[324]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 403 len 22]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 394 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(0, msg.sender);
                                        else:
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                            if ext_code.size(rewardTokenAddress) <= 0:
                                                revert with 0, 'Address: call to non-contract'
                                            mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256) >> 32
                                            call rewardTokenAddress with:
                                               funct uint32(msg.sender)
                                                 gas gas_remaining wei
                                                args Mask(224, 32, (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256) << 224, mem[324 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0xa9059cbb(?????), 
                                                                msg.sender,
                                                                (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 32, 42, 0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                                if arg1 <= 0:
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(arg1, msg.sender);
                                                else:
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if eth.balance(this.address) < 0:
                                                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                    if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                        revert with 0, 'Address: call to non-contract'
                                                    mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                    mem[580 len 4] = 0
                                                    mem[552 len 0] = 0
                                                    call address(poolInfo.field_0) with:
                                                         gas gas_remaining wei
                                                        args Mask(224, 32, arg1) << 480, mem[552 len 4]
                                                    if not return_data.size:
                                                        if not ext_call.success:
                                                            revert with unknown_0xa9059cbb(?????), 
                                                                        msg.sender,
                                                                        (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[566 len 14],
                                                                        0,
                                                                        mem[584 len 4]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    else:
                                                        mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        if not ext_call.success:
                                                            if return_data.size > 0:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            revert with 0, 'SafeBEP20: low-level call failed'
                                                        if return_data.size > 0:
                                                            require return_data.size >= 32
                                                            if not mem[488]:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[ceil32(return_data.size) + 567 len 22]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 558 len 31]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(0, msg.sender);
                                            else:
                                                mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size > 0:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeBEP20: low-level call failed'
                                                if return_data.size <= 0:
                                                    if arg1 <= 0:
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 362 len 31]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                        emit Deposit(arg1, msg.sender);
                                                    else:
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 
                                                                        32,
                                                                        38,
                                                                        0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                        mem[ceil32(return_data.size) + 563 len 26]
                                                        if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                        mem[ceil32(return_data.size) + 581 len 4] = 0
                                                        call address(poolInfo.field_0) with:
                                                             gas gas_remaining wei
                                                            args Mask(224, 32, arg1) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), 
                                                                            msg.sender,
                                                                            (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[ceil32(return_data.size) + 567 len 14],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            require ext_code.size(address(poolInfo.field_0))
                                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            if not userInfo[address(msg.sender)].field_0:
                                                                userInfo[address(msg.sender)].field_256 = 0
                                                            else:
                                                                require userInfo[address(msg.sender)].field_0
                                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 23],
                                                                                0,
                                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                            emit Deposit(0, msg.sender);
                                                        else:
                                                            mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size > 0:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeBEP20: low-level call failed'
                                                            if return_data.size > 0:
                                                                require return_data.size >= 32
                                                                if not mem[ceil32(return_data.size) + 489]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                            require ext_code.size(address(poolInfo.field_0))
                                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args address(this.address), mem[(2 * ceil32(return_data.size)) + 494 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                revert with 0, 
                                                                            'SafeMath: subtraction overflow',
                                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                                revert with 0, 
                                                                            'SafeMath: addition overflow',
                                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            if not userInfo[address(msg.sender)].field_0:
                                                                userInfo[address(msg.sender)].field_256 = 0
                                                            else:
                                                                require userInfo[address(msg.sender)].field_0
                                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                            emit Deposit(address arg1, uint256 arg2):
                                                                         0,
                                                                         mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                                         msg.sender,
                                                else:
                                                    require return_data.size >= 32
                                                    if not mem[292]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 371 len 22]
                                                    if arg1 <= 0:
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 362 len 31]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                        emit Deposit(arg1, msg.sender);
                                                    else:
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 
                                                                        32,
                                                                        38,
                                                                        0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                        mem[ceil32(return_data.size) + 563 len 26]
                                                        if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                        mem[ceil32(return_data.size) + 581 len 4] = 0
                                                        mem[ceil32(return_data.size) + 553 len 0] = 0
                                                        call address(poolInfo.field_0) with:
                                                             gas gas_remaining wei
                                                            args Mask(224, 32, arg1) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), 
                                                                            msg.sender,
                                                                            (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[ceil32(return_data.size) + 567 len 14],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            require ext_code.size(address(poolInfo.field_0))
                                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            if not userInfo[address(msg.sender)].field_0:
                                                                userInfo[address(msg.sender)].field_256 = 0
                                                            else:
                                                                require userInfo[address(msg.sender)].field_0
                                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 23],
                                                                                0,
                                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                        else:
                                                            mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size > 0:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeBEP20: low-level call failed'
                                                            if return_data.size > 0:
                                                                require return_data.size >= 32
                                                                if not mem[ceil32(return_data.size) + 489]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[(2 * ceil32(return_data.size)) + 568 len 22]
                                                            require ext_code.size(address(poolInfo.field_0))
                                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            if not userInfo[address(msg.sender)].field_0:
                                                                userInfo[address(msg.sender)].field_256 = 0
                                                            else:
                                                                require userInfo[address(msg.sender)].field_0
                                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[(2 * ceil32(return_data.size)) + 559 len 31]
                                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                        emit Deposit(0, msg.sender);
                            else:
                                require 0 / stor6
                                if 10^12 * 0 / stor6 / 0 / stor6 != 10^12:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if ext_call.return_data[0] <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_call.return_data[0]
                                if uint256(poolInfo.field_768) + (10^12 * 0 / stor6 / ext_call.return_data[0]) < uint256(poolInfo.field_768):
                                    revert with 0, 'SafeMath: addition overflow'
                                uint256(poolInfo.field_768) += 10^12 * 0 / stor6 / ext_call.return_data[0]
                                uint256(poolInfo.field_512) = block.timestamp
                                if userInfo[address(msg.sender)].field_0 <= 0:
                                    if arg1 <= 0:
                                        if not userInfo[address(msg.sender)].field_0:
                                            userInfo[address(msg.sender)].field_256 = 0
                                        else:
                                            require userInfo[address(msg.sender)].field_0
                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                        emit Deposit(arg1, msg.sender);
                                    else:
                                        require ext_code.size(address(poolInfo.field_0))
                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                        if ext_code.size(address(poolInfo.field_0)) <= 0:
                                            revert with 0, 'Address: call to non-contract'
                                        mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                        mem[416 len 4] = 0
                                        call address(poolInfo.field_0) with:
                                             gas gas_remaining wei
                                            args Mask(224, 32, arg1) << 480, mem[388 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                            if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[402 len 14],
                                                            0,
                                                            mem[420 len 4]
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                        else:
                                            mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size > 0:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeBEP20: low-level call failed'
                                            if return_data.size > 0:
                                                require return_data.size >= 32
                                                if not mem[324]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 403 len 22]
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[ceil32(return_data.size) + 394 len 31]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                        emit Deposit(0, msg.sender);
                                else:
                                    if not userInfo[address(msg.sender)].field_0:
                                        if userInfo[address(msg.sender)].field_256 > 0:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if -userInfo[address(msg.sender)].field_256 <= 0:
                                            if arg1 <= 0:
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[197 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(arg1, msg.sender);
                                            else:
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                                if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                mem[416 len 4] = 0
                                                mem[388 len 0] = 0
                                                call address(poolInfo.field_0) with:
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, arg1) << 480, mem[388 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                                    if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[402 len 14],
                                                                    0,
                                                                    mem[420 len 4]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                else:
                                                    mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size > 0:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeBEP20: low-level call failed'
                                                    if return_data.size > 0:
                                                        require return_data.size >= 32
                                                        if not mem[324]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 403 len 22]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 394 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(0, msg.sender);
                                        else:
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                            if ext_code.size(rewardTokenAddress) <= 0:
                                                revert with 0, 'Address: call to non-contract'
                                            mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, -userInfo[address(msg.sender)].field_256) >> 32
                                            mem[324 len 0] = 0
                                            call rewardTokenAddress with:
                                               funct uint32(msg.sender)
                                                 gas gas_remaining wei
                                                args Mask(224, 32, -userInfo[address(msg.sender)].field_256) << 224, mem[324 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 32, 42, 0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                                if arg1 <= 0:
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(arg1, msg.sender);
                                                else:
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if eth.balance(this.address) < 0:
                                                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                    if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                        revert with 0, 'Address: call to non-contract'
                                                    mem[456 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                    mem[580 len 4] = 0
                                                    call address(poolInfo.field_0) with:
                                                         gas gas_remaining wei
                                                        args arg1, mem[392 len 60], mem[552 len 4]
                                                    if not return_data.size:
                                                        if not ext_call.success:
                                                            revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[566 len 14],
                                                                        0,
                                                                        mem[584 len 4]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    else:
                                                        mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        if not ext_call.success:
                                                            if return_data.size > 0:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            revert with 0, 'SafeBEP20: low-level call failed'
                                                        if return_data.size > 0:
                                                            require return_data.size >= 32
                                                            if not mem[488]:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[ceil32(return_data.size) + 567 len 22]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 558 len 31]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(0, msg.sender);
                                            else:
                                                mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size > 0:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeBEP20: low-level call failed'
                                                if return_data.size > 0:
                                                    require return_data.size >= 32
                                                    if not mem[292]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 371 len 22]
                                                if arg1 <= 0:
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 362 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(arg1, msg.sender);
                                                else:
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if eth.balance(this.address) < 0:
                                                        revert with 0, 
                                                                    32,
                                                                    38,
                                                                    0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                    mem[ceil32(return_data.size) + 563 len 26]
                                                    if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                        revert with 0, 'Address: call to non-contract'
                                                    mem[ceil32(return_data.size) + 457 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                    mem[ceil32(return_data.size) + 581 len 4] = 0
                                                    call address(poolInfo.field_0) with:
                                                         gas gas_remaining wei
                                                        args arg1, mem[ceil32(return_data.size) + 393 len 60], mem[ceil32(return_data.size) + 553 len 4]
                                                    if not return_data.size:
                                                        if not ext_call.success:
                                                            revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 567 len 14],
                                                                        0,
                                                                        mem[ceil32(return_data.size) + 585 len 4]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 558 len 23],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    else:
                                                        mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        if not ext_call.success:
                                                            if return_data.size > 0:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            revert with 0, 
                                                                        'SafeBEP20: low-level call failed',
                                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                        if return_data.size > 0:
                                                            require return_data.size >= 32
                                                            if not mem[ceil32(return_data.size) + 489]:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 
                                                                        'SafeMath: subtraction overflow',
                                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 
                                                                        'SafeMath: addition overflow',
                                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(0, msg.sender);
                                    else:
                                        require userInfo[address(msg.sender)].field_0
                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if userInfo[address(msg.sender)].field_256 > userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256 <= 0:
                                            if arg1 <= 0:
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[197 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(arg1, msg.sender);
                                            else:
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                                if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                mem[416 len 4] = 0
                                                call address(poolInfo.field_0) with:
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, arg1) << 480, mem[388 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                                    if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[402 len 14],
                                                                    0,
                                                                    mem[420 len 4]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                else:
                                                    mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size > 0:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeBEP20: low-level call failed'
                                                    if return_data.size > 0:
                                                        require return_data.size >= 32
                                                        if not mem[324]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 403 len 22]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 394 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(0, msg.sender);
                                        else:
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                            if ext_code.size(rewardTokenAddress) <= 0:
                                                revert with 0, 'Address: call to non-contract'
                                            mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256) >> 32
                                            call rewardTokenAddress with:
                                               funct uint32(msg.sender)
                                                 gas gas_remaining wei
                                                args Mask(224, 32, (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256) << 224, mem[324 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0xa9059cbb(?????), 
                                                                msg.sender,
                                                                (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 32, 42, 0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                                if arg1 <= 0:
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(arg1, msg.sender);
                                                else:
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if eth.balance(this.address) < 0:
                                                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                    if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                        revert with 0, 'Address: call to non-contract'
                                                    mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                    mem[580 len 4] = 0
                                                    mem[552 len 0] = 0
                                                    call address(poolInfo.field_0) with:
                                                         gas gas_remaining wei
                                                        args Mask(224, 32, arg1) << 480, mem[552 len 4]
                                                    if not return_data.size:
                                                        if not ext_call.success:
                                                            revert with unknown_0xa9059cbb(?????), 
                                                                        msg.sender,
                                                                        (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[566 len 14],
                                                                        0,
                                                                        mem[584 len 4]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    else:
                                                        mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        if not ext_call.success:
                                                            if return_data.size > 0:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            revert with 0, 'SafeBEP20: low-level call failed'
                                                        if return_data.size > 0:
                                                            require return_data.size >= 32
                                                            if not mem[488]:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[ceil32(return_data.size) + 567 len 22]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 558 len 31]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(0, msg.sender);
                                            else:
                                                mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size > 0:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeBEP20: low-level call failed'
                                                if return_data.size > 0:
                                                    require return_data.size >= 32
                                                    if not mem[292]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 371 len 22]
                                                if arg1 <= 0:
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 362 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(arg1, msg.sender);
                                                else:
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if eth.balance(this.address) < 0:
                                                        revert with 0, 
                                                                    32,
                                                                    38,
                                                                    0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                    mem[ceil32(return_data.size) + 563 len 26]
                                                    if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                        revert with 0, 'Address: call to non-contract'
                                                    mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                    mem[ceil32(return_data.size) + 581 len 4] = 0
                                                    mem[ceil32(return_data.size) + 553 len 0] = 0
                                                    call address(poolInfo.field_0) with:
                                                         gas gas_remaining wei
                                                        args Mask(224, 32, arg1) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                    if not return_data.size:
                                                        if not ext_call.success:
                                                            revert with unknown_0xa9059cbb(?????), 
                                                                        msg.sender,
                                                                        (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 567 len 14],
                                                                        0,
                                                                        mem[ceil32(return_data.size) + 585 len 4]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 558 len 23],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    else:
                                                        mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        if not ext_call.success:
                                                            if return_data.size > 0:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            revert with 0, 'SafeBEP20: low-level call failed'
                                                        if return_data.size > 0:
                                                            require return_data.size >= 32
                                                            if not mem[ceil32(return_data.size) + 489]:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[(2 * ceil32(return_data.size)) + 568 len 22]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[(2 * ceil32(return_data.size)) + 559 len 31]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(0, msg.sender);
                        else:
                            require (bonusEndTimestamp * rewardPerSec) - (uint256(poolInfo.field_512) * rewardPerSec)
                            if (bonusEndTimestamp * rewardPerSec * uint256(poolInfo.field_256)) - (uint256(poolInfo.field_512) * rewardPerSec * uint256(poolInfo.field_256)) / (bonusEndTimestamp * rewardPerSec) - (uint256(poolInfo.field_512) * rewardPerSec) != uint256(poolInfo.field_256):
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if stor6 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require stor6
                            if not (bonusEndTimestamp * rewardPerSec * uint256(poolInfo.field_256)) - (uint256(poolInfo.field_512) * rewardPerSec * uint256(poolInfo.field_256)) / stor6:
                                if ext_call.return_data[0] <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_call.return_data[0]
                                if uint256(poolInfo.field_768) + (0 / ext_call.return_data[0]) < uint256(poolInfo.field_768):
                                    revert with 0, 'SafeMath: addition overflow'
                                uint256(poolInfo.field_768) += 0 / ext_call.return_data[0]
                                uint256(poolInfo.field_512) = block.timestamp
                                if userInfo[address(msg.sender)].field_0 <= 0:
                                    if arg1 <= 0:
                                        if not userInfo[address(msg.sender)].field_0:
                                            userInfo[address(msg.sender)].field_256 = 0
                                        else:
                                            require userInfo[address(msg.sender)].field_0
                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                        emit Deposit(arg1, msg.sender);
                                    else:
                                        require ext_code.size(address(poolInfo.field_0))
                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                        if ext_code.size(address(poolInfo.field_0)) <= 0:
                                            revert with 0, 'Address: call to non-contract'
                                        mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                        mem[416 len 4] = 0
                                        mem[388 len 0] = 0
                                        call address(poolInfo.field_0) with:
                                             gas gas_remaining wei
                                            args Mask(224, 32, arg1) << 480, mem[388 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                            if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[402 len 14],
                                                            0,
                                                            mem[420 len 4]
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                        else:
                                            mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size > 0:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeBEP20: low-level call failed'
                                            if return_data.size > 0:
                                                require return_data.size >= 32
                                                if not mem[324]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 403 len 22]
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[ceil32(return_data.size) + 394 len 31]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                        emit Deposit(0, msg.sender);
                                else:
                                    if not userInfo[address(msg.sender)].field_0:
                                        if userInfo[address(msg.sender)].field_256 > 0:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if -userInfo[address(msg.sender)].field_256 <= 0:
                                            if arg1 <= 0:
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[197 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(arg1, msg.sender);
                                            else:
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                                if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                mem[416 len 4] = 0
                                                mem[388 len 0] = 0
                                                call address(poolInfo.field_0) with:
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, arg1) << 480, mem[388 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                                    if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[402 len 14],
                                                                    0,
                                                                    mem[420 len 4]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                else:
                                                    mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size > 0:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeBEP20: low-level call failed'
                                                    if return_data.size > 0:
                                                        require return_data.size >= 32
                                                        if not mem[324]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 403 len 22]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 394 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(0, msg.sender);
                                        else:
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                            if ext_code.size(rewardTokenAddress) <= 0:
                                                revert with 0, 'Address: call to non-contract'
                                            mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, -userInfo[address(msg.sender)].field_256) >> 32
                                            mem[324 len 0] = 0
                                            call rewardTokenAddress with:
                                               funct uint32(msg.sender)
                                                 gas gas_remaining wei
                                                args Mask(224, 32, -userInfo[address(msg.sender)].field_256) << 224, mem[324 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 32, 42, 0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                                if arg1 <= 0:
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(arg1, msg.sender);
                                                else:
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if eth.balance(this.address) < 0:
                                                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                    if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                        revert with 0, 'Address: call to non-contract'
                                                    mem[456 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                    mem[580 len 4] = 0
                                                    call address(poolInfo.field_0) with:
                                                         gas gas_remaining wei
                                                        args arg1, mem[392 len 60], mem[552 len 4]
                                                    if not return_data.size:
                                                        if not ext_call.success:
                                                            revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[566 len 14],
                                                                        0,
                                                                        mem[584 len 4]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    else:
                                                        mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        if not ext_call.success:
                                                            if return_data.size > 0:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            revert with 0, 'SafeBEP20: low-level call failed'
                                                        if return_data.size > 0:
                                                            require return_data.size >= 32
                                                            if not mem[488]:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[ceil32(return_data.size) + 567 len 22]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 558 len 31]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(0, msg.sender);
                                            else:
                                                mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size > 0:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeBEP20: low-level call failed'
                                                if return_data.size > 0:
                                                    require return_data.size >= 32
                                                    if not mem[292]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 371 len 22]
                                                if arg1 <= 0:
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 362 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(arg1, msg.sender);
                                                else:
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if eth.balance(this.address) < 0:
                                                        revert with 0, 
                                                                    32,
                                                                    38,
                                                                    0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                    mem[ceil32(return_data.size) + 563 len 26]
                                                    if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                        revert with 0, 'Address: call to non-contract'
                                                    mem[ceil32(return_data.size) + 457 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                    mem[ceil32(return_data.size) + 581 len 4] = 0
                                                    call address(poolInfo.field_0) with:
                                                         gas gas_remaining wei
                                                        args arg1, mem[ceil32(return_data.size) + 393 len 60], mem[ceil32(return_data.size) + 553 len 4]
                                                    if not return_data.size:
                                                        if not ext_call.success:
                                                            revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 567 len 14],
                                                                        0,
                                                                        mem[ceil32(return_data.size) + 585 len 4]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 558 len 23],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    else:
                                                        mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        if not ext_call.success:
                                                            if return_data.size > 0:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            revert with 0, 'SafeBEP20: low-level call failed'
                                                        if return_data.size > 0:
                                                            require return_data.size >= 32
                                                            if not mem[ceil32(return_data.size) + 489]:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[(2 * ceil32(return_data.size)) + 568 len 22]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[(2 * ceil32(return_data.size)) + 559 len 31]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(0, msg.sender);
                                    else:
                                        require userInfo[address(msg.sender)].field_0
                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if userInfo[address(msg.sender)].field_256 > userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256 <= 0:
                                            if arg1 <= 0:
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[197 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(arg1, msg.sender);
                                            else:
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                                if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                mem[416 len 4] = 0
                                                mem[388 len 0] = 0
                                                call address(poolInfo.field_0) with:
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, arg1) << 480, mem[388 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                                    if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[402 len 14],
                                                                    0,
                                                                    mem[420 len 4]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                else:
                                                    mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size > 0:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeBEP20: low-level call failed'
                                                    if return_data.size > 0:
                                                        require return_data.size >= 32
                                                        if not mem[324]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 403 len 22]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 394 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(0, msg.sender);
                                        else:
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                            if ext_code.size(rewardTokenAddress) <= 0:
                                                revert with 0, 'Address: call to non-contract'
                                            mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256) >> 32
                                            mem[324 len 0] = 0
                                            call rewardTokenAddress with:
                                               funct uint32(msg.sender)
                                                 gas gas_remaining wei
                                                args Mask(224, 32, (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256) << 224, mem[324 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0xa9059cbb(?????), 
                                                                msg.sender,
                                                                (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 32, 42, 0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                                if arg1 <= 0:
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(arg1, msg.sender);
                                                else:
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if eth.balance(this.address) < 0:
                                                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                    if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                        revert with 0, 'Address: call to non-contract'
                                                    mem[456 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                    mem[580 len 4] = 0
                                                    call address(poolInfo.field_0) with:
                                                         gas gas_remaining wei
                                                        args arg1, mem[392 len 60], mem[552 len 4]
                                                    if not return_data.size:
                                                        if not ext_call.success:
                                                            revert with unknown_0xa9059cbb(?????), 
                                                                        msg.sender,
                                                                        (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[566 len 14],
                                                                        0,
                                                                        mem[584 len 4]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    else:
                                                        mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        if not ext_call.success:
                                                            if return_data.size > 0:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            revert with 0, 'SafeBEP20: low-level call failed'
                                                        if return_data.size > 0:
                                                            require return_data.size >= 32
                                                            if not mem[488]:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[ceil32(return_data.size) + 567 len 22]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 558 len 31]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(0, msg.sender);
                                            else:
                                                mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size > 0:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeBEP20: low-level call failed'
                                                if return_data.size <= 0:
                                                    if arg1 <= 0:
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 362 len 31]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                        emit Deposit(arg1, msg.sender);
                                                    else:
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 
                                                                        32,
                                                                        38,
                                                                        0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                        mem[ceil32(return_data.size) + 563 len 26]
                                                        if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[ceil32(return_data.size) + 457 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                        mem[ceil32(return_data.size) + 581 len 4] = 0
                                                        call address(poolInfo.field_0) with:
                                                             gas gas_remaining wei
                                                            args arg1, mem[ceil32(return_data.size) + 393 len 60], mem[ceil32(return_data.size) + 553 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), 
                                                                            msg.sender,
                                                                            (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[ceil32(return_data.size) + 567 len 14],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            require ext_code.size(address(poolInfo.field_0))
                                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            if not userInfo[address(msg.sender)].field_0:
                                                                userInfo[address(msg.sender)].field_256 = 0
                                                            else:
                                                                require userInfo[address(msg.sender)].field_0
                                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 23],
                                                                                0,
                                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                        else:
                                                            mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size > 0:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeBEP20: low-level call failed'
                                                            if return_data.size > 0:
                                                                require return_data.size >= 32
                                                                if not mem[ceil32(return_data.size) + 489]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[(2 * ceil32(return_data.size)) + 568 len 22]
                                                            require ext_code.size(address(poolInfo.field_0))
                                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            if not userInfo[address(msg.sender)].field_0:
                                                                userInfo[address(msg.sender)].field_256 = 0
                                                            else:
                                                                require userInfo[address(msg.sender)].field_0
                                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[(2 * ceil32(return_data.size)) + 559 len 31]
                                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                        emit Deposit(0, msg.sender);
                                                else:
                                                    require return_data.size >= 32
                                                    if not mem[292]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 371 len 22]
                                                    if arg1 <= 0:
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 362 len 31]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                        emit Deposit(arg1, msg.sender);
                                                    else:
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 
                                                                        32,
                                                                        38,
                                                                        0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                        mem[ceil32(return_data.size) + 563 len 26]
                                                        if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[ceil32(return_data.size) + 457 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                        mem[ceil32(return_data.size) + 581 len 4] = 0
                                                        call address(poolInfo.field_0) with:
                                                             gas gas_remaining wei
                                                            args arg1, mem[ceil32(return_data.size) + 393 len 60], mem[ceil32(return_data.size) + 553 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), 
                                                                            msg.sender,
                                                                            (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[ceil32(return_data.size) + 567 len 14],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            require ext_code.size(address(poolInfo.field_0))
                                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            if not userInfo[address(msg.sender)].field_0:
                                                                userInfo[address(msg.sender)].field_256 = 0
                                                            else:
                                                                require userInfo[address(msg.sender)].field_0
                                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 23],
                                                                                0,
                                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                        else:
                                                            mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size > 0:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 
                                                                            'SafeBEP20: low-level call failed',
                                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            if return_data.size > 0:
                                                                require return_data.size >= 32
                                                                if not mem[ceil32(return_data.size) + 489]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                            require ext_code.size(address(poolInfo.field_0))
                                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                revert with 0, 
                                                                            'SafeMath: subtraction overflow',
                                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                                revert with 0, 
                                                                            'SafeMath: addition overflow',
                                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            if not userInfo[address(msg.sender)].field_0:
                                                                userInfo[address(msg.sender)].field_256 = 0
                                                            else:
                                                                require userInfo[address(msg.sender)].field_0
                                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                        emit Deposit(0, msg.sender);
                            else:
                                require (bonusEndTimestamp * rewardPerSec * uint256(poolInfo.field_256)) - (uint256(poolInfo.field_512) * rewardPerSec * uint256(poolInfo.field_256)) / stor6
                                if 10^12 * (bonusEndTimestamp * rewardPerSec * uint256(poolInfo.field_256)) - (uint256(poolInfo.field_512) * rewardPerSec * uint256(poolInfo.field_256)) / stor6 / (bonusEndTimestamp * rewardPerSec * uint256(poolInfo.field_256)) - (uint256(poolInfo.field_512) * rewardPerSec * uint256(poolInfo.field_256)) / stor6 != 10^12:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if ext_call.return_data[0] <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_call.return_data[0]
                                if uint256(poolInfo.field_768) + (10^12 * (bonusEndTimestamp * rewardPerSec * uint256(poolInfo.field_256)) - (uint256(poolInfo.field_512) * rewardPerSec * uint256(poolInfo.field_256)) / stor6 / ext_call.return_data[0]) < uint256(poolInfo.field_768):
                                    revert with 0, 'SafeMath: addition overflow'
                                uint256(poolInfo.field_768) += 10^12 * (bonusEndTimestamp * rewardPerSec * uint256(poolInfo.field_256)) - (uint256(poolInfo.field_512) * rewardPerSec * uint256(poolInfo.field_256)) / stor6 / ext_call.return_data[0]
                                uint256(poolInfo.field_512) = block.timestamp
                                if userInfo[address(msg.sender)].field_0 <= 0:
                                    if arg1 <= 0:
                                        if not userInfo[address(msg.sender)].field_0:
                                            userInfo[address(msg.sender)].field_256 = 0
                                        else:
                                            require userInfo[address(msg.sender)].field_0
                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                        emit Deposit(arg1, msg.sender);
                                    else:
                                        require ext_code.size(address(poolInfo.field_0))
                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                        if ext_code.size(address(poolInfo.field_0)) <= 0:
                                            revert with 0, 'Address: call to non-contract'
                                        mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                        mem[416 len 4] = 0
                                        mem[388 len 0] = 0
                                        call address(poolInfo.field_0) with:
                                             gas gas_remaining wei
                                            args Mask(224, 32, arg1) << 480, mem[388 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                            if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[402 len 14],
                                                            0,
                                                            mem[420 len 4]
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                        else:
                                            mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size > 0:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeBEP20: low-level call failed'
                                            if return_data.size > 0:
                                                require return_data.size >= 32
                                                if not mem[324]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 403 len 22]
                                            require ext_code.size(address(poolInfo.field_0))
                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: subtraction overflow'
                                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if not userInfo[address(msg.sender)].field_0:
                                                userInfo[address(msg.sender)].field_256 = 0
                                            else:
                                                require userInfo[address(msg.sender)].field_0
                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[ceil32(return_data.size) + 394 len 31]
                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                        emit Deposit(0, msg.sender);
                                else:
                                    if not userInfo[address(msg.sender)].field_0:
                                        if userInfo[address(msg.sender)].field_256 > 0:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if -userInfo[address(msg.sender)].field_256 <= 0:
                                            if arg1 <= 0:
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[197 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(arg1, msg.sender);
                                            else:
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                                if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                mem[416 len 4] = 0
                                                call address(poolInfo.field_0) with:
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, arg1) << 480, mem[388 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                                    if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[402 len 14],
                                                                    0,
                                                                    mem[420 len 4]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                else:
                                                    mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size > 0:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeBEP20: low-level call failed'
                                                    if return_data.size > 0:
                                                        require return_data.size >= 32
                                                        if not mem[324]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 403 len 22]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 394 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(0, msg.sender);
                                        else:
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                            if ext_code.size(rewardTokenAddress) <= 0:
                                                revert with 0, 'Address: call to non-contract'
                                            mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, -userInfo[address(msg.sender)].field_256) >> 32
                                            mem[324 len 0] = 0
                                            call rewardTokenAddress with:
                                               funct uint32(msg.sender)
                                                 gas gas_remaining wei
                                                args Mask(224, 32, -userInfo[address(msg.sender)].field_256) << 224, mem[324 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 32, 42, 0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                                if arg1 <= 0:
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(arg1, msg.sender);
                                                else:
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if eth.balance(this.address) < 0:
                                                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                    if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                        revert with 0, 'Address: call to non-contract'
                                                    mem[456 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                    mem[580 len 4] = 0
                                                    call address(poolInfo.field_0) with:
                                                         gas gas_remaining wei
                                                        args arg1, mem[392 len 60], mem[552 len 4]
                                                    if not return_data.size:
                                                        if not ext_call.success:
                                                            revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[566 len 14],
                                                                        0,
                                                                        mem[584 len 4]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    else:
                                                        mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        if not ext_call.success:
                                                            if return_data.size > 0:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            revert with 0, 'SafeBEP20: low-level call failed'
                                                        if return_data.size > 0:
                                                            require return_data.size >= 32
                                                            if not mem[488]:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[ceil32(return_data.size) + 567 len 22]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 558 len 31]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(0, msg.sender);
                                            else:
                                                mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size > 0:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeBEP20: low-level call failed'
                                                if return_data.size <= 0:
                                                    if arg1 <= 0:
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 362 len 31]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                        emit Deposit(arg1, msg.sender);
                                                    else:
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 
                                                                        32,
                                                                        38,
                                                                        0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                        mem[ceil32(return_data.size) + 563 len 26]
                                                        if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[ceil32(return_data.size) + 457 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                        mem[ceil32(return_data.size) + 581 len 4] = 0
                                                        call address(poolInfo.field_0) with:
                                                             gas gas_remaining wei
                                                            args arg1, mem[ceil32(return_data.size) + 393 len 60], mem[ceil32(return_data.size) + 553 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[ceil32(return_data.size) + 567 len 14],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            require ext_code.size(address(poolInfo.field_0))
                                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            if not userInfo[address(msg.sender)].field_0:
                                                                userInfo[address(msg.sender)].field_256 = 0
                                                            else:
                                                                require userInfo[address(msg.sender)].field_0
                                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 23],
                                                                                0,
                                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                        else:
                                                            mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size > 0:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 
                                                                            'SafeBEP20: low-level call failed',
                                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            if return_data.size > 0:
                                                                require return_data.size >= 32
                                                                if not mem[ceil32(return_data.size) + 489]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                            require ext_code.size(address(poolInfo.field_0))
                                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                revert with 0, 
                                                                            'SafeMath: subtraction overflow',
                                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                                revert with 0, 
                                                                            'SafeMath: addition overflow',
                                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            if not userInfo[address(msg.sender)].field_0:
                                                                userInfo[address(msg.sender)].field_256 = 0
                                                            else:
                                                                require userInfo[address(msg.sender)].field_0
                                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                        emit Deposit(0, msg.sender);
                                                else:
                                                    require return_data.size >= 32
                                                    if not mem[292]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 371 len 22]
                                                    if arg1 <= 0:
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 362 len 31]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                        emit Deposit(arg1, msg.sender);
                                                    else:
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 
                                                                        32,
                                                                        38,
                                                                        0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                        mem[ceil32(return_data.size) + 563 len 26]
                                                        if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[ceil32(return_data.size) + 457 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                        mem[ceil32(return_data.size) + 581 len 4] = 0
                                                        call address(poolInfo.field_0) with:
                                                             gas gas_remaining wei
                                                            args arg1, mem[ceil32(return_data.size) + 393 len 60], mem[ceil32(return_data.size) + 553 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[address(msg.sender)].field_256
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[ceil32(return_data.size) + 567 len 14],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            require ext_code.size(address(poolInfo.field_0))
                                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            if not userInfo[address(msg.sender)].field_0:
                                                                userInfo[address(msg.sender)].field_256 = 0
                                                            else:
                                                                require userInfo[address(msg.sender)].field_0
                                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 23],
                                                                                0,
                                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                        else:
                                                            mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size > 0:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeBEP20: low-level call failed'
                                                            if return_data.size > 0:
                                                                require return_data.size >= 32
                                                                if not mem[ceil32(return_data.size) + 489]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[(2 * ceil32(return_data.size)) + 568 len 22]
                                                            require ext_code.size(address(poolInfo.field_0))
                                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            if not userInfo[address(msg.sender)].field_0:
                                                                userInfo[address(msg.sender)].field_256 = 0
                                                            else:
                                                                require userInfo[address(msg.sender)].field_0
                                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[(2 * ceil32(return_data.size)) + 559 len 31]
                                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                        emit Deposit(0, msg.sender);
                                    else:
                                        require userInfo[address(msg.sender)].field_0
                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if userInfo[address(msg.sender)].field_256 > userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256 <= 0:
                                            if arg1 <= 0:
                                                if not userInfo[address(msg.sender)].field_0:
                                                    userInfo[address(msg.sender)].field_256 = 0
                                                else:
                                                    require userInfo[address(msg.sender)].field_0
                                                    if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[197 len 31]
                                                    userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(arg1, msg.sender);
                                            else:
                                                require ext_code.size(address(poolInfo.field_0))
                                                staticcall address(poolInfo.field_0).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                                if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                mem[416 len 4] = 0
                                                call address(poolInfo.field_0) with:
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, arg1) << 480, mem[388 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg1
                                                    if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[402 len 14],
                                                                    0,
                                                                    mem[420 len 4]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                else:
                                                    mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size > 0:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeBEP20: low-level call failed'
                                                    if return_data.size > 0:
                                                        require return_data.size >= 32
                                                        if not mem[324]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 403 len 22]
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                    if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 394 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                emit Deposit(0, msg.sender);
                                        else:
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                            if ext_code.size(rewardTokenAddress) <= 0:
                                                revert with 0, 'Address: call to non-contract'
                                            mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256) >> 32
                                            mem[324 len 0] = 0
                                            call rewardTokenAddress with:
                                               funct uint32(msg.sender)
                                                 gas gas_remaining wei
                                                args Mask(224, 32, (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256) << 224, mem[324 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0xa9059cbb(?????), 
                                                                msg.sender,
                                                                (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 32, 42, 0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                                if arg1 <= 0:
                                                    if not userInfo[address(msg.sender)].field_0:
                                                        userInfo[address(msg.sender)].field_256 = 0
                                                    else:
                                                        require userInfo[address(msg.sender)].field_0
                                                        if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                        userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(arg1, msg.sender);
                                                else:
                                                    require ext_code.size(address(poolInfo.field_0))
                                                    staticcall address(poolInfo.field_0).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if eth.balance(this.address) < 0:
                                                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                    if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                        revert with 0, 'Address: call to non-contract'
                                                    mem[456 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                    mem[580 len 4] = 0
                                                    call address(poolInfo.field_0) with:
                                                         gas gas_remaining wei
                                                        args arg1, mem[392 len 60], mem[552 len 4]
                                                    if not return_data.size:
                                                        if not ext_call.success:
                                                            revert with unknown_0xa9059cbb(?????), 
                                                                        msg.sender,
                                                                        (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[566 len 14],
                                                                        0,
                                                                        mem[584 len 4]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    else:
                                                        mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        if not ext_call.success:
                                                            if return_data.size > 0:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            revert with 0, 'SafeBEP20: low-level call failed'
                                                        if return_data.size > 0:
                                                            require return_data.size >= 32
                                                            if not mem[488]:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[ceil32(return_data.size) + 567 len 22]
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 558 len 31]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                    emit Deposit(0, msg.sender);
                                            else:
                                                mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size > 0:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeBEP20: low-level call failed'
                                                if return_data.size <= 0:
                                                    if arg1 <= 0:
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 362 len 31]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                        emit Deposit(arg1, msg.sender);
                                                    else:
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 
                                                                        32,
                                                                        38,
                                                                        0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                        mem[ceil32(return_data.size) + 563 len 26]
                                                        if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[ceil32(return_data.size) + 457 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                        mem[ceil32(return_data.size) + 581 len 4] = 0
                                                        call address(poolInfo.field_0) with:
                                                             gas gas_remaining wei
                                                            args arg1, mem[ceil32(return_data.size) + 393 len 60], mem[ceil32(return_data.size) + 553 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), 
                                                                            msg.sender,
                                                                            (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[ceil32(return_data.size) + 567 len 14],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            require ext_code.size(address(poolInfo.field_0))
                                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            if not userInfo[address(msg.sender)].field_0:
                                                                userInfo[address(msg.sender)].field_256 = 0
                                                            else:
                                                                require userInfo[address(msg.sender)].field_0
                                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 23],
                                                                                0,
                                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                        else:
                                                            mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size > 0:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeBEP20: low-level call failed'
                                                            if return_data.size > 0:
                                                                require return_data.size >= 32
                                                                if not mem[ceil32(return_data.size) + 489]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[(2 * ceil32(return_data.size)) + 568 len 22]
                                                            require ext_code.size(address(poolInfo.field_0))
                                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            if not userInfo[address(msg.sender)].field_0:
                                                                userInfo[address(msg.sender)].field_256 = 0
                                                            else:
                                                                require userInfo[address(msg.sender)].field_0
                                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[(2 * ceil32(return_data.size)) + 559 len 31]
                                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                        emit Deposit(0, msg.sender);
                                                else:
                                                    require return_data.size >= 32
                                                    if not mem[292]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 371 len 22]
                                                    if arg1 <= 0:
                                                        if not userInfo[address(msg.sender)].field_0:
                                                            userInfo[address(msg.sender)].field_256 = 0
                                                        else:
                                                            require userInfo[address(msg.sender)].field_0
                                                            if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 362 len 31]
                                                            userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                        emit Deposit(arg1, msg.sender);
                                                    else:
                                                        require ext_code.size(address(poolInfo.field_0))
                                                        staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 
                                                                        32,
                                                                        38,
                                                                        0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                        mem[ceil32(return_data.size) + 563 len 26]
                                                        if ext_code.size(address(poolInfo.field_0)) <= 0:
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[ceil32(return_data.size) + 457 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg1) >> 32
                                                        mem[ceil32(return_data.size) + 581 len 4] = 0
                                                        call address(poolInfo.field_0) with:
                                                             gas gas_remaining wei
                                                            args arg1, mem[ceil32(return_data.size) + 393 len 60], mem[ceil32(return_data.size) + 553 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), 
                                                                            msg.sender,
                                                                            (userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12) - userInfo[address(msg.sender)].field_256
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[ceil32(return_data.size) + 567 len 14],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            require ext_code.size(address(poolInfo.field_0))
                                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            if not userInfo[address(msg.sender)].field_0:
                                                                userInfo[address(msg.sender)].field_256 = 0
                                                            else:
                                                                require userInfo[address(msg.sender)].field_0
                                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 23],
                                                                                0,
                                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                        else:
                                                            mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size > 0:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 
                                                                            'SafeBEP20: low-level call failed',
                                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            if return_data.size > 0:
                                                                require return_data.size >= 32
                                                                if not mem[ceil32(return_data.size) + 489]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0xfe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                            require ext_code.size(address(poolInfo.field_0))
                                                            staticcall address(poolInfo.field_0).0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                revert with 0, 
                                                                            'SafeMath: subtraction overflow',
                                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            if userInfo[address(msg.sender)].field_0 < userInfo[address(msg.sender)].field_0:
                                                                revert with 0, 
                                                                            'SafeMath: addition overflow',
                                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            if not userInfo[address(msg.sender)].field_0:
                                                                userInfo[address(msg.sender)].field_256 = 0
                                                            else:
                                                                require userInfo[address(msg.sender)].field_0
                                                                if userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / userInfo[address(msg.sender)].field_0 != uint256(poolInfo.field_768):
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                                userInfo[address(msg.sender)].field_256 = userInfo[address(msg.sender)].field_0 * uint256(poolInfo.field_768) / 10^12
                                                        emit Deposit(0, msg.sender);
    stor1 = 1
}



}
