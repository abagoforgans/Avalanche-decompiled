contract main {




// =====================  Runtime code  =====================


#
#  - sub_1f1db043(?)
#
const timestamp = (168 * 24 * 3600 * block.timestamp / 168 * 24 * 3600)


uint256 start_time;
uint256 time_cursor;
mapping of uint256 sub_486d25fe;
mapping of uint256 sub_16aea5c0;
uint256 last_token_time;
array of uint256 sub_edf59997;
address voting_escrowAddress;
address tokenAddress;
uint256 token_last_balance;
array of uint256 sub_d4dafba8;
address depositorAddress;

function time_cursor() payable {
    return time_cursor
}

function sub_16aea5c0(?) payable {
    require calldata.size - 4 >= 32
    return sub_16aea5c0[arg1]
}

function token_last_balance() payable {
    return token_last_balance
}

function sub_486d25fe(?) payable {
    require calldata.size - 4 >= 32
    return sub_486d25fe[arg1]
}

function last_token_time() payable {
    return last_token_time
}

function start_time() payable {
    return start_time
}

function depositor() payable {
    return depositorAddress
}

function sub_d4dafba8(?) payable {
    require calldata.size - 4 >= 32
    require arg1 < 10^15
    return sub_d4dafba8[arg1]
}

function voting_escrow() payable {
    return voting_escrowAddress
}

function sub_edf59997(?) payable {
    require calldata.size - 4 >= 32
    require arg1 < 10^15
    return sub_edf59997[arg1]
}

function token() payable {
    return tokenAddress
}

function _fallback() payable {
    revert
}

function setDepositor(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    require msg.sender == depositorAddress
    depositorAddress = arg1
}

function checkpoint_token() payable {
    if depositorAddress != msg.sender:
        revert with 0, 1
    staticcall tokenAddress.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] < token_last_balance:
        revert with 0, 17
    token_last_balance = ext_call.return_data[0]
    if block.timestamp < last_token_time:
        revert with 0, 17
    last_token_time = block.timestamp
    if last_token_time / 168 * 24 * 3600 and 168 * 24 * 3600 > -1 / last_token_time / 168 * 24 * 3600:
        revert with 0, 17
    idx = 0
    s = 0
    s = 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600
    t = last_token_time
    while idx < 20:
        if s > -604801:
            revert with 0, 17
        if block.timestamp >= s + (168 * 24 * 3600):
            if block.timestamp - last_token_time:
                if s + (168 * 24 * 3600) < t:
                    revert with 0, 17
                if ext_call.return_data[0] - token_last_balance and s + -t + (168 * 24 * 3600) > -1 / ext_call.return_data[0] - token_last_balance:
                    revert with 0, 17
                if not block.timestamp - last_token_time:
                    revert with 0, 18
                if s >= 10^15:
                    revert with 0, 50
                if sub_edf59997[s] > !((168 * 24 * 3600 * ext_call.return_data[0]) + (s * ext_call.return_data[0]) - (t * ext_call.return_data[0]) - (168 * 24 * 3600 * token_last_balance) - (s * token_last_balance) + (t * token_last_balance) / block.timestamp - last_token_time):
                    revert with 0, 17
                sub_edf59997[s] += (168 * 24 * 3600 * ext_call.return_data[0]) + (s * ext_call.return_data[0]) - (t * ext_call.return_data[0]) - (168 * 24 * 3600 * token_last_balance) - (s * token_last_balance) + (t * token_last_balance) / block.timestamp - last_token_time
            else:
                if s + (168 * 24 * 3600) == t:
                    if s >= 10^15:
                        revert with 0, 50
                    if sub_edf59997[s] > !(ext_call.return_data[0] - token_last_balance):
                        revert with 0, 17
                    sub_edf59997[s] = sub_edf59997[s] + ext_call.return_data[0] - token_last_balance
                else:
                    if s + (168 * 24 * 3600) < t:
                        revert with 0, 17
                    if ext_call.return_data[0] - token_last_balance and s + -t + (168 * 24 * 3600) > -1 / ext_call.return_data[0] - token_last_balance:
                        revert with 0, 17
                    if not block.timestamp - last_token_time:
                        revert with 0, 18
                    if s >= 10^15:
                        revert with 0, 50
                    if sub_edf59997[s] > !((168 * 24 * 3600 * ext_call.return_data[0]) + (s * ext_call.return_data[0]) - (t * ext_call.return_data[0]) - (168 * 24 * 3600 * token_last_balance) - (s * token_last_balance) + (t * token_last_balance) / block.timestamp - last_token_time):
                        revert with 0, 17
                    sub_edf59997[s] += (168 * 24 * 3600 * ext_call.return_data[0]) + (s * ext_call.return_data[0]) - (t * ext_call.return_data[0]) - (168 * 24 * 3600 * token_last_balance) - (s * token_last_balance) + (t * token_last_balance) / block.timestamp - last_token_time
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s + (168 * 24 * 3600)
            s = s + (168 * 24 * 3600)
            t = s + (168 * 24 * 3600)
            continue 
        if block.timestamp - last_token_time:
            if block.timestamp < t:
                revert with 0, 17
            if ext_call.return_data[0] - token_last_balance and block.timestamp - t > -1 / ext_call.return_data[0] - token_last_balance:
                revert with 0, 17
            if not block.timestamp - last_token_time:
                revert with 0, 18
            if s >= 10^15:
                revert with 0, 50
            if sub_edf59997[s] > !((block.timestamp * ext_call.return_data[0]) - (t * ext_call.return_data[0]) - (block.timestamp * token_last_balance) + (t * token_last_balance) / block.timestamp - last_token_time):
                revert with 0, 17
            sub_edf59997[s] += (block.timestamp * ext_call.return_data[0]) - (t * ext_call.return_data[0]) - (block.timestamp * token_last_balance) + (t * token_last_balance) / block.timestamp - last_token_time
        else:
            if block.timestamp == t:
                if s >= 10^15:
                    revert with 0, 50
                if sub_edf59997[s] > !(ext_call.return_data[0] - token_last_balance):
                    revert with 0, 17
                sub_edf59997[s] = sub_edf59997[s] + ext_call.return_data[0] - token_last_balance
            else:
                if block.timestamp < t:
                    revert with 0, 17
                if ext_call.return_data[0] - token_last_balance and block.timestamp - t > -1 / ext_call.return_data[0] - token_last_balance:
                    revert with 0, 17
                if not block.timestamp - last_token_time:
                    revert with 0, 18
                if s >= 10^15:
                    revert with 0, 50
                if sub_edf59997[s] > !((block.timestamp * ext_call.return_data[0]) - (t * ext_call.return_data[0]) - (block.timestamp * token_last_balance) + (t * token_last_balance) / block.timestamp - last_token_time):
                    revert with 0, 17
                sub_edf59997[s] += (block.timestamp * ext_call.return_data[0]) - (t * ext_call.return_data[0]) - (block.timestamp * token_last_balance) + (t * token_last_balance) / block.timestamp - last_token_time
        emit CheckpointToken(block.timestamp, ext_call.return_data[0] - token_last_balance);
    emit CheckpointToken(block.timestamp, ext_call.return_data[0] - token_last_balance);
}

function ve_for_at(uint256 arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    mem[100] = arg1
    staticcall voting_escrowAddress.user_point_epoch(uint256 arg1) with:
            gas gas_remaining wei
           args arg1
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    mem[64] = ceil32(return_data.size) + 96
    require return_data.size >= 32
    idx = 0
    s = 0
    while idx < 128:
        if s < ext_call.return_data[0]:
            if s > !ext_call.return_data[0]:
                revert with 0, 17
            if 2 > !(s + ext_call.return_data[0]):
                revert with 0, 17
            staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                    gas gas_remaining wei
                   args arg1, s + ext_call.return_data[0] + 2 / 2
            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _44 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 128
            _47 = mem[64]
            if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 128
            require mem[_44] == ('signextend', 15, ('mem', ('range', ('var', '_44'), 32)))
            mem[_47] = mem[_44]
            require mem[_44 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_44')), 32)))
            mem[_47 + 32] = mem[_44 + 32]
            mem[_47 + 64] = mem[_44 + 64]
            mem[_47 + 96] = mem[_44 + 96]
            if mem[_47 + 64] <= arg2:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ext_call.return_data[0] + 2 / 2
                continue 
            if s + ext_call.return_data[0] + 2 / 2 < 1:
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s
            continue 
        staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                gas gas_remaining wei
               args arg1, s
        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _35 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 128
        _37 = mem[64]
        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 128
        require mem[_35] == ('signextend', 15, ('mem', ('range', ('var', '_35'), 32)))
        mem[_37] = mem[_35]
        require mem[_35 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_35')), 32)))
        mem[_37 + 32] = mem[_35 + 32]
        mem[_37 + 64] = mem[_35 + 64]
        mem[_37 + 96] = mem[_35 + 96]
        if arg2 < mem[_37 + 64]:
            revert with 0, 17
        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_37')), 32))) > 0 and ('signextend', 15, ('add', ('param', 'arg2'), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_37')), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_37')), 32))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('add', ('param', 'arg2'), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_37')), 32))))):
            revert with 0, 17
        if ('signextend', 15, ('add', ('param', 'arg2'), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_37')), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_37')), 32))) and ('signextend', 15, ('add', ('param', 'arg2'), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_37')), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_37')), 32))) > 0:
            revert with 0, 17
        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_37')), 32))) < 0 and ('signextend', 15, ('add', ('param', 'arg2'), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_37')), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_37')), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('param', 'arg2'), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_37')), 32))))):
            revert with 0, 17
        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_37')), 32))) < 0 and ('signextend', 15, ('add', ('param', 'arg2'), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_37')), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_37')), 32))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('add', ('param', 'arg2'), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_37')), 32))))):
            revert with 0, 17
        if ('signextend', 15, ('mul', ('signextend', 15, ('add', ('param', 'arg2'), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_37')), 32))))), ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_37')), 32))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', '_37'), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('add', ('param', 'arg2'), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_37')), 32))))), ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_37')), 32))))) - 0x80000000000000000000000000000000:
            revert with 0, 17
        if ('signextend', 15, ('mul', ('signextend', 15, ('add', ('param', 'arg2'), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_37')), 32))))), ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_37')), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', '_37'), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('add', ('param', 'arg2'), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_37')), 32))))), ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_37')), 32))))) + 0x7fffffffffffffffffffffffffffffff:
            revert with 0, 17
        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', '_37'), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('add', ('param', 'arg2'), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_37')), 32))))), ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_37')), 32)))))))) < 0:
            return 0
        mem[mem[64]] = ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', '_37'), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('add', ('param', 'arg2'), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_37')), 32))))), ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_37')), 32))))))))
        return memory
          from mem[64]
           len 32
    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
            gas gas_remaining wei
           args arg1, s
    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _31 = mem[64]
    mem[64] = mem[64] + ceil32(return_data.size)
    require return_data.size >= 128
    _34 = mem[64]
    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
        revert with 0, 65
    mem[64] = mem[64] + 128
    require mem[_31] == ('signextend', 15, ('mem', ('range', ('var', '_31'), 32)))
    mem[_34] = mem[_31]
    require mem[_31 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_31')), 32)))
    mem[_34 + 32] = mem[_31 + 32]
    mem[_34 + 64] = mem[_31 + 64]
    mem[_34 + 96] = mem[_31 + 96]
    if arg2 < mem[_34 + 64]:
        revert with 0, 17
    if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_34')), 32))) > 0 and ('signextend', 15, ('add', ('param', 'arg2'), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_34')), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_34')), 32))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('add', ('param', 'arg2'), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_34')), 32))))):
        revert with 0, 17
    if ('signextend', 15, ('add', ('param', 'arg2'), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_34')), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_34')), 32))) and ('signextend', 15, ('add', ('param', 'arg2'), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_34')), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_34')), 32))) > 0:
        revert with 0, 17
    if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_34')), 32))) < 0 and ('signextend', 15, ('add', ('param', 'arg2'), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_34')), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_34')), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('param', 'arg2'), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_34')), 32))))):
        revert with 0, 17
    if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_34')), 32))) < 0 and ('signextend', 15, ('add', ('param', 'arg2'), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_34')), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_34')), 32))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('add', ('param', 'arg2'), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_34')), 32))))):
        revert with 0, 17
    if ('signextend', 15, ('mul', ('signextend', 15, ('add', ('param', 'arg2'), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_34')), 32))))), ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_34')), 32))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', '_34'), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('add', ('param', 'arg2'), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_34')), 32))))), ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_34')), 32))))) - 0x80000000000000000000000000000000:
        revert with 0, 17
    if ('signextend', 15, ('mul', ('signextend', 15, ('add', ('param', 'arg2'), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_34')), 32))))), ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_34')), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', '_34'), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('add', ('param', 'arg2'), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_34')), 32))))), ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_34')), 32))))) + 0x7fffffffffffffffffffffffffffffff:
        revert with 0, 17
    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', '_34'), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('add', ('param', 'arg2'), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_34')), 32))))), ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_34')), 32)))))))) < 0:
        return 0
    mem[mem[64]] = ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', '_34'), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('add', ('param', 'arg2'), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_34')), 32))))), ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_34')), 32))))))))
    return memory
      from mem[64]
       len 32
}

function checkpoint_total_supply() payable {
    mem[64] = 96
    if block.timestamp / 168 * 24 * 3600 and 168 * 24 * 3600 > -1 / block.timestamp / 168 * 24 * 3600:
        revert with 0, 17
    mem[96] = 0xc2c4c5c100000000000000000000000000000000000000000000000000000000
    require ext_code.size(voting_escrowAddress)
    call voting_escrowAddress.checkpoint() with:
         gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    idx = 0
    s = time_cursor
    while idx < 20:
        if s > 168 * 24 * 3600 * block.timestamp / 168 * 24 * 3600:
            time_cursor = s
        staticcall voting_escrowAddress.0x900cf0cf with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _32 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _33 = mem[_32]
        t = 0
        u = 0
        while t < 128:
            if u < _33:
                if u > !_33:
                    revert with 0, 17
                if 2 > !(u + _33):
                    revert with 0, 17
                staticcall voting_escrowAddress.point_history(uint256 arg1) with:
                        gas gas_remaining wei
                       args Mask(255, 1, u + _33 + 2)
                mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _72 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 128
                _77 = mem[64]
                if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                    revert with 0, 65
                mem[64] = mem[64] + 128
                require mem[_72] == ('signextend', 15, ('mem', ('range', ('var', '_72'), 32)))
                mem[_77] = mem[_72]
                require mem[_72 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_72')), 32)))
                mem[_77 + 32] = mem[_72 + 32]
                mem[_77 + 64] = mem[_72 + 64]
                mem[_77 + 96] = mem[_72 + 96]
                if mem[_77 + 64] <= s:
                    if t == -1:
                        revert with 0, 17
                    t = t + 1
                    u = u + _33 + 2 / 2
                    continue 
                if u + _33 + 2 / 2 < 1:
                    revert with 0, 17
                if t == -1:
                    revert with 0, 17
                t = t + 1
                u = u
                continue 
            staticcall voting_escrowAddress.point_history(uint256 arg1) with:
                    gas gas_remaining wei
                   args u
            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _63 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 128
            _65 = mem[64]
            if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 128
            require mem[_63] == ('signextend', 15, ('mem', ('range', ('var', '_63'), 32)))
            mem[_65] = mem[_63]
            require mem[_63 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_63')), 32)))
            mem[_65 + 32] = mem[_63 + 32]
            mem[_65 + 64] = mem[_63 + 64]
            mem[_65 + 96] = mem[_63 + 96]
            if s <= mem[_65 + 64]:
                if ('signextend', 15, ('mem', ('range', ('var', '_65'), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000:
                    revert with 0, 17
                if s >= 10^15:
                    revert with 0, 50
                if ('signextend', 15, ('signextend', 15, ('mem', ('range', ('var', '_65'), 32)))) >= 0:
                    sub_d4dafba8[s] = ('signextend', 15, ('signextend', 15, ('mem', ('range', ('var', '_65'), 32))))
                else:
                    sub_d4dafba8[s] = 0
            else:
                if s < mem[_65 + 64]:
                    revert with 0, 17
                if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_65')), 32))) > 0 and ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_65')), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_65')), 32))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_65')), 32))))):
                    revert with 0, 17
                if ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_65')), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_65')), 32))) and ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_65')), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_65')), 32))) > 0:
                    revert with 0, 17
                if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_65')), 32))) < 0 and ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_65')), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_65')), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_65')), 32))))):
                    revert with 0, 17
                if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_65')), 32))) < 0 and ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_65')), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_65')), 32))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_65')), 32))))):
                    revert with 0, 17
                if ('signextend', 15, ('mul', ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_65')), 32))))), ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_65')), 32))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', '_65'), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_65')), 32))))), ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_65')), 32))))) - 0x80000000000000000000000000000000:
                    revert with 0, 17
                if ('signextend', 15, ('mul', ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_65')), 32))))), ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_65')), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', '_65'), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_65')), 32))))), ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_65')), 32))))) + 0x7fffffffffffffffffffffffffffffff:
                    revert with 0, 17
                if s >= 10^15:
                    revert with 0, 50
                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', '_65'), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_65')), 32))))), ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_65')), 32)))))))) >= 0:
                    sub_d4dafba8[s] = ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', '_65'), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_65')), 32))))), ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_65')), 32))))))))
                else:
                    sub_d4dafba8[s] = 0
            if s > -604801:
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s + (168 * 24 * 3600)
            continue 
        staticcall voting_escrowAddress.point_history(uint256 arg1) with:
                gas gas_remaining wei
               args u
        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _59 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 128
        _62 = mem[64]
        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 128
        require mem[_59] == ('signextend', 15, ('mem', ('range', ('var', '_59'), 32)))
        mem[_62] = mem[_59]
        require mem[_59 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_59')), 32)))
        mem[_62 + 32] = mem[_59 + 32]
        mem[_62 + 64] = mem[_59 + 64]
        mem[_62 + 96] = mem[_59 + 96]
        if s <= mem[_62 + 64]:
            if ('signextend', 15, ('mem', ('range', ('var', '_62'), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000:
                revert with 0, 17
            if s >= 10^15:
                revert with 0, 50
            if ('signextend', 15, ('signextend', 15, ('mem', ('range', ('var', '_62'), 32)))) >= 0:
                sub_d4dafba8[s] = ('signextend', 15, ('signextend', 15, ('mem', ('range', ('var', '_62'), 32))))
            else:
                sub_d4dafba8[s] = 0
        else:
            if s < mem[_62 + 64]:
                revert with 0, 17
            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_62')), 32))) > 0 and ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_62')), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_62')), 32))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_62')), 32))))):
                revert with 0, 17
            if ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_62')), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_62')), 32))) and ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_62')), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_62')), 32))) > 0:
                revert with 0, 17
            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_62')), 32))) < 0 and ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_62')), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_62')), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_62')), 32))))):
                revert with 0, 17
            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_62')), 32))) < 0 and ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_62')), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_62')), 32))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_62')), 32))))):
                revert with 0, 17
            if ('signextend', 15, ('mul', ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_62')), 32))))), ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_62')), 32))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', '_62'), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_62')), 32))))), ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_62')), 32))))) - 0x80000000000000000000000000000000:
                revert with 0, 17
            if ('signextend', 15, ('mul', ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_62')), 32))))), ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_62')), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', '_62'), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_62')), 32))))), ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_62')), 32))))) + 0x7fffffffffffffffffffffffffffffff:
                revert with 0, 17
            if s >= 10^15:
                revert with 0, 50
            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', '_62'), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_62')), 32))))), ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_62')), 32)))))))) >= 0:
                sub_d4dafba8[s] = ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', '_62'), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_62')), 32))))), ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_62')), 32))))))))
            else:
                sub_d4dafba8[s] = 0
        if s > -604801:
            revert with 0, 17
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        s = s + (168 * 24 * 3600)
        continue 
    time_cursor = s
}

function claimable(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if last_token_time / 168 * 24 * 3600 and 168 * 24 * 3600 > -1 / last_token_time / 168 * 24 * 3600:
        revert with 0, 17
    mem[100] = arg1
    staticcall voting_escrowAddress.user_point_epoch(uint256 arg1) with:
            gas gas_remaining wei
           args arg1
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    mem[64] = ceil32(return_data.size) + 96
    require return_data.size >= 32
    if ext_call.return_data[0]:
        mem[0] = arg1
        mem[32] = 2
        if sub_486d25fe[arg1]:
            mem[0] = arg1
            mem[32] = 3
            if sub_16aea5c0[arg1]:
                staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                        gas gas_remaining wei
                       args arg1, sub_16aea5c0[arg1]
                mem[ceil32(return_data.size) + 96 len 128] = ext_call.return_data[0 len 128]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 128
                if not bool((2 * ceil32(return_data.size)) + 224 <= test266151307()):
                    revert with 0, 65
                require ext_call.return_data[0] == ('signextend', 15, ('ext_call.return_data', 0, 32))
                mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                require ext_call.return_data[32] == ('signextend', 15, ('ext_call.return_data', 32, 32))
                mem[(2 * ceil32(return_data.size)) + 128] = ext_call.return_data[32]
                mem[(2 * ceil32(return_data.size)) + 160] = ext_call.return_data[64]
                mem[(2 * ceil32(return_data.size)) + 192] = ext_call.return_data[96]
                if sub_486d25fe[arg1]:
                    if sub_486d25fe[arg1] < last_token_time:
                        mem[64] = (2 * ceil32(return_data.size)) + 352
                        mem[(2 * ceil32(return_data.size)) + 224] = 0
                        mem[(2 * ceil32(return_data.size)) + 256] = 0
                        mem[(2 * ceil32(return_data.size)) + 288] = 0
                        mem[(2 * ceil32(return_data.size)) + 320] = 0
                        if sub_486d25fe[arg1] >= start_time:
                            idx = 0
                            s = (2 * ceil32(return_data.size)) + 224
                            t = (2 * ceil32(return_data.size)) + 96
                            u = sub_16aea5c0[arg1]
                            while idx < 50:
                                if sub_486d25fe[arg1] >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                    return 0
                                if sub_486d25fe[arg1] < mem[t + 64]:
                                    if sub_486d25fe[arg1] < mem[s + 64]:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                        if u > ext_call.return_data[0]:
                                            return 0
                                    else:
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if sub_486d25fe[arg1] >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor2[arg1]]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                    if sub_486d25fe[arg1] > -604801:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s
                                    t = t
                                    u = u
                                    continue 
                                if u > ext_call.return_data[0]:
                                    if sub_486d25fe[arg1] < mem[s + 64]:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                        if u > ext_call.return_data[0]:
                                            return 0
                                    else:
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if sub_486d25fe[arg1] >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor2[arg1]]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                    if sub_486d25fe[arg1] > -604801:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s
                                    t = t
                                    u = u
                                    continue 
                                if u + 1 > ext_call.return_data[0]:
                                    _469 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_469] = 0
                                    mem[_469 + 32] = 0
                                    mem[_469 + 64] = 0
                                    mem[_469 + 96] = 0
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = t
                                    t = _469
                                    u = u + 1
                                    continue 
                                staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                        gas gas_remaining wei
                                       args arg1, u + 1
                                mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _493 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 128
                                _506 = mem[64]
                                if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                    revert with 0, 65
                                mem[64] = mem[64] + 128
                                require mem[_493] == ('signextend', 15, ('mem', ('range', ('var', '_493'), 32)))
                                mem[_506] = mem[_493]
                                require mem[_493 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_493')), 32)))
                                mem[_506 + 32] = mem[_493 + 32]
                                mem[_506 + 64] = mem[_493 + 64]
                                mem[_506 + 96] = mem[_493 + 96]
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = t
                                t = _506
                                u = u + 1
                                continue 
                        else:
                            idx = 0
                            s = (2 * ceil32(return_data.size)) + 224
                            t = (2 * ceil32(return_data.size)) + 96
                            u = sub_16aea5c0[arg1]
                            while idx < 50:
                                if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                    return 0
                                if start_time < mem[t + 64]:
                                    if start_time < mem[s + 64]:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                        if u > ext_call.return_data[0]:
                                            return 0
                                    else:
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                    if start_time > -604801:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s
                                    t = t
                                    u = u
                                    continue 
                                if u > ext_call.return_data[0]:
                                    if start_time < mem[s + 64]:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                        if u > ext_call.return_data[0]:
                                            return 0
                                    else:
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                    if start_time > -604801:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s
                                    t = t
                                    u = u
                                    continue 
                                if u + 1 > ext_call.return_data[0]:
                                    _472 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_472] = 0
                                    mem[_472 + 32] = 0
                                    mem[_472 + 64] = 0
                                    mem[_472 + 96] = 0
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = t
                                    t = _472
                                    u = u + 1
                                    continue 
                                staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                        gas gas_remaining wei
                                       args arg1, u + 1
                                mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _494 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 128
                                _507 = mem[64]
                                if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                    revert with 0, 65
                                mem[64] = mem[64] + 128
                                require mem[_494] == ('signextend', 15, ('mem', ('range', ('var', '_494'), 32)))
                                mem[_507] = mem[_494]
                                require mem[_494 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_494')), 32)))
                                mem[_507 + 32] = mem[_494 + 32]
                                mem[_507 + 64] = mem[_494 + 64]
                                mem[_507 + 96] = mem[_494 + 96]
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = t
                                t = _507
                                u = u + 1
                                continue 
                else:
                    if ext_call.return_data[64] > -604801:
                        revert with 0, 17
                    if ext_call.return_data[64] + (168 * 24 * 3600) < 1:
                        revert with 0, 17
                    if ext_call.return_data[64] + 604799 / 168 * 24 * 3600 and 168 * 24 * 3600 > -1 / ext_call.return_data[64] + 604799 / 168 * 24 * 3600:
                        revert with 0, 17
                    if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 < last_token_time:
                        mem[64] = (2 * ceil32(return_data.size)) + 352
                        mem[(2 * ceil32(return_data.size)) + 224] = 0
                        mem[(2 * ceil32(return_data.size)) + 256] = 0
                        mem[(2 * ceil32(return_data.size)) + 288] = 0
                        mem[(2 * ceil32(return_data.size)) + 320] = 0
                        if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 >= start_time:
                            idx = 0
                            s = (2 * ceil32(return_data.size)) + 224
                            t = (2 * ceil32(return_data.size)) + 96
                            u = sub_16aea5c0[arg1]
                            while idx < 50:
                                if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                    return 0
                                if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 < mem[t + 64]:
                                    if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 < mem[s + 64]:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                        if u > ext_call.return_data[0]:
                                            return 0
                                    else:
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[ext_call.return_data[64] + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[ext_call.return_data[64] + 604799 / 168 * 24 * 3600]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[ext_call.return_data[64] + 604799 / 168 * 24 * 3600] / sub_d4dafba8[ext_call.return_data[64] + 604799 / 168 * 24 * 3600]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[ext_call.return_data[64] + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[ext_call.return_data[64] + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[ext_call.return_data[64] + 604799 / 168 * 24 * 3600] / sub_d4dafba8[ext_call.return_data[64] + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                    if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 > -604801:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s
                                    t = t
                                    u = u
                                    continue 
                                if u > ext_call.return_data[0]:
                                    if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 < mem[s + 64]:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                        if u > ext_call.return_data[0]:
                                            return 0
                                    else:
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[ext_call.return_data[64] + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[ext_call.return_data[64] + 604799 / 168 * 24 * 3600]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[ext_call.return_data[64] + 604799 / 168 * 24 * 3600] / sub_d4dafba8[ext_call.return_data[64] + 604799 / 168 * 24 * 3600]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[ext_call.return_data[64] + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[ext_call.return_data[64] + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[ext_call.return_data[64] + 604799 / 168 * 24 * 3600] / sub_d4dafba8[ext_call.return_data[64] + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                    if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 > -604801:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s
                                    t = t
                                    u = u
                                    continue 
                                if u + 1 > ext_call.return_data[0]:
                                    _475 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_475] = 0
                                    mem[_475 + 32] = 0
                                    mem[_475 + 64] = 0
                                    mem[_475 + 96] = 0
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = t
                                    t = _475
                                    u = u + 1
                                    continue 
                                staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                        gas gas_remaining wei
                                       args arg1, u + 1
                                mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _495 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 128
                                _508 = mem[64]
                                if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                    revert with 0, 65
                                mem[64] = mem[64] + 128
                                require mem[_495] == ('signextend', 15, ('mem', ('range', ('var', '_495'), 32)))
                                mem[_508] = mem[_495]
                                require mem[_495 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_495')), 32)))
                                mem[_508 + 32] = mem[_495 + 32]
                                mem[_508 + 64] = mem[_495 + 64]
                                mem[_508 + 96] = mem[_495 + 96]
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = t
                                t = _508
                                u = u + 1
                                continue 
                        else:
                            idx = 0
                            s = (2 * ceil32(return_data.size)) + 224
                            t = (2 * ceil32(return_data.size)) + 96
                            u = sub_16aea5c0[arg1]
                            while idx < 50:
                                if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                    return 0
                                if start_time < mem[t + 64]:
                                    if start_time < mem[s + 64]:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                        if u > ext_call.return_data[0]:
                                            return 0
                                    else:
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                    if start_time > -604801:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s
                                    t = t
                                    u = u
                                    continue 
                                if u > ext_call.return_data[0]:
                                    if start_time < mem[s + 64]:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                        if u > ext_call.return_data[0]:
                                            return 0
                                    else:
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                    if start_time > -604801:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s
                                    t = t
                                    u = u
                                    continue 
                                if u + 1 > ext_call.return_data[0]:
                                    _478 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_478] = 0
                                    mem[_478 + 32] = 0
                                    mem[_478 + 64] = 0
                                    mem[_478 + 96] = 0
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = t
                                    t = _478
                                    u = u + 1
                                    continue 
                                staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                        gas gas_remaining wei
                                       args arg1, u + 1
                                mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _496 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 128
                                _509 = mem[64]
                                if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                    revert with 0, 65
                                mem[64] = mem[64] + 128
                                require mem[_496] == ('signextend', 15, ('mem', ('range', ('var', '_496'), 32)))
                                mem[_509] = mem[_496]
                                require mem[_496 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_496')), 32)))
                                mem[_509 + 32] = mem[_496 + 32]
                                mem[_509 + 64] = mem[_496 + 64]
                                mem[_509 + 96] = mem[_496 + 96]
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = t
                                t = _509
                                u = u + 1
                                continue 
            else:
                staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                        gas gas_remaining wei
                       args arg1, 1
                mem[ceil32(return_data.size) + 96 len 128] = ext_call.return_data[0 len 128]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 128
                if not bool((2 * ceil32(return_data.size)) + 224 <= test266151307()):
                    revert with 0, 65
                require ext_call.return_data[0] == ('signextend', 15, ('ext_call.return_data', 0, 32))
                mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                require ext_call.return_data[32] == ('signextend', 15, ('ext_call.return_data', 32, 32))
                mem[(2 * ceil32(return_data.size)) + 128] = ext_call.return_data[32]
                mem[(2 * ceil32(return_data.size)) + 160] = ext_call.return_data[64]
                mem[(2 * ceil32(return_data.size)) + 192] = ext_call.return_data[96]
                if sub_486d25fe[arg1]:
                    if sub_486d25fe[arg1] < last_token_time:
                        mem[64] = (2 * ceil32(return_data.size)) + 352
                        mem[(2 * ceil32(return_data.size)) + 224] = 0
                        mem[(2 * ceil32(return_data.size)) + 256] = 0
                        mem[(2 * ceil32(return_data.size)) + 288] = 0
                        mem[(2 * ceil32(return_data.size)) + 320] = 0
                        if sub_486d25fe[arg1] >= start_time:
                            idx = 0
                            s = (2 * ceil32(return_data.size)) + 224
                            t = (2 * ceil32(return_data.size)) + 96
                            u = 1
                            while idx < 50:
                                if sub_486d25fe[arg1] >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                    return 0
                                if sub_486d25fe[arg1] < mem[t + 64]:
                                    if sub_486d25fe[arg1] < mem[s + 64]:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                        if u > ext_call.return_data[0]:
                                            return 0
                                    else:
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if sub_486d25fe[arg1] >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor2[arg1]]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                    if sub_486d25fe[arg1] > -604801:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s
                                    t = t
                                    u = u
                                    continue 
                                if u > ext_call.return_data[0]:
                                    if sub_486d25fe[arg1] < mem[s + 64]:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                        if u > ext_call.return_data[0]:
                                            return 0
                                    else:
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if sub_486d25fe[arg1] >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor2[arg1]]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                    if sub_486d25fe[arg1] > -604801:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s
                                    t = t
                                    u = u
                                    continue 
                                if u + 1 > ext_call.return_data[0]:
                                    _481 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_481] = 0
                                    mem[_481 + 32] = 0
                                    mem[_481 + 64] = 0
                                    mem[_481 + 96] = 0
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = t
                                    t = _481
                                    u = u + 1
                                    continue 
                                staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                        gas gas_remaining wei
                                       args arg1, u + 1
                                mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _497 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 128
                                _510 = mem[64]
                                if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                    revert with 0, 65
                                mem[64] = mem[64] + 128
                                require mem[_497] == ('signextend', 15, ('mem', ('range', ('var', '_497'), 32)))
                                mem[_510] = mem[_497]
                                require mem[_497 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_497')), 32)))
                                mem[_510 + 32] = mem[_497 + 32]
                                mem[_510 + 64] = mem[_497 + 64]
                                mem[_510 + 96] = mem[_497 + 96]
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = t
                                t = _510
                                u = u + 1
                                continue 
                        else:
                            idx = 0
                            s = (2 * ceil32(return_data.size)) + 224
                            t = (2 * ceil32(return_data.size)) + 96
                            u = 1
                            while idx < 50:
                                if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                    return 0
                                if start_time < mem[t + 64]:
                                    if start_time < mem[s + 64]:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                        if u > ext_call.return_data[0]:
                                            return 0
                                    else:
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                    if start_time > -604801:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s
                                    t = t
                                    u = u
                                    continue 
                                if u > ext_call.return_data[0]:
                                    if start_time < mem[s + 64]:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                        if u > ext_call.return_data[0]:
                                            return 0
                                    else:
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                    if start_time > -604801:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s
                                    t = t
                                    u = u
                                    continue 
                                if u + 1 > ext_call.return_data[0]:
                                    _484 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_484] = 0
                                    mem[_484 + 32] = 0
                                    mem[_484 + 64] = 0
                                    mem[_484 + 96] = 0
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = t
                                    t = _484
                                    u = u + 1
                                    continue 
                                staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                        gas gas_remaining wei
                                       args arg1, u + 1
                                mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _498 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 128
                                _511 = mem[64]
                                if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                    revert with 0, 65
                                mem[64] = mem[64] + 128
                                require mem[_498] == ('signextend', 15, ('mem', ('range', ('var', '_498'), 32)))
                                mem[_511] = mem[_498]
                                require mem[_498 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_498')), 32)))
                                mem[_511 + 32] = mem[_498 + 32]
                                mem[_511 + 64] = mem[_498 + 64]
                                mem[_511 + 96] = mem[_498 + 96]
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = t
                                t = _511
                                u = u + 1
                                continue 
                else:
                    if ext_call.return_data[64] > -604801:
                        revert with 0, 17
                    if ext_call.return_data[64] + (168 * 24 * 3600) < 1:
                        revert with 0, 17
                    if ext_call.return_data[64] + 604799 / 168 * 24 * 3600 and 168 * 24 * 3600 > -1 / ext_call.return_data[64] + 604799 / 168 * 24 * 3600:
                        revert with 0, 17
                    if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 < last_token_time:
                        mem[64] = (2 * ceil32(return_data.size)) + 352
                        mem[(2 * ceil32(return_data.size)) + 224] = 0
                        mem[(2 * ceil32(return_data.size)) + 256] = 0
                        mem[(2 * ceil32(return_data.size)) + 288] = 0
                        mem[(2 * ceil32(return_data.size)) + 320] = 0
                        if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 >= start_time:
                            idx = 0
                            s = (2 * ceil32(return_data.size)) + 224
                            t = (2 * ceil32(return_data.size)) + 96
                            u = 1
                            while idx < 50:
                                if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                    return 0
                                if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 < mem[t + 64]:
                                    if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 < mem[s + 64]:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                        if u > ext_call.return_data[0]:
                                            return 0
                                    else:
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[ext_call.return_data[64] + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[ext_call.return_data[64] + 604799 / 168 * 24 * 3600]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[ext_call.return_data[64] + 604799 / 168 * 24 * 3600] / sub_d4dafba8[ext_call.return_data[64] + 604799 / 168 * 24 * 3600]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[ext_call.return_data[64] + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[ext_call.return_data[64] + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[ext_call.return_data[64] + 604799 / 168 * 24 * 3600] / sub_d4dafba8[ext_call.return_data[64] + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                    if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 > -604801:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s
                                    t = t
                                    u = u
                                    continue 
                                if u > ext_call.return_data[0]:
                                    if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 < mem[s + 64]:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                        if u > ext_call.return_data[0]:
                                            return 0
                                    else:
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[ext_call.return_data[64] + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[ext_call.return_data[64] + 604799 / 168 * 24 * 3600]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[ext_call.return_data[64] + 604799 / 168 * 24 * 3600] / sub_d4dafba8[ext_call.return_data[64] + 604799 / 168 * 24 * 3600]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[ext_call.return_data[64] + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[ext_call.return_data[64] + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[ext_call.return_data[64] + 604799 / 168 * 24 * 3600] / sub_d4dafba8[ext_call.return_data[64] + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                    if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 > -604801:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s
                                    t = t
                                    u = u
                                    continue 
                                if u + 1 > ext_call.return_data[0]:
                                    _487 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_487] = 0
                                    mem[_487 + 32] = 0
                                    mem[_487 + 64] = 0
                                    mem[_487 + 96] = 0
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = t
                                    t = _487
                                    u = u + 1
                                    continue 
                                staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                        gas gas_remaining wei
                                       args arg1, u + 1
                                mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _499 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 128
                                _512 = mem[64]
                                if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                    revert with 0, 65
                                mem[64] = mem[64] + 128
                                require mem[_499] == ('signextend', 15, ('mem', ('range', ('var', '_499'), 32)))
                                mem[_512] = mem[_499]
                                require mem[_499 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_499')), 32)))
                                mem[_512 + 32] = mem[_499 + 32]
                                mem[_512 + 64] = mem[_499 + 64]
                                mem[_512 + 96] = mem[_499 + 96]
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = t
                                t = _512
                                u = u + 1
                                continue 
                        else:
                            idx = 0
                            s = (2 * ceil32(return_data.size)) + 224
                            t = (2 * ceil32(return_data.size)) + 96
                            u = 1
                            while idx < 50:
                                if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                    return 0
                                if start_time < mem[t + 64]:
                                    if start_time < mem[s + 64]:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                        if u > ext_call.return_data[0]:
                                            return 0
                                    else:
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                    if start_time > -604801:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s
                                    t = t
                                    u = u
                                    continue 
                                if u > ext_call.return_data[0]:
                                    if start_time < mem[s + 64]:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                        if u > ext_call.return_data[0]:
                                            return 0
                                    else:
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                    if start_time > -604801:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s
                                    t = t
                                    u = u
                                    continue 
                                if u + 1 > ext_call.return_data[0]:
                                    _490 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_490] = 0
                                    mem[_490 + 32] = 0
                                    mem[_490 + 64] = 0
                                    mem[_490 + 96] = 0
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = t
                                    t = _490
                                    u = u + 1
                                    continue 
                                staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                        gas gas_remaining wei
                                       args arg1, u + 1
                                mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _500 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 128
                                _513 = mem[64]
                                if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                    revert with 0, 65
                                mem[64] = mem[64] + 128
                                require mem[_500] == ('signextend', 15, ('mem', ('range', ('var', '_500'), 32)))
                                mem[_513] = mem[_500]
                                require mem[_500 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_500')), 32)))
                                mem[_513 + 32] = mem[_500 + 32]
                                mem[_513 + 64] = mem[_500 + 64]
                                mem[_513 + 96] = mem[_500 + 96]
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = t
                                t = _513
                                u = u + 1
                                continue 
        else:
            idx = 0
            s = 0
            while idx < 128:
                if s < ext_call.return_data[0]:
                    if s > !ext_call.return_data[0]:
                        revert with 0, 17
                    if 2 > !(s + ext_call.return_data[0]):
                        revert with 0, 17
                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                            gas gas_remaining wei
                           args arg1, s + ext_call.return_data[0] + 2 / 2
                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _515 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 128
                    _544 = mem[64]
                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                        revert with 0, 65
                    mem[64] = mem[64] + 128
                    require mem[_515] == ('signextend', 15, ('mem', ('range', ('var', '_515'), 32)))
                    mem[_544] = mem[_515]
                    require mem[_515 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_515')), 32)))
                    mem[_544 + 32] = mem[_515 + 32]
                    mem[_544 + 64] = mem[_515 + 64]
                    mem[_544 + 96] = mem[_515 + 96]
                    if mem[_544 + 64] <= start_time:
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ext_call.return_data[0] + 2 / 2
                        continue 
                    if s + ext_call.return_data[0] + 2 / 2 < 1:
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s
                    continue 
                if s:
                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                            gas gas_remaining wei
                           args arg1, s
                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _454 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 128
                    _492 = mem[64]
                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                        revert with 0, 65
                    mem[64] = mem[64] + 128
                    require mem[_454] == ('signextend', 15, ('mem', ('range', ('var', '_454'), 32)))
                    mem[_492] = mem[_454]
                    require mem[_454 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_454')), 32)))
                    mem[_492 + 32] = mem[_454 + 32]
                    mem[_492 + 64] = mem[_454 + 64]
                    mem[_492 + 96] = mem[_454 + 96]
                    if sub_486d25fe[arg1]:
                        if sub_486d25fe[arg1] < last_token_time:
                            if sub_486d25fe[arg1] >= start_time:
                                _588 = mem[64]
                                mem[64] = mem[64] + 128
                                mem[_588] = 0
                                mem[_588 + 32] = 0
                                mem[_588 + 64] = 0
                                mem[_588 + 96] = 0
                                idx = 0
                                t = _588
                                u = _492
                                v = s
                                while idx < 50:
                                    if sub_486d25fe[arg1] >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                        return 0
                                    if sub_486d25fe[arg1] < mem[u + 64]:
                                        if sub_486d25fe[arg1] < mem[t + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                            if v > ext_call.return_data[0]:
                                                return 0
                                        else:
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                            else:
                                                if v > ext_call.return_data[0]:
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    if sub_486d25fe[arg1] >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor2[arg1]]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                        revert with 0, 17
                                        if sub_486d25fe[arg1] > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = t
                                        u = u
                                        v = v
                                        continue 
                                    if v > ext_call.return_data[0]:
                                        if sub_486d25fe[arg1] < mem[t + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                            if v > ext_call.return_data[0]:
                                                return 0
                                        else:
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                            else:
                                                if v > ext_call.return_data[0]:
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    if sub_486d25fe[arg1] >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor2[arg1]]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                        revert with 0, 17
                                        if sub_486d25fe[arg1] > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = t
                                        u = u
                                        v = v
                                        continue 
                                    if v + 1 > ext_call.return_data[0]:
                                        _1268 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_1268] = 0
                                        mem[_1268 + 32] = 0
                                        mem[_1268 + 64] = 0
                                        mem[_1268 + 96] = 0
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = u
                                        u = _1268
                                        v = v + 1
                                        continue 
                                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                            gas gas_remaining wei
                                           args arg1, v + 1
                                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1298 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 128
                                    _1314 = mem[64]
                                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                        revert with 0, 65
                                    mem[64] = mem[64] + 128
                                    require mem[_1298] == ('signextend', 15, ('mem', ('range', ('var', '_1298'), 32)))
                                    mem[_1314] = mem[_1298]
                                    require mem[_1298 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_1298')), 32)))
                                    mem[_1314 + 32] = mem[_1298 + 32]
                                    mem[_1314 + 64] = mem[_1298 + 64]
                                    mem[_1314 + 96] = mem[_1298 + 96]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    t = u
                                    u = _1314
                                    v = v + 1
                                    continue 
                            else:
                                _594 = mem[64]
                                mem[64] = mem[64] + 128
                                mem[_594] = 0
                                mem[_594 + 32] = 0
                                mem[_594 + 64] = 0
                                mem[_594 + 96] = 0
                                idx = 0
                                t = _594
                                u = _492
                                v = s
                                while idx < 50:
                                    if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                        return 0
                                    if start_time < mem[u + 64]:
                                        if start_time < mem[t + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                            if v > ext_call.return_data[0]:
                                                return 0
                                        else:
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                            else:
                                                if v > ext_call.return_data[0]:
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                        if start_time > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = t
                                        u = u
                                        v = v
                                        continue 
                                    if v > ext_call.return_data[0]:
                                        if start_time < mem[t + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                            if v > ext_call.return_data[0]:
                                                return 0
                                        else:
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                            else:
                                                if v > ext_call.return_data[0]:
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                        if start_time > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = t
                                        u = u
                                        v = v
                                        continue 
                                    if v + 1 > ext_call.return_data[0]:
                                        _1271 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_1271] = 0
                                        mem[_1271 + 32] = 0
                                        mem[_1271 + 64] = 0
                                        mem[_1271 + 96] = 0
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = u
                                        u = _1271
                                        v = v + 1
                                        continue 
                                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                            gas gas_remaining wei
                                           args arg1, v + 1
                                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1299 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 128
                                    _1315 = mem[64]
                                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                        revert with 0, 65
                                    mem[64] = mem[64] + 128
                                    require mem[_1299] == ('signextend', 15, ('mem', ('range', ('var', '_1299'), 32)))
                                    mem[_1315] = mem[_1299]
                                    require mem[_1299 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_1299')), 32)))
                                    mem[_1315 + 32] = mem[_1299 + 32]
                                    mem[_1315 + 64] = mem[_1299 + 64]
                                    mem[_1315 + 96] = mem[_1299 + 96]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    t = u
                                    u = _1315
                                    v = v + 1
                                    continue 
                    else:
                        _565 = mem[_492 + 64]
                        if mem[_492 + 64] > -604801:
                            revert with 0, 17
                        if mem[_492 + 64] + (168 * 24 * 3600) < 1:
                            revert with 0, 17
                        if mem[_492 + 64] + 604799 / 168 * 24 * 3600 and 168 * 24 * 3600 > -1 / mem[_492 + 64] + 604799 / 168 * 24 * 3600:
                            revert with 0, 17
                        if 168 * 24 * 3600 * mem[_492 + 64] + 604799 / 168 * 24 * 3600 < last_token_time:
                            if 168 * 24 * 3600 * mem[_492 + 64] + 604799 / 168 * 24 * 3600 >= start_time:
                                _768 = mem[64]
                                mem[64] = mem[64] + 128
                                mem[_768] = 0
                                mem[_768 + 32] = 0
                                mem[_768 + 64] = 0
                                mem[_768 + 96] = 0
                                idx = 0
                                t = _768
                                u = _492
                                v = s
                                while idx < 50:
                                    if 168 * 24 * 3600 * _565 + 604799 / 168 * 24 * 3600 >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                        return 0
                                    if 168 * 24 * 3600 * _565 + 604799 / 168 * 24 * 3600 < mem[u + 64]:
                                        if 168 * 24 * 3600 * _565 + 604799 / 168 * 24 * 3600 < mem[t + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_565')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_565')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_565')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_565')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_565')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_565')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_565')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_565')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_565')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_565')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_565')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_565')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_565')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                            if v > ext_call.return_data[0]:
                                                return 0
                                        else:
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_565')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if 168 * 24 * 3600 * _565 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_565')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[_565 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_565')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[_565 + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_565')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[_565 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_565 + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                            else:
                                                if v > ext_call.return_data[0]:
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_565')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    if 168 * 24 * 3600 * _565 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_565')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[_565 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_565')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[_565 + 604799 / 168 * 24 * 3600]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_565')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[_565 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_565 + 604799 / 168 * 24 * 3600]):
                                                        revert with 0, 17
                                        if 168 * 24 * 3600 * _565 + 604799 / 168 * 24 * 3600 > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = t
                                        u = u
                                        v = v
                                        continue 
                                    if v > ext_call.return_data[0]:
                                        if 168 * 24 * 3600 * _565 + 604799 / 168 * 24 * 3600 < mem[t + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_565')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_565')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_565')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_565')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_565')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_565')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_565')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_565')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_565')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_565')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_565')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_565')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_565')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                            if v > ext_call.return_data[0]:
                                                return 0
                                        else:
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_565')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if 168 * 24 * 3600 * _565 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_565')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[_565 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_565')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[_565 + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_565')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[_565 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_565 + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                            else:
                                                if v > ext_call.return_data[0]:
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_565')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    if 168 * 24 * 3600 * _565 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_565')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[_565 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_565')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[_565 + 604799 / 168 * 24 * 3600]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_565')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[_565 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_565 + 604799 / 168 * 24 * 3600]):
                                                        revert with 0, 17
                                        if 168 * 24 * 3600 * _565 + 604799 / 168 * 24 * 3600 > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = t
                                        u = u
                                        v = v
                                        continue 
                                    if v + 1 > ext_call.return_data[0]:
                                        _1274 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_1274] = 0
                                        mem[_1274 + 32] = 0
                                        mem[_1274 + 64] = 0
                                        mem[_1274 + 96] = 0
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = u
                                        u = _1274
                                        v = v + 1
                                        continue 
                                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                            gas gas_remaining wei
                                           args arg1, v + 1
                                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1300 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 128
                                    _1316 = mem[64]
                                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                        revert with 0, 65
                                    mem[64] = mem[64] + 128
                                    require mem[_1300] == ('signextend', 15, ('mem', ('range', ('var', '_1300'), 32)))
                                    mem[_1316] = mem[_1300]
                                    require mem[_1300 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_1300')), 32)))
                                    mem[_1316 + 32] = mem[_1300 + 32]
                                    mem[_1316 + 64] = mem[_1300 + 64]
                                    mem[_1316 + 96] = mem[_1300 + 96]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    t = u
                                    u = _1316
                                    v = v + 1
                                    continue 
                            else:
                                _780 = mem[64]
                                mem[64] = mem[64] + 128
                                mem[_780] = 0
                                mem[_780 + 32] = 0
                                mem[_780 + 64] = 0
                                mem[_780 + 96] = 0
                                idx = 0
                                t = _780
                                u = _492
                                v = s
                                while idx < 50:
                                    if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                        return 0
                                    if start_time < mem[u + 64]:
                                        if start_time < mem[t + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                            if v > ext_call.return_data[0]:
                                                return 0
                                        else:
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                            else:
                                                if v > ext_call.return_data[0]:
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                        if start_time > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = t
                                        u = u
                                        v = v
                                        continue 
                                    if v > ext_call.return_data[0]:
                                        if start_time < mem[t + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                            if v > ext_call.return_data[0]:
                                                return 0
                                        else:
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                            else:
                                                if v > ext_call.return_data[0]:
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                        if start_time > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = t
                                        u = u
                                        v = v
                                        continue 
                                    if v + 1 > ext_call.return_data[0]:
                                        _1277 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_1277] = 0
                                        mem[_1277 + 32] = 0
                                        mem[_1277 + 64] = 0
                                        mem[_1277 + 96] = 0
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = u
                                        u = _1277
                                        v = v + 1
                                        continue 
                                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                            gas gas_remaining wei
                                           args arg1, v + 1
                                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1301 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 128
                                    _1317 = mem[64]
                                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                        revert with 0, 65
                                    mem[64] = mem[64] + 128
                                    require mem[_1301] == ('signextend', 15, ('mem', ('range', ('var', '_1301'), 32)))
                                    mem[_1317] = mem[_1301]
                                    require mem[_1301 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_1301')), 32)))
                                    mem[_1317 + 32] = mem[_1301 + 32]
                                    mem[_1317 + 64] = mem[_1301 + 64]
                                    mem[_1317 + 96] = mem[_1301 + 96]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    t = u
                                    u = _1317
                                    v = v + 1
                                    continue 
                else:
                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                            gas gas_remaining wei
                           args arg1, 1
                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _466 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 128
                    _502 = mem[64]
                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                        revert with 0, 65
                    mem[64] = mem[64] + 128
                    require mem[_466] == ('signextend', 15, ('mem', ('range', ('var', '_466'), 32)))
                    mem[_502] = mem[_466]
                    require mem[_466 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_466')), 32)))
                    mem[_502 + 32] = mem[_466 + 32]
                    mem[_502 + 64] = mem[_466 + 64]
                    mem[_502 + 96] = mem[_466 + 96]
                    if sub_486d25fe[arg1]:
                        if sub_486d25fe[arg1] < last_token_time:
                            if sub_486d25fe[arg1] >= start_time:
                                _595 = mem[64]
                                mem[64] = mem[64] + 128
                                mem[_595] = 0
                                mem[_595 + 32] = 0
                                mem[_595 + 64] = 0
                                mem[_595 + 96] = 0
                                idx = 0
                                s = _595
                                t = _502
                                u = 1
                                while idx < 50:
                                    if sub_486d25fe[arg1] >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                        return 0
                                    if sub_486d25fe[arg1] < mem[t + 64]:
                                        if sub_486d25fe[arg1] < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u > ext_call.return_data[0]:
                                                return 0
                                        else:
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                            else:
                                                if u > ext_call.return_data[0]:
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if sub_486d25fe[arg1] >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor2[arg1]]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                        revert with 0, 17
                                        if sub_486d25fe[arg1] > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u > ext_call.return_data[0]:
                                        if sub_486d25fe[arg1] < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u > ext_call.return_data[0]:
                                                return 0
                                        else:
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                            else:
                                                if u > ext_call.return_data[0]:
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if sub_486d25fe[arg1] >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor2[arg1]]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                        revert with 0, 17
                                        if sub_486d25fe[arg1] > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u + 1 > ext_call.return_data[0]:
                                        _1280 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_1280] = 0
                                        mem[_1280 + 32] = 0
                                        mem[_1280 + 64] = 0
                                        mem[_1280 + 96] = 0
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _1280
                                        u = u + 1
                                        continue 
                                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                            gas gas_remaining wei
                                           args arg1, u + 1
                                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1302 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 128
                                    _1318 = mem[64]
                                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                        revert with 0, 65
                                    mem[64] = mem[64] + 128
                                    require mem[_1302] == ('signextend', 15, ('mem', ('range', ('var', '_1302'), 32)))
                                    mem[_1318] = mem[_1302]
                                    require mem[_1302 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_1302')), 32)))
                                    mem[_1318 + 32] = mem[_1302 + 32]
                                    mem[_1318 + 64] = mem[_1302 + 64]
                                    mem[_1318 + 96] = mem[_1302 + 96]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = t
                                    t = _1318
                                    u = u + 1
                                    continue 
                            else:
                                _601 = mem[64]
                                mem[64] = mem[64] + 128
                                mem[_601] = 0
                                mem[_601 + 32] = 0
                                mem[_601 + 64] = 0
                                mem[_601 + 96] = 0
                                idx = 0
                                s = _601
                                t = _502
                                u = 1
                                while idx < 50:
                                    if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                        return 0
                                    if start_time < mem[t + 64]:
                                        if start_time < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u > ext_call.return_data[0]:
                                                return 0
                                        else:
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                            else:
                                                if u > ext_call.return_data[0]:
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                        if start_time > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u > ext_call.return_data[0]:
                                        if start_time < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u > ext_call.return_data[0]:
                                                return 0
                                        else:
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                            else:
                                                if u > ext_call.return_data[0]:
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                        if start_time > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u + 1 > ext_call.return_data[0]:
                                        _1283 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_1283] = 0
                                        mem[_1283 + 32] = 0
                                        mem[_1283 + 64] = 0
                                        mem[_1283 + 96] = 0
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _1283
                                        u = u + 1
                                        continue 
                                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                            gas gas_remaining wei
                                           args arg1, u + 1
                                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1303 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 128
                                    _1319 = mem[64]
                                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                        revert with 0, 65
                                    mem[64] = mem[64] + 128
                                    require mem[_1303] == ('signextend', 15, ('mem', ('range', ('var', '_1303'), 32)))
                                    mem[_1319] = mem[_1303]
                                    require mem[_1303 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_1303')), 32)))
                                    mem[_1319 + 32] = mem[_1303 + 32]
                                    mem[_1319 + 64] = mem[_1303 + 64]
                                    mem[_1319 + 96] = mem[_1303 + 96]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = t
                                    t = _1319
                                    u = u + 1
                                    continue 
                    else:
                        _585 = mem[_502 + 64]
                        if mem[_502 + 64] > -604801:
                            revert with 0, 17
                        if mem[_502 + 64] + (168 * 24 * 3600) < 1:
                            revert with 0, 17
                        if mem[_502 + 64] + 604799 / 168 * 24 * 3600 and 168 * 24 * 3600 > -1 / mem[_502 + 64] + 604799 / 168 * 24 * 3600:
                            revert with 0, 17
                        if 168 * 24 * 3600 * mem[_502 + 64] + 604799 / 168 * 24 * 3600 < last_token_time:
                            if 168 * 24 * 3600 * mem[_502 + 64] + 604799 / 168 * 24 * 3600 >= start_time:
                                _782 = mem[64]
                                mem[64] = mem[64] + 128
                                mem[_782] = 0
                                mem[_782 + 32] = 0
                                mem[_782 + 64] = 0
                                mem[_782 + 96] = 0
                                idx = 0
                                s = _782
                                t = _502
                                u = 1
                                while idx < 50:
                                    if 168 * 24 * 3600 * _585 + 604799 / 168 * 24 * 3600 >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                        return 0
                                    if 168 * 24 * 3600 * _585 + 604799 / 168 * 24 * 3600 < mem[t + 64]:
                                        if 168 * 24 * 3600 * _585 + 604799 / 168 * 24 * 3600 < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_585')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_585')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_585')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_585')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_585')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_585')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_585')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_585')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_585')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_585')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_585')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_585')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_585')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u > ext_call.return_data[0]:
                                                return 0
                                        else:
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_585')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if 168 * 24 * 3600 * _585 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_585')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_585 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_585')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[_585 + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_585')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_585 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_585 + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                            else:
                                                if u > ext_call.return_data[0]:
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_585')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if 168 * 24 * 3600 * _585 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_585')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_585 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_585')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[_585 + 604799 / 168 * 24 * 3600]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_585')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_585 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_585 + 604799 / 168 * 24 * 3600]):
                                                        revert with 0, 17
                                        if 168 * 24 * 3600 * _585 + 604799 / 168 * 24 * 3600 > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u > ext_call.return_data[0]:
                                        if 168 * 24 * 3600 * _585 + 604799 / 168 * 24 * 3600 < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_585')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_585')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_585')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_585')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_585')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_585')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_585')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_585')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_585')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_585')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_585')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_585')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_585')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u > ext_call.return_data[0]:
                                                return 0
                                        else:
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_585')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if 168 * 24 * 3600 * _585 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_585')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_585 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_585')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[_585 + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_585')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_585 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_585 + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                            else:
                                                if u > ext_call.return_data[0]:
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_585')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if 168 * 24 * 3600 * _585 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_585')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_585 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_585')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[_585 + 604799 / 168 * 24 * 3600]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_585')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_585 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_585 + 604799 / 168 * 24 * 3600]):
                                                        revert with 0, 17
                                        if 168 * 24 * 3600 * _585 + 604799 / 168 * 24 * 3600 > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u + 1 > ext_call.return_data[0]:
                                        _1286 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_1286] = 0
                                        mem[_1286 + 32] = 0
                                        mem[_1286 + 64] = 0
                                        mem[_1286 + 96] = 0
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _1286
                                        u = u + 1
                                        continue 
                                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                            gas gas_remaining wei
                                           args arg1, u + 1
                                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1304 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 128
                                    _1320 = mem[64]
                                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                        revert with 0, 65
                                    mem[64] = mem[64] + 128
                                    require mem[_1304] == ('signextend', 15, ('mem', ('range', ('var', '_1304'), 32)))
                                    mem[_1320] = mem[_1304]
                                    require mem[_1304 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_1304')), 32)))
                                    mem[_1320 + 32] = mem[_1304 + 32]
                                    mem[_1320 + 64] = mem[_1304 + 64]
                                    mem[_1320 + 96] = mem[_1304 + 96]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = t
                                    t = _1320
                                    u = u + 1
                                    continue 
                            else:
                                _794 = mem[64]
                                mem[64] = mem[64] + 128
                                mem[_794] = 0
                                mem[_794 + 32] = 0
                                mem[_794 + 64] = 0
                                mem[_794 + 96] = 0
                                idx = 0
                                s = _794
                                t = _502
                                u = 1
                                while idx < 50:
                                    if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                        return 0
                                    if start_time < mem[t + 64]:
                                        if start_time < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u > ext_call.return_data[0]:
                                                return 0
                                        else:
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                            else:
                                                if u > ext_call.return_data[0]:
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                        if start_time > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u > ext_call.return_data[0]:
                                        if start_time < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u > ext_call.return_data[0]:
                                                return 0
                                        else:
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                            else:
                                                if u > ext_call.return_data[0]:
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                        if start_time > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u + 1 > ext_call.return_data[0]:
                                        _1289 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_1289] = 0
                                        mem[_1289 + 32] = 0
                                        mem[_1289 + 64] = 0
                                        mem[_1289 + 96] = 0
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _1289
                                        u = u + 1
                                        continue 
                                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                            gas gas_remaining wei
                                           args arg1, u + 1
                                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1305 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 128
                                    _1321 = mem[64]
                                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                        revert with 0, 65
                                    mem[64] = mem[64] + 128
                                    require mem[_1305] == ('signextend', 15, ('mem', ('range', ('var', '_1305'), 32)))
                                    mem[_1321] = mem[_1305]
                                    require mem[_1305 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_1305')), 32)))
                                    mem[_1321 + 32] = mem[_1305 + 32]
                                    mem[_1321 + 64] = mem[_1305 + 64]
                                    mem[_1321 + 96] = mem[_1305 + 96]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = t
                                    t = _1321
                                    u = u + 1
                                    continue 
                return 0
            if s:
                staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                        gas gas_remaining wei
                       args arg1, s
                mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _431 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 128
                _453 = mem[64]
                if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                    revert with 0, 65
                mem[64] = mem[64] + 128
                require mem[_431] == ('signextend', 15, ('mem', ('range', ('var', '_431'), 32)))
                mem[_453] = mem[_431]
                require mem[_431 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_431')), 32)))
                mem[_453 + 32] = mem[_431 + 32]
                mem[_453 + 64] = mem[_431 + 64]
                mem[_453 + 96] = mem[_431 + 96]
                if sub_486d25fe[arg1]:
                    if sub_486d25fe[arg1] < last_token_time:
                        if sub_486d25fe[arg1] >= start_time:
                            _564 = mem[64]
                            mem[64] = mem[64] + 128
                            mem[_564] = 0
                            mem[_564 + 32] = 0
                            mem[_564 + 64] = 0
                            mem[_564 + 96] = 0
                            idx = 0
                            t = _564
                            u = _453
                            v = s
                            while idx < 50:
                                if sub_486d25fe[arg1] >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                    return 0
                                if sub_486d25fe[arg1] < mem[u + 64]:
                                    if sub_486d25fe[arg1] < mem[t + 64]:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                        if v > ext_call.return_data[0]:
                                            return 0
                                    else:
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                            if sub_486d25fe[arg1] >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor2[arg1]]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                revert with 0, 17
                                        else:
                                            if v > ext_call.return_data[0]:
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                    if sub_486d25fe[arg1] > -604801:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    t = t
                                    u = u
                                    v = v
                                    continue 
                                if v > ext_call.return_data[0]:
                                    if sub_486d25fe[arg1] < mem[t + 64]:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                        if v > ext_call.return_data[0]:
                                            return 0
                                    else:
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                            if sub_486d25fe[arg1] >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor2[arg1]]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                revert with 0, 17
                                        else:
                                            if v > ext_call.return_data[0]:
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                    if sub_486d25fe[arg1] > -604801:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    t = t
                                    u = u
                                    v = v
                                    continue 
                                if v + 1 > ext_call.return_data[0]:
                                    _1244 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_1244] = 0
                                    mem[_1244 + 32] = 0
                                    mem[_1244 + 64] = 0
                                    mem[_1244 + 96] = 0
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    t = u
                                    u = _1244
                                    v = v + 1
                                    continue 
                                staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                        gas gas_remaining wei
                                       args arg1, v + 1
                                mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1290 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 128
                                _1306 = mem[64]
                                if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                    revert with 0, 65
                                mem[64] = mem[64] + 128
                                require mem[_1290] == ('signextend', 15, ('mem', ('range', ('var', '_1290'), 32)))
                                mem[_1306] = mem[_1290]
                                require mem[_1290 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_1290')), 32)))
                                mem[_1306 + 32] = mem[_1290 + 32]
                                mem[_1306 + 64] = mem[_1290 + 64]
                                mem[_1306 + 96] = mem[_1290 + 96]
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                t = u
                                u = _1306
                                v = v + 1
                                continue 
                        else:
                            _582 = mem[64]
                            mem[64] = mem[64] + 128
                            mem[_582] = 0
                            mem[_582 + 32] = 0
                            mem[_582 + 64] = 0
                            mem[_582 + 96] = 0
                            idx = 0
                            t = _582
                            u = _453
                            v = s
                            while idx < 50:
                                if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                    return 0
                                if start_time < mem[u + 64]:
                                    if start_time < mem[t + 64]:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                        if v > ext_call.return_data[0]:
                                            return 0
                                    else:
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if v > ext_call.return_data[0]:
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                    if start_time > -604801:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    t = t
                                    u = u
                                    v = v
                                    continue 
                                if v > ext_call.return_data[0]:
                                    if start_time < mem[t + 64]:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                        if v > ext_call.return_data[0]:
                                            return 0
                                    else:
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if v > ext_call.return_data[0]:
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                    if start_time > -604801:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    t = t
                                    u = u
                                    v = v
                                    continue 
                                if v + 1 > ext_call.return_data[0]:
                                    _1247 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_1247] = 0
                                    mem[_1247 + 32] = 0
                                    mem[_1247 + 64] = 0
                                    mem[_1247 + 96] = 0
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    t = u
                                    u = _1247
                                    v = v + 1
                                    continue 
                                staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                        gas gas_remaining wei
                                       args arg1, v + 1
                                mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1291 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 128
                                _1307 = mem[64]
                                if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                    revert with 0, 65
                                mem[64] = mem[64] + 128
                                require mem[_1291] == ('signextend', 15, ('mem', ('range', ('var', '_1291'), 32)))
                                mem[_1307] = mem[_1291]
                                require mem[_1291 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_1291')), 32)))
                                mem[_1307 + 32] = mem[_1291 + 32]
                                mem[_1307 + 64] = mem[_1291 + 64]
                                mem[_1307 + 96] = mem[_1291 + 96]
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                t = u
                                u = _1307
                                v = v + 1
                                continue 
                else:
                    _549 = mem[_453 + 64]
                    if mem[_453 + 64] > -604801:
                        revert with 0, 17
                    if mem[_453 + 64] + (168 * 24 * 3600) < 1:
                        revert with 0, 17
                    if mem[_453 + 64] + 604799 / 168 * 24 * 3600 and 168 * 24 * 3600 > -1 / mem[_453 + 64] + 604799 / 168 * 24 * 3600:
                        revert with 0, 17
                    if 168 * 24 * 3600 * mem[_453 + 64] + 604799 / 168 * 24 * 3600 < last_token_time:
                        if 168 * 24 * 3600 * mem[_453 + 64] + 604799 / 168 * 24 * 3600 >= start_time:
                            _740 = mem[64]
                            mem[64] = mem[64] + 128
                            mem[_740] = 0
                            mem[_740 + 32] = 0
                            mem[_740 + 64] = 0
                            mem[_740 + 96] = 0
                            idx = 0
                            t = _740
                            u = _453
                            v = s
                            while idx < 50:
                                if 168 * 24 * 3600 * _549 + 604799 / 168 * 24 * 3600 >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                    return 0
                                if 168 * 24 * 3600 * _549 + 604799 / 168 * 24 * 3600 < mem[u + 64]:
                                    if 168 * 24 * 3600 * _549 + 604799 / 168 * 24 * 3600 < mem[t + 64]:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_549')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_549')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_549')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_549')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_549')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_549')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_549')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_549')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_549')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_549')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_549')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_549')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_549')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                        if v > ext_call.return_data[0]:
                                            return 0
                                    else:
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_549')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                            if 168 * 24 * 3600 * _549 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_549')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[_549 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_549')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[_549 + 604799 / 168 * 24 * 3600]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_549')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[_549 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_549 + 604799 / 168 * 24 * 3600]):
                                                revert with 0, 17
                                        else:
                                            if v > ext_call.return_data[0]:
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_549')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if 168 * 24 * 3600 * _549 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_549')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[_549 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_549')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[_549 + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_549')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[_549 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_549 + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                    if 168 * 24 * 3600 * _549 + 604799 / 168 * 24 * 3600 > -604801:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    t = t
                                    u = u
                                    v = v
                                    continue 
                                if v > ext_call.return_data[0]:
                                    if 168 * 24 * 3600 * _549 + 604799 / 168 * 24 * 3600 < mem[t + 64]:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_549')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_549')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_549')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_549')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_549')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_549')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_549')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_549')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_549')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_549')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_549')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_549')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_549')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                        if v > ext_call.return_data[0]:
                                            return 0
                                    else:
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_549')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                            if 168 * 24 * 3600 * _549 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_549')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[_549 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_549')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[_549 + 604799 / 168 * 24 * 3600]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_549')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[_549 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_549 + 604799 / 168 * 24 * 3600]):
                                                revert with 0, 17
                                        else:
                                            if v > ext_call.return_data[0]:
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_549')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if 168 * 24 * 3600 * _549 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_549')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[_549 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_549')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[_549 + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_549')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[_549 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_549 + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                    if 168 * 24 * 3600 * _549 + 604799 / 168 * 24 * 3600 > -604801:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    t = t
                                    u = u
                                    v = v
                                    continue 
                                if v + 1 > ext_call.return_data[0]:
                                    _1250 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_1250] = 0
                                    mem[_1250 + 32] = 0
                                    mem[_1250 + 64] = 0
                                    mem[_1250 + 96] = 0
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    t = u
                                    u = _1250
                                    v = v + 1
                                    continue 
                                staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                        gas gas_remaining wei
                                       args arg1, v + 1
                                mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1292 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 128
                                _1308 = mem[64]
                                if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                    revert with 0, 65
                                mem[64] = mem[64] + 128
                                require mem[_1292] == ('signextend', 15, ('mem', ('range', ('var', '_1292'), 32)))
                                mem[_1308] = mem[_1292]
                                require mem[_1292 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_1292')), 32)))
                                mem[_1308 + 32] = mem[_1292 + 32]
                                mem[_1308 + 64] = mem[_1292 + 64]
                                mem[_1308 + 96] = mem[_1292 + 96]
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                t = u
                                u = _1308
                                v = v + 1
                                continue 
                        else:
                            _752 = mem[64]
                            mem[64] = mem[64] + 128
                            mem[_752] = 0
                            mem[_752 + 32] = 0
                            mem[_752 + 64] = 0
                            mem[_752 + 96] = 0
                            idx = 0
                            t = _752
                            u = _453
                            v = s
                            while idx < 50:
                                if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                    return 0
                                if start_time < mem[u + 64]:
                                    if start_time < mem[t + 64]:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                        if v > ext_call.return_data[0]:
                                            return 0
                                    else:
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if v > ext_call.return_data[0]:
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                    if start_time > -604801:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    t = t
                                    u = u
                                    v = v
                                    continue 
                                if v > ext_call.return_data[0]:
                                    if start_time < mem[t + 64]:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                        if v > ext_call.return_data[0]:
                                            return 0
                                    else:
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if v > ext_call.return_data[0]:
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                    if start_time > -604801:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    t = t
                                    u = u
                                    v = v
                                    continue 
                                if v + 1 > ext_call.return_data[0]:
                                    _1253 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_1253] = 0
                                    mem[_1253 + 32] = 0
                                    mem[_1253 + 64] = 0
                                    mem[_1253 + 96] = 0
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    t = u
                                    u = _1253
                                    v = v + 1
                                    continue 
                                staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                        gas gas_remaining wei
                                       args arg1, v + 1
                                mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1293 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 128
                                _1309 = mem[64]
                                if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                    revert with 0, 65
                                mem[64] = mem[64] + 128
                                require mem[_1293] == ('signextend', 15, ('mem', ('range', ('var', '_1293'), 32)))
                                mem[_1309] = mem[_1293]
                                require mem[_1293 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_1293')), 32)))
                                mem[_1309 + 32] = mem[_1293 + 32]
                                mem[_1309 + 64] = mem[_1293 + 64]
                                mem[_1309 + 96] = mem[_1293 + 96]
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                t = u
                                u = _1309
                                v = v + 1
                                continue 
            else:
                staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                        gas gas_remaining wei
                       args arg1, 1
                mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _442 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 128
                _465 = mem[64]
                if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                    revert with 0, 65
                mem[64] = mem[64] + 128
                require mem[_442] == ('signextend', 15, ('mem', ('range', ('var', '_442'), 32)))
                mem[_465] = mem[_442]
                require mem[_442 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_442')), 32)))
                mem[_465 + 32] = mem[_442 + 32]
                mem[_465 + 64] = mem[_442 + 64]
                mem[_465 + 96] = mem[_442 + 96]
                if sub_486d25fe[arg1]:
                    if sub_486d25fe[arg1] < last_token_time:
                        if sub_486d25fe[arg1] >= start_time:
                            _583 = mem[64]
                            mem[64] = mem[64] + 128
                            mem[_583] = 0
                            mem[_583 + 32] = 0
                            mem[_583 + 64] = 0
                            mem[_583 + 96] = 0
                            idx = 0
                            s = _583
                            t = _465
                            u = 1
                            while idx < 50:
                                if sub_486d25fe[arg1] >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                    return 0
                                if sub_486d25fe[arg1] < mem[t + 64]:
                                    if sub_486d25fe[arg1] < mem[s + 64]:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                        if u > ext_call.return_data[0]:
                                            return 0
                                    else:
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if sub_486d25fe[arg1] >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor2[arg1]]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                    if sub_486d25fe[arg1] > -604801:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s
                                    t = t
                                    u = u
                                    continue 
                                if u > ext_call.return_data[0]:
                                    if sub_486d25fe[arg1] < mem[s + 64]:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                        if u > ext_call.return_data[0]:
                                            return 0
                                    else:
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if sub_486d25fe[arg1] >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor2[arg1]]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                    if sub_486d25fe[arg1] > -604801:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s
                                    t = t
                                    u = u
                                    continue 
                                if u + 1 > ext_call.return_data[0]:
                                    _1256 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_1256] = 0
                                    mem[_1256 + 32] = 0
                                    mem[_1256 + 64] = 0
                                    mem[_1256 + 96] = 0
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = t
                                    t = _1256
                                    u = u + 1
                                    continue 
                                staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                        gas gas_remaining wei
                                       args arg1, u + 1
                                mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1294 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 128
                                _1310 = mem[64]
                                if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                    revert with 0, 65
                                mem[64] = mem[64] + 128
                                require mem[_1294] == ('signextend', 15, ('mem', ('range', ('var', '_1294'), 32)))
                                mem[_1310] = mem[_1294]
                                require mem[_1294 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_1294')), 32)))
                                mem[_1310 + 32] = mem[_1294 + 32]
                                mem[_1310 + 64] = mem[_1294 + 64]
                                mem[_1310 + 96] = mem[_1294 + 96]
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = t
                                t = _1310
                                u = u + 1
                                continue 
                        else:
                            _587 = mem[64]
                            mem[64] = mem[64] + 128
                            mem[_587] = 0
                            mem[_587 + 32] = 0
                            mem[_587 + 64] = 0
                            mem[_587 + 96] = 0
                            idx = 0
                            s = _587
                            t = _465
                            u = 1
                            while idx < 50:
                                if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                    return 0
                                if start_time < mem[t + 64]:
                                    if start_time < mem[s + 64]:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                        if u > ext_call.return_data[0]:
                                            return 0
                                    else:
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                    if start_time > -604801:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s
                                    t = t
                                    u = u
                                    continue 
                                if u > ext_call.return_data[0]:
                                    if start_time < mem[s + 64]:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                        if u > ext_call.return_data[0]:
                                            return 0
                                    else:
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                    if start_time > -604801:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s
                                    t = t
                                    u = u
                                    continue 
                                if u + 1 > ext_call.return_data[0]:
                                    _1259 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_1259] = 0
                                    mem[_1259 + 32] = 0
                                    mem[_1259 + 64] = 0
                                    mem[_1259 + 96] = 0
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = t
                                    t = _1259
                                    u = u + 1
                                    continue 
                                staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                        gas gas_remaining wei
                                       args arg1, u + 1
                                mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1295 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 128
                                _1311 = mem[64]
                                if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                    revert with 0, 65
                                mem[64] = mem[64] + 128
                                require mem[_1295] == ('signextend', 15, ('mem', ('range', ('var', '_1295'), 32)))
                                mem[_1311] = mem[_1295]
                                require mem[_1295 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_1295')), 32)))
                                mem[_1311 + 32] = mem[_1295 + 32]
                                mem[_1311 + 64] = mem[_1295 + 64]
                                mem[_1311 + 96] = mem[_1295 + 96]
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = t
                                t = _1311
                                u = u + 1
                                continue 
                else:
                    _561 = mem[_465 + 64]
                    if mem[_465 + 64] > -604801:
                        revert with 0, 17
                    if mem[_465 + 64] + (168 * 24 * 3600) < 1:
                        revert with 0, 17
                    if mem[_465 + 64] + 604799 / 168 * 24 * 3600 and 168 * 24 * 3600 > -1 / mem[_465 + 64] + 604799 / 168 * 24 * 3600:
                        revert with 0, 17
                    if 168 * 24 * 3600 * mem[_465 + 64] + 604799 / 168 * 24 * 3600 < last_token_time:
                        if 168 * 24 * 3600 * mem[_465 + 64] + 604799 / 168 * 24 * 3600 >= start_time:
                            _754 = mem[64]
                            mem[64] = mem[64] + 128
                            mem[_754] = 0
                            mem[_754 + 32] = 0
                            mem[_754 + 64] = 0
                            mem[_754 + 96] = 0
                            idx = 0
                            s = _754
                            t = _465
                            u = 1
                            while idx < 50:
                                if 168 * 24 * 3600 * _561 + 604799 / 168 * 24 * 3600 >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                    return 0
                                if 168 * 24 * 3600 * _561 + 604799 / 168 * 24 * 3600 < mem[t + 64]:
                                    if 168 * 24 * 3600 * _561 + 604799 / 168 * 24 * 3600 < mem[s + 64]:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_561')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_561')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_561')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_561')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_561')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_561')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_561')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_561')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_561')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_561')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_561')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_561')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_561')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                        if u > ext_call.return_data[0]:
                                            return 0
                                    else:
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_561')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if 168 * 24 * 3600 * _561 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_561')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_561 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_561')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[_561 + 604799 / 168 * 24 * 3600]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_561')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_561 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_561 + 604799 / 168 * 24 * 3600]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_561')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if 168 * 24 * 3600 * _561 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_561')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_561 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_561')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[_561 + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_561')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_561 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_561 + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                    if 168 * 24 * 3600 * _561 + 604799 / 168 * 24 * 3600 > -604801:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s
                                    t = t
                                    u = u
                                    continue 
                                if u > ext_call.return_data[0]:
                                    if 168 * 24 * 3600 * _561 + 604799 / 168 * 24 * 3600 < mem[s + 64]:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_561')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_561')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_561')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_561')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_561')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_561')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_561')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_561')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_561')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_561')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_561')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_561')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_561')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                        if u > ext_call.return_data[0]:
                                            return 0
                                    else:
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_561')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if 168 * 24 * 3600 * _561 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_561')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_561 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_561')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[_561 + 604799 / 168 * 24 * 3600]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_561')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_561 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_561 + 604799 / 168 * 24 * 3600]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_561')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if 168 * 24 * 3600 * _561 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_561')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_561 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_561')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[_561 + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_561')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_561 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_561 + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                    if 168 * 24 * 3600 * _561 + 604799 / 168 * 24 * 3600 > -604801:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s
                                    t = t
                                    u = u
                                    continue 
                                if u + 1 > ext_call.return_data[0]:
                                    _1262 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_1262] = 0
                                    mem[_1262 + 32] = 0
                                    mem[_1262 + 64] = 0
                                    mem[_1262 + 96] = 0
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = t
                                    t = _1262
                                    u = u + 1
                                    continue 
                                staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                        gas gas_remaining wei
                                       args arg1, u + 1
                                mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1296 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 128
                                _1312 = mem[64]
                                if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                    revert with 0, 65
                                mem[64] = mem[64] + 128
                                require mem[_1296] == ('signextend', 15, ('mem', ('range', ('var', '_1296'), 32)))
                                mem[_1312] = mem[_1296]
                                require mem[_1296 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_1296')), 32)))
                                mem[_1312 + 32] = mem[_1296 + 32]
                                mem[_1312 + 64] = mem[_1296 + 64]
                                mem[_1312 + 96] = mem[_1296 + 96]
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = t
                                t = _1312
                                u = u + 1
                                continue 
                        else:
                            _766 = mem[64]
                            mem[64] = mem[64] + 128
                            mem[_766] = 0
                            mem[_766 + 32] = 0
                            mem[_766 + 64] = 0
                            mem[_766 + 96] = 0
                            idx = 0
                            s = _766
                            t = _465
                            u = 1
                            while idx < 50:
                                if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                    return 0
                                if start_time < mem[t + 64]:
                                    if start_time < mem[s + 64]:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                        if u > ext_call.return_data[0]:
                                            return 0
                                    else:
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                    if start_time > -604801:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s
                                    t = t
                                    u = u
                                    continue 
                                if u > ext_call.return_data[0]:
                                    if start_time < mem[s + 64]:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                        revert with 0, 17
                                    if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                        revert with 0, 17
                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                        if u > ext_call.return_data[0]:
                                            return 0
                                    else:
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                    if start_time > -604801:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s
                                    t = t
                                    u = u
                                    continue 
                                if u + 1 > ext_call.return_data[0]:
                                    _1265 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_1265] = 0
                                    mem[_1265 + 32] = 0
                                    mem[_1265 + 64] = 0
                                    mem[_1265 + 96] = 0
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = t
                                    t = _1265
                                    u = u + 1
                                    continue 
                                staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                        gas gas_remaining wei
                                       args arg1, u + 1
                                mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1297 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 128
                                _1313 = mem[64]
                                if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                    revert with 0, 65
                                mem[64] = mem[64] + 128
                                require mem[_1297] == ('signextend', 15, ('mem', ('range', ('var', '_1297'), 32)))
                                mem[_1313] = mem[_1297]
                                require mem[_1297 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_1297')), 32)))
                                mem[_1313 + 32] = mem[_1297 + 32]
                                mem[_1313 + 64] = mem[_1297 + 64]
                                mem[_1313 + 96] = mem[_1297 + 96]
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = t
                                t = _1313
                                u = u + 1
                                continue 
        return 0
    else:
        return 0
}

function claim(uint256 arg1) payable {
    mem[64] = 96
    require calldata.size - 4 >= 32
    if block.timestamp < time_cursor:
        if last_token_time / 168 * 24 * 3600 and 168 * 24 * 3600 > -1 / last_token_time / 168 * 24 * 3600:
            revert with 0, 17
        mem[100] = arg1
        staticcall voting_escrowAddress.user_point_epoch(uint256 arg1) with:
                gas gas_remaining wei
               args arg1
        mem[96] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        mem[64] = ceil32(return_data.size) + 96
        require return_data.size >= 32
        if ext_call.return_data[0]:
            mem[0] = arg1
            mem[32] = 2
            if sub_486d25fe[arg1]:
                mem[0] = arg1
                mem[32] = 3
                if sub_16aea5c0[arg1]:
                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                            gas gas_remaining wei
                           args arg1, sub_16aea5c0[arg1]
                    mem[ceil32(return_data.size) + 96 len 128] = ext_call.return_data[0 len 128]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 128
                    if not bool((2 * ceil32(return_data.size)) + 224 <= test266151307()):
                        revert with 0, 65
                    require ext_call.return_data[0] == ('signextend', 15, ('ext_call.return_data', 0, 32))
                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    require ext_call.return_data[32] == ('signextend', 15, ('ext_call.return_data', 32, 32))
                    mem[(2 * ceil32(return_data.size)) + 128] = ext_call.return_data[32]
                    mem[(2 * ceil32(return_data.size)) + 160] = ext_call.return_data[64]
                    mem[(2 * ceil32(return_data.size)) + 192] = ext_call.return_data[96]
                    if sub_486d25fe[arg1]:
                        if sub_486d25fe[arg1] < last_token_time:
                            mem[64] = (2 * ceil32(return_data.size)) + 352
                            mem[(2 * ceil32(return_data.size)) + 224] = 0
                            mem[(2 * ceil32(return_data.size)) + 256] = 0
                            mem[(2 * ceil32(return_data.size)) + 288] = 0
                            mem[(2 * ceil32(return_data.size)) + 320] = 0
                            if sub_486d25fe[arg1] >= start_time:
                                idx = 0
                                s = (2 * ceil32(return_data.size)) + 224
                                t = (2 * ceil32(return_data.size)) + 96
                                u = sub_16aea5c0[arg1]
                                while idx < 50:
                                    if sub_486d25fe[arg1] >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                        if u < 1:
                                            revert with 0, 17
                                        if ext_call.return_data[0] < u - 1:
                                            sub_16aea5c0[arg1] = ext_call.return_data[0]
                                            emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                        else:
                                            sub_16aea5c0[arg1] = u - 1
                                            emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                        return 0
                                    if sub_486d25fe[arg1] < mem[t + 64]:
                                        if sub_486d25fe[arg1] < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= ext_call.return_data[0]:
                                                if sub_486d25fe[arg1] > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if ext_call.return_data[0] < u - 1:
                                                sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if sub_486d25fe[arg1] >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor2[arg1]]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                if u < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < u - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                        if sub_486d25fe[arg1] > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u > ext_call.return_data[0]:
                                        if sub_486d25fe[arg1] < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= ext_call.return_data[0]:
                                                if sub_486d25fe[arg1] > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if ext_call.return_data[0] < u - 1:
                                                sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if sub_486d25fe[arg1] >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor2[arg1]]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                if u < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < u - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                        if sub_486d25fe[arg1] > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u + 1 > ext_call.return_data[0]:
                                        _2114 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_2114] = 0
                                        mem[_2114 + 32] = 0
                                        mem[_2114 + 64] = 0
                                        mem[_2114 + 96] = 0
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _2114
                                        u = u + 1
                                        continue 
                                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                            gas gas_remaining wei
                                           args arg1, u + 1
                                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _2173 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 128
                                    _2245 = mem[64]
                                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                        revert with 0, 65
                                    mem[64] = mem[64] + 128
                                    require mem[_2173] == ('signextend', 15, ('mem', ('range', ('var', '_2173'), 32)))
                                    mem[_2245] = mem[_2173]
                                    require mem[_2173 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_2173')), 32)))
                                    mem[_2245 + 32] = mem[_2173 + 32]
                                    mem[_2245 + 64] = mem[_2173 + 64]
                                    mem[_2245 + 96] = mem[_2173 + 96]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = t
                                    t = _2245
                                    u = u + 1
                                    continue 
                                if u < 1:
                                    revert with 0, 17
                                if ext_call.return_data[0] < u - 1:
                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                else:
                                    sub_16aea5c0[arg1] = u - 1
                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                            else:
                                idx = 0
                                s = (2 * ceil32(return_data.size)) + 224
                                t = (2 * ceil32(return_data.size)) + 96
                                u = sub_16aea5c0[arg1]
                                while idx < 50:
                                    if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                        if u < 1:
                                            revert with 0, 17
                                        if ext_call.return_data[0] < u - 1:
                                            sub_16aea5c0[arg1] = ext_call.return_data[0]
                                            sub_486d25fe[arg1] = start_time
                                            emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                        else:
                                            sub_16aea5c0[arg1] = u - 1
                                            sub_486d25fe[arg1] = start_time
                                            emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                        return 0
                                    if start_time < mem[t + 64]:
                                        if start_time < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= ext_call.return_data[0]:
                                                if start_time > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if ext_call.return_data[0] < u - 1:
                                                sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                if u < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < u - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                        if start_time > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u > ext_call.return_data[0]:
                                        if start_time < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= ext_call.return_data[0]:
                                                if start_time > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if ext_call.return_data[0] < u - 1:
                                                sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                if u < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < u - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                        if start_time > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u + 1 > ext_call.return_data[0]:
                                        _2121 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_2121] = 0
                                        mem[_2121 + 32] = 0
                                        mem[_2121 + 64] = 0
                                        mem[_2121 + 96] = 0
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _2121
                                        u = u + 1
                                        continue 
                                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                            gas gas_remaining wei
                                           args arg1, u + 1
                                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _2179 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 128
                                    _2248 = mem[64]
                                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                        revert with 0, 65
                                    mem[64] = mem[64] + 128
                                    require mem[_2179] == ('signextend', 15, ('mem', ('range', ('var', '_2179'), 32)))
                                    mem[_2248] = mem[_2179]
                                    require mem[_2179 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_2179')), 32)))
                                    mem[_2248 + 32] = mem[_2179 + 32]
                                    mem[_2248 + 64] = mem[_2179 + 64]
                                    mem[_2248 + 96] = mem[_2179 + 96]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = t
                                    t = _2248
                                    u = u + 1
                                    continue 
                                if u < 1:
                                    revert with 0, 17
                                if ext_call.return_data[0] < u - 1:
                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                    sub_486d25fe[arg1] = start_time
                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                else:
                                    sub_16aea5c0[arg1] = u - 1
                                    sub_486d25fe[arg1] = start_time
                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                    else:
                        if ext_call.return_data[64] > -604801:
                            revert with 0, 17
                        if ext_call.return_data[64] + (168 * 24 * 3600) < 1:
                            revert with 0, 17
                        if ext_call.return_data[64] + 604799 / 168 * 24 * 3600 and 168 * 24 * 3600 > -1 / ext_call.return_data[64] + 604799 / 168 * 24 * 3600:
                            revert with 0, 17
                        if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 < last_token_time:
                            mem[64] = (2 * ceil32(return_data.size)) + 352
                            mem[(2 * ceil32(return_data.size)) + 224] = 0
                            mem[(2 * ceil32(return_data.size)) + 256] = 0
                            mem[(2 * ceil32(return_data.size)) + 288] = 0
                            mem[(2 * ceil32(return_data.size)) + 320] = 0
                            if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 >= start_time:
                                idx = 0
                                s = (2 * ceil32(return_data.size)) + 224
                                t = (2 * ceil32(return_data.size)) + 96
                                u = sub_16aea5c0[arg1]
                                while idx < 50:
                                    if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                        if u < 1:
                                            revert with 0, 17
                                        if ext_call.return_data[0] < u - 1:
                                            sub_16aea5c0[arg1] = ext_call.return_data[0]
                                            sub_486d25fe[arg1] = 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600
                                            emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                        else:
                                            sub_16aea5c0[arg1] = u - 1
                                            sub_486d25fe[arg1] = 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600
                                            emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                        return 0
                                    if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 < mem[t + 64]:
                                        if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= ext_call.return_data[0]:
                                                if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if ext_call.return_data[0] < u - 1:
                                                sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[ext_call.return_data[64] + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[ext_call.return_data[64] + 604799 / 168 * 24 * 3600]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[ext_call.return_data[64] + 604799 / 168 * 24 * 3600] / sub_d4dafba8[ext_call.return_data[64] + 604799 / 168 * 24 * 3600]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                if u < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < u - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[ext_call.return_data[64] + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[ext_call.return_data[64] + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[ext_call.return_data[64] + 604799 / 168 * 24 * 3600] / sub_d4dafba8[ext_call.return_data[64] + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                        if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u > ext_call.return_data[0]:
                                        if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= ext_call.return_data[0]:
                                                if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if ext_call.return_data[0] < u - 1:
                                                sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[ext_call.return_data[64] + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[ext_call.return_data[64] + 604799 / 168 * 24 * 3600]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[ext_call.return_data[64] + 604799 / 168 * 24 * 3600] / sub_d4dafba8[ext_call.return_data[64] + 604799 / 168 * 24 * 3600]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                if u < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < u - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[ext_call.return_data[64] + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[ext_call.return_data[64] + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[ext_call.return_data[64] + 604799 / 168 * 24 * 3600] / sub_d4dafba8[ext_call.return_data[64] + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                        if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u + 1 > ext_call.return_data[0]:
                                        _2128 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_2128] = 0
                                        mem[_2128 + 32] = 0
                                        mem[_2128 + 64] = 0
                                        mem[_2128 + 96] = 0
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _2128
                                        u = u + 1
                                        continue 
                                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                            gas gas_remaining wei
                                           args arg1, u + 1
                                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _2185 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 128
                                    _2251 = mem[64]
                                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                        revert with 0, 65
                                    mem[64] = mem[64] + 128
                                    require mem[_2185] == ('signextend', 15, ('mem', ('range', ('var', '_2185'), 32)))
                                    mem[_2251] = mem[_2185]
                                    require mem[_2185 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_2185')), 32)))
                                    mem[_2251 + 32] = mem[_2185 + 32]
                                    mem[_2251 + 64] = mem[_2185 + 64]
                                    mem[_2251 + 96] = mem[_2185 + 96]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = t
                                    t = _2251
                                    u = u + 1
                                    continue 
                                if u < 1:
                                    revert with 0, 17
                                if ext_call.return_data[0] < u - 1:
                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600
                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                else:
                                    sub_16aea5c0[arg1] = u - 1
                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600
                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                            else:
                                idx = 0
                                s = (2 * ceil32(return_data.size)) + 224
                                t = (2 * ceil32(return_data.size)) + 96
                                u = sub_16aea5c0[arg1]
                                while idx < 50:
                                    if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                        if u < 1:
                                            revert with 0, 17
                                        if ext_call.return_data[0] < u - 1:
                                            sub_16aea5c0[arg1] = ext_call.return_data[0]
                                            sub_486d25fe[arg1] = start_time
                                            emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                        else:
                                            sub_16aea5c0[arg1] = u - 1
                                            sub_486d25fe[arg1] = start_time
                                            emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                        return 0
                                    if start_time < mem[t + 64]:
                                        if start_time < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= ext_call.return_data[0]:
                                                if start_time > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if ext_call.return_data[0] < u - 1:
                                                sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                if u < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < u - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                        if start_time > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u > ext_call.return_data[0]:
                                        if start_time < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= ext_call.return_data[0]:
                                                if start_time > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if ext_call.return_data[0] < u - 1:
                                                sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                if u < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < u - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                        if start_time > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u + 1 > ext_call.return_data[0]:
                                        _2135 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_2135] = 0
                                        mem[_2135 + 32] = 0
                                        mem[_2135 + 64] = 0
                                        mem[_2135 + 96] = 0
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _2135
                                        u = u + 1
                                        continue 
                                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                            gas gas_remaining wei
                                           args arg1, u + 1
                                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _2191 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 128
                                    _2254 = mem[64]
                                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                        revert with 0, 65
                                    mem[64] = mem[64] + 128
                                    require mem[_2191] == ('signextend', 15, ('mem', ('range', ('var', '_2191'), 32)))
                                    mem[_2254] = mem[_2191]
                                    require mem[_2191 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_2191')), 32)))
                                    mem[_2254 + 32] = mem[_2191 + 32]
                                    mem[_2254 + 64] = mem[_2191 + 64]
                                    mem[_2254 + 96] = mem[_2191 + 96]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = t
                                    t = _2254
                                    u = u + 1
                                    continue 
                                if u < 1:
                                    revert with 0, 17
                                if ext_call.return_data[0] < u - 1:
                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                    sub_486d25fe[arg1] = start_time
                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                else:
                                    sub_16aea5c0[arg1] = u - 1
                                    sub_486d25fe[arg1] = start_time
                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                else:
                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                            gas gas_remaining wei
                           args arg1, 1
                    mem[ceil32(return_data.size) + 96 len 128] = ext_call.return_data[0 len 128]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 128
                    if not bool((2 * ceil32(return_data.size)) + 224 <= test266151307()):
                        revert with 0, 65
                    require ext_call.return_data[0] == ('signextend', 15, ('ext_call.return_data', 0, 32))
                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    require ext_call.return_data[32] == ('signextend', 15, ('ext_call.return_data', 32, 32))
                    mem[(2 * ceil32(return_data.size)) + 128] = ext_call.return_data[32]
                    mem[(2 * ceil32(return_data.size)) + 160] = ext_call.return_data[64]
                    mem[(2 * ceil32(return_data.size)) + 192] = ext_call.return_data[96]
                    if sub_486d25fe[arg1]:
                        if sub_486d25fe[arg1] < last_token_time:
                            mem[64] = (2 * ceil32(return_data.size)) + 352
                            mem[(2 * ceil32(return_data.size)) + 224] = 0
                            mem[(2 * ceil32(return_data.size)) + 256] = 0
                            mem[(2 * ceil32(return_data.size)) + 288] = 0
                            mem[(2 * ceil32(return_data.size)) + 320] = 0
                            if sub_486d25fe[arg1] >= start_time:
                                idx = 0
                                s = (2 * ceil32(return_data.size)) + 224
                                t = (2 * ceil32(return_data.size)) + 96
                                u = 1
                                while idx < 50:
                                    if sub_486d25fe[arg1] >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                        if u < 1:
                                            revert with 0, 17
                                        if ext_call.return_data[0] < u - 1:
                                            sub_16aea5c0[arg1] = ext_call.return_data[0]
                                            emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                        else:
                                            sub_16aea5c0[arg1] = u - 1
                                            emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                        return 0
                                    if sub_486d25fe[arg1] < mem[t + 64]:
                                        if sub_486d25fe[arg1] < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= ext_call.return_data[0]:
                                                if sub_486d25fe[arg1] > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if ext_call.return_data[0] < u - 1:
                                                sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if sub_486d25fe[arg1] >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor2[arg1]]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                if u < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < u - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                        if sub_486d25fe[arg1] > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u > ext_call.return_data[0]:
                                        if sub_486d25fe[arg1] < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= ext_call.return_data[0]:
                                                if sub_486d25fe[arg1] > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if ext_call.return_data[0] < u - 1:
                                                sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if sub_486d25fe[arg1] >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor2[arg1]]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                if u < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < u - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                        if sub_486d25fe[arg1] > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u + 1 > ext_call.return_data[0]:
                                        _2142 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_2142] = 0
                                        mem[_2142 + 32] = 0
                                        mem[_2142 + 64] = 0
                                        mem[_2142 + 96] = 0
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _2142
                                        u = u + 1
                                        continue 
                                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                            gas gas_remaining wei
                                           args arg1, u + 1
                                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _2197 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 128
                                    _2257 = mem[64]
                                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                        revert with 0, 65
                                    mem[64] = mem[64] + 128
                                    require mem[_2197] == ('signextend', 15, ('mem', ('range', ('var', '_2197'), 32)))
                                    mem[_2257] = mem[_2197]
                                    require mem[_2197 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_2197')), 32)))
                                    mem[_2257 + 32] = mem[_2197 + 32]
                                    mem[_2257 + 64] = mem[_2197 + 64]
                                    mem[_2257 + 96] = mem[_2197 + 96]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = t
                                    t = _2257
                                    u = u + 1
                                    continue 
                                if u < 1:
                                    revert with 0, 17
                                if ext_call.return_data[0] < u - 1:
                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                else:
                                    sub_16aea5c0[arg1] = u - 1
                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                            else:
                                idx = 0
                                s = (2 * ceil32(return_data.size)) + 224
                                t = (2 * ceil32(return_data.size)) + 96
                                u = 1
                                while idx < 50:
                                    if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                        if u < 1:
                                            revert with 0, 17
                                        if ext_call.return_data[0] < u - 1:
                                            sub_16aea5c0[arg1] = ext_call.return_data[0]
                                            sub_486d25fe[arg1] = start_time
                                            emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                        else:
                                            sub_16aea5c0[arg1] = u - 1
                                            sub_486d25fe[arg1] = start_time
                                            emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                        return 0
                                    if start_time < mem[t + 64]:
                                        if start_time < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= ext_call.return_data[0]:
                                                if start_time > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if ext_call.return_data[0] < u - 1:
                                                sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                if u < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < u - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                        if start_time > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u > ext_call.return_data[0]:
                                        if start_time < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= ext_call.return_data[0]:
                                                if start_time > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if ext_call.return_data[0] < u - 1:
                                                sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                if u < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < u - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                        if start_time > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u + 1 > ext_call.return_data[0]:
                                        _2149 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_2149] = 0
                                        mem[_2149 + 32] = 0
                                        mem[_2149 + 64] = 0
                                        mem[_2149 + 96] = 0
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _2149
                                        u = u + 1
                                        continue 
                                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                            gas gas_remaining wei
                                           args arg1, u + 1
                                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _2203 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 128
                                    _2260 = mem[64]
                                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                        revert with 0, 65
                                    mem[64] = mem[64] + 128
                                    require mem[_2203] == ('signextend', 15, ('mem', ('range', ('var', '_2203'), 32)))
                                    mem[_2260] = mem[_2203]
                                    require mem[_2203 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_2203')), 32)))
                                    mem[_2260 + 32] = mem[_2203 + 32]
                                    mem[_2260 + 64] = mem[_2203 + 64]
                                    mem[_2260 + 96] = mem[_2203 + 96]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = t
                                    t = _2260
                                    u = u + 1
                                    continue 
                                if u < 1:
                                    revert with 0, 17
                                if ext_call.return_data[0] < u - 1:
                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                    sub_486d25fe[arg1] = start_time
                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                else:
                                    sub_16aea5c0[arg1] = u - 1
                                    sub_486d25fe[arg1] = start_time
                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                    else:
                        if ext_call.return_data[64] > -604801:
                            revert with 0, 17
                        if ext_call.return_data[64] + (168 * 24 * 3600) < 1:
                            revert with 0, 17
                        if ext_call.return_data[64] + 604799 / 168 * 24 * 3600 and 168 * 24 * 3600 > -1 / ext_call.return_data[64] + 604799 / 168 * 24 * 3600:
                            revert with 0, 17
                        if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 < last_token_time:
                            mem[64] = (2 * ceil32(return_data.size)) + 352
                            mem[(2 * ceil32(return_data.size)) + 224] = 0
                            mem[(2 * ceil32(return_data.size)) + 256] = 0
                            mem[(2 * ceil32(return_data.size)) + 288] = 0
                            mem[(2 * ceil32(return_data.size)) + 320] = 0
                            if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 >= start_time:
                                idx = 0
                                s = (2 * ceil32(return_data.size)) + 224
                                t = (2 * ceil32(return_data.size)) + 96
                                u = 1
                                while idx < 50:
                                    if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                        if u < 1:
                                            revert with 0, 17
                                        if ext_call.return_data[0] < u - 1:
                                            sub_16aea5c0[arg1] = ext_call.return_data[0]
                                            sub_486d25fe[arg1] = 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600
                                            emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                        else:
                                            sub_16aea5c0[arg1] = u - 1
                                            sub_486d25fe[arg1] = 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600
                                            emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                        return 0
                                    if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 < mem[t + 64]:
                                        if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= ext_call.return_data[0]:
                                                if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if ext_call.return_data[0] < u - 1:
                                                sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[ext_call.return_data[64] + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[ext_call.return_data[64] + 604799 / 168 * 24 * 3600]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[ext_call.return_data[64] + 604799 / 168 * 24 * 3600] / sub_d4dafba8[ext_call.return_data[64] + 604799 / 168 * 24 * 3600]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                if u < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < u - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[ext_call.return_data[64] + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[ext_call.return_data[64] + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[ext_call.return_data[64] + 604799 / 168 * 24 * 3600] / sub_d4dafba8[ext_call.return_data[64] + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                        if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u > ext_call.return_data[0]:
                                        if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= ext_call.return_data[0]:
                                                if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if ext_call.return_data[0] < u - 1:
                                                sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[ext_call.return_data[64] + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[ext_call.return_data[64] + 604799 / 168 * 24 * 3600]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[ext_call.return_data[64] + 604799 / 168 * 24 * 3600] / sub_d4dafba8[ext_call.return_data[64] + 604799 / 168 * 24 * 3600]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                if u < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < u - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[ext_call.return_data[64] + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[ext_call.return_data[64] + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('ext_call.return_data', 64, 32)), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[ext_call.return_data[64] + 604799 / 168 * 24 * 3600] / sub_d4dafba8[ext_call.return_data[64] + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                        if 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600 > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u + 1 > ext_call.return_data[0]:
                                        _2156 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_2156] = 0
                                        mem[_2156 + 32] = 0
                                        mem[_2156 + 64] = 0
                                        mem[_2156 + 96] = 0
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _2156
                                        u = u + 1
                                        continue 
                                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                            gas gas_remaining wei
                                           args arg1, u + 1
                                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _2209 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 128
                                    _2263 = mem[64]
                                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                        revert with 0, 65
                                    mem[64] = mem[64] + 128
                                    require mem[_2209] == ('signextend', 15, ('mem', ('range', ('var', '_2209'), 32)))
                                    mem[_2263] = mem[_2209]
                                    require mem[_2209 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_2209')), 32)))
                                    mem[_2263 + 32] = mem[_2209 + 32]
                                    mem[_2263 + 64] = mem[_2209 + 64]
                                    mem[_2263 + 96] = mem[_2209 + 96]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = t
                                    t = _2263
                                    u = u + 1
                                    continue 
                                if u < 1:
                                    revert with 0, 17
                                if ext_call.return_data[0] < u - 1:
                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600
                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                else:
                                    sub_16aea5c0[arg1] = u - 1
                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * ext_call.return_data[64] + 604799 / 168 * 24 * 3600
                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                            else:
                                idx = 0
                                s = (2 * ceil32(return_data.size)) + 224
                                t = (2 * ceil32(return_data.size)) + 96
                                u = 1
                                while idx < 50:
                                    if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                        if u < 1:
                                            revert with 0, 17
                                        if ext_call.return_data[0] < u - 1:
                                            sub_16aea5c0[arg1] = ext_call.return_data[0]
                                            sub_486d25fe[arg1] = start_time
                                            emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                        else:
                                            sub_16aea5c0[arg1] = u - 1
                                            sub_486d25fe[arg1] = start_time
                                            emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                        return 0
                                    if start_time < mem[t + 64]:
                                        if start_time < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= ext_call.return_data[0]:
                                                if start_time > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if ext_call.return_data[0] < u - 1:
                                                sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                if u < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < u - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                        if start_time > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u > ext_call.return_data[0]:
                                        if start_time < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= ext_call.return_data[0]:
                                                if start_time > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if ext_call.return_data[0] < u - 1:
                                                sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                if u < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < u - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                        if start_time > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u + 1 > ext_call.return_data[0]:
                                        _2163 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_2163] = 0
                                        mem[_2163 + 32] = 0
                                        mem[_2163 + 64] = 0
                                        mem[_2163 + 96] = 0
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _2163
                                        u = u + 1
                                        continue 
                                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                            gas gas_remaining wei
                                           args arg1, u + 1
                                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _2215 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 128
                                    _2266 = mem[64]
                                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                        revert with 0, 65
                                    mem[64] = mem[64] + 128
                                    require mem[_2215] == ('signextend', 15, ('mem', ('range', ('var', '_2215'), 32)))
                                    mem[_2266] = mem[_2215]
                                    require mem[_2215 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_2215')), 32)))
                                    mem[_2266 + 32] = mem[_2215 + 32]
                                    mem[_2266 + 64] = mem[_2215 + 64]
                                    mem[_2266 + 96] = mem[_2215 + 96]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = t
                                    t = _2266
                                    u = u + 1
                                    continue 
                                if u < 1:
                                    revert with 0, 17
                                if ext_call.return_data[0] < u - 1:
                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                    sub_486d25fe[arg1] = start_time
                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                else:
                                    sub_16aea5c0[arg1] = u - 1
                                    sub_486d25fe[arg1] = start_time
                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
            else:
                idx = 0
                s = 0
                while idx < 128:
                    if s < ext_call.return_data[0]:
                        if s > !ext_call.return_data[0]:
                            revert with 0, 17
                        if 2 > !(s + ext_call.return_data[0]):
                            revert with 0, 17
                        staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                gas gas_remaining wei
                               args arg1, s + ext_call.return_data[0] + 2 / 2
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2269 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _2327 = mem[64]
                        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                            revert with 0, 65
                        mem[64] = mem[64] + 128
                        require mem[_2269] == ('signextend', 15, ('mem', ('range', ('var', '_2269'), 32)))
                        mem[_2327] = mem[_2269]
                        require mem[_2269 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_2269')), 32)))
                        mem[_2327 + 32] = mem[_2269 + 32]
                        mem[_2327 + 64] = mem[_2269 + 64]
                        mem[_2327 + 96] = mem[_2269 + 96]
                        if mem[_2327 + 64] <= start_time:
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ext_call.return_data[0] + 2 / 2
                            continue 
                        if s + ext_call.return_data[0] + 2 / 2 < 1:
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s
                        continue 
                    if s:
                        staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                gas gas_remaining wei
                               args arg1, s
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2067 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _2169 = mem[64]
                        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                            revert with 0, 65
                        mem[64] = mem[64] + 128
                        require mem[_2067] == ('signextend', 15, ('mem', ('range', ('var', '_2067'), 32)))
                        mem[_2169] = mem[_2067]
                        require mem[_2067 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_2067')), 32)))
                        mem[_2169 + 32] = mem[_2067 + 32]
                        mem[_2169 + 64] = mem[_2067 + 64]
                        mem[_2169 + 96] = mem[_2067 + 96]
                        if sub_486d25fe[arg1]:
                            if sub_486d25fe[arg1] < last_token_time:
                                if sub_486d25fe[arg1] >= start_time:
                                    _2389 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_2389] = 0
                                    mem[_2389 + 32] = 0
                                    mem[_2389 + 64] = 0
                                    mem[_2389 + 96] = 0
                                    idx = 0
                                    t = _2389
                                    u = _2169
                                    v = s
                                    while idx < 50:
                                        if sub_486d25fe[arg1] >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                            if v < 1:
                                                revert with 0, 17
                                            if ext_call.return_data[0] < v - 1:
                                                sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                            else:
                                                sub_16aea5c0[arg1] = v - 1
                                                emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                                            return 0
                                        if sub_486d25fe[arg1] < mem[u + 64]:
                                            if sub_486d25fe[arg1] < mem[t + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                                if v <= ext_call.return_data[0]:
                                                    if sub_486d25fe[arg1] > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    t = t
                                                    u = u
                                                    v = v
                                                    continue 
                                                if v < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < v - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                            else:
                                                if v > ext_call.return_data[0]:
                                                    if v < 1:
                                                        revert with 0, 17
                                                    if ext_call.return_data[0] < v - 1:
                                                        sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                        emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                    else:
                                                        sub_16aea5c0[arg1] = v - 1
                                                        emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    if sub_486d25fe[arg1] >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor2[arg1]]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                        revert with 0, 17
                                            if sub_486d25fe[arg1] > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            t = t
                                            u = u
                                            v = v
                                            continue 
                                        if v > ext_call.return_data[0]:
                                            if sub_486d25fe[arg1] < mem[t + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                                if v <= ext_call.return_data[0]:
                                                    if sub_486d25fe[arg1] > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    t = t
                                                    u = u
                                                    v = v
                                                    continue 
                                                if v < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < v - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                            else:
                                                if v > ext_call.return_data[0]:
                                                    if v < 1:
                                                        revert with 0, 17
                                                    if ext_call.return_data[0] < v - 1:
                                                        sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                        emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                    else:
                                                        sub_16aea5c0[arg1] = v - 1
                                                        emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    if sub_486d25fe[arg1] >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor2[arg1]]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                        revert with 0, 17
                                            if sub_486d25fe[arg1] > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            t = t
                                            u = u
                                            v = v
                                            continue 
                                        if v + 1 > ext_call.return_data[0]:
                                            _6485 = mem[64]
                                            mem[64] = mem[64] + 128
                                            mem[_6485] = 0
                                            mem[_6485 + 32] = 0
                                            mem[_6485 + 64] = 0
                                            mem[_6485 + 96] = 0
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            t = u
                                            u = _6485
                                            v = v + 1
                                            continue 
                                        staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                                gas gas_remaining wei
                                               args arg1, v + 1
                                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6705 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 128
                                        _6950 = mem[64]
                                        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                            revert with 0, 65
                                        mem[64] = mem[64] + 128
                                        require mem[_6705] == ('signextend', 15, ('mem', ('range', ('var', '_6705'), 32)))
                                        mem[_6950] = mem[_6705]
                                        require mem[_6705 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6705')), 32)))
                                        mem[_6950 + 32] = mem[_6705 + 32]
                                        mem[_6950 + 64] = mem[_6705 + 64]
                                        mem[_6950 + 96] = mem[_6705 + 96]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = u
                                        u = _6950
                                        v = v + 1
                                        continue 
                                    if v < 1:
                                        revert with 0, 17
                                    if ext_call.return_data[0] < v - 1:
                                        sub_16aea5c0[arg1] = ext_call.return_data[0]
                                        emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                    else:
                                        sub_16aea5c0[arg1] = v - 1
                                        emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                                else:
                                    _2401 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_2401] = 0
                                    mem[_2401 + 32] = 0
                                    mem[_2401 + 64] = 0
                                    mem[_2401 + 96] = 0
                                    idx = 0
                                    t = _2401
                                    u = _2169
                                    v = s
                                    while idx < 50:
                                        if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                            if v < 1:
                                                revert with 0, 17
                                            if ext_call.return_data[0] < v - 1:
                                                sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                            else:
                                                sub_16aea5c0[arg1] = v - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                                            return 0
                                        if start_time < mem[u + 64]:
                                            if start_time < mem[t + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                                if v <= ext_call.return_data[0]:
                                                    if start_time > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    t = t
                                                    u = u
                                                    v = v
                                                    continue 
                                                if v < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < v - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                            else:
                                                if v > ext_call.return_data[0]:
                                                    if v < 1:
                                                        revert with 0, 17
                                                    if ext_call.return_data[0] < v - 1:
                                                        sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                    else:
                                                        sub_16aea5c0[arg1] = v - 1
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                            if start_time > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            t = t
                                            u = u
                                            v = v
                                            continue 
                                        if v > ext_call.return_data[0]:
                                            if start_time < mem[t + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                                if v <= ext_call.return_data[0]:
                                                    if start_time > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    t = t
                                                    u = u
                                                    v = v
                                                    continue 
                                                if v < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < v - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                            else:
                                                if v > ext_call.return_data[0]:
                                                    if v < 1:
                                                        revert with 0, 17
                                                    if ext_call.return_data[0] < v - 1:
                                                        sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                    else:
                                                        sub_16aea5c0[arg1] = v - 1
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                            if start_time > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            t = t
                                            u = u
                                            v = v
                                            continue 
                                        if v + 1 > ext_call.return_data[0]:
                                            _6492 = mem[64]
                                            mem[64] = mem[64] + 128
                                            mem[_6492] = 0
                                            mem[_6492 + 32] = 0
                                            mem[_6492 + 64] = 0
                                            mem[_6492 + 96] = 0
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            t = u
                                            u = _6492
                                            v = v + 1
                                            continue 
                                        staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                                gas gas_remaining wei
                                               args arg1, v + 1
                                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6711 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 128
                                        _6953 = mem[64]
                                        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                            revert with 0, 65
                                        mem[64] = mem[64] + 128
                                        require mem[_6711] == ('signextend', 15, ('mem', ('range', ('var', '_6711'), 32)))
                                        mem[_6953] = mem[_6711]
                                        require mem[_6711 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6711')), 32)))
                                        mem[_6953 + 32] = mem[_6711 + 32]
                                        mem[_6953 + 64] = mem[_6711 + 64]
                                        mem[_6953 + 96] = mem[_6711 + 96]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = u
                                        u = _6953
                                        v = v + 1
                                        continue 
                                    if v < 1:
                                        revert with 0, 17
                                    if ext_call.return_data[0] < v - 1:
                                        sub_16aea5c0[arg1] = ext_call.return_data[0]
                                        sub_486d25fe[arg1] = start_time
                                        emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                    else:
                                        sub_16aea5c0[arg1] = v - 1
                                        sub_486d25fe[arg1] = start_time
                                        emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                        else:
                            _2357 = mem[_2169 + 64]
                            if mem[_2169 + 64] > -604801:
                                revert with 0, 17
                            if mem[_2169 + 64] + (168 * 24 * 3600) < 1:
                                revert with 0, 17
                            if mem[_2169 + 64] + 604799 / 168 * 24 * 3600 and 168 * 24 * 3600 > -1 / mem[_2169 + 64] + 604799 / 168 * 24 * 3600:
                                revert with 0, 17
                            if 168 * 24 * 3600 * mem[_2169 + 64] + 604799 / 168 * 24 * 3600 < last_token_time:
                                if 168 * 24 * 3600 * mem[_2169 + 64] + 604799 / 168 * 24 * 3600 >= start_time:
                                    _2891 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_2891] = 0
                                    mem[_2891 + 32] = 0
                                    mem[_2891 + 64] = 0
                                    mem[_2891 + 96] = 0
                                    idx = 0
                                    t = _2891
                                    u = _2169
                                    v = s
                                    while idx < 50:
                                        if 168 * 24 * 3600 * _2357 + 604799 / 168 * 24 * 3600 >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                            if v < 1:
                                                revert with 0, 17
                                            if ext_call.return_data[0] < v - 1:
                                                sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * _2357 + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                            else:
                                                sub_16aea5c0[arg1] = v - 1
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * _2357 + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                                            return 0
                                        if 168 * 24 * 3600 * _2357 + 604799 / 168 * 24 * 3600 < mem[u + 64]:
                                            if 168 * 24 * 3600 * _2357 + 604799 / 168 * 24 * 3600 < mem[t + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2357')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2357')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2357')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2357')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2357')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2357')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2357')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2357')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2357')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2357')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2357')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2357')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2357')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                                if v <= ext_call.return_data[0]:
                                                    if 168 * 24 * 3600 * _2357 + 604799 / 168 * 24 * 3600 > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    t = t
                                                    u = u
                                                    v = v
                                                    continue 
                                                if v < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < v - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _2357 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _2357 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2357')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if 168 * 24 * 3600 * _2357 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2357')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[_2357 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2357')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[_2357 + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2357')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[_2357 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_2357 + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                            else:
                                                if v > ext_call.return_data[0]:
                                                    if v < 1:
                                                        revert with 0, 17
                                                    if ext_call.return_data[0] < v - 1:
                                                        sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _2357 + 604799 / 168 * 24 * 3600
                                                        emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                    else:
                                                        sub_16aea5c0[arg1] = v - 1
                                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _2357 + 604799 / 168 * 24 * 3600
                                                        emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2357')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    if 168 * 24 * 3600 * _2357 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2357')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[_2357 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2357')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[_2357 + 604799 / 168 * 24 * 3600]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2357')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[_2357 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_2357 + 604799 / 168 * 24 * 3600]):
                                                        revert with 0, 17
                                            if 168 * 24 * 3600 * _2357 + 604799 / 168 * 24 * 3600 > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            t = t
                                            u = u
                                            v = v
                                            continue 
                                        if v > ext_call.return_data[0]:
                                            if 168 * 24 * 3600 * _2357 + 604799 / 168 * 24 * 3600 < mem[t + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2357')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2357')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2357')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2357')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2357')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2357')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2357')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2357')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2357')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2357')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2357')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2357')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2357')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                                if v <= ext_call.return_data[0]:
                                                    if 168 * 24 * 3600 * _2357 + 604799 / 168 * 24 * 3600 > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    t = t
                                                    u = u
                                                    v = v
                                                    continue 
                                                if v < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < v - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _2357 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _2357 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2357')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if 168 * 24 * 3600 * _2357 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2357')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[_2357 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2357')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[_2357 + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2357')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[_2357 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_2357 + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                            else:
                                                if v > ext_call.return_data[0]:
                                                    if v < 1:
                                                        revert with 0, 17
                                                    if ext_call.return_data[0] < v - 1:
                                                        sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _2357 + 604799 / 168 * 24 * 3600
                                                        emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                    else:
                                                        sub_16aea5c0[arg1] = v - 1
                                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _2357 + 604799 / 168 * 24 * 3600
                                                        emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2357')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    if 168 * 24 * 3600 * _2357 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2357')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[_2357 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2357')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[_2357 + 604799 / 168 * 24 * 3600]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2357')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[_2357 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_2357 + 604799 / 168 * 24 * 3600]):
                                                        revert with 0, 17
                                            if 168 * 24 * 3600 * _2357 + 604799 / 168 * 24 * 3600 > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            t = t
                                            u = u
                                            v = v
                                            continue 
                                        if v + 1 > ext_call.return_data[0]:
                                            _6499 = mem[64]
                                            mem[64] = mem[64] + 128
                                            mem[_6499] = 0
                                            mem[_6499 + 32] = 0
                                            mem[_6499 + 64] = 0
                                            mem[_6499 + 96] = 0
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            t = u
                                            u = _6499
                                            v = v + 1
                                            continue 
                                        staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                                gas gas_remaining wei
                                               args arg1, v + 1
                                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6717 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 128
                                        _6956 = mem[64]
                                        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                            revert with 0, 65
                                        mem[64] = mem[64] + 128
                                        require mem[_6717] == ('signextend', 15, ('mem', ('range', ('var', '_6717'), 32)))
                                        mem[_6956] = mem[_6717]
                                        require mem[_6717 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6717')), 32)))
                                        mem[_6956 + 32] = mem[_6717 + 32]
                                        mem[_6956 + 64] = mem[_6717 + 64]
                                        mem[_6956 + 96] = mem[_6717 + 96]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = u
                                        u = _6956
                                        v = v + 1
                                        continue 
                                    if v < 1:
                                        revert with 0, 17
                                    if ext_call.return_data[0] < v - 1:
                                        sub_16aea5c0[arg1] = ext_call.return_data[0]
                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _2357 + 604799 / 168 * 24 * 3600
                                        emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                    else:
                                        sub_16aea5c0[arg1] = v - 1
                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _2357 + 604799 / 168 * 24 * 3600
                                        emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                                else:
                                    _2949 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_2949] = 0
                                    mem[_2949 + 32] = 0
                                    mem[_2949 + 64] = 0
                                    mem[_2949 + 96] = 0
                                    idx = 0
                                    t = _2949
                                    u = _2169
                                    v = s
                                    while idx < 50:
                                        if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                            if v < 1:
                                                revert with 0, 17
                                            if ext_call.return_data[0] < v - 1:
                                                sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                            else:
                                                sub_16aea5c0[arg1] = v - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                                            return 0
                                        if start_time < mem[u + 64]:
                                            if start_time < mem[t + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                                if v <= ext_call.return_data[0]:
                                                    if start_time > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    t = t
                                                    u = u
                                                    v = v
                                                    continue 
                                                if v < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < v - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                            else:
                                                if v > ext_call.return_data[0]:
                                                    if v < 1:
                                                        revert with 0, 17
                                                    if ext_call.return_data[0] < v - 1:
                                                        sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                    else:
                                                        sub_16aea5c0[arg1] = v - 1
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                            if start_time > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            t = t
                                            u = u
                                            v = v
                                            continue 
                                        if v > ext_call.return_data[0]:
                                            if start_time < mem[t + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                                if v <= ext_call.return_data[0]:
                                                    if start_time > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    t = t
                                                    u = u
                                                    v = v
                                                    continue 
                                                if v < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < v - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                            else:
                                                if v > ext_call.return_data[0]:
                                                    if v < 1:
                                                        revert with 0, 17
                                                    if ext_call.return_data[0] < v - 1:
                                                        sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                    else:
                                                        sub_16aea5c0[arg1] = v - 1
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                            if start_time > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            t = t
                                            u = u
                                            v = v
                                            continue 
                                        if v + 1 > ext_call.return_data[0]:
                                            _6506 = mem[64]
                                            mem[64] = mem[64] + 128
                                            mem[_6506] = 0
                                            mem[_6506 + 32] = 0
                                            mem[_6506 + 64] = 0
                                            mem[_6506 + 96] = 0
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            t = u
                                            u = _6506
                                            v = v + 1
                                            continue 
                                        staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                                gas gas_remaining wei
                                               args arg1, v + 1
                                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6723 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 128
                                        _6959 = mem[64]
                                        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                            revert with 0, 65
                                        mem[64] = mem[64] + 128
                                        require mem[_6723] == ('signextend', 15, ('mem', ('range', ('var', '_6723'), 32)))
                                        mem[_6959] = mem[_6723]
                                        require mem[_6723 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6723')), 32)))
                                        mem[_6959 + 32] = mem[_6723 + 32]
                                        mem[_6959 + 64] = mem[_6723 + 64]
                                        mem[_6959 + 96] = mem[_6723 + 96]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = u
                                        u = _6959
                                        v = v + 1
                                        continue 
                                    if v < 1:
                                        revert with 0, 17
                                    if ext_call.return_data[0] < v - 1:
                                        sub_16aea5c0[arg1] = ext_call.return_data[0]
                                        sub_486d25fe[arg1] = start_time
                                        emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                    else:
                                        sub_16aea5c0[arg1] = v - 1
                                        sub_486d25fe[arg1] = start_time
                                        emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                    else:
                        staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                gas gas_remaining wei
                               args arg1, 1
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2111 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _2221 = mem[64]
                        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                            revert with 0, 65
                        mem[64] = mem[64] + 128
                        require mem[_2111] == ('signextend', 15, ('mem', ('range', ('var', '_2111'), 32)))
                        mem[_2221] = mem[_2111]
                        require mem[_2111 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_2111')), 32)))
                        mem[_2221 + 32] = mem[_2111 + 32]
                        mem[_2221 + 64] = mem[_2111 + 64]
                        mem[_2221 + 96] = mem[_2111 + 96]
                        if sub_486d25fe[arg1]:
                            if sub_486d25fe[arg1] < last_token_time:
                                if sub_486d25fe[arg1] >= start_time:
                                    _2402 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_2402] = 0
                                    mem[_2402 + 32] = 0
                                    mem[_2402 + 64] = 0
                                    mem[_2402 + 96] = 0
                                    idx = 0
                                    s = _2402
                                    t = _2221
                                    u = 1
                                    while idx < 50:
                                        if sub_486d25fe[arg1] >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                            if u < 1:
                                                revert with 0, 17
                                            if ext_call.return_data[0] < u - 1:
                                                sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                            return 0
                                        if sub_486d25fe[arg1] < mem[t + 64]:
                                            if sub_486d25fe[arg1] < mem[s + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                if u <= ext_call.return_data[0]:
                                                    if sub_486d25fe[arg1] > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    s = s
                                                    t = t
                                                    u = u
                                                    continue 
                                                if u < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < u - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                            else:
                                                if u > ext_call.return_data[0]:
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if ext_call.return_data[0] < u - 1:
                                                        sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                        emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if sub_486d25fe[arg1] >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor2[arg1]]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                        revert with 0, 17
                                            if sub_486d25fe[arg1] > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            t = t
                                            u = u
                                            continue 
                                        if u > ext_call.return_data[0]:
                                            if sub_486d25fe[arg1] < mem[s + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                if u <= ext_call.return_data[0]:
                                                    if sub_486d25fe[arg1] > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    s = s
                                                    t = t
                                                    u = u
                                                    continue 
                                                if u < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < u - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                            else:
                                                if u > ext_call.return_data[0]:
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if ext_call.return_data[0] < u - 1:
                                                        sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                        emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if sub_486d25fe[arg1] >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor2[arg1]]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                        revert with 0, 17
                                            if sub_486d25fe[arg1] > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            t = t
                                            u = u
                                            continue 
                                        if u + 1 > ext_call.return_data[0]:
                                            _6513 = mem[64]
                                            mem[64] = mem[64] + 128
                                            mem[_6513] = 0
                                            mem[_6513 + 32] = 0
                                            mem[_6513 + 64] = 0
                                            mem[_6513 + 96] = 0
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = t
                                            t = _6513
                                            u = u + 1
                                            continue 
                                        staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                                gas gas_remaining wei
                                               args arg1, u + 1
                                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6729 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 128
                                        _6962 = mem[64]
                                        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                            revert with 0, 65
                                        mem[64] = mem[64] + 128
                                        require mem[_6729] == ('signextend', 15, ('mem', ('range', ('var', '_6729'), 32)))
                                        mem[_6962] = mem[_6729]
                                        require mem[_6729 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6729')), 32)))
                                        mem[_6962 + 32] = mem[_6729 + 32]
                                        mem[_6962 + 64] = mem[_6729 + 64]
                                        mem[_6962 + 96] = mem[_6729 + 96]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _6962
                                        u = u + 1
                                        continue 
                                    if u < 1:
                                        revert with 0, 17
                                    if ext_call.return_data[0] < u - 1:
                                        sub_16aea5c0[arg1] = ext_call.return_data[0]
                                        emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                    else:
                                        sub_16aea5c0[arg1] = u - 1
                                        emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                else:
                                    _2411 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_2411] = 0
                                    mem[_2411 + 32] = 0
                                    mem[_2411 + 64] = 0
                                    mem[_2411 + 96] = 0
                                    idx = 0
                                    s = _2411
                                    t = _2221
                                    u = 1
                                    while idx < 50:
                                        if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                            if u < 1:
                                                revert with 0, 17
                                            if ext_call.return_data[0] < u - 1:
                                                sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                            return 0
                                        if start_time < mem[t + 64]:
                                            if start_time < mem[s + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                if u <= ext_call.return_data[0]:
                                                    if start_time > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    s = s
                                                    t = t
                                                    u = u
                                                    continue 
                                                if u < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < u - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                            else:
                                                if u > ext_call.return_data[0]:
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if ext_call.return_data[0] < u - 1:
                                                        sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                            if start_time > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            t = t
                                            u = u
                                            continue 
                                        if u > ext_call.return_data[0]:
                                            if start_time < mem[s + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                if u <= ext_call.return_data[0]:
                                                    if start_time > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    s = s
                                                    t = t
                                                    u = u
                                                    continue 
                                                if u < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < u - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                            else:
                                                if u > ext_call.return_data[0]:
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if ext_call.return_data[0] < u - 1:
                                                        sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                            if start_time > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            t = t
                                            u = u
                                            continue 
                                        if u + 1 > ext_call.return_data[0]:
                                            _6520 = mem[64]
                                            mem[64] = mem[64] + 128
                                            mem[_6520] = 0
                                            mem[_6520 + 32] = 0
                                            mem[_6520 + 64] = 0
                                            mem[_6520 + 96] = 0
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = t
                                            t = _6520
                                            u = u + 1
                                            continue 
                                        staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                                gas gas_remaining wei
                                               args arg1, u + 1
                                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6735 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 128
                                        _6965 = mem[64]
                                        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                            revert with 0, 65
                                        mem[64] = mem[64] + 128
                                        require mem[_6735] == ('signextend', 15, ('mem', ('range', ('var', '_6735'), 32)))
                                        mem[_6965] = mem[_6735]
                                        require mem[_6735 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6735')), 32)))
                                        mem[_6965 + 32] = mem[_6735 + 32]
                                        mem[_6965 + 64] = mem[_6735 + 64]
                                        mem[_6965 + 96] = mem[_6735 + 96]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _6965
                                        u = u + 1
                                        continue 
                                    if u < 1:
                                        revert with 0, 17
                                    if ext_call.return_data[0] < u - 1:
                                        sub_16aea5c0[arg1] = ext_call.return_data[0]
                                        sub_486d25fe[arg1] = start_time
                                        emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                    else:
                                        sub_16aea5c0[arg1] = u - 1
                                        sub_486d25fe[arg1] = start_time
                                        emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                        else:
                            _2381 = mem[_2221 + 64]
                            if mem[_2221 + 64] > -604801:
                                revert with 0, 17
                            if mem[_2221 + 64] + (168 * 24 * 3600) < 1:
                                revert with 0, 17
                            if mem[_2221 + 64] + 604799 / 168 * 24 * 3600 and 168 * 24 * 3600 > -1 / mem[_2221 + 64] + 604799 / 168 * 24 * 3600:
                                revert with 0, 17
                            if 168 * 24 * 3600 * mem[_2221 + 64] + 604799 / 168 * 24 * 3600 < last_token_time:
                                if 168 * 24 * 3600 * mem[_2221 + 64] + 604799 / 168 * 24 * 3600 >= start_time:
                                    _2952 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_2952] = 0
                                    mem[_2952 + 32] = 0
                                    mem[_2952 + 64] = 0
                                    mem[_2952 + 96] = 0
                                    idx = 0
                                    s = _2952
                                    t = _2221
                                    u = 1
                                    while idx < 50:
                                        if 168 * 24 * 3600 * _2381 + 604799 / 168 * 24 * 3600 >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                            if u < 1:
                                                revert with 0, 17
                                            if ext_call.return_data[0] < u - 1:
                                                sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * _2381 + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * _2381 + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                            return 0
                                        if 168 * 24 * 3600 * _2381 + 604799 / 168 * 24 * 3600 < mem[t + 64]:
                                            if 168 * 24 * 3600 * _2381 + 604799 / 168 * 24 * 3600 < mem[s + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2381')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2381')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2381')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2381')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2381')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2381')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2381')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2381')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2381')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2381')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2381')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2381')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2381')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                if u <= ext_call.return_data[0]:
                                                    if 168 * 24 * 3600 * _2381 + 604799 / 168 * 24 * 3600 > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    s = s
                                                    t = t
                                                    u = u
                                                    continue 
                                                if u < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < u - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _2381 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _2381 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2381')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if 168 * 24 * 3600 * _2381 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2381')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_2381 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2381')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[_2381 + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2381')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_2381 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_2381 + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                            else:
                                                if u > ext_call.return_data[0]:
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if ext_call.return_data[0] < u - 1:
                                                        sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _2381 + 604799 / 168 * 24 * 3600
                                                        emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _2381 + 604799 / 168 * 24 * 3600
                                                        emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2381')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if 168 * 24 * 3600 * _2381 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2381')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_2381 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2381')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[_2381 + 604799 / 168 * 24 * 3600]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2381')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_2381 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_2381 + 604799 / 168 * 24 * 3600]):
                                                        revert with 0, 17
                                            if 168 * 24 * 3600 * _2381 + 604799 / 168 * 24 * 3600 > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            t = t
                                            u = u
                                            continue 
                                        if u > ext_call.return_data[0]:
                                            if 168 * 24 * 3600 * _2381 + 604799 / 168 * 24 * 3600 < mem[s + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2381')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2381')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2381')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2381')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2381')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2381')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2381')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2381')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2381')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2381')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2381')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2381')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2381')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                if u <= ext_call.return_data[0]:
                                                    if 168 * 24 * 3600 * _2381 + 604799 / 168 * 24 * 3600 > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    s = s
                                                    t = t
                                                    u = u
                                                    continue 
                                                if u < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < u - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _2381 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _2381 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2381')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if 168 * 24 * 3600 * _2381 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2381')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_2381 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2381')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[_2381 + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2381')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_2381 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_2381 + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                            else:
                                                if u > ext_call.return_data[0]:
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if ext_call.return_data[0] < u - 1:
                                                        sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _2381 + 604799 / 168 * 24 * 3600
                                                        emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _2381 + 604799 / 168 * 24 * 3600
                                                        emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2381')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if 168 * 24 * 3600 * _2381 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2381')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_2381 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2381')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[_2381 + 604799 / 168 * 24 * 3600]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2381')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_2381 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_2381 + 604799 / 168 * 24 * 3600]):
                                                        revert with 0, 17
                                            if 168 * 24 * 3600 * _2381 + 604799 / 168 * 24 * 3600 > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            t = t
                                            u = u
                                            continue 
                                        if u + 1 > ext_call.return_data[0]:
                                            _6527 = mem[64]
                                            mem[64] = mem[64] + 128
                                            mem[_6527] = 0
                                            mem[_6527 + 32] = 0
                                            mem[_6527 + 64] = 0
                                            mem[_6527 + 96] = 0
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = t
                                            t = _6527
                                            u = u + 1
                                            continue 
                                        staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                                gas gas_remaining wei
                                               args arg1, u + 1
                                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6741 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 128
                                        _6968 = mem[64]
                                        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                            revert with 0, 65
                                        mem[64] = mem[64] + 128
                                        require mem[_6741] == ('signextend', 15, ('mem', ('range', ('var', '_6741'), 32)))
                                        mem[_6968] = mem[_6741]
                                        require mem[_6741 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6741')), 32)))
                                        mem[_6968 + 32] = mem[_6741 + 32]
                                        mem[_6968 + 64] = mem[_6741 + 64]
                                        mem[_6968 + 96] = mem[_6741 + 96]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _6968
                                        u = u + 1
                                        continue 
                                    if u < 1:
                                        revert with 0, 17
                                    if ext_call.return_data[0] < u - 1:
                                        sub_16aea5c0[arg1] = ext_call.return_data[0]
                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _2381 + 604799 / 168 * 24 * 3600
                                        emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                    else:
                                        sub_16aea5c0[arg1] = u - 1
                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _2381 + 604799 / 168 * 24 * 3600
                                        emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                else:
                                    _3027 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_3027] = 0
                                    mem[_3027 + 32] = 0
                                    mem[_3027 + 64] = 0
                                    mem[_3027 + 96] = 0
                                    idx = 0
                                    s = _3027
                                    t = _2221
                                    u = 1
                                    while idx < 50:
                                        if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                            if u < 1:
                                                revert with 0, 17
                                            if ext_call.return_data[0] < u - 1:
                                                sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                            return 0
                                        if start_time < mem[t + 64]:
                                            if start_time < mem[s + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                if u <= ext_call.return_data[0]:
                                                    if start_time > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    s = s
                                                    t = t
                                                    u = u
                                                    continue 
                                                if u < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < u - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                            else:
                                                if u > ext_call.return_data[0]:
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if ext_call.return_data[0] < u - 1:
                                                        sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                            if start_time > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            t = t
                                            u = u
                                            continue 
                                        if u > ext_call.return_data[0]:
                                            if start_time < mem[s + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                if u <= ext_call.return_data[0]:
                                                    if start_time > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    s = s
                                                    t = t
                                                    u = u
                                                    continue 
                                                if u < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < u - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                            else:
                                                if u > ext_call.return_data[0]:
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if ext_call.return_data[0] < u - 1:
                                                        sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                            if start_time > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            t = t
                                            u = u
                                            continue 
                                        if u + 1 > ext_call.return_data[0]:
                                            _6534 = mem[64]
                                            mem[64] = mem[64] + 128
                                            mem[_6534] = 0
                                            mem[_6534 + 32] = 0
                                            mem[_6534 + 64] = 0
                                            mem[_6534 + 96] = 0
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = t
                                            t = _6534
                                            u = u + 1
                                            continue 
                                        staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                                gas gas_remaining wei
                                               args arg1, u + 1
                                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6747 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 128
                                        _6971 = mem[64]
                                        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                            revert with 0, 65
                                        mem[64] = mem[64] + 128
                                        require mem[_6747] == ('signextend', 15, ('mem', ('range', ('var', '_6747'), 32)))
                                        mem[_6971] = mem[_6747]
                                        require mem[_6747 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6747')), 32)))
                                        mem[_6971 + 32] = mem[_6747 + 32]
                                        mem[_6971 + 64] = mem[_6747 + 64]
                                        mem[_6971 + 96] = mem[_6747 + 96]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _6971
                                        u = u + 1
                                        continue 
                                    if u < 1:
                                        revert with 0, 17
                                    if ext_call.return_data[0] < u - 1:
                                        sub_16aea5c0[arg1] = ext_call.return_data[0]
                                        sub_486d25fe[arg1] = start_time
                                        emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                    else:
                                        sub_16aea5c0[arg1] = u - 1
                                        sub_486d25fe[arg1] = start_time
                                        emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                    return 0
                if s:
                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                            gas gas_remaining wei
                           args arg1, s
                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2019 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 128
                    _2066 = mem[64]
                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                        revert with 0, 65
                    mem[64] = mem[64] + 128
                    require mem[_2019] == ('signextend', 15, ('mem', ('range', ('var', '_2019'), 32)))
                    mem[_2066] = mem[_2019]
                    require mem[_2019 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_2019')), 32)))
                    mem[_2066 + 32] = mem[_2019 + 32]
                    mem[_2066 + 64] = mem[_2019 + 64]
                    mem[_2066 + 96] = mem[_2019 + 96]
                    if sub_486d25fe[arg1]:
                        if sub_486d25fe[arg1] < last_token_time:
                            if sub_486d25fe[arg1] >= start_time:
                                _2356 = mem[64]
                                mem[64] = mem[64] + 128
                                mem[_2356] = 0
                                mem[_2356 + 32] = 0
                                mem[_2356 + 64] = 0
                                mem[_2356 + 96] = 0
                                idx = 0
                                t = _2356
                                u = _2066
                                v = s
                                while idx < 50:
                                    if sub_486d25fe[arg1] >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                        if v < 1:
                                            revert with 0, 17
                                        if ext_call.return_data[0] < v - 1:
                                            sub_16aea5c0[arg1] = ext_call.return_data[0]
                                            emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                        else:
                                            sub_16aea5c0[arg1] = v - 1
                                            emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                                        return 0
                                    if sub_486d25fe[arg1] < mem[u + 64]:
                                        if sub_486d25fe[arg1] < mem[t + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                            if v <= ext_call.return_data[0]:
                                                if sub_486d25fe[arg1] > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                t = t
                                                u = u
                                                v = v
                                                continue 
                                            if v < 1:
                                                revert with 0, 17
                                            if ext_call.return_data[0] < v - 1:
                                                sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                            else:
                                                sub_16aea5c0[arg1] = v - 1
                                                emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                            if sub_486d25fe[arg1] >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor2[arg1]]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                revert with 0, 17
                                        else:
                                            if v > ext_call.return_data[0]:
                                                if v < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < v - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                        if sub_486d25fe[arg1] > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = t
                                        u = u
                                        v = v
                                        continue 
                                    if v > ext_call.return_data[0]:
                                        if sub_486d25fe[arg1] < mem[t + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                            if v <= ext_call.return_data[0]:
                                                if sub_486d25fe[arg1] > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                t = t
                                                u = u
                                                v = v
                                                continue 
                                            if v < 1:
                                                revert with 0, 17
                                            if ext_call.return_data[0] < v - 1:
                                                sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                            else:
                                                sub_16aea5c0[arg1] = v - 1
                                                emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                            if sub_486d25fe[arg1] >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor2[arg1]]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                revert with 0, 17
                                        else:
                                            if v > ext_call.return_data[0]:
                                                if v < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < v - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                        if sub_486d25fe[arg1] > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = t
                                        u = u
                                        v = v
                                        continue 
                                    if v + 1 > ext_call.return_data[0]:
                                        _6429 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_6429] = 0
                                        mem[_6429 + 32] = 0
                                        mem[_6429 + 64] = 0
                                        mem[_6429 + 96] = 0
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = u
                                        u = _6429
                                        v = v + 1
                                        continue 
                                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                            gas gas_remaining wei
                                           args arg1, v + 1
                                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6657 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 128
                                    _6926 = mem[64]
                                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                        revert with 0, 65
                                    mem[64] = mem[64] + 128
                                    require mem[_6657] == ('signextend', 15, ('mem', ('range', ('var', '_6657'), 32)))
                                    mem[_6926] = mem[_6657]
                                    require mem[_6657 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6657')), 32)))
                                    mem[_6926 + 32] = mem[_6657 + 32]
                                    mem[_6926 + 64] = mem[_6657 + 64]
                                    mem[_6926 + 96] = mem[_6657 + 96]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    t = u
                                    u = _6926
                                    v = v + 1
                                    continue 
                                if v < 1:
                                    revert with 0, 17
                                if ext_call.return_data[0] < v - 1:
                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                else:
                                    sub_16aea5c0[arg1] = v - 1
                                    emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                            else:
                                _2378 = mem[64]
                                mem[64] = mem[64] + 128
                                mem[_2378] = 0
                                mem[_2378 + 32] = 0
                                mem[_2378 + 64] = 0
                                mem[_2378 + 96] = 0
                                idx = 0
                                t = _2378
                                u = _2066
                                v = s
                                while idx < 50:
                                    if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                        if v < 1:
                                            revert with 0, 17
                                        if ext_call.return_data[0] < v - 1:
                                            sub_16aea5c0[arg1] = ext_call.return_data[0]
                                            sub_486d25fe[arg1] = start_time
                                            emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                        else:
                                            sub_16aea5c0[arg1] = v - 1
                                            sub_486d25fe[arg1] = start_time
                                            emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                                        return 0
                                    if start_time < mem[u + 64]:
                                        if start_time < mem[t + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                            if v <= ext_call.return_data[0]:
                                                if start_time > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                t = t
                                                u = u
                                                v = v
                                                continue 
                                            if v < 1:
                                                revert with 0, 17
                                            if ext_call.return_data[0] < v - 1:
                                                sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                            else:
                                                sub_16aea5c0[arg1] = v - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if v > ext_call.return_data[0]:
                                                if v < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < v - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                        if start_time > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = t
                                        u = u
                                        v = v
                                        continue 
                                    if v > ext_call.return_data[0]:
                                        if start_time < mem[t + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                            if v <= ext_call.return_data[0]:
                                                if start_time > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                t = t
                                                u = u
                                                v = v
                                                continue 
                                            if v < 1:
                                                revert with 0, 17
                                            if ext_call.return_data[0] < v - 1:
                                                sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                            else:
                                                sub_16aea5c0[arg1] = v - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if v > ext_call.return_data[0]:
                                                if v < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < v - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                        if start_time > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = t
                                        u = u
                                        v = v
                                        continue 
                                    if v + 1 > ext_call.return_data[0]:
                                        _6436 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_6436] = 0
                                        mem[_6436 + 32] = 0
                                        mem[_6436 + 64] = 0
                                        mem[_6436 + 96] = 0
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = u
                                        u = _6436
                                        v = v + 1
                                        continue 
                                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                            gas gas_remaining wei
                                           args arg1, v + 1
                                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6663 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 128
                                    _6929 = mem[64]
                                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                        revert with 0, 65
                                    mem[64] = mem[64] + 128
                                    require mem[_6663] == ('signextend', 15, ('mem', ('range', ('var', '_6663'), 32)))
                                    mem[_6929] = mem[_6663]
                                    require mem[_6663 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6663')), 32)))
                                    mem[_6929 + 32] = mem[_6663 + 32]
                                    mem[_6929 + 64] = mem[_6663 + 64]
                                    mem[_6929 + 96] = mem[_6663 + 96]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    t = u
                                    u = _6929
                                    v = v + 1
                                    continue 
                                if v < 1:
                                    revert with 0, 17
                                if ext_call.return_data[0] < v - 1:
                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                    sub_486d25fe[arg1] = start_time
                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                else:
                                    sub_16aea5c0[arg1] = v - 1
                                    sub_486d25fe[arg1] = start_time
                                    emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                    else:
                        _2336 = mem[_2066 + 64]
                        if mem[_2066 + 64] > -604801:
                            revert with 0, 17
                        if mem[_2066 + 64] + (168 * 24 * 3600) < 1:
                            revert with 0, 17
                        if mem[_2066 + 64] + 604799 / 168 * 24 * 3600 and 168 * 24 * 3600 > -1 / mem[_2066 + 64] + 604799 / 168 * 24 * 3600:
                            revert with 0, 17
                        if 168 * 24 * 3600 * mem[_2066 + 64] + 604799 / 168 * 24 * 3600 < last_token_time:
                            if 168 * 24 * 3600 * mem[_2066 + 64] + 604799 / 168 * 24 * 3600 >= start_time:
                                _2680 = mem[64]
                                mem[64] = mem[64] + 128
                                mem[_2680] = 0
                                mem[_2680 + 32] = 0
                                mem[_2680 + 64] = 0
                                mem[_2680 + 96] = 0
                                idx = 0
                                t = _2680
                                u = _2066
                                v = s
                                while idx < 50:
                                    if 168 * 24 * 3600 * _2336 + 604799 / 168 * 24 * 3600 >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                        if v < 1:
                                            revert with 0, 17
                                        if ext_call.return_data[0] < v - 1:
                                            sub_16aea5c0[arg1] = ext_call.return_data[0]
                                            sub_486d25fe[arg1] = 168 * 24 * 3600 * _2336 + 604799 / 168 * 24 * 3600
                                            emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                        else:
                                            sub_16aea5c0[arg1] = v - 1
                                            sub_486d25fe[arg1] = 168 * 24 * 3600 * _2336 + 604799 / 168 * 24 * 3600
                                            emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                                        return 0
                                    if 168 * 24 * 3600 * _2336 + 604799 / 168 * 24 * 3600 < mem[u + 64]:
                                        if 168 * 24 * 3600 * _2336 + 604799 / 168 * 24 * 3600 < mem[t + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2336')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2336')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2336')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2336')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2336')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2336')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2336')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2336')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2336')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2336')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2336')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2336')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2336')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                            if v <= ext_call.return_data[0]:
                                                if 168 * 24 * 3600 * _2336 + 604799 / 168 * 24 * 3600 > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                t = t
                                                u = u
                                                v = v
                                                continue 
                                            if v < 1:
                                                revert with 0, 17
                                            if ext_call.return_data[0] < v - 1:
                                                sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * _2336 + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                            else:
                                                sub_16aea5c0[arg1] = v - 1
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * _2336 + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2336')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                            if 168 * 24 * 3600 * _2336 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2336')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[_2336 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2336')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[_2336 + 604799 / 168 * 24 * 3600]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2336')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[_2336 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_2336 + 604799 / 168 * 24 * 3600]):
                                                revert with 0, 17
                                        else:
                                            if v > ext_call.return_data[0]:
                                                if v < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < v - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _2336 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _2336 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2336')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if 168 * 24 * 3600 * _2336 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2336')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[_2336 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2336')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[_2336 + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2336')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[_2336 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_2336 + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                        if 168 * 24 * 3600 * _2336 + 604799 / 168 * 24 * 3600 > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = t
                                        u = u
                                        v = v
                                        continue 
                                    if v > ext_call.return_data[0]:
                                        if 168 * 24 * 3600 * _2336 + 604799 / 168 * 24 * 3600 < mem[t + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2336')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2336')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2336')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2336')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2336')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2336')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2336')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2336')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2336')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2336')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2336')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2336')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2336')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                            if v <= ext_call.return_data[0]:
                                                if 168 * 24 * 3600 * _2336 + 604799 / 168 * 24 * 3600 > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                t = t
                                                u = u
                                                v = v
                                                continue 
                                            if v < 1:
                                                revert with 0, 17
                                            if ext_call.return_data[0] < v - 1:
                                                sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * _2336 + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                            else:
                                                sub_16aea5c0[arg1] = v - 1
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * _2336 + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2336')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                            if 168 * 24 * 3600 * _2336 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2336')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[_2336 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2336')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[_2336 + 604799 / 168 * 24 * 3600]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2336')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[_2336 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_2336 + 604799 / 168 * 24 * 3600]):
                                                revert with 0, 17
                                        else:
                                            if v > ext_call.return_data[0]:
                                                if v < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < v - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _2336 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _2336 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2336')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if 168 * 24 * 3600 * _2336 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2336')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[_2336 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2336')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[_2336 + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2336')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[_2336 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_2336 + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                        if 168 * 24 * 3600 * _2336 + 604799 / 168 * 24 * 3600 > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = t
                                        u = u
                                        v = v
                                        continue 
                                    if v + 1 > ext_call.return_data[0]:
                                        _6443 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_6443] = 0
                                        mem[_6443 + 32] = 0
                                        mem[_6443 + 64] = 0
                                        mem[_6443 + 96] = 0
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = u
                                        u = _6443
                                        v = v + 1
                                        continue 
                                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                            gas gas_remaining wei
                                           args arg1, v + 1
                                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6669 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 128
                                    _6932 = mem[64]
                                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                        revert with 0, 65
                                    mem[64] = mem[64] + 128
                                    require mem[_6669] == ('signextend', 15, ('mem', ('range', ('var', '_6669'), 32)))
                                    mem[_6932] = mem[_6669]
                                    require mem[_6669 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6669')), 32)))
                                    mem[_6932 + 32] = mem[_6669 + 32]
                                    mem[_6932 + 64] = mem[_6669 + 64]
                                    mem[_6932 + 96] = mem[_6669 + 96]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    t = u
                                    u = _6932
                                    v = v + 1
                                    continue 
                                if v < 1:
                                    revert with 0, 17
                                if ext_call.return_data[0] < v - 1:
                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _2336 + 604799 / 168 * 24 * 3600
                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                else:
                                    sub_16aea5c0[arg1] = v - 1
                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _2336 + 604799 / 168 * 24 * 3600
                                    emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                            else:
                                _2812 = mem[64]
                                mem[64] = mem[64] + 128
                                mem[_2812] = 0
                                mem[_2812 + 32] = 0
                                mem[_2812 + 64] = 0
                                mem[_2812 + 96] = 0
                                idx = 0
                                t = _2812
                                u = _2066
                                v = s
                                while idx < 50:
                                    if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                        if v < 1:
                                            revert with 0, 17
                                        if ext_call.return_data[0] < v - 1:
                                            sub_16aea5c0[arg1] = ext_call.return_data[0]
                                            sub_486d25fe[arg1] = start_time
                                            emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                        else:
                                            sub_16aea5c0[arg1] = v - 1
                                            sub_486d25fe[arg1] = start_time
                                            emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                                        return 0
                                    if start_time < mem[u + 64]:
                                        if start_time < mem[t + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                            if v <= ext_call.return_data[0]:
                                                if start_time > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                t = t
                                                u = u
                                                v = v
                                                continue 
                                            if v < 1:
                                                revert with 0, 17
                                            if ext_call.return_data[0] < v - 1:
                                                sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                            else:
                                                sub_16aea5c0[arg1] = v - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if v > ext_call.return_data[0]:
                                                if v < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < v - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                        if start_time > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = t
                                        u = u
                                        v = v
                                        continue 
                                    if v > ext_call.return_data[0]:
                                        if start_time < mem[t + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                            if v <= ext_call.return_data[0]:
                                                if start_time > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                t = t
                                                u = u
                                                v = v
                                                continue 
                                            if v < 1:
                                                revert with 0, 17
                                            if ext_call.return_data[0] < v - 1:
                                                sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                            else:
                                                sub_16aea5c0[arg1] = v - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if v > ext_call.return_data[0]:
                                                if v < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < v - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                        if start_time > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = t
                                        u = u
                                        v = v
                                        continue 
                                    if v + 1 > ext_call.return_data[0]:
                                        _6450 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_6450] = 0
                                        mem[_6450 + 32] = 0
                                        mem[_6450 + 64] = 0
                                        mem[_6450 + 96] = 0
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = u
                                        u = _6450
                                        v = v + 1
                                        continue 
                                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                            gas gas_remaining wei
                                           args arg1, v + 1
                                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6675 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 128
                                    _6935 = mem[64]
                                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                        revert with 0, 65
                                    mem[64] = mem[64] + 128
                                    require mem[_6675] == ('signextend', 15, ('mem', ('range', ('var', '_6675'), 32)))
                                    mem[_6935] = mem[_6675]
                                    require mem[_6675 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6675')), 32)))
                                    mem[_6935 + 32] = mem[_6675 + 32]
                                    mem[_6935 + 64] = mem[_6675 + 64]
                                    mem[_6935 + 96] = mem[_6675 + 96]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    t = u
                                    u = _6935
                                    v = v + 1
                                    continue 
                                if v < 1:
                                    revert with 0, 17
                                if ext_call.return_data[0] < v - 1:
                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                    sub_486d25fe[arg1] = start_time
                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                else:
                                    sub_16aea5c0[arg1] = v - 1
                                    sub_486d25fe[arg1] = start_time
                                    emit Claimed(arg1, 0, v - 1, ext_call.return_data[0]);
                else:
                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                            gas gas_remaining wei
                           args arg1, 1
                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2022 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 128
                    _2110 = mem[64]
                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                        revert with 0, 65
                    mem[64] = mem[64] + 128
                    require mem[_2022] == ('signextend', 15, ('mem', ('range', ('var', '_2022'), 32)))
                    mem[_2110] = mem[_2022]
                    require mem[_2022 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_2022')), 32)))
                    mem[_2110 + 32] = mem[_2022 + 32]
                    mem[_2110 + 64] = mem[_2022 + 64]
                    mem[_2110 + 96] = mem[_2022 + 96]
                    if sub_486d25fe[arg1]:
                        if sub_486d25fe[arg1] < last_token_time:
                            if sub_486d25fe[arg1] >= start_time:
                                _2379 = mem[64]
                                mem[64] = mem[64] + 128
                                mem[_2379] = 0
                                mem[_2379 + 32] = 0
                                mem[_2379 + 64] = 0
                                mem[_2379 + 96] = 0
                                idx = 0
                                s = _2379
                                t = _2110
                                u = 1
                                while idx < 50:
                                    if sub_486d25fe[arg1] >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                        if u < 1:
                                            revert with 0, 17
                                        if ext_call.return_data[0] < u - 1:
                                            sub_16aea5c0[arg1] = ext_call.return_data[0]
                                            emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                        else:
                                            sub_16aea5c0[arg1] = u - 1
                                            emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                        return 0
                                    if sub_486d25fe[arg1] < mem[t + 64]:
                                        if sub_486d25fe[arg1] < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= ext_call.return_data[0]:
                                                if sub_486d25fe[arg1] > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if ext_call.return_data[0] < u - 1:
                                                sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if sub_486d25fe[arg1] >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor2[arg1]]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                if u < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < u - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                        if sub_486d25fe[arg1] > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u > ext_call.return_data[0]:
                                        if sub_486d25fe[arg1] < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= ext_call.return_data[0]:
                                                if sub_486d25fe[arg1] > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if ext_call.return_data[0] < u - 1:
                                                sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if sub_486d25fe[arg1] >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor2[arg1]]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                if u < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < u - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                        if sub_486d25fe[arg1] > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u + 1 > ext_call.return_data[0]:
                                        _6457 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_6457] = 0
                                        mem[_6457 + 32] = 0
                                        mem[_6457 + 64] = 0
                                        mem[_6457 + 96] = 0
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _6457
                                        u = u + 1
                                        continue 
                                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                            gas gas_remaining wei
                                           args arg1, u + 1
                                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6681 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 128
                                    _6938 = mem[64]
                                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                        revert with 0, 65
                                    mem[64] = mem[64] + 128
                                    require mem[_6681] == ('signextend', 15, ('mem', ('range', ('var', '_6681'), 32)))
                                    mem[_6938] = mem[_6681]
                                    require mem[_6681 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6681')), 32)))
                                    mem[_6938 + 32] = mem[_6681 + 32]
                                    mem[_6938 + 64] = mem[_6681 + 64]
                                    mem[_6938 + 96] = mem[_6681 + 96]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = t
                                    t = _6938
                                    u = u + 1
                                    continue 
                                if u < 1:
                                    revert with 0, 17
                                if ext_call.return_data[0] < u - 1:
                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                else:
                                    sub_16aea5c0[arg1] = u - 1
                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                            else:
                                _2388 = mem[64]
                                mem[64] = mem[64] + 128
                                mem[_2388] = 0
                                mem[_2388 + 32] = 0
                                mem[_2388 + 64] = 0
                                mem[_2388 + 96] = 0
                                idx = 0
                                s = _2388
                                t = _2110
                                u = 1
                                while idx < 50:
                                    if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                        if u < 1:
                                            revert with 0, 17
                                        if ext_call.return_data[0] < u - 1:
                                            sub_16aea5c0[arg1] = ext_call.return_data[0]
                                            sub_486d25fe[arg1] = start_time
                                            emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                        else:
                                            sub_16aea5c0[arg1] = u - 1
                                            sub_486d25fe[arg1] = start_time
                                            emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                        return 0
                                    if start_time < mem[t + 64]:
                                        if start_time < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= ext_call.return_data[0]:
                                                if start_time > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if ext_call.return_data[0] < u - 1:
                                                sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                if u < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < u - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                        if start_time > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u > ext_call.return_data[0]:
                                        if start_time < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= ext_call.return_data[0]:
                                                if start_time > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if ext_call.return_data[0] < u - 1:
                                                sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                if u < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < u - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                        if start_time > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u + 1 > ext_call.return_data[0]:
                                        _6464 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_6464] = 0
                                        mem[_6464 + 32] = 0
                                        mem[_6464 + 64] = 0
                                        mem[_6464 + 96] = 0
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _6464
                                        u = u + 1
                                        continue 
                                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                            gas gas_remaining wei
                                           args arg1, u + 1
                                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6687 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 128
                                    _6941 = mem[64]
                                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                        revert with 0, 65
                                    mem[64] = mem[64] + 128
                                    require mem[_6687] == ('signextend', 15, ('mem', ('range', ('var', '_6687'), 32)))
                                    mem[_6941] = mem[_6687]
                                    require mem[_6687 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6687')), 32)))
                                    mem[_6941 + 32] = mem[_6687 + 32]
                                    mem[_6941 + 64] = mem[_6687 + 64]
                                    mem[_6941 + 96] = mem[_6687 + 96]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = t
                                    t = _6941
                                    u = u + 1
                                    continue 
                                if u < 1:
                                    revert with 0, 17
                                if ext_call.return_data[0] < u - 1:
                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                    sub_486d25fe[arg1] = start_time
                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                else:
                                    sub_16aea5c0[arg1] = u - 1
                                    sub_486d25fe[arg1] = start_time
                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                    else:
                        _2349 = mem[_2110 + 64]
                        if mem[_2110 + 64] > -604801:
                            revert with 0, 17
                        if mem[_2110 + 64] + (168 * 24 * 3600) < 1:
                            revert with 0, 17
                        if mem[_2110 + 64] + 604799 / 168 * 24 * 3600 and 168 * 24 * 3600 > -1 / mem[_2110 + 64] + 604799 / 168 * 24 * 3600:
                            revert with 0, 17
                        if 168 * 24 * 3600 * mem[_2110 + 64] + 604799 / 168 * 24 * 3600 < last_token_time:
                            if 168 * 24 * 3600 * mem[_2110 + 64] + 604799 / 168 * 24 * 3600 >= start_time:
                                _2815 = mem[64]
                                mem[64] = mem[64] + 128
                                mem[_2815] = 0
                                mem[_2815 + 32] = 0
                                mem[_2815 + 64] = 0
                                mem[_2815 + 96] = 0
                                idx = 0
                                s = _2815
                                t = _2110
                                u = 1
                                while idx < 50:
                                    if 168 * 24 * 3600 * _2349 + 604799 / 168 * 24 * 3600 >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                        if u < 1:
                                            revert with 0, 17
                                        if ext_call.return_data[0] < u - 1:
                                            sub_16aea5c0[arg1] = ext_call.return_data[0]
                                            sub_486d25fe[arg1] = 168 * 24 * 3600 * _2349 + 604799 / 168 * 24 * 3600
                                            emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                        else:
                                            sub_16aea5c0[arg1] = u - 1
                                            sub_486d25fe[arg1] = 168 * 24 * 3600 * _2349 + 604799 / 168 * 24 * 3600
                                            emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                        return 0
                                    if 168 * 24 * 3600 * _2349 + 604799 / 168 * 24 * 3600 < mem[t + 64]:
                                        if 168 * 24 * 3600 * _2349 + 604799 / 168 * 24 * 3600 < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2349')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2349')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2349')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2349')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2349')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2349')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2349')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2349')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2349')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2349')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2349')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2349')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2349')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= ext_call.return_data[0]:
                                                if 168 * 24 * 3600 * _2349 + 604799 / 168 * 24 * 3600 > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if ext_call.return_data[0] < u - 1:
                                                sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * _2349 + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * _2349 + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2349')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if 168 * 24 * 3600 * _2349 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2349')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_2349 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2349')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[_2349 + 604799 / 168 * 24 * 3600]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2349')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_2349 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_2349 + 604799 / 168 * 24 * 3600]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                if u < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < u - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _2349 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _2349 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2349')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if 168 * 24 * 3600 * _2349 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2349')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_2349 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2349')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[_2349 + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2349')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_2349 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_2349 + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                        if 168 * 24 * 3600 * _2349 + 604799 / 168 * 24 * 3600 > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u > ext_call.return_data[0]:
                                        if 168 * 24 * 3600 * _2349 + 604799 / 168 * 24 * 3600 < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2349')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2349')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2349')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2349')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2349')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2349')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2349')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2349')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2349')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2349')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2349')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2349')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2349')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= ext_call.return_data[0]:
                                                if 168 * 24 * 3600 * _2349 + 604799 / 168 * 24 * 3600 > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if ext_call.return_data[0] < u - 1:
                                                sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * _2349 + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * _2349 + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2349')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if 168 * 24 * 3600 * _2349 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2349')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_2349 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2349')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[_2349 + 604799 / 168 * 24 * 3600]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2349')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_2349 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_2349 + 604799 / 168 * 24 * 3600]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                if u < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < u - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _2349 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _2349 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2349')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if 168 * 24 * 3600 * _2349 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2349')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_2349 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2349')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[_2349 + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2349')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_2349 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_2349 + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                        if 168 * 24 * 3600 * _2349 + 604799 / 168 * 24 * 3600 > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u + 1 > ext_call.return_data[0]:
                                        _6471 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_6471] = 0
                                        mem[_6471 + 32] = 0
                                        mem[_6471 + 64] = 0
                                        mem[_6471 + 96] = 0
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _6471
                                        u = u + 1
                                        continue 
                                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                            gas gas_remaining wei
                                           args arg1, u + 1
                                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6693 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 128
                                    _6944 = mem[64]
                                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                        revert with 0, 65
                                    mem[64] = mem[64] + 128
                                    require mem[_6693] == ('signextend', 15, ('mem', ('range', ('var', '_6693'), 32)))
                                    mem[_6944] = mem[_6693]
                                    require mem[_6693 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6693')), 32)))
                                    mem[_6944 + 32] = mem[_6693 + 32]
                                    mem[_6944 + 64] = mem[_6693 + 64]
                                    mem[_6944 + 96] = mem[_6693 + 96]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = t
                                    t = _6944
                                    u = u + 1
                                    continue 
                                if u < 1:
                                    revert with 0, 17
                                if ext_call.return_data[0] < u - 1:
                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _2349 + 604799 / 168 * 24 * 3600
                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                else:
                                    sub_16aea5c0[arg1] = u - 1
                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _2349 + 604799 / 168 * 24 * 3600
                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                            else:
                                _2888 = mem[64]
                                mem[64] = mem[64] + 128
                                mem[_2888] = 0
                                mem[_2888 + 32] = 0
                                mem[_2888 + 64] = 0
                                mem[_2888 + 96] = 0
                                idx = 0
                                s = _2888
                                t = _2110
                                u = 1
                                while idx < 50:
                                    if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                        if u < 1:
                                            revert with 0, 17
                                        if ext_call.return_data[0] < u - 1:
                                            sub_16aea5c0[arg1] = ext_call.return_data[0]
                                            sub_486d25fe[arg1] = start_time
                                            emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                        else:
                                            sub_16aea5c0[arg1] = u - 1
                                            sub_486d25fe[arg1] = start_time
                                            emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                        return 0
                                    if start_time < mem[t + 64]:
                                        if start_time < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= ext_call.return_data[0]:
                                                if start_time > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if ext_call.return_data[0] < u - 1:
                                                sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                if u < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < u - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                        if start_time > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u > ext_call.return_data[0]:
                                        if start_time < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= ext_call.return_data[0]:
                                                if start_time > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if ext_call.return_data[0] < u - 1:
                                                sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if u > ext_call.return_data[0]:
                                                if u < 1:
                                                    revert with 0, 17
                                                if ext_call.return_data[0] < u - 1:
                                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                        if start_time > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u + 1 > ext_call.return_data[0]:
                                        _6478 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_6478] = 0
                                        mem[_6478 + 32] = 0
                                        mem[_6478 + 64] = 0
                                        mem[_6478 + 96] = 0
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _6478
                                        u = u + 1
                                        continue 
                                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                            gas gas_remaining wei
                                           args arg1, u + 1
                                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6699 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 128
                                    _6947 = mem[64]
                                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                        revert with 0, 65
                                    mem[64] = mem[64] + 128
                                    require mem[_6699] == ('signextend', 15, ('mem', ('range', ('var', '_6699'), 32)))
                                    mem[_6947] = mem[_6699]
                                    require mem[_6699 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6699')), 32)))
                                    mem[_6947 + 32] = mem[_6699 + 32]
                                    mem[_6947 + 64] = mem[_6699 + 64]
                                    mem[_6947 + 96] = mem[_6699 + 96]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = t
                                    t = _6947
                                    u = u + 1
                                    continue 
                                if u < 1:
                                    revert with 0, 17
                                if ext_call.return_data[0] < u - 1:
                                    sub_16aea5c0[arg1] = ext_call.return_data[0]
                                    sub_486d25fe[arg1] = start_time
                                    emit Claimed(arg1, 0, ext_call.return_data[0], ext_call.return_data[0]);
                                else:
                                    sub_16aea5c0[arg1] = u - 1
                                    sub_486d25fe[arg1] = start_time
                                    emit Claimed(arg1, 0, u - 1, ext_call.return_data[0]);
    else:
        if block.timestamp / 168 * 24 * 3600 and 168 * 24 * 3600 > -1 / block.timestamp / 168 * 24 * 3600:
            revert with 0, 17
        mem[96] = 0xc2c4c5c100000000000000000000000000000000000000000000000000000000
        require ext_code.size(voting_escrowAddress)
        call voting_escrowAddress.checkpoint() with:
             gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        idx = 0
        s = time_cursor
        while idx < 20:
            if s <= 168 * 24 * 3600 * block.timestamp / 168 * 24 * 3600:
                staticcall voting_escrowAddress.0x900cf0cf with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2010 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2025 = mem[_2010]
                t = 0
                u = 0
                while t < 128:
                    if u < _2025:
                        if u > !_2025:
                            revert with 0, 17
                        if 2 > !(u + _2025):
                            revert with 0, 17
                        staticcall voting_escrowAddress.point_history(uint256 arg1) with:
                                gas gas_remaining wei
                               args Mask(255, 1, u + _2025 + 2)
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7002 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _7208 = mem[64]
                        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                            revert with 0, 65
                        mem[64] = mem[64] + 128
                        require mem[_7002] == ('signextend', 15, ('mem', ('range', ('var', '_7002'), 32)))
                        mem[_7208] = mem[_7002]
                        require mem[_7002 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_7002')), 32)))
                        mem[_7208 + 32] = mem[_7002 + 32]
                        mem[_7208 + 64] = mem[_7002 + 64]
                        mem[_7208 + 96] = mem[_7002 + 96]
                        if mem[_7208 + 64] <= s:
                            if t == -1:
                                revert with 0, 17
                            t = t + 1
                            u = u + _2025 + 2 / 2
                            continue 
                        if u + _2025 + 2 / 2 < 1:
                            revert with 0, 17
                        if t == -1:
                            revert with 0, 17
                        t = t + 1
                        u = u
                        continue 
                    staticcall voting_escrowAddress.point_history(uint256 arg1) with:
                            gas gas_remaining wei
                           args u
                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6075 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 128
                    _6218 = mem[64]
                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                        revert with 0, 65
                    mem[64] = mem[64] + 128
                    require mem[_6075] == ('signextend', 15, ('mem', ('range', ('var', '_6075'), 32)))
                    mem[_6218] = mem[_6075]
                    require mem[_6075 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6075')), 32)))
                    mem[_6218 + 32] = mem[_6075 + 32]
                    mem[_6218 + 64] = mem[_6075 + 64]
                    mem[_6218 + 96] = mem[_6075 + 96]
                    if s <= mem[_6218 + 64]:
                        if ('signextend', 15, ('mem', ('range', ('var', '_6218'), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000:
                            revert with 0, 17
                        if s >= 10^15:
                            revert with 0, 50
                        if ('signextend', 15, ('signextend', 15, ('mem', ('range', ('var', '_6218'), 32)))) >= 0:
                            sub_d4dafba8[s] = ('signextend', 15, ('signextend', 15, ('mem', ('range', ('var', '_6218'), 32))))
                        else:
                            sub_d4dafba8[s] = 0
                    else:
                        if s < mem[_6218 + 64]:
                            revert with 0, 17
                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6218')), 32))) > 0 and ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_6218')), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6218')), 32))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_6218')), 32))))):
                            revert with 0, 17
                        if ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_6218')), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6218')), 32))) and ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_6218')), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6218')), 32))) > 0:
                            revert with 0, 17
                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6218')), 32))) < 0 and ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_6218')), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6218')), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_6218')), 32))))):
                            revert with 0, 17
                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6218')), 32))) < 0 and ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_6218')), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6218')), 32))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_6218')), 32))))):
                            revert with 0, 17
                        if ('signextend', 15, ('mul', ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_6218')), 32))))), ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6218')), 32))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', '_6218'), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_6218')), 32))))), ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6218')), 32))))) - 0x80000000000000000000000000000000:
                            revert with 0, 17
                        if ('signextend', 15, ('mul', ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_6218')), 32))))), ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6218')), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', '_6218'), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_6218')), 32))))), ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6218')), 32))))) + 0x7fffffffffffffffffffffffffffffff:
                            revert with 0, 17
                        if s >= 10^15:
                            revert with 0, 50
                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', '_6218'), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_6218')), 32))))), ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6218')), 32)))))))) >= 0:
                            sub_d4dafba8[s] = ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', '_6218'), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_6218')), 32))))), ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6218')), 32))))))))
                        else:
                            sub_d4dafba8[s] = 0
                    if s > -604801:
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + (168 * 24 * 3600)
                    continue 
                staticcall voting_escrowAddress.point_history(uint256 arg1) with:
                        gas gas_remaining wei
                       args u
                mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6008 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 128
                _6074 = mem[64]
                if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                    revert with 0, 65
                mem[64] = mem[64] + 128
                require mem[_6008] == ('signextend', 15, ('mem', ('range', ('var', '_6008'), 32)))
                mem[_6074] = mem[_6008]
                require mem[_6008 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6008')), 32)))
                mem[_6074 + 32] = mem[_6008 + 32]
                mem[_6074 + 64] = mem[_6008 + 64]
                mem[_6074 + 96] = mem[_6008 + 96]
                if s <= mem[_6074 + 64]:
                    if ('signextend', 15, ('mem', ('range', ('var', '_6074'), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000:
                        revert with 0, 17
                    if s >= 10^15:
                        revert with 0, 50
                    if ('signextend', 15, ('signextend', 15, ('mem', ('range', ('var', '_6074'), 32)))) >= 0:
                        sub_d4dafba8[s] = ('signextend', 15, ('signextend', 15, ('mem', ('range', ('var', '_6074'), 32))))
                    else:
                        sub_d4dafba8[s] = 0
                else:
                    if s < mem[_6074 + 64]:
                        revert with 0, 17
                    if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6074')), 32))) > 0 and ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_6074')), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6074')), 32))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_6074')), 32))))):
                        revert with 0, 17
                    if ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_6074')), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6074')), 32))) and ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_6074')), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6074')), 32))) > 0:
                        revert with 0, 17
                    if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6074')), 32))) < 0 and ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_6074')), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6074')), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_6074')), 32))))):
                        revert with 0, 17
                    if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6074')), 32))) < 0 and ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_6074')), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6074')), 32))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_6074')), 32))))):
                        revert with 0, 17
                    if ('signextend', 15, ('mul', ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_6074')), 32))))), ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6074')), 32))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', '_6074'), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_6074')), 32))))), ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6074')), 32))))) - 0x80000000000000000000000000000000:
                        revert with 0, 17
                    if ('signextend', 15, ('mul', ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_6074')), 32))))), ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6074')), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', '_6074'), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_6074')), 32))))), ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6074')), 32))))) + 0x7fffffffffffffffffffffffffffffff:
                        revert with 0, 17
                    if s >= 10^15:
                        revert with 0, 50
                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', '_6074'), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_6074')), 32))))), ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6074')), 32)))))))) >= 0:
                        sub_d4dafba8[s] = ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', '_6074'), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('add', ('var', 1), ('mul', -1, ('mem', ('range', ('add', 64, ('var', '_6074')), 32))))), ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6074')), 32))))))))
                    else:
                        sub_d4dafba8[s] = 0
                if s > -604801:
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + (168 * 24 * 3600)
                continue 
            time_cursor = s
            if last_token_time / 168 * 24 * 3600 and 168 * 24 * 3600 > -1 / last_token_time / 168 * 24 * 3600:
                revert with 0, 17
            mem[mem[64] + 4] = arg1
            staticcall voting_escrowAddress.user_point_epoch(uint256 arg1) with:
                    gas gas_remaining wei
                   args arg1
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2274 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _2330 = mem[_2274]
            if mem[_2274]:
                mem[0] = arg1
                mem[32] = 2
                if not sub_486d25fe[arg1]:
                    idx = 0
                    s = 0
                    while idx < 128:
                        if s < _2330:
                            if s > !_2330:
                                revert with 0, 17
                            if 2 > !(s + _2330):
                                revert with 0, 17
                            staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                    gas gas_remaining wei
                                   args arg1, s + _2330 + 2 / 2
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7029 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _7237 = mem[64]
                            if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                revert with 0, 65
                            mem[64] = mem[64] + 128
                            require mem[_7029] == ('signextend', 15, ('mem', ('range', ('var', '_7029'), 32)))
                            mem[_7237] = mem[_7029]
                            require mem[_7029 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_7029')), 32)))
                            mem[_7237 + 32] = mem[_7029 + 32]
                            mem[_7237 + 64] = mem[_7029 + 64]
                            mem[_7237 + 96] = mem[_7029 + 96]
                            if mem[_7237 + 64] <= start_time:
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + _2330 + 2 / 2
                                continue 
                            if s + _2330 + 2 / 2 < 1:
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s
                            continue 
                        if s:
                            staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                    gas gas_remaining wei
                                   args arg1, s
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _6260 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _6655 = mem[64]
                            if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                revert with 0, 65
                            mem[64] = mem[64] + 128
                            require mem[_6260] == ('signextend', 15, ('mem', ('range', ('var', '_6260'), 32)))
                            mem[_6655] = mem[_6260]
                            require mem[_6260 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6260')), 32)))
                            mem[_6655 + 32] = mem[_6260 + 32]
                            mem[_6655 + 64] = mem[_6260 + 64]
                            mem[_6655 + 96] = mem[_6260 + 96]
                            if sub_486d25fe[arg1]:
                                if sub_486d25fe[arg1] < last_token_time:
                                    if sub_486d25fe[arg1] >= start_time:
                                        _7378 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_7378] = 0
                                        mem[_7378 + 32] = 0
                                        mem[_7378 + 64] = 0
                                        mem[_7378 + 96] = 0
                                        idx = 0
                                        t = _7378
                                        u = _6655
                                        v = s
                                        while idx < 50:
                                            if sub_486d25fe[arg1] >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                                if v < 1:
                                                    revert with 0, 17
                                                if _2330 < v - 1:
                                                    sub_16aea5c0[arg1] = _2330
                                                    emit Claimed(arg1, 0, _2330, _2330);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    emit Claimed(arg1, 0, v - 1, _2330);
                                                return 0
                                            if sub_486d25fe[arg1] < mem[u + 64]:
                                                if sub_486d25fe[arg1] < mem[t + 64]:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                                    if v <= _2330:
                                                        if sub_486d25fe[arg1] > -604801:
                                                            revert with 0, 17
                                                        if idx == -1:
                                                            revert with 0, 17
                                                        idx = idx + 1
                                                        t = t
                                                        u = u
                                                        v = v
                                                        continue 
                                                    if v < 1:
                                                        revert with 0, 17
                                                    if _2330 < v - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = v - 1
                                                        emit Claimed(arg1, 0, v - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    if sub_486d25fe[arg1] >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor2[arg1]]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                        revert with 0, 17
                                                else:
                                                    if v > _2330:
                                                        if v < 1:
                                                            revert with 0, 17
                                                        if _2330 < v - 1:
                                                            sub_16aea5c0[arg1] = _2330
                                                            emit Claimed(arg1, 0, _2330, _2330);
                                                        else:
                                                            sub_16aea5c0[arg1] = v - 1
                                                            emit Claimed(arg1, 0, v - 1, _2330);
                                                        return 0
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        if sub_486d25fe[arg1] >= 10^15:
                                                            revert with 0, 50
                                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                            revert with 0, 17
                                                        if not sub_d4dafba8[stor2[arg1]]:
                                                            revert with 0, 18
                                                        if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                            revert with 0, 17
                                                if sub_486d25fe[arg1] > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                t = t
                                                u = u
                                                v = v
                                                continue 
                                            if v > _2330:
                                                if sub_486d25fe[arg1] < mem[t + 64]:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                                    if v <= _2330:
                                                        if sub_486d25fe[arg1] > -604801:
                                                            revert with 0, 17
                                                        if idx == -1:
                                                            revert with 0, 17
                                                        idx = idx + 1
                                                        t = t
                                                        u = u
                                                        v = v
                                                        continue 
                                                    if v < 1:
                                                        revert with 0, 17
                                                    if _2330 < v - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = v - 1
                                                        emit Claimed(arg1, 0, v - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    if sub_486d25fe[arg1] >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor2[arg1]]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                        revert with 0, 17
                                                else:
                                                    if v > _2330:
                                                        if v < 1:
                                                            revert with 0, 17
                                                        if _2330 < v - 1:
                                                            sub_16aea5c0[arg1] = _2330
                                                            emit Claimed(arg1, 0, _2330, _2330);
                                                        else:
                                                            sub_16aea5c0[arg1] = v - 1
                                                            emit Claimed(arg1, 0, v - 1, _2330);
                                                        return 0
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        if sub_486d25fe[arg1] >= 10^15:
                                                            revert with 0, 50
                                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                            revert with 0, 17
                                                        if not sub_d4dafba8[stor2[arg1]]:
                                                            revert with 0, 18
                                                        if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                            revert with 0, 17
                                                if sub_486d25fe[arg1] > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                t = t
                                                u = u
                                                v = v
                                                continue 
                                            if v + 1 > _2330:
                                                _11999 = mem[64]
                                                mem[64] = mem[64] + 128
                                                mem[_11999] = 0
                                                mem[_11999 + 32] = 0
                                                mem[_11999 + 64] = 0
                                                mem[_11999 + 96] = 0
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                t = u
                                                u = _11999
                                                v = v + 1
                                                continue 
                                            staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                                    gas gas_remaining wei
                                                   args arg1, v + 1
                                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _12198 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 128
                                            _12382 = mem[64]
                                            if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                                revert with 0, 65
                                            mem[64] = mem[64] + 128
                                            require mem[_12198] == ('signextend', 15, ('mem', ('range', ('var', '_12198'), 32)))
                                            mem[_12382] = mem[_12198]
                                            require mem[_12198 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_12198')), 32)))
                                            mem[_12382 + 32] = mem[_12198 + 32]
                                            mem[_12382 + 64] = mem[_12198 + 64]
                                            mem[_12382 + 96] = mem[_12198 + 96]
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            t = u
                                            u = _12382
                                            v = v + 1
                                            continue 
                                        if v < 1:
                                            revert with 0, 17
                                        if _2330 < v - 1:
                                            sub_16aea5c0[arg1] = _2330
                                            emit Claimed(arg1, 0, _2330, _2330);
                                        else:
                                            sub_16aea5c0[arg1] = v - 1
                                            emit Claimed(arg1, 0, v - 1, _2330);
                                    else:
                                        _7391 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_7391] = 0
                                        mem[_7391 + 32] = 0
                                        mem[_7391 + 64] = 0
                                        mem[_7391 + 96] = 0
                                        idx = 0
                                        t = _7391
                                        u = _6655
                                        v = s
                                        while idx < 50:
                                            if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                                if v < 1:
                                                    revert with 0, 17
                                                if _2330 < v - 1:
                                                    sub_16aea5c0[arg1] = _2330
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2330, _2330);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, v - 1, _2330);
                                                return 0
                                            if start_time < mem[u + 64]:
                                                if start_time < mem[t + 64]:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                                    if v <= _2330:
                                                        if start_time > -604801:
                                                            revert with 0, 17
                                                        if idx == -1:
                                                            revert with 0, 17
                                                        idx = idx + 1
                                                        t = t
                                                        u = u
                                                        v = v
                                                        continue 
                                                    if v < 1:
                                                        revert with 0, 17
                                                    if _2330 < v - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = v - 1
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, v - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                                else:
                                                    if v > _2330:
                                                        if v < 1:
                                                            revert with 0, 17
                                                        if _2330 < v - 1:
                                                            sub_16aea5c0[arg1] = _2330
                                                            sub_486d25fe[arg1] = start_time
                                                            emit Claimed(arg1, 0, _2330, _2330);
                                                        else:
                                                            sub_16aea5c0[arg1] = v - 1
                                                            sub_486d25fe[arg1] = start_time
                                                            emit Claimed(arg1, 0, v - 1, _2330);
                                                        return 0
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        if start_time >= 10^15:
                                                            revert with 0, 50
                                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                            revert with 0, 17
                                                        if not sub_d4dafba8[stor0]:
                                                            revert with 0, 18
                                                        if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                            revert with 0, 17
                                                if start_time > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                t = t
                                                u = u
                                                v = v
                                                continue 
                                            if v > _2330:
                                                if start_time < mem[t + 64]:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                                    if v <= _2330:
                                                        if start_time > -604801:
                                                            revert with 0, 17
                                                        if idx == -1:
                                                            revert with 0, 17
                                                        idx = idx + 1
                                                        t = t
                                                        u = u
                                                        v = v
                                                        continue 
                                                    if v < 1:
                                                        revert with 0, 17
                                                    if _2330 < v - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = v - 1
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, v - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                                else:
                                                    if v > _2330:
                                                        if v < 1:
                                                            revert with 0, 17
                                                        if _2330 < v - 1:
                                                            sub_16aea5c0[arg1] = _2330
                                                            sub_486d25fe[arg1] = start_time
                                                            emit Claimed(arg1, 0, _2330, _2330);
                                                        else:
                                                            sub_16aea5c0[arg1] = v - 1
                                                            sub_486d25fe[arg1] = start_time
                                                            emit Claimed(arg1, 0, v - 1, _2330);
                                                        return 0
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        if start_time >= 10^15:
                                                            revert with 0, 50
                                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                            revert with 0, 17
                                                        if not sub_d4dafba8[stor0]:
                                                            revert with 0, 18
                                                        if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                            revert with 0, 17
                                                if start_time > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                t = t
                                                u = u
                                                v = v
                                                continue 
                                            if v + 1 > _2330:
                                                _12006 = mem[64]
                                                mem[64] = mem[64] + 128
                                                mem[_12006] = 0
                                                mem[_12006 + 32] = 0
                                                mem[_12006 + 64] = 0
                                                mem[_12006 + 96] = 0
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                t = u
                                                u = _12006
                                                v = v + 1
                                                continue 
                                            staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                                    gas gas_remaining wei
                                                   args arg1, v + 1
                                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _12204 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 128
                                            _12385 = mem[64]
                                            if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                                revert with 0, 65
                                            mem[64] = mem[64] + 128
                                            require mem[_12204] == ('signextend', 15, ('mem', ('range', ('var', '_12204'), 32)))
                                            mem[_12385] = mem[_12204]
                                            require mem[_12204 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_12204')), 32)))
                                            mem[_12385 + 32] = mem[_12204 + 32]
                                            mem[_12385 + 64] = mem[_12204 + 64]
                                            mem[_12385 + 96] = mem[_12204 + 96]
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            t = u
                                            u = _12385
                                            v = v + 1
                                            continue 
                                        if v < 1:
                                            revert with 0, 17
                                        if _2330 < v - 1:
                                            sub_16aea5c0[arg1] = _2330
                                            sub_486d25fe[arg1] = start_time
                                            emit Claimed(arg1, 0, _2330, _2330);
                                        else:
                                            sub_16aea5c0[arg1] = v - 1
                                            sub_486d25fe[arg1] = start_time
                                            emit Claimed(arg1, 0, v - 1, _2330);
                            else:
                                _7299 = mem[_6655 + 64]
                                if mem[_6655 + 64] > -604801:
                                    revert with 0, 17
                                if mem[_6655 + 64] + (168 * 24 * 3600) < 1:
                                    revert with 0, 17
                                if mem[_6655 + 64] + 604799 / 168 * 24 * 3600 and 168 * 24 * 3600 > -1 / mem[_6655 + 64] + 604799 / 168 * 24 * 3600:
                                    revert with 0, 17
                                if 168 * 24 * 3600 * mem[_6655 + 64] + 604799 / 168 * 24 * 3600 < last_token_time:
                                    if 168 * 24 * 3600 * mem[_6655 + 64] + 604799 / 168 * 24 * 3600 >= start_time:
                                        _8789 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_8789] = 0
                                        mem[_8789 + 32] = 0
                                        mem[_8789 + 64] = 0
                                        mem[_8789 + 96] = 0
                                        idx = 0
                                        t = _8789
                                        u = _6655
                                        v = s
                                        while idx < 50:
                                            if 168 * 24 * 3600 * _7299 + 604799 / 168 * 24 * 3600 >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                                if v < 1:
                                                    revert with 0, 17
                                                if _2330 < v - 1:
                                                    sub_16aea5c0[arg1] = _2330
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _7299 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, _2330, _2330);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _7299 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, v - 1, _2330);
                                                return 0
                                            if 168 * 24 * 3600 * _7299 + 604799 / 168 * 24 * 3600 < mem[u + 64]:
                                                if 168 * 24 * 3600 * _7299 + 604799 / 168 * 24 * 3600 < mem[t + 64]:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7299')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7299')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7299')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7299')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7299')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7299')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7299')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7299')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7299')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7299')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7299')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7299')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7299')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                                    if v <= _2330:
                                                        if 168 * 24 * 3600 * _7299 + 604799 / 168 * 24 * 3600 > -604801:
                                                            revert with 0, 17
                                                        if idx == -1:
                                                            revert with 0, 17
                                                        idx = idx + 1
                                                        t = t
                                                        u = u
                                                        v = v
                                                        continue 
                                                    if v < 1:
                                                        revert with 0, 17
                                                    if _2330 < v - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _7299 + 604799 / 168 * 24 * 3600
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = v - 1
                                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _7299 + 604799 / 168 * 24 * 3600
                                                        emit Claimed(arg1, 0, v - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7299')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    if 168 * 24 * 3600 * _7299 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7299')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[_7299 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7299')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[_7299 + 604799 / 168 * 24 * 3600]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7299')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[_7299 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_7299 + 604799 / 168 * 24 * 3600]):
                                                        revert with 0, 17
                                                else:
                                                    if v > _2330:
                                                        if v < 1:
                                                            revert with 0, 17
                                                        if _2330 < v - 1:
                                                            sub_16aea5c0[arg1] = _2330
                                                            sub_486d25fe[arg1] = 168 * 24 * 3600 * _7299 + 604799 / 168 * 24 * 3600
                                                            emit Claimed(arg1, 0, _2330, _2330);
                                                        else:
                                                            sub_16aea5c0[arg1] = v - 1
                                                            sub_486d25fe[arg1] = 168 * 24 * 3600 * _7299 + 604799 / 168 * 24 * 3600
                                                            emit Claimed(arg1, 0, v - 1, _2330);
                                                        return 0
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7299')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        if 168 * 24 * 3600 * _7299 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                            revert with 0, 50
                                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7299')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[_7299 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7299')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                            revert with 0, 17
                                                        if not sub_d4dafba8[_7299 + 604799 / 168 * 24 * 3600]:
                                                            revert with 0, 18
                                                        if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7299')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[_7299 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_7299 + 604799 / 168 * 24 * 3600]):
                                                            revert with 0, 17
                                                if 168 * 24 * 3600 * _7299 + 604799 / 168 * 24 * 3600 > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                t = t
                                                u = u
                                                v = v
                                                continue 
                                            if v > _2330:
                                                if 168 * 24 * 3600 * _7299 + 604799 / 168 * 24 * 3600 < mem[t + 64]:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7299')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7299')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7299')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7299')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7299')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7299')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7299')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7299')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7299')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7299')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7299')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7299')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7299')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                                    if v <= _2330:
                                                        if 168 * 24 * 3600 * _7299 + 604799 / 168 * 24 * 3600 > -604801:
                                                            revert with 0, 17
                                                        if idx == -1:
                                                            revert with 0, 17
                                                        idx = idx + 1
                                                        t = t
                                                        u = u
                                                        v = v
                                                        continue 
                                                    if v < 1:
                                                        revert with 0, 17
                                                    if _2330 < v - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _7299 + 604799 / 168 * 24 * 3600
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = v - 1
                                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _7299 + 604799 / 168 * 24 * 3600
                                                        emit Claimed(arg1, 0, v - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7299')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    if 168 * 24 * 3600 * _7299 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7299')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[_7299 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7299')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[_7299 + 604799 / 168 * 24 * 3600]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7299')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[_7299 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_7299 + 604799 / 168 * 24 * 3600]):
                                                        revert with 0, 17
                                                else:
                                                    if v > _2330:
                                                        if v < 1:
                                                            revert with 0, 17
                                                        if _2330 < v - 1:
                                                            sub_16aea5c0[arg1] = _2330
                                                            sub_486d25fe[arg1] = 168 * 24 * 3600 * _7299 + 604799 / 168 * 24 * 3600
                                                            emit Claimed(arg1, 0, _2330, _2330);
                                                        else:
                                                            sub_16aea5c0[arg1] = v - 1
                                                            sub_486d25fe[arg1] = 168 * 24 * 3600 * _7299 + 604799 / 168 * 24 * 3600
                                                            emit Claimed(arg1, 0, v - 1, _2330);
                                                        return 0
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7299')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        if 168 * 24 * 3600 * _7299 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                            revert with 0, 50
                                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7299')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[_7299 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7299')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                            revert with 0, 17
                                                        if not sub_d4dafba8[_7299 + 604799 / 168 * 24 * 3600]:
                                                            revert with 0, 18
                                                        if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7299')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[_7299 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_7299 + 604799 / 168 * 24 * 3600]):
                                                            revert with 0, 17
                                                if 168 * 24 * 3600 * _7299 + 604799 / 168 * 24 * 3600 > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                t = t
                                                u = u
                                                v = v
                                                continue 
                                            if v + 1 > _2330:
                                                _12013 = mem[64]
                                                mem[64] = mem[64] + 128
                                                mem[_12013] = 0
                                                mem[_12013 + 32] = 0
                                                mem[_12013 + 64] = 0
                                                mem[_12013 + 96] = 0
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                t = u
                                                u = _12013
                                                v = v + 1
                                                continue 
                                            staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                                    gas gas_remaining wei
                                                   args arg1, v + 1
                                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _12210 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 128
                                            _12388 = mem[64]
                                            if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                                revert with 0, 65
                                            mem[64] = mem[64] + 128
                                            require mem[_12210] == ('signextend', 15, ('mem', ('range', ('var', '_12210'), 32)))
                                            mem[_12388] = mem[_12210]
                                            require mem[_12210 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_12210')), 32)))
                                            mem[_12388 + 32] = mem[_12210 + 32]
                                            mem[_12388 + 64] = mem[_12210 + 64]
                                            mem[_12388 + 96] = mem[_12210 + 96]
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            t = u
                                            u = _12388
                                            v = v + 1
                                            continue 
                                        if v < 1:
                                            revert with 0, 17
                                        if _2330 < v - 1:
                                            sub_16aea5c0[arg1] = _2330
                                            sub_486d25fe[arg1] = 168 * 24 * 3600 * _7299 + 604799 / 168 * 24 * 3600
                                            emit Claimed(arg1, 0, _2330, _2330);
                                        else:
                                            sub_16aea5c0[arg1] = v - 1
                                            sub_486d25fe[arg1] = 168 * 24 * 3600 * _7299 + 604799 / 168 * 24 * 3600
                                            emit Claimed(arg1, 0, v - 1, _2330);
                                    else:
                                        _8959 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_8959] = 0
                                        mem[_8959 + 32] = 0
                                        mem[_8959 + 64] = 0
                                        mem[_8959 + 96] = 0
                                        idx = 0
                                        t = _8959
                                        u = _6655
                                        v = s
                                        while idx < 50:
                                            if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                                if v < 1:
                                                    revert with 0, 17
                                                if _2330 < v - 1:
                                                    sub_16aea5c0[arg1] = _2330
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2330, _2330);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, v - 1, _2330);
                                                return 0
                                            if start_time < mem[u + 64]:
                                                if start_time < mem[t + 64]:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                                    if v <= _2330:
                                                        if start_time > -604801:
                                                            revert with 0, 17
                                                        if idx == -1:
                                                            revert with 0, 17
                                                        idx = idx + 1
                                                        t = t
                                                        u = u
                                                        v = v
                                                        continue 
                                                    if v < 1:
                                                        revert with 0, 17
                                                    if _2330 < v - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = v - 1
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, v - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                                else:
                                                    if v > _2330:
                                                        if v < 1:
                                                            revert with 0, 17
                                                        if _2330 < v - 1:
                                                            sub_16aea5c0[arg1] = _2330
                                                            sub_486d25fe[arg1] = start_time
                                                            emit Claimed(arg1, 0, _2330, _2330);
                                                        else:
                                                            sub_16aea5c0[arg1] = v - 1
                                                            sub_486d25fe[arg1] = start_time
                                                            emit Claimed(arg1, 0, v - 1, _2330);
                                                        return 0
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        if start_time >= 10^15:
                                                            revert with 0, 50
                                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                            revert with 0, 17
                                                        if not sub_d4dafba8[stor0]:
                                                            revert with 0, 18
                                                        if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                            revert with 0, 17
                                                if start_time > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                t = t
                                                u = u
                                                v = v
                                                continue 
                                            if v > _2330:
                                                if start_time < mem[t + 64]:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                                    if v <= _2330:
                                                        if start_time > -604801:
                                                            revert with 0, 17
                                                        if idx == -1:
                                                            revert with 0, 17
                                                        idx = idx + 1
                                                        t = t
                                                        u = u
                                                        v = v
                                                        continue 
                                                    if v < 1:
                                                        revert with 0, 17
                                                    if _2330 < v - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = v - 1
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, v - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                                else:
                                                    if v > _2330:
                                                        if v < 1:
                                                            revert with 0, 17
                                                        if _2330 < v - 1:
                                                            sub_16aea5c0[arg1] = _2330
                                                            sub_486d25fe[arg1] = start_time
                                                            emit Claimed(arg1, 0, _2330, _2330);
                                                        else:
                                                            sub_16aea5c0[arg1] = v - 1
                                                            sub_486d25fe[arg1] = start_time
                                                            emit Claimed(arg1, 0, v - 1, _2330);
                                                        return 0
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        if start_time >= 10^15:
                                                            revert with 0, 50
                                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                            revert with 0, 17
                                                        if not sub_d4dafba8[stor0]:
                                                            revert with 0, 18
                                                        if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                            revert with 0, 17
                                                if start_time > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                t = t
                                                u = u
                                                v = v
                                                continue 
                                            if v + 1 > _2330:
                                                _12020 = mem[64]
                                                mem[64] = mem[64] + 128
                                                mem[_12020] = 0
                                                mem[_12020 + 32] = 0
                                                mem[_12020 + 64] = 0
                                                mem[_12020 + 96] = 0
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                t = u
                                                u = _12020
                                                v = v + 1
                                                continue 
                                            staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                                    gas gas_remaining wei
                                                   args arg1, v + 1
                                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _12216 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 128
                                            _12391 = mem[64]
                                            if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                                revert with 0, 65
                                            mem[64] = mem[64] + 128
                                            require mem[_12216] == ('signextend', 15, ('mem', ('range', ('var', '_12216'), 32)))
                                            mem[_12391] = mem[_12216]
                                            require mem[_12216 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_12216')), 32)))
                                            mem[_12391 + 32] = mem[_12216 + 32]
                                            mem[_12391 + 64] = mem[_12216 + 64]
                                            mem[_12391 + 96] = mem[_12216 + 96]
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            t = u
                                            u = _12391
                                            v = v + 1
                                            continue 
                                        if v < 1:
                                            revert with 0, 17
                                        if _2330 < v - 1:
                                            sub_16aea5c0[arg1] = _2330
                                            sub_486d25fe[arg1] = start_time
                                            emit Claimed(arg1, 0, _2330, _2330);
                                        else:
                                            sub_16aea5c0[arg1] = v - 1
                                            sub_486d25fe[arg1] = start_time
                                            emit Claimed(arg1, 0, v - 1, _2330);
                        else:
                            staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                    gas gas_remaining wei
                                   args arg1, 1
                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _6426 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 128
                            _6852 = mem[64]
                            if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                revert with 0, 65
                            mem[64] = mem[64] + 128
                            require mem[_6426] == ('signextend', 15, ('mem', ('range', ('var', '_6426'), 32)))
                            mem[_6852] = mem[_6426]
                            require mem[_6426 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6426')), 32)))
                            mem[_6852 + 32] = mem[_6426 + 32]
                            mem[_6852 + 64] = mem[_6426 + 64]
                            mem[_6852 + 96] = mem[_6426 + 96]
                            if sub_486d25fe[arg1]:
                                if sub_486d25fe[arg1] < last_token_time:
                                    if sub_486d25fe[arg1] >= start_time:
                                        _7392 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_7392] = 0
                                        mem[_7392 + 32] = 0
                                        mem[_7392 + 64] = 0
                                        mem[_7392 + 96] = 0
                                        idx = 0
                                        s = _7392
                                        t = _6852
                                        u = 1
                                        while idx < 50:
                                            if sub_486d25fe[arg1] >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2330 < u - 1:
                                                    sub_16aea5c0[arg1] = _2330
                                                    emit Claimed(arg1, 0, _2330, _2330);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    emit Claimed(arg1, 0, u - 1, _2330);
                                                return 0
                                            if sub_486d25fe[arg1] < mem[t + 64]:
                                                if sub_486d25fe[arg1] < mem[s + 64]:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                    if u <= _2330:
                                                        if sub_486d25fe[arg1] > -604801:
                                                            revert with 0, 17
                                                        if idx == -1:
                                                            revert with 0, 17
                                                        idx = idx + 1
                                                        s = s
                                                        t = t
                                                        u = u
                                                        continue 
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if _2330 < u - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        emit Claimed(arg1, 0, u - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if sub_486d25fe[arg1] >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor2[arg1]]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                        revert with 0, 17
                                                else:
                                                    if u > _2330:
                                                        if u < 1:
                                                            revert with 0, 17
                                                        if _2330 < u - 1:
                                                            sub_16aea5c0[arg1] = _2330
                                                            emit Claimed(arg1, 0, _2330, _2330);
                                                        else:
                                                            sub_16aea5c0[arg1] = u - 1
                                                            emit Claimed(arg1, 0, u - 1, _2330);
                                                        return 0
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        if sub_486d25fe[arg1] >= 10^15:
                                                            revert with 0, 50
                                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                            revert with 0, 17
                                                        if not sub_d4dafba8[stor2[arg1]]:
                                                            revert with 0, 18
                                                        if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                            revert with 0, 17
                                                if sub_486d25fe[arg1] > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u > _2330:
                                                if sub_486d25fe[arg1] < mem[s + 64]:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                    if u <= _2330:
                                                        if sub_486d25fe[arg1] > -604801:
                                                            revert with 0, 17
                                                        if idx == -1:
                                                            revert with 0, 17
                                                        idx = idx + 1
                                                        s = s
                                                        t = t
                                                        u = u
                                                        continue 
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if _2330 < u - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        emit Claimed(arg1, 0, u - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if sub_486d25fe[arg1] >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor2[arg1]]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                        revert with 0, 17
                                                else:
                                                    if u > _2330:
                                                        if u < 1:
                                                            revert with 0, 17
                                                        if _2330 < u - 1:
                                                            sub_16aea5c0[arg1] = _2330
                                                            emit Claimed(arg1, 0, _2330, _2330);
                                                        else:
                                                            sub_16aea5c0[arg1] = u - 1
                                                            emit Claimed(arg1, 0, u - 1, _2330);
                                                        return 0
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        if sub_486d25fe[arg1] >= 10^15:
                                                            revert with 0, 50
                                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                            revert with 0, 17
                                                        if not sub_d4dafba8[stor2[arg1]]:
                                                            revert with 0, 18
                                                        if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                            revert with 0, 17
                                                if sub_486d25fe[arg1] > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u + 1 > _2330:
                                                _12027 = mem[64]
                                                mem[64] = mem[64] + 128
                                                mem[_12027] = 0
                                                mem[_12027 + 32] = 0
                                                mem[_12027 + 64] = 0
                                                mem[_12027 + 96] = 0
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = t
                                                t = _12027
                                                u = u + 1
                                                continue 
                                            staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                                    gas gas_remaining wei
                                                   args arg1, u + 1
                                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _12222 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 128
                                            _12394 = mem[64]
                                            if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                                revert with 0, 65
                                            mem[64] = mem[64] + 128
                                            require mem[_12222] == ('signextend', 15, ('mem', ('range', ('var', '_12222'), 32)))
                                            mem[_12394] = mem[_12222]
                                            require mem[_12222 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_12222')), 32)))
                                            mem[_12394 + 32] = mem[_12222 + 32]
                                            mem[_12394 + 64] = mem[_12222 + 64]
                                            mem[_12394 + 96] = mem[_12222 + 96]
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = t
                                            t = _12394
                                            u = u + 1
                                            continue 
                                        if u < 1:
                                            revert with 0, 17
                                        if _2330 < u - 1:
                                            sub_16aea5c0[arg1] = _2330
                                            emit Claimed(arg1, 0, _2330, _2330);
                                        else:
                                            sub_16aea5c0[arg1] = u - 1
                                            emit Claimed(arg1, 0, u - 1, _2330);
                                    else:
                                        _7406 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_7406] = 0
                                        mem[_7406 + 32] = 0
                                        mem[_7406 + 64] = 0
                                        mem[_7406 + 96] = 0
                                        idx = 0
                                        s = _7406
                                        t = _6852
                                        u = 1
                                        while idx < 50:
                                            if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2330 < u - 1:
                                                    sub_16aea5c0[arg1] = _2330
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2330, _2330);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, _2330);
                                                return 0
                                            if start_time < mem[t + 64]:
                                                if start_time < mem[s + 64]:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                    if u <= _2330:
                                                        if start_time > -604801:
                                                            revert with 0, 17
                                                        if idx == -1:
                                                            revert with 0, 17
                                                        idx = idx + 1
                                                        s = s
                                                        t = t
                                                        u = u
                                                        continue 
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if _2330 < u - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, u - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                                else:
                                                    if u > _2330:
                                                        if u < 1:
                                                            revert with 0, 17
                                                        if _2330 < u - 1:
                                                            sub_16aea5c0[arg1] = _2330
                                                            sub_486d25fe[arg1] = start_time
                                                            emit Claimed(arg1, 0, _2330, _2330);
                                                        else:
                                                            sub_16aea5c0[arg1] = u - 1
                                                            sub_486d25fe[arg1] = start_time
                                                            emit Claimed(arg1, 0, u - 1, _2330);
                                                        return 0
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        if start_time >= 10^15:
                                                            revert with 0, 50
                                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                            revert with 0, 17
                                                        if not sub_d4dafba8[stor0]:
                                                            revert with 0, 18
                                                        if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                            revert with 0, 17
                                                if start_time > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u > _2330:
                                                if start_time < mem[s + 64]:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                    if u <= _2330:
                                                        if start_time > -604801:
                                                            revert with 0, 17
                                                        if idx == -1:
                                                            revert with 0, 17
                                                        idx = idx + 1
                                                        s = s
                                                        t = t
                                                        u = u
                                                        continue 
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if _2330 < u - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, u - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                                else:
                                                    if u > _2330:
                                                        if u < 1:
                                                            revert with 0, 17
                                                        if _2330 < u - 1:
                                                            sub_16aea5c0[arg1] = _2330
                                                            sub_486d25fe[arg1] = start_time
                                                            emit Claimed(arg1, 0, _2330, _2330);
                                                        else:
                                                            sub_16aea5c0[arg1] = u - 1
                                                            sub_486d25fe[arg1] = start_time
                                                            emit Claimed(arg1, 0, u - 1, _2330);
                                                        return 0
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        if start_time >= 10^15:
                                                            revert with 0, 50
                                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                            revert with 0, 17
                                                        if not sub_d4dafba8[stor0]:
                                                            revert with 0, 18
                                                        if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                            revert with 0, 17
                                                if start_time > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u + 1 > _2330:
                                                _12034 = mem[64]
                                                mem[64] = mem[64] + 128
                                                mem[_12034] = 0
                                                mem[_12034 + 32] = 0
                                                mem[_12034 + 64] = 0
                                                mem[_12034 + 96] = 0
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = t
                                                t = _12034
                                                u = u + 1
                                                continue 
                                            staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                                    gas gas_remaining wei
                                                   args arg1, u + 1
                                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _12228 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 128
                                            _12397 = mem[64]
                                            if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                                revert with 0, 65
                                            mem[64] = mem[64] + 128
                                            require mem[_12228] == ('signextend', 15, ('mem', ('range', ('var', '_12228'), 32)))
                                            mem[_12397] = mem[_12228]
                                            require mem[_12228 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_12228')), 32)))
                                            mem[_12397 + 32] = mem[_12228 + 32]
                                            mem[_12397 + 64] = mem[_12228 + 64]
                                            mem[_12397 + 96] = mem[_12228 + 96]
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = t
                                            t = _12397
                                            u = u + 1
                                            continue 
                                        if u < 1:
                                            revert with 0, 17
                                        if _2330 < u - 1:
                                            sub_16aea5c0[arg1] = _2330
                                            sub_486d25fe[arg1] = start_time
                                            emit Claimed(arg1, 0, _2330, _2330);
                                        else:
                                            sub_16aea5c0[arg1] = u - 1
                                            sub_486d25fe[arg1] = start_time
                                            emit Claimed(arg1, 0, u - 1, _2330);
                            else:
                                _7372 = mem[_6852 + 64]
                                if mem[_6852 + 64] > -604801:
                                    revert with 0, 17
                                if mem[_6852 + 64] + (168 * 24 * 3600) < 1:
                                    revert with 0, 17
                                if mem[_6852 + 64] + 604799 / 168 * 24 * 3600 and 168 * 24 * 3600 > -1 / mem[_6852 + 64] + 604799 / 168 * 24 * 3600:
                                    revert with 0, 17
                                if 168 * 24 * 3600 * mem[_6852 + 64] + 604799 / 168 * 24 * 3600 < last_token_time:
                                    if 168 * 24 * 3600 * mem[_6852 + 64] + 604799 / 168 * 24 * 3600 >= start_time:
                                        _8962 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_8962] = 0
                                        mem[_8962 + 32] = 0
                                        mem[_8962 + 64] = 0
                                        mem[_8962 + 96] = 0
                                        idx = 0
                                        s = _8962
                                        t = _6852
                                        u = 1
                                        while idx < 50:
                                            if 168 * 24 * 3600 * _7372 + 604799 / 168 * 24 * 3600 >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2330 < u - 1:
                                                    sub_16aea5c0[arg1] = _2330
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _7372 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, _2330, _2330);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _7372 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, u - 1, _2330);
                                                return 0
                                            if 168 * 24 * 3600 * _7372 + 604799 / 168 * 24 * 3600 < mem[t + 64]:
                                                if 168 * 24 * 3600 * _7372 + 604799 / 168 * 24 * 3600 < mem[s + 64]:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7372')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7372')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7372')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7372')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7372')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7372')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7372')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7372')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7372')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7372')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7372')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7372')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7372')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                    if u <= _2330:
                                                        if 168 * 24 * 3600 * _7372 + 604799 / 168 * 24 * 3600 > -604801:
                                                            revert with 0, 17
                                                        if idx == -1:
                                                            revert with 0, 17
                                                        idx = idx + 1
                                                        s = s
                                                        t = t
                                                        u = u
                                                        continue 
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if _2330 < u - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _7372 + 604799 / 168 * 24 * 3600
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _7372 + 604799 / 168 * 24 * 3600
                                                        emit Claimed(arg1, 0, u - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7372')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if 168 * 24 * 3600 * _7372 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7372')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_7372 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7372')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[_7372 + 604799 / 168 * 24 * 3600]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7372')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_7372 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_7372 + 604799 / 168 * 24 * 3600]):
                                                        revert with 0, 17
                                                else:
                                                    if u > _2330:
                                                        if u < 1:
                                                            revert with 0, 17
                                                        if _2330 < u - 1:
                                                            sub_16aea5c0[arg1] = _2330
                                                            sub_486d25fe[arg1] = 168 * 24 * 3600 * _7372 + 604799 / 168 * 24 * 3600
                                                            emit Claimed(arg1, 0, _2330, _2330);
                                                        else:
                                                            sub_16aea5c0[arg1] = u - 1
                                                            sub_486d25fe[arg1] = 168 * 24 * 3600 * _7372 + 604799 / 168 * 24 * 3600
                                                            emit Claimed(arg1, 0, u - 1, _2330);
                                                        return 0
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7372')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        if 168 * 24 * 3600 * _7372 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                            revert with 0, 50
                                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7372')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_7372 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7372')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                            revert with 0, 17
                                                        if not sub_d4dafba8[_7372 + 604799 / 168 * 24 * 3600]:
                                                            revert with 0, 18
                                                        if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7372')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_7372 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_7372 + 604799 / 168 * 24 * 3600]):
                                                            revert with 0, 17
                                                if 168 * 24 * 3600 * _7372 + 604799 / 168 * 24 * 3600 > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u > _2330:
                                                if 168 * 24 * 3600 * _7372 + 604799 / 168 * 24 * 3600 < mem[s + 64]:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7372')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7372')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7372')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7372')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7372')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7372')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7372')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7372')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7372')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7372')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7372')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7372')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7372')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                    if u <= _2330:
                                                        if 168 * 24 * 3600 * _7372 + 604799 / 168 * 24 * 3600 > -604801:
                                                            revert with 0, 17
                                                        if idx == -1:
                                                            revert with 0, 17
                                                        idx = idx + 1
                                                        s = s
                                                        t = t
                                                        u = u
                                                        continue 
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if _2330 < u - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _7372 + 604799 / 168 * 24 * 3600
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _7372 + 604799 / 168 * 24 * 3600
                                                        emit Claimed(arg1, 0, u - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7372')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if 168 * 24 * 3600 * _7372 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7372')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_7372 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7372')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[_7372 + 604799 / 168 * 24 * 3600]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7372')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_7372 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_7372 + 604799 / 168 * 24 * 3600]):
                                                        revert with 0, 17
                                                else:
                                                    if u > _2330:
                                                        if u < 1:
                                                            revert with 0, 17
                                                        if _2330 < u - 1:
                                                            sub_16aea5c0[arg1] = _2330
                                                            sub_486d25fe[arg1] = 168 * 24 * 3600 * _7372 + 604799 / 168 * 24 * 3600
                                                            emit Claimed(arg1, 0, _2330, _2330);
                                                        else:
                                                            sub_16aea5c0[arg1] = u - 1
                                                            sub_486d25fe[arg1] = 168 * 24 * 3600 * _7372 + 604799 / 168 * 24 * 3600
                                                            emit Claimed(arg1, 0, u - 1, _2330);
                                                        return 0
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7372')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        if 168 * 24 * 3600 * _7372 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                            revert with 0, 50
                                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7372')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_7372 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7372')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                            revert with 0, 17
                                                        if not sub_d4dafba8[_7372 + 604799 / 168 * 24 * 3600]:
                                                            revert with 0, 18
                                                        if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7372')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_7372 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_7372 + 604799 / 168 * 24 * 3600]):
                                                            revert with 0, 17
                                                if 168 * 24 * 3600 * _7372 + 604799 / 168 * 24 * 3600 > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u + 1 > _2330:
                                                _12041 = mem[64]
                                                mem[64] = mem[64] + 128
                                                mem[_12041] = 0
                                                mem[_12041 + 32] = 0
                                                mem[_12041 + 64] = 0
                                                mem[_12041 + 96] = 0
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = t
                                                t = _12041
                                                u = u + 1
                                                continue 
                                            staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                                    gas gas_remaining wei
                                                   args arg1, u + 1
                                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _12234 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 128
                                            _12400 = mem[64]
                                            if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                                revert with 0, 65
                                            mem[64] = mem[64] + 128
                                            require mem[_12234] == ('signextend', 15, ('mem', ('range', ('var', '_12234'), 32)))
                                            mem[_12400] = mem[_12234]
                                            require mem[_12234 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_12234')), 32)))
                                            mem[_12400 + 32] = mem[_12234 + 32]
                                            mem[_12400 + 64] = mem[_12234 + 64]
                                            mem[_12400 + 96] = mem[_12234 + 96]
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = t
                                            t = _12400
                                            u = u + 1
                                            continue 
                                        if u < 1:
                                            revert with 0, 17
                                        if _2330 < u - 1:
                                            sub_16aea5c0[arg1] = _2330
                                            sub_486d25fe[arg1] = 168 * 24 * 3600 * _7372 + 604799 / 168 * 24 * 3600
                                            emit Claimed(arg1, 0, _2330, _2330);
                                        else:
                                            sub_16aea5c0[arg1] = u - 1
                                            sub_486d25fe[arg1] = 168 * 24 * 3600 * _7372 + 604799 / 168 * 24 * 3600
                                            emit Claimed(arg1, 0, u - 1, _2330);
                                    else:
                                        _9192 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_9192] = 0
                                        mem[_9192 + 32] = 0
                                        mem[_9192 + 64] = 0
                                        mem[_9192 + 96] = 0
                                        idx = 0
                                        s = _9192
                                        t = _6852
                                        u = 1
                                        while idx < 50:
                                            if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2330 < u - 1:
                                                    sub_16aea5c0[arg1] = _2330
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2330, _2330);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, _2330);
                                                return 0
                                            if start_time < mem[t + 64]:
                                                if start_time < mem[s + 64]:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                    if u <= _2330:
                                                        if start_time > -604801:
                                                            revert with 0, 17
                                                        if idx == -1:
                                                            revert with 0, 17
                                                        idx = idx + 1
                                                        s = s
                                                        t = t
                                                        u = u
                                                        continue 
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if _2330 < u - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, u - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                                else:
                                                    if u > _2330:
                                                        if u < 1:
                                                            revert with 0, 17
                                                        if _2330 < u - 1:
                                                            sub_16aea5c0[arg1] = _2330
                                                            sub_486d25fe[arg1] = start_time
                                                            emit Claimed(arg1, 0, _2330, _2330);
                                                        else:
                                                            sub_16aea5c0[arg1] = u - 1
                                                            sub_486d25fe[arg1] = start_time
                                                            emit Claimed(arg1, 0, u - 1, _2330);
                                                        return 0
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        if start_time >= 10^15:
                                                            revert with 0, 50
                                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                            revert with 0, 17
                                                        if not sub_d4dafba8[stor0]:
                                                            revert with 0, 18
                                                        if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                            revert with 0, 17
                                                if start_time > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u > _2330:
                                                if start_time < mem[s + 64]:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                    if u <= _2330:
                                                        if start_time > -604801:
                                                            revert with 0, 17
                                                        if idx == -1:
                                                            revert with 0, 17
                                                        idx = idx + 1
                                                        s = s
                                                        t = t
                                                        u = u
                                                        continue 
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if _2330 < u - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, u - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                                else:
                                                    if u > _2330:
                                                        if u < 1:
                                                            revert with 0, 17
                                                        if _2330 < u - 1:
                                                            sub_16aea5c0[arg1] = _2330
                                                            sub_486d25fe[arg1] = start_time
                                                            emit Claimed(arg1, 0, _2330, _2330);
                                                        else:
                                                            sub_16aea5c0[arg1] = u - 1
                                                            sub_486d25fe[arg1] = start_time
                                                            emit Claimed(arg1, 0, u - 1, _2330);
                                                        return 0
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        if start_time >= 10^15:
                                                            revert with 0, 50
                                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                            revert with 0, 17
                                                        if not sub_d4dafba8[stor0]:
                                                            revert with 0, 18
                                                        if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                            revert with 0, 17
                                                if start_time > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u + 1 > _2330:
                                                _12048 = mem[64]
                                                mem[64] = mem[64] + 128
                                                mem[_12048] = 0
                                                mem[_12048 + 32] = 0
                                                mem[_12048 + 64] = 0
                                                mem[_12048 + 96] = 0
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = t
                                                t = _12048
                                                u = u + 1
                                                continue 
                                            staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                                    gas gas_remaining wei
                                                   args arg1, u + 1
                                            mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _12240 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 128
                                            _12403 = mem[64]
                                            if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                                revert with 0, 65
                                            mem[64] = mem[64] + 128
                                            require mem[_12240] == ('signextend', 15, ('mem', ('range', ('var', '_12240'), 32)))
                                            mem[_12403] = mem[_12240]
                                            require mem[_12240 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_12240')), 32)))
                                            mem[_12403 + 32] = mem[_12240 + 32]
                                            mem[_12403 + 64] = mem[_12240 + 64]
                                            mem[_12403 + 96] = mem[_12240 + 96]
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = t
                                            t = _12403
                                            u = u + 1
                                            continue 
                                        if u < 1:
                                            revert with 0, 17
                                        if _2330 < u - 1:
                                            sub_16aea5c0[arg1] = _2330
                                            sub_486d25fe[arg1] = start_time
                                            emit Claimed(arg1, 0, _2330, _2330);
                                        else:
                                            sub_16aea5c0[arg1] = u - 1
                                            sub_486d25fe[arg1] = start_time
                                            emit Claimed(arg1, 0, u - 1, _2330);
                        return 0
                    if s:
                        staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                gas gas_remaining wei
                               args arg1, s
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6084 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _6259 = mem[64]
                        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                            revert with 0, 65
                        mem[64] = mem[64] + 128
                        require mem[_6084] == ('signextend', 15, ('mem', ('range', ('var', '_6084'), 32)))
                        mem[_6259] = mem[_6084]
                        require mem[_6084 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6084')), 32)))
                        mem[_6259 + 32] = mem[_6084 + 32]
                        mem[_6259 + 64] = mem[_6084 + 64]
                        mem[_6259 + 96] = mem[_6084 + 96]
                        if sub_486d25fe[arg1]:
                            if sub_486d25fe[arg1] < last_token_time:
                                if sub_486d25fe[arg1] >= start_time:
                                    _7298 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_7298] = 0
                                    mem[_7298 + 32] = 0
                                    mem[_7298 + 64] = 0
                                    mem[_7298 + 96] = 0
                                    idx = 0
                                    t = _7298
                                    u = _6259
                                    v = s
                                    while idx < 50:
                                        if sub_486d25fe[arg1] >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                            if v < 1:
                                                revert with 0, 17
                                            if _2330 < v - 1:
                                                sub_16aea5c0[arg1] = _2330
                                                emit Claimed(arg1, 0, _2330, _2330);
                                            else:
                                                sub_16aea5c0[arg1] = v - 1
                                                emit Claimed(arg1, 0, v - 1, _2330);
                                            return 0
                                        if sub_486d25fe[arg1] < mem[u + 64]:
                                            if sub_486d25fe[arg1] < mem[t + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                                if v <= _2330:
                                                    if sub_486d25fe[arg1] > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    t = t
                                                    u = u
                                                    v = v
                                                    continue 
                                                if v < 1:
                                                    revert with 0, 17
                                                if _2330 < v - 1:
                                                    sub_16aea5c0[arg1] = _2330
                                                    emit Claimed(arg1, 0, _2330, _2330);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    emit Claimed(arg1, 0, v - 1, _2330);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                            else:
                                                if v > _2330:
                                                    if v < 1:
                                                        revert with 0, 17
                                                    if _2330 < v - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = v - 1
                                                        emit Claimed(arg1, 0, v - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    if sub_486d25fe[arg1] >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor2[arg1]]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                        revert with 0, 17
                                            if sub_486d25fe[arg1] > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            t = t
                                            u = u
                                            v = v
                                            continue 
                                        if v > _2330:
                                            if sub_486d25fe[arg1] < mem[t + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                                if v <= _2330:
                                                    if sub_486d25fe[arg1] > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    t = t
                                                    u = u
                                                    v = v
                                                    continue 
                                                if v < 1:
                                                    revert with 0, 17
                                                if _2330 < v - 1:
                                                    sub_16aea5c0[arg1] = _2330
                                                    emit Claimed(arg1, 0, _2330, _2330);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    emit Claimed(arg1, 0, v - 1, _2330);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                            else:
                                                if v > _2330:
                                                    if v < 1:
                                                        revert with 0, 17
                                                    if _2330 < v - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = v - 1
                                                        emit Claimed(arg1, 0, v - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    if sub_486d25fe[arg1] >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor2[arg1]]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                        revert with 0, 17
                                            if sub_486d25fe[arg1] > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            t = t
                                            u = u
                                            v = v
                                            continue 
                                        if v + 1 > _2330:
                                            _11943 = mem[64]
                                            mem[64] = mem[64] + 128
                                            mem[_11943] = 0
                                            mem[_11943 + 32] = 0
                                            mem[_11943 + 64] = 0
                                            mem[_11943 + 96] = 0
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            t = u
                                            u = _11943
                                            v = v + 1
                                            continue 
                                        staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                                gas gas_remaining wei
                                               args arg1, v + 1
                                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12150 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 128
                                        _12358 = mem[64]
                                        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                            revert with 0, 65
                                        mem[64] = mem[64] + 128
                                        require mem[_12150] == ('signextend', 15, ('mem', ('range', ('var', '_12150'), 32)))
                                        mem[_12358] = mem[_12150]
                                        require mem[_12150 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_12150')), 32)))
                                        mem[_12358 + 32] = mem[_12150 + 32]
                                        mem[_12358 + 64] = mem[_12150 + 64]
                                        mem[_12358 + 96] = mem[_12150 + 96]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = u
                                        u = _12358
                                        v = v + 1
                                        continue 
                                    if v < 1:
                                        revert with 0, 17
                                    if _2330 < v - 1:
                                        sub_16aea5c0[arg1] = _2330
                                        emit Claimed(arg1, 0, _2330, _2330);
                                    else:
                                        sub_16aea5c0[arg1] = v - 1
                                        emit Claimed(arg1, 0, v - 1, _2330);
                                else:
                                    _7369 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_7369] = 0
                                    mem[_7369 + 32] = 0
                                    mem[_7369 + 64] = 0
                                    mem[_7369 + 96] = 0
                                    idx = 0
                                    t = _7369
                                    u = _6259
                                    v = s
                                    while idx < 50:
                                        if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                            if v < 1:
                                                revert with 0, 17
                                            if _2330 < v - 1:
                                                sub_16aea5c0[arg1] = _2330
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, _2330, _2330);
                                            else:
                                                sub_16aea5c0[arg1] = v - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, v - 1, _2330);
                                            return 0
                                        if start_time < mem[u + 64]:
                                            if start_time < mem[t + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                                if v <= _2330:
                                                    if start_time > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    t = t
                                                    u = u
                                                    v = v
                                                    continue 
                                                if v < 1:
                                                    revert with 0, 17
                                                if _2330 < v - 1:
                                                    sub_16aea5c0[arg1] = _2330
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2330, _2330);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, v - 1, _2330);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                            else:
                                                if v > _2330:
                                                    if v < 1:
                                                        revert with 0, 17
                                                    if _2330 < v - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = v - 1
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, v - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                            if start_time > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            t = t
                                            u = u
                                            v = v
                                            continue 
                                        if v > _2330:
                                            if start_time < mem[t + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                                if v <= _2330:
                                                    if start_time > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    t = t
                                                    u = u
                                                    v = v
                                                    continue 
                                                if v < 1:
                                                    revert with 0, 17
                                                if _2330 < v - 1:
                                                    sub_16aea5c0[arg1] = _2330
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2330, _2330);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, v - 1, _2330);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                            else:
                                                if v > _2330:
                                                    if v < 1:
                                                        revert with 0, 17
                                                    if _2330 < v - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = v - 1
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, v - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                            if start_time > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            t = t
                                            u = u
                                            v = v
                                            continue 
                                        if v + 1 > _2330:
                                            _11950 = mem[64]
                                            mem[64] = mem[64] + 128
                                            mem[_11950] = 0
                                            mem[_11950 + 32] = 0
                                            mem[_11950 + 64] = 0
                                            mem[_11950 + 96] = 0
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            t = u
                                            u = _11950
                                            v = v + 1
                                            continue 
                                        staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                                gas gas_remaining wei
                                               args arg1, v + 1
                                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12156 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 128
                                        _12361 = mem[64]
                                        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                            revert with 0, 65
                                        mem[64] = mem[64] + 128
                                        require mem[_12156] == ('signextend', 15, ('mem', ('range', ('var', '_12156'), 32)))
                                        mem[_12361] = mem[_12156]
                                        require mem[_12156 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_12156')), 32)))
                                        mem[_12361 + 32] = mem[_12156 + 32]
                                        mem[_12361 + 64] = mem[_12156 + 64]
                                        mem[_12361 + 96] = mem[_12156 + 96]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = u
                                        u = _12361
                                        v = v + 1
                                        continue 
                                    if v < 1:
                                        revert with 0, 17
                                    if _2330 < v - 1:
                                        sub_16aea5c0[arg1] = _2330
                                        sub_486d25fe[arg1] = start_time
                                        emit Claimed(arg1, 0, _2330, _2330);
                                    else:
                                        sub_16aea5c0[arg1] = v - 1
                                        sub_486d25fe[arg1] = start_time
                                        emit Claimed(arg1, 0, v - 1, _2330);
                        else:
                            _7253 = mem[_6259 + 64]
                            if mem[_6259 + 64] > -604801:
                                revert with 0, 17
                            if mem[_6259 + 64] + (168 * 24 * 3600) < 1:
                                revert with 0, 17
                            if mem[_6259 + 64] + 604799 / 168 * 24 * 3600 and 168 * 24 * 3600 > -1 / mem[_6259 + 64] + 604799 / 168 * 24 * 3600:
                                revert with 0, 17
                            if 168 * 24 * 3600 * mem[_6259 + 64] + 604799 / 168 * 24 * 3600 < last_token_time:
                                if 168 * 24 * 3600 * mem[_6259 + 64] + 604799 / 168 * 24 * 3600 >= start_time:
                                    _8133 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_8133] = 0
                                    mem[_8133 + 32] = 0
                                    mem[_8133 + 64] = 0
                                    mem[_8133 + 96] = 0
                                    idx = 0
                                    t = _8133
                                    u = _6259
                                    v = s
                                    while idx < 50:
                                        if 168 * 24 * 3600 * _7253 + 604799 / 168 * 24 * 3600 >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                            if v < 1:
                                                revert with 0, 17
                                            if _2330 < v - 1:
                                                sub_16aea5c0[arg1] = _2330
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * _7253 + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, _2330, _2330);
                                            else:
                                                sub_16aea5c0[arg1] = v - 1
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * _7253 + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, v - 1, _2330);
                                            return 0
                                        if 168 * 24 * 3600 * _7253 + 604799 / 168 * 24 * 3600 < mem[u + 64]:
                                            if 168 * 24 * 3600 * _7253 + 604799 / 168 * 24 * 3600 < mem[t + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7253')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7253')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7253')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7253')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7253')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7253')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7253')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7253')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7253')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7253')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7253')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7253')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7253')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                                if v <= _2330:
                                                    if 168 * 24 * 3600 * _7253 + 604799 / 168 * 24 * 3600 > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    t = t
                                                    u = u
                                                    v = v
                                                    continue 
                                                if v < 1:
                                                    revert with 0, 17
                                                if _2330 < v - 1:
                                                    sub_16aea5c0[arg1] = _2330
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _7253 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, _2330, _2330);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _7253 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, v - 1, _2330);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7253')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if 168 * 24 * 3600 * _7253 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7253')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[_7253 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7253')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[_7253 + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7253')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[_7253 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_7253 + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                            else:
                                                if v > _2330:
                                                    if v < 1:
                                                        revert with 0, 17
                                                    if _2330 < v - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _7253 + 604799 / 168 * 24 * 3600
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = v - 1
                                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _7253 + 604799 / 168 * 24 * 3600
                                                        emit Claimed(arg1, 0, v - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7253')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    if 168 * 24 * 3600 * _7253 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7253')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[_7253 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7253')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[_7253 + 604799 / 168 * 24 * 3600]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7253')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[_7253 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_7253 + 604799 / 168 * 24 * 3600]):
                                                        revert with 0, 17
                                            if 168 * 24 * 3600 * _7253 + 604799 / 168 * 24 * 3600 > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            t = t
                                            u = u
                                            v = v
                                            continue 
                                        if v > _2330:
                                            if 168 * 24 * 3600 * _7253 + 604799 / 168 * 24 * 3600 < mem[t + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7253')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7253')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7253')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7253')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7253')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7253')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7253')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7253')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7253')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7253')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7253')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7253')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7253')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                                if v <= _2330:
                                                    if 168 * 24 * 3600 * _7253 + 604799 / 168 * 24 * 3600 > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    t = t
                                                    u = u
                                                    v = v
                                                    continue 
                                                if v < 1:
                                                    revert with 0, 17
                                                if _2330 < v - 1:
                                                    sub_16aea5c0[arg1] = _2330
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _7253 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, _2330, _2330);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _7253 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, v - 1, _2330);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7253')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if 168 * 24 * 3600 * _7253 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7253')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[_7253 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7253')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[_7253 + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7253')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[_7253 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_7253 + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                            else:
                                                if v > _2330:
                                                    if v < 1:
                                                        revert with 0, 17
                                                    if _2330 < v - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _7253 + 604799 / 168 * 24 * 3600
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = v - 1
                                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _7253 + 604799 / 168 * 24 * 3600
                                                        emit Claimed(arg1, 0, v - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7253')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    if 168 * 24 * 3600 * _7253 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7253')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[_7253 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7253')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[_7253 + 604799 / 168 * 24 * 3600]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7253')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[_7253 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_7253 + 604799 / 168 * 24 * 3600]):
                                                        revert with 0, 17
                                            if 168 * 24 * 3600 * _7253 + 604799 / 168 * 24 * 3600 > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            t = t
                                            u = u
                                            v = v
                                            continue 
                                        if v + 1 > _2330:
                                            _11957 = mem[64]
                                            mem[64] = mem[64] + 128
                                            mem[_11957] = 0
                                            mem[_11957 + 32] = 0
                                            mem[_11957 + 64] = 0
                                            mem[_11957 + 96] = 0
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            t = u
                                            u = _11957
                                            v = v + 1
                                            continue 
                                        staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                                gas gas_remaining wei
                                               args arg1, v + 1
                                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12162 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 128
                                        _12364 = mem[64]
                                        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                            revert with 0, 65
                                        mem[64] = mem[64] + 128
                                        require mem[_12162] == ('signextend', 15, ('mem', ('range', ('var', '_12162'), 32)))
                                        mem[_12364] = mem[_12162]
                                        require mem[_12162 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_12162')), 32)))
                                        mem[_12364 + 32] = mem[_12162 + 32]
                                        mem[_12364 + 64] = mem[_12162 + 64]
                                        mem[_12364 + 96] = mem[_12162 + 96]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = u
                                        u = _12364
                                        v = v + 1
                                        continue 
                                    if v < 1:
                                        revert with 0, 17
                                    if _2330 < v - 1:
                                        sub_16aea5c0[arg1] = _2330
                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _7253 + 604799 / 168 * 24 * 3600
                                        emit Claimed(arg1, 0, _2330, _2330);
                                    else:
                                        sub_16aea5c0[arg1] = v - 1
                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _7253 + 604799 / 168 * 24 * 3600
                                        emit Claimed(arg1, 0, v - 1, _2330);
                                else:
                                    _8574 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_8574] = 0
                                    mem[_8574 + 32] = 0
                                    mem[_8574 + 64] = 0
                                    mem[_8574 + 96] = 0
                                    idx = 0
                                    t = _8574
                                    u = _6259
                                    v = s
                                    while idx < 50:
                                        if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                            if v < 1:
                                                revert with 0, 17
                                            if _2330 < v - 1:
                                                sub_16aea5c0[arg1] = _2330
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, _2330, _2330);
                                            else:
                                                sub_16aea5c0[arg1] = v - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, v - 1, _2330);
                                            return 0
                                        if start_time < mem[u + 64]:
                                            if start_time < mem[t + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                                if v <= _2330:
                                                    if start_time > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    t = t
                                                    u = u
                                                    v = v
                                                    continue 
                                                if v < 1:
                                                    revert with 0, 17
                                                if _2330 < v - 1:
                                                    sub_16aea5c0[arg1] = _2330
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2330, _2330);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, v - 1, _2330);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                            else:
                                                if v > _2330:
                                                    if v < 1:
                                                        revert with 0, 17
                                                    if _2330 < v - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = v - 1
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, v - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                            if start_time > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            t = t
                                            u = u
                                            v = v
                                            continue 
                                        if v > _2330:
                                            if start_time < mem[t + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                                if v <= _2330:
                                                    if start_time > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    t = t
                                                    u = u
                                                    v = v
                                                    continue 
                                                if v < 1:
                                                    revert with 0, 17
                                                if _2330 < v - 1:
                                                    sub_16aea5c0[arg1] = _2330
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2330, _2330);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, v - 1, _2330);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                            else:
                                                if v > _2330:
                                                    if v < 1:
                                                        revert with 0, 17
                                                    if _2330 < v - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = v - 1
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, v - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                            if start_time > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            t = t
                                            u = u
                                            v = v
                                            continue 
                                        if v + 1 > _2330:
                                            _11964 = mem[64]
                                            mem[64] = mem[64] + 128
                                            mem[_11964] = 0
                                            mem[_11964 + 32] = 0
                                            mem[_11964 + 64] = 0
                                            mem[_11964 + 96] = 0
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            t = u
                                            u = _11964
                                            v = v + 1
                                            continue 
                                        staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                                gas gas_remaining wei
                                               args arg1, v + 1
                                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12168 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 128
                                        _12367 = mem[64]
                                        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                            revert with 0, 65
                                        mem[64] = mem[64] + 128
                                        require mem[_12168] == ('signextend', 15, ('mem', ('range', ('var', '_12168'), 32)))
                                        mem[_12367] = mem[_12168]
                                        require mem[_12168 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_12168')), 32)))
                                        mem[_12367 + 32] = mem[_12168 + 32]
                                        mem[_12367 + 64] = mem[_12168 + 64]
                                        mem[_12367 + 96] = mem[_12168 + 96]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = u
                                        u = _12367
                                        v = v + 1
                                        continue 
                                    if v < 1:
                                        revert with 0, 17
                                    if _2330 < v - 1:
                                        sub_16aea5c0[arg1] = _2330
                                        sub_486d25fe[arg1] = start_time
                                        emit Claimed(arg1, 0, _2330, _2330);
                                    else:
                                        sub_16aea5c0[arg1] = v - 1
                                        sub_486d25fe[arg1] = start_time
                                        emit Claimed(arg1, 0, v - 1, _2330);
                    else:
                        staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                gas gas_remaining wei
                               args arg1, 1
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6090 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _6425 = mem[64]
                        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                            revert with 0, 65
                        mem[64] = mem[64] + 128
                        require mem[_6090] == ('signextend', 15, ('mem', ('range', ('var', '_6090'), 32)))
                        mem[_6425] = mem[_6090]
                        require mem[_6090 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6090')), 32)))
                        mem[_6425 + 32] = mem[_6090 + 32]
                        mem[_6425 + 64] = mem[_6090 + 64]
                        mem[_6425 + 96] = mem[_6090 + 96]
                        if sub_486d25fe[arg1]:
                            if sub_486d25fe[arg1] < last_token_time:
                                if sub_486d25fe[arg1] >= start_time:
                                    _7370 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_7370] = 0
                                    mem[_7370 + 32] = 0
                                    mem[_7370 + 64] = 0
                                    mem[_7370 + 96] = 0
                                    idx = 0
                                    s = _7370
                                    t = _6425
                                    u = 1
                                    while idx < 50:
                                        if sub_486d25fe[arg1] >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                            if u < 1:
                                                revert with 0, 17
                                            if _2330 < u - 1:
                                                sub_16aea5c0[arg1] = _2330
                                                emit Claimed(arg1, 0, _2330, _2330);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                emit Claimed(arg1, 0, u - 1, _2330);
                                            return 0
                                        if sub_486d25fe[arg1] < mem[t + 64]:
                                            if sub_486d25fe[arg1] < mem[s + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                if u <= _2330:
                                                    if sub_486d25fe[arg1] > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    s = s
                                                    t = t
                                                    u = u
                                                    continue 
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2330 < u - 1:
                                                    sub_16aea5c0[arg1] = _2330
                                                    emit Claimed(arg1, 0, _2330, _2330);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    emit Claimed(arg1, 0, u - 1, _2330);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                            else:
                                                if u > _2330:
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if _2330 < u - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        emit Claimed(arg1, 0, u - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if sub_486d25fe[arg1] >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor2[arg1]]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                        revert with 0, 17
                                            if sub_486d25fe[arg1] > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            t = t
                                            u = u
                                            continue 
                                        if u > _2330:
                                            if sub_486d25fe[arg1] < mem[s + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                if u <= _2330:
                                                    if sub_486d25fe[arg1] > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    s = s
                                                    t = t
                                                    u = u
                                                    continue 
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2330 < u - 1:
                                                    sub_16aea5c0[arg1] = _2330
                                                    emit Claimed(arg1, 0, _2330, _2330);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    emit Claimed(arg1, 0, u - 1, _2330);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                            else:
                                                if u > _2330:
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if _2330 < u - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        emit Claimed(arg1, 0, u - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if sub_486d25fe[arg1] >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor2[arg1]]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                        revert with 0, 17
                                            if sub_486d25fe[arg1] > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            t = t
                                            u = u
                                            continue 
                                        if u + 1 > _2330:
                                            _11971 = mem[64]
                                            mem[64] = mem[64] + 128
                                            mem[_11971] = 0
                                            mem[_11971 + 32] = 0
                                            mem[_11971 + 64] = 0
                                            mem[_11971 + 96] = 0
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = t
                                            t = _11971
                                            u = u + 1
                                            continue 
                                        staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                                gas gas_remaining wei
                                               args arg1, u + 1
                                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12174 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 128
                                        _12370 = mem[64]
                                        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                            revert with 0, 65
                                        mem[64] = mem[64] + 128
                                        require mem[_12174] == ('signextend', 15, ('mem', ('range', ('var', '_12174'), 32)))
                                        mem[_12370] = mem[_12174]
                                        require mem[_12174 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_12174')), 32)))
                                        mem[_12370 + 32] = mem[_12174 + 32]
                                        mem[_12370 + 64] = mem[_12174 + 64]
                                        mem[_12370 + 96] = mem[_12174 + 96]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _12370
                                        u = u + 1
                                        continue 
                                    if u < 1:
                                        revert with 0, 17
                                    if _2330 < u - 1:
                                        sub_16aea5c0[arg1] = _2330
                                        emit Claimed(arg1, 0, _2330, _2330);
                                    else:
                                        sub_16aea5c0[arg1] = u - 1
                                        emit Claimed(arg1, 0, u - 1, _2330);
                                else:
                                    _7377 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_7377] = 0
                                    mem[_7377 + 32] = 0
                                    mem[_7377 + 64] = 0
                                    mem[_7377 + 96] = 0
                                    idx = 0
                                    s = _7377
                                    t = _6425
                                    u = 1
                                    while idx < 50:
                                        if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                            if u < 1:
                                                revert with 0, 17
                                            if _2330 < u - 1:
                                                sub_16aea5c0[arg1] = _2330
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, _2330, _2330);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, u - 1, _2330);
                                            return 0
                                        if start_time < mem[t + 64]:
                                            if start_time < mem[s + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                if u <= _2330:
                                                    if start_time > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    s = s
                                                    t = t
                                                    u = u
                                                    continue 
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2330 < u - 1:
                                                    sub_16aea5c0[arg1] = _2330
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2330, _2330);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, _2330);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                            else:
                                                if u > _2330:
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if _2330 < u - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, u - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                            if start_time > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            t = t
                                            u = u
                                            continue 
                                        if u > _2330:
                                            if start_time < mem[s + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                if u <= _2330:
                                                    if start_time > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    s = s
                                                    t = t
                                                    u = u
                                                    continue 
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2330 < u - 1:
                                                    sub_16aea5c0[arg1] = _2330
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2330, _2330);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, _2330);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                            else:
                                                if u > _2330:
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if _2330 < u - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, u - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                            if start_time > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            t = t
                                            u = u
                                            continue 
                                        if u + 1 > _2330:
                                            _11978 = mem[64]
                                            mem[64] = mem[64] + 128
                                            mem[_11978] = 0
                                            mem[_11978 + 32] = 0
                                            mem[_11978 + 64] = 0
                                            mem[_11978 + 96] = 0
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = t
                                            t = _11978
                                            u = u + 1
                                            continue 
                                        staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                                gas gas_remaining wei
                                               args arg1, u + 1
                                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12180 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 128
                                        _12373 = mem[64]
                                        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                            revert with 0, 65
                                        mem[64] = mem[64] + 128
                                        require mem[_12180] == ('signextend', 15, ('mem', ('range', ('var', '_12180'), 32)))
                                        mem[_12373] = mem[_12180]
                                        require mem[_12180 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_12180')), 32)))
                                        mem[_12373 + 32] = mem[_12180 + 32]
                                        mem[_12373 + 64] = mem[_12180 + 64]
                                        mem[_12373 + 96] = mem[_12180 + 96]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _12373
                                        u = u + 1
                                        continue 
                                    if u < 1:
                                        revert with 0, 17
                                    if _2330 < u - 1:
                                        sub_16aea5c0[arg1] = _2330
                                        sub_486d25fe[arg1] = start_time
                                        emit Claimed(arg1, 0, _2330, _2330);
                                    else:
                                        sub_16aea5c0[arg1] = u - 1
                                        sub_486d25fe[arg1] = start_time
                                        emit Claimed(arg1, 0, u - 1, _2330);
                        else:
                            _7292 = mem[_6425 + 64]
                            if mem[_6425 + 64] > -604801:
                                revert with 0, 17
                            if mem[_6425 + 64] + (168 * 24 * 3600) < 1:
                                revert with 0, 17
                            if mem[_6425 + 64] + 604799 / 168 * 24 * 3600 and 168 * 24 * 3600 > -1 / mem[_6425 + 64] + 604799 / 168 * 24 * 3600:
                                revert with 0, 17
                            if 168 * 24 * 3600 * mem[_6425 + 64] + 604799 / 168 * 24 * 3600 < last_token_time:
                                if 168 * 24 * 3600 * mem[_6425 + 64] + 604799 / 168 * 24 * 3600 >= start_time:
                                    _8577 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_8577] = 0
                                    mem[_8577 + 32] = 0
                                    mem[_8577 + 64] = 0
                                    mem[_8577 + 96] = 0
                                    idx = 0
                                    s = _8577
                                    t = _6425
                                    u = 1
                                    while idx < 50:
                                        if 168 * 24 * 3600 * _7292 + 604799 / 168 * 24 * 3600 >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                            if u < 1:
                                                revert with 0, 17
                                            if _2330 < u - 1:
                                                sub_16aea5c0[arg1] = _2330
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * _7292 + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, _2330, _2330);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * _7292 + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, u - 1, _2330);
                                            return 0
                                        if 168 * 24 * 3600 * _7292 + 604799 / 168 * 24 * 3600 < mem[t + 64]:
                                            if 168 * 24 * 3600 * _7292 + 604799 / 168 * 24 * 3600 < mem[s + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7292')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7292')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7292')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7292')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7292')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7292')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7292')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7292')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7292')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7292')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7292')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7292')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7292')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                if u <= _2330:
                                                    if 168 * 24 * 3600 * _7292 + 604799 / 168 * 24 * 3600 > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    s = s
                                                    t = t
                                                    u = u
                                                    continue 
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2330 < u - 1:
                                                    sub_16aea5c0[arg1] = _2330
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _7292 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, _2330, _2330);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _7292 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, u - 1, _2330);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7292')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if 168 * 24 * 3600 * _7292 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7292')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_7292 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7292')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[_7292 + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7292')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_7292 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_7292 + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                            else:
                                                if u > _2330:
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if _2330 < u - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _7292 + 604799 / 168 * 24 * 3600
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _7292 + 604799 / 168 * 24 * 3600
                                                        emit Claimed(arg1, 0, u - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7292')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if 168 * 24 * 3600 * _7292 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7292')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_7292 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7292')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[_7292 + 604799 / 168 * 24 * 3600]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7292')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_7292 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_7292 + 604799 / 168 * 24 * 3600]):
                                                        revert with 0, 17
                                            if 168 * 24 * 3600 * _7292 + 604799 / 168 * 24 * 3600 > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            t = t
                                            u = u
                                            continue 
                                        if u > _2330:
                                            if 168 * 24 * 3600 * _7292 + 604799 / 168 * 24 * 3600 < mem[s + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7292')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7292')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7292')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7292')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7292')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7292')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7292')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7292')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7292')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7292')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7292')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7292')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7292')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                if u <= _2330:
                                                    if 168 * 24 * 3600 * _7292 + 604799 / 168 * 24 * 3600 > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    s = s
                                                    t = t
                                                    u = u
                                                    continue 
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2330 < u - 1:
                                                    sub_16aea5c0[arg1] = _2330
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _7292 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, _2330, _2330);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _7292 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, u - 1, _2330);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7292')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if 168 * 24 * 3600 * _7292 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7292')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_7292 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7292')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[_7292 + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7292')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_7292 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_7292 + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                            else:
                                                if u > _2330:
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if _2330 < u - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _7292 + 604799 / 168 * 24 * 3600
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _7292 + 604799 / 168 * 24 * 3600
                                                        emit Claimed(arg1, 0, u - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7292')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if 168 * 24 * 3600 * _7292 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7292')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_7292 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7292')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[_7292 + 604799 / 168 * 24 * 3600]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7292')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_7292 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_7292 + 604799 / 168 * 24 * 3600]):
                                                        revert with 0, 17
                                            if 168 * 24 * 3600 * _7292 + 604799 / 168 * 24 * 3600 > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            t = t
                                            u = u
                                            continue 
                                        if u + 1 > _2330:
                                            _11985 = mem[64]
                                            mem[64] = mem[64] + 128
                                            mem[_11985] = 0
                                            mem[_11985 + 32] = 0
                                            mem[_11985 + 64] = 0
                                            mem[_11985 + 96] = 0
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = t
                                            t = _11985
                                            u = u + 1
                                            continue 
                                        staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                                gas gas_remaining wei
                                               args arg1, u + 1
                                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12186 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 128
                                        _12376 = mem[64]
                                        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                            revert with 0, 65
                                        mem[64] = mem[64] + 128
                                        require mem[_12186] == ('signextend', 15, ('mem', ('range', ('var', '_12186'), 32)))
                                        mem[_12376] = mem[_12186]
                                        require mem[_12186 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_12186')), 32)))
                                        mem[_12376 + 32] = mem[_12186 + 32]
                                        mem[_12376 + 64] = mem[_12186 + 64]
                                        mem[_12376 + 96] = mem[_12186 + 96]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _12376
                                        u = u + 1
                                        continue 
                                    if u < 1:
                                        revert with 0, 17
                                    if _2330 < u - 1:
                                        sub_16aea5c0[arg1] = _2330
                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _7292 + 604799 / 168 * 24 * 3600
                                        emit Claimed(arg1, 0, _2330, _2330);
                                    else:
                                        sub_16aea5c0[arg1] = u - 1
                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _7292 + 604799 / 168 * 24 * 3600
                                        emit Claimed(arg1, 0, u - 1, _2330);
                                else:
                                    _8786 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_8786] = 0
                                    mem[_8786 + 32] = 0
                                    mem[_8786 + 64] = 0
                                    mem[_8786 + 96] = 0
                                    idx = 0
                                    s = _8786
                                    t = _6425
                                    u = 1
                                    while idx < 50:
                                        if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                            if u < 1:
                                                revert with 0, 17
                                            if _2330 < u - 1:
                                                sub_16aea5c0[arg1] = _2330
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, _2330, _2330);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, u - 1, _2330);
                                            return 0
                                        if start_time < mem[t + 64]:
                                            if start_time < mem[s + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                if u <= _2330:
                                                    if start_time > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    s = s
                                                    t = t
                                                    u = u
                                                    continue 
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2330 < u - 1:
                                                    sub_16aea5c0[arg1] = _2330
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2330, _2330);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, _2330);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                            else:
                                                if u > _2330:
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if _2330 < u - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, u - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                            if start_time > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            t = t
                                            u = u
                                            continue 
                                        if u > _2330:
                                            if start_time < mem[s + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                if u <= _2330:
                                                    if start_time > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    s = s
                                                    t = t
                                                    u = u
                                                    continue 
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2330 < u - 1:
                                                    sub_16aea5c0[arg1] = _2330
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2330, _2330);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, _2330);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                            else:
                                                if u > _2330:
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if _2330 < u - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, u - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                            if start_time > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            t = t
                                            u = u
                                            continue 
                                        if u + 1 > _2330:
                                            _11992 = mem[64]
                                            mem[64] = mem[64] + 128
                                            mem[_11992] = 0
                                            mem[_11992 + 32] = 0
                                            mem[_11992 + 64] = 0
                                            mem[_11992 + 96] = 0
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = t
                                            t = _11992
                                            u = u + 1
                                            continue 
                                        staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                                gas gas_remaining wei
                                               args arg1, u + 1
                                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12192 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 128
                                        _12379 = mem[64]
                                        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                            revert with 0, 65
                                        mem[64] = mem[64] + 128
                                        require mem[_12192] == ('signextend', 15, ('mem', ('range', ('var', '_12192'), 32)))
                                        mem[_12379] = mem[_12192]
                                        require mem[_12192 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_12192')), 32)))
                                        mem[_12379 + 32] = mem[_12192 + 32]
                                        mem[_12379 + 64] = mem[_12192 + 64]
                                        mem[_12379 + 96] = mem[_12192 + 96]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _12379
                                        u = u + 1
                                        continue 
                                    if u < 1:
                                        revert with 0, 17
                                    if _2330 < u - 1:
                                        sub_16aea5c0[arg1] = _2330
                                        sub_486d25fe[arg1] = start_time
                                        emit Claimed(arg1, 0, _2330, _2330);
                                    else:
                                        sub_16aea5c0[arg1] = u - 1
                                        sub_486d25fe[arg1] = start_time
                                        emit Claimed(arg1, 0, u - 1, _2330);
                else:
                    mem[0] = arg1
                    mem[32] = 3
                    if sub_16aea5c0[arg1]:
                        staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                gas gas_remaining wei
                               args arg1, sub_16aea5c0[arg1]
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2393 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _2416 = mem[64]
                        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                            revert with 0, 65
                        mem[64] = mem[64] + 128
                        require mem[_2393] == ('signextend', 15, ('mem', ('range', ('var', '_2393'), 32)))
                        mem[_2416] = mem[_2393]
                        require mem[_2393 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_2393')), 32)))
                        mem[_2416 + 32] = mem[_2393 + 32]
                        mem[_2416 + 64] = mem[_2393 + 64]
                        mem[_2416 + 96] = mem[_2393 + 96]
                        if sub_486d25fe[arg1]:
                            if sub_486d25fe[arg1] < last_token_time:
                                if sub_486d25fe[arg1] >= start_time:
                                    _2899 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_2899] = 0
                                    mem[_2899 + 32] = 0
                                    mem[_2899 + 64] = 0
                                    mem[_2899 + 96] = 0
                                    idx = 0
                                    s = _2899
                                    t = _2416
                                    u = sub_16aea5c0[arg1]
                                    while idx < 50:
                                        if sub_486d25fe[arg1] >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                            if u < 1:
                                                revert with 0, 17
                                            if _2330 < u - 1:
                                                sub_16aea5c0[arg1] = _2330
                                                emit Claimed(arg1, 0, _2330, _2330);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                emit Claimed(arg1, 0, u - 1, _2330);
                                            return 0
                                        if sub_486d25fe[arg1] < mem[t + 64]:
                                            if sub_486d25fe[arg1] < mem[s + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                if u <= _2330:
                                                    if sub_486d25fe[arg1] > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    s = s
                                                    t = t
                                                    u = u
                                                    continue 
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2330 < u - 1:
                                                    sub_16aea5c0[arg1] = _2330
                                                    emit Claimed(arg1, 0, _2330, _2330);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    emit Claimed(arg1, 0, u - 1, _2330);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                            else:
                                                if u > _2330:
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if _2330 < u - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        emit Claimed(arg1, 0, u - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if sub_486d25fe[arg1] >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor2[arg1]]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                        revert with 0, 17
                                            if sub_486d25fe[arg1] > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            t = t
                                            u = u
                                            continue 
                                        if u > _2330:
                                            if sub_486d25fe[arg1] < mem[s + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                if u <= _2330:
                                                    if sub_486d25fe[arg1] > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    s = s
                                                    t = t
                                                    u = u
                                                    continue 
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2330 < u - 1:
                                                    sub_16aea5c0[arg1] = _2330
                                                    emit Claimed(arg1, 0, _2330, _2330);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    emit Claimed(arg1, 0, u - 1, _2330);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                            else:
                                                if u > _2330:
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if _2330 < u - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        emit Claimed(arg1, 0, u - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if sub_486d25fe[arg1] >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor2[arg1]]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                        revert with 0, 17
                                            if sub_486d25fe[arg1] > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            t = t
                                            u = u
                                            continue 
                                        if u + 1 > _2330:
                                            _6600 = mem[64]
                                            mem[64] = mem[64] + 128
                                            mem[_6600] = 0
                                            mem[_6600 + 32] = 0
                                            mem[_6600 + 64] = 0
                                            mem[_6600 + 96] = 0
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = t
                                            t = _6600
                                            u = u + 1
                                            continue 
                                        staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                                gas gas_remaining wei
                                               args arg1, u + 1
                                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6804 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 128
                                        _7005 = mem[64]
                                        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                            revert with 0, 65
                                        mem[64] = mem[64] + 128
                                        require mem[_6804] == ('signextend', 15, ('mem', ('range', ('var', '_6804'), 32)))
                                        mem[_7005] = mem[_6804]
                                        require mem[_6804 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6804')), 32)))
                                        mem[_7005 + 32] = mem[_6804 + 32]
                                        mem[_7005 + 64] = mem[_6804 + 64]
                                        mem[_7005 + 96] = mem[_6804 + 96]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _7005
                                        u = u + 1
                                        continue 
                                    if u < 1:
                                        revert with 0, 17
                                    if _2330 < u - 1:
                                        sub_16aea5c0[arg1] = _2330
                                        emit Claimed(arg1, 0, _2330, _2330);
                                    else:
                                        sub_16aea5c0[arg1] = u - 1
                                        emit Claimed(arg1, 0, u - 1, _2330);
                                else:
                                    _2958 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_2958] = 0
                                    mem[_2958 + 32] = 0
                                    mem[_2958 + 64] = 0
                                    mem[_2958 + 96] = 0
                                    t = 0
                                    u = _2958
                                    v = _2416
                                    w = sub_16aea5c0[arg1]
                                    while t < 50:
                                        if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                            if w < 1:
                                                revert with 0, 17
                                            if _2330 < w - 1:
                                                sub_16aea5c0[arg1] = _2330
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, _2330, _2330);
                                            else:
                                                sub_16aea5c0[arg1] = w - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, w - 1, _2330);
                                            return 0
                                        if start_time < mem[v + 64]:
                                            if start_time < mem[u + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 3), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 3), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 3), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32)))))))))) < 0:
                                                if w <= _2330:
                                                    if start_time > -604801:
                                                        revert with 0, 17
                                                    if t == -1:
                                                        revert with 0, 17
                                                    t = t + 1
                                                    u = u
                                                    v = v
                                                    w = w
                                                    continue 
                                                if w < 1:
                                                    revert with 0, 17
                                                if _2330 < w - 1:
                                                    sub_16aea5c0[arg1] = _2330
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2330, _2330);
                                                else:
                                                    sub_16aea5c0[arg1] = w - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, w - 1, _2330);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 3), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 3), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 3), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 3), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                            else:
                                                if w > _2330:
                                                    if w < 1:
                                                        revert with 0, 17
                                                    if _2330 < w - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = w - 1
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, w - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 3), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 3), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 3), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 3), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                            if start_time > -604801:
                                                revert with 0, 17
                                            if t == -1:
                                                revert with 0, 17
                                            t = t + 1
                                            u = u
                                            v = v
                                            w = w
                                            continue 
                                        if w > _2330:
                                            if start_time < mem[u + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 3), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 3), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 3), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32)))))))))) < 0:
                                                if w <= _2330:
                                                    if start_time > -604801:
                                                        revert with 0, 17
                                                    if t == -1:
                                                        revert with 0, 17
                                                    t = t + 1
                                                    u = u
                                                    v = v
                                                    w = w
                                                    continue 
                                                if w < 1:
                                                    revert with 0, 17
                                                if _2330 < w - 1:
                                                    sub_16aea5c0[arg1] = _2330
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2330, _2330);
                                                else:
                                                    sub_16aea5c0[arg1] = w - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, w - 1, _2330);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 3), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 3), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 3), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 3), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                            else:
                                                if w > _2330:
                                                    if w < 1:
                                                        revert with 0, 17
                                                    if _2330 < w - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = w - 1
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, w - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 3), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 3), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 3), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 3), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                            if start_time > -604801:
                                                revert with 0, 17
                                            if t == -1:
                                                revert with 0, 17
                                            t = t + 1
                                            u = u
                                            v = v
                                            w = w
                                            continue 
                                        if w + 1 > _2330:
                                            _6607 = mem[64]
                                            mem[64] = mem[64] + 128
                                            mem[_6607] = 0
                                            mem[_6607 + 32] = 0
                                            mem[_6607 + 64] = 0
                                            mem[_6607 + 96] = 0
                                            if t == -1:
                                                revert with 0, 17
                                            t = t + 1
                                            u = v
                                            v = _6607
                                            w = w + 1
                                            continue 
                                        staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                                gas gas_remaining wei
                                               args arg1, w + 1
                                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6810 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 128
                                        _7008 = mem[64]
                                        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                            revert with 0, 65
                                        mem[64] = mem[64] + 128
                                        require mem[_6810] == ('signextend', 15, ('mem', ('range', ('var', '_6810'), 32)))
                                        mem[_7008] = mem[_6810]
                                        require mem[_6810 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6810')), 32)))
                                        mem[_7008 + 32] = mem[_6810 + 32]
                                        mem[_7008 + 64] = mem[_6810 + 64]
                                        mem[_7008 + 96] = mem[_6810 + 96]
                                        if t == -1:
                                            revert with 0, 17
                                        t = t + 1
                                        u = v
                                        v = _7008
                                        w = w + 1
                                        continue 
                                    if w < 1:
                                        revert with 0, 17
                                    if _2330 < w - 1:
                                        sub_16aea5c0[arg1] = _2330
                                        sub_486d25fe[arg1] = start_time
                                        emit Claimed(arg1, 0, _2330, _2330);
                                    else:
                                        sub_16aea5c0[arg1] = w - 1
                                        sub_486d25fe[arg1] = start_time
                                        emit Claimed(arg1, 0, w - 1, _2330);
                        else:
                            _2708 = mem[_2416 + 64]
                            if mem[_2416 + 64] > -604801:
                                revert with 0, 17
                            if mem[_2416 + 64] + (168 * 24 * 3600) < 1:
                                revert with 0, 17
                            if mem[_2416 + 64] + 604799 / 168 * 24 * 3600 and 168 * 24 * 3600 > -1 / mem[_2416 + 64] + 604799 / 168 * 24 * 3600:
                                revert with 0, 17
                            if 168 * 24 * 3600 * mem[_2416 + 64] + 604799 / 168 * 24 * 3600 < last_token_time:
                                if 168 * 24 * 3600 * mem[_2416 + 64] + 604799 / 168 * 24 * 3600 >= start_time:
                                    _3459 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_3459] = 0
                                    mem[_3459 + 32] = 0
                                    mem[_3459 + 64] = 0
                                    mem[_3459 + 96] = 0
                                    idx = 0
                                    s = _3459
                                    t = _2416
                                    u = sub_16aea5c0[arg1]
                                    while idx < 50:
                                        if 168 * 24 * 3600 * _2708 + 604799 / 168 * 24 * 3600 >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                            if u < 1:
                                                revert with 0, 17
                                            if _2330 < u - 1:
                                                sub_16aea5c0[arg1] = _2330
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * _2708 + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, _2330, _2330);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * _2708 + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, u - 1, _2330);
                                            return 0
                                        if 168 * 24 * 3600 * _2708 + 604799 / 168 * 24 * 3600 < mem[t + 64]:
                                            if 168 * 24 * 3600 * _2708 + 604799 / 168 * 24 * 3600 < mem[s + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2708')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2708')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2708')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2708')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2708')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2708')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2708')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2708')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2708')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2708')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2708')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2708')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2708')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                if u <= _2330:
                                                    if 168 * 24 * 3600 * _2708 + 604799 / 168 * 24 * 3600 > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    s = s
                                                    t = t
                                                    u = u
                                                    continue 
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2330 < u - 1:
                                                    sub_16aea5c0[arg1] = _2330
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _2708 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, _2330, _2330);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _2708 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, u - 1, _2330);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2708')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if 168 * 24 * 3600 * _2708 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2708')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_2708 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2708')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[_2708 + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2708')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_2708 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_2708 + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                            else:
                                                if u > _2330:
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if _2330 < u - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _2708 + 604799 / 168 * 24 * 3600
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _2708 + 604799 / 168 * 24 * 3600
                                                        emit Claimed(arg1, 0, u - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2708')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if 168 * 24 * 3600 * _2708 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2708')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_2708 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2708')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[_2708 + 604799 / 168 * 24 * 3600]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2708')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_2708 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_2708 + 604799 / 168 * 24 * 3600]):
                                                        revert with 0, 17
                                            if 168 * 24 * 3600 * _2708 + 604799 / 168 * 24 * 3600 > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            t = t
                                            u = u
                                            continue 
                                        if u > _2330:
                                            if 168 * 24 * 3600 * _2708 + 604799 / 168 * 24 * 3600 < mem[s + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2708')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2708')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2708')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2708')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2708')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2708')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2708')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2708')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2708')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2708')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2708')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2708')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2708')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                if u <= _2330:
                                                    if 168 * 24 * 3600 * _2708 + 604799 / 168 * 24 * 3600 > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    s = s
                                                    t = t
                                                    u = u
                                                    continue 
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2330 < u - 1:
                                                    sub_16aea5c0[arg1] = _2330
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _2708 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, _2330, _2330);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _2708 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, u - 1, _2330);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2708')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if 168 * 24 * 3600 * _2708 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2708')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_2708 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2708')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[_2708 + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2708')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_2708 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_2708 + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                            else:
                                                if u > _2330:
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if _2330 < u - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _2708 + 604799 / 168 * 24 * 3600
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _2708 + 604799 / 168 * 24 * 3600
                                                        emit Claimed(arg1, 0, u - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2708')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if 168 * 24 * 3600 * _2708 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2708')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_2708 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2708')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[_2708 + 604799 / 168 * 24 * 3600]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2708')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_2708 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_2708 + 604799 / 168 * 24 * 3600]):
                                                        revert with 0, 17
                                            if 168 * 24 * 3600 * _2708 + 604799 / 168 * 24 * 3600 > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            t = t
                                            u = u
                                            continue 
                                        if u + 1 > _2330:
                                            _6614 = mem[64]
                                            mem[64] = mem[64] + 128
                                            mem[_6614] = 0
                                            mem[_6614 + 32] = 0
                                            mem[_6614 + 64] = 0
                                            mem[_6614 + 96] = 0
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = t
                                            t = _6614
                                            u = u + 1
                                            continue 
                                        staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                                gas gas_remaining wei
                                               args arg1, u + 1
                                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6816 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 128
                                        _7011 = mem[64]
                                        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                            revert with 0, 65
                                        mem[64] = mem[64] + 128
                                        require mem[_6816] == ('signextend', 15, ('mem', ('range', ('var', '_6816'), 32)))
                                        mem[_7011] = mem[_6816]
                                        require mem[_6816 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6816')), 32)))
                                        mem[_7011 + 32] = mem[_6816 + 32]
                                        mem[_7011 + 64] = mem[_6816 + 64]
                                        mem[_7011 + 96] = mem[_6816 + 96]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _7011
                                        u = u + 1
                                        continue 
                                    if u < 1:
                                        revert with 0, 17
                                    if _2330 < u - 1:
                                        sub_16aea5c0[arg1] = _2330
                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _2708 + 604799 / 168 * 24 * 3600
                                        emit Claimed(arg1, 0, _2330, _2330);
                                    else:
                                        sub_16aea5c0[arg1] = u - 1
                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _2708 + 604799 / 168 * 24 * 3600
                                        emit Claimed(arg1, 0, u - 1, _2330);
                                else:
                                    _3501 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_3501] = 0
                                    mem[_3501 + 32] = 0
                                    mem[_3501 + 64] = 0
                                    mem[_3501 + 96] = 0
                                    idx = 0
                                    s = _3501
                                    t = _2416
                                    u = sub_16aea5c0[arg1]
                                    while idx < 50:
                                        if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                            if u < 1:
                                                revert with 0, 17
                                            if _2330 < u - 1:
                                                sub_16aea5c0[arg1] = _2330
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, _2330, _2330);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, u - 1, _2330);
                                            return 0
                                        if start_time < mem[t + 64]:
                                            if start_time < mem[s + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                if u <= _2330:
                                                    if start_time > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    s = s
                                                    t = t
                                                    u = u
                                                    continue 
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2330 < u - 1:
                                                    sub_16aea5c0[arg1] = _2330
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2330, _2330);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, _2330);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                            else:
                                                if u > _2330:
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if _2330 < u - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, u - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                            if start_time > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            t = t
                                            u = u
                                            continue 
                                        if u > _2330:
                                            if start_time < mem[s + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                if u <= _2330:
                                                    if start_time > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    s = s
                                                    t = t
                                                    u = u
                                                    continue 
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2330 < u - 1:
                                                    sub_16aea5c0[arg1] = _2330
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2330, _2330);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, _2330);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                            else:
                                                if u > _2330:
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if _2330 < u - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, u - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                            if start_time > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            t = t
                                            u = u
                                            continue 
                                        if u + 1 > _2330:
                                            _6621 = mem[64]
                                            mem[64] = mem[64] + 128
                                            mem[_6621] = 0
                                            mem[_6621 + 32] = 0
                                            mem[_6621 + 64] = 0
                                            mem[_6621 + 96] = 0
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = t
                                            t = _6621
                                            u = u + 1
                                            continue 
                                        staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                                gas gas_remaining wei
                                               args arg1, u + 1
                                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6822 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 128
                                        _7014 = mem[64]
                                        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                            revert with 0, 65
                                        mem[64] = mem[64] + 128
                                        require mem[_6822] == ('signextend', 15, ('mem', ('range', ('var', '_6822'), 32)))
                                        mem[_7014] = mem[_6822]
                                        require mem[_6822 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6822')), 32)))
                                        mem[_7014 + 32] = mem[_6822 + 32]
                                        mem[_7014 + 64] = mem[_6822 + 64]
                                        mem[_7014 + 96] = mem[_6822 + 96]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _7014
                                        u = u + 1
                                        continue 
                                    if u < 1:
                                        revert with 0, 17
                                    if _2330 < u - 1:
                                        sub_16aea5c0[arg1] = _2330
                                        sub_486d25fe[arg1] = start_time
                                        emit Claimed(arg1, 0, _2330, _2330);
                                    else:
                                        sub_16aea5c0[arg1] = u - 1
                                        sub_486d25fe[arg1] = start_time
                                        emit Claimed(arg1, 0, u - 1, _2330);
                    else:
                        staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                gas gas_remaining wei
                               args arg1, 1
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2404 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _2424 = mem[64]
                        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                            revert with 0, 65
                        mem[64] = mem[64] + 128
                        require mem[_2404] == ('signextend', 15, ('mem', ('range', ('var', '_2404'), 32)))
                        mem[_2424] = mem[_2404]
                        require mem[_2404 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_2404')), 32)))
                        mem[_2424 + 32] = mem[_2404 + 32]
                        mem[_2424 + 64] = mem[_2404 + 64]
                        mem[_2424 + 96] = mem[_2404 + 96]
                        if sub_486d25fe[arg1]:
                            if sub_486d25fe[arg1] < last_token_time:
                                if sub_486d25fe[arg1] >= start_time:
                                    _2959 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_2959] = 0
                                    mem[_2959 + 32] = 0
                                    mem[_2959 + 64] = 0
                                    mem[_2959 + 96] = 0
                                    t = 0
                                    u = _2959
                                    v = _2424
                                    w = 1
                                    while t < 50:
                                        if sub_486d25fe[arg1] >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                            if w < 1:
                                                revert with 0, 17
                                            if _2330 < w - 1:
                                                sub_16aea5c0[arg1] = _2330
                                                emit Claimed(arg1, 0, _2330, _2330);
                                            else:
                                                sub_16aea5c0[arg1] = w - 1
                                                emit Claimed(arg1, 0, w - 1, _2330);
                                            return 0
                                        if sub_486d25fe[arg1] < mem[v + 64]:
                                            if sub_486d25fe[arg1] < mem[u + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 3), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 3), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 3), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32)))))))))) < 0:
                                                if w <= _2330:
                                                    if sub_486d25fe[arg1] > -604801:
                                                        revert with 0, 17
                                                    if t == -1:
                                                        revert with 0, 17
                                                    t = t + 1
                                                    u = u
                                                    v = v
                                                    w = w
                                                    continue 
                                                if w < 1:
                                                    revert with 0, 17
                                                if _2330 < w - 1:
                                                    sub_16aea5c0[arg1] = _2330
                                                    emit Claimed(arg1, 0, _2330, _2330);
                                                else:
                                                    sub_16aea5c0[arg1] = w - 1
                                                    emit Claimed(arg1, 0, w - 1, _2330);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 3), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 3), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 3), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 3), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                            else:
                                                if w > _2330:
                                                    if w < 1:
                                                        revert with 0, 17
                                                    if _2330 < w - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = w - 1
                                                        emit Claimed(arg1, 0, w - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 3), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32)))))))))):
                                                    if sub_486d25fe[arg1] >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 3), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 3), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor2[arg1]]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 3), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                        revert with 0, 17
                                            if sub_486d25fe[arg1] > -604801:
                                                revert with 0, 17
                                            if t == -1:
                                                revert with 0, 17
                                            t = t + 1
                                            u = u
                                            v = v
                                            w = w
                                            continue 
                                        if w > _2330:
                                            if sub_486d25fe[arg1] < mem[u + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 3), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 3), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 3), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32)))))))))) < 0:
                                                if w <= _2330:
                                                    if sub_486d25fe[arg1] > -604801:
                                                        revert with 0, 17
                                                    if t == -1:
                                                        revert with 0, 17
                                                    t = t + 1
                                                    u = u
                                                    v = v
                                                    w = w
                                                    continue 
                                                if w < 1:
                                                    revert with 0, 17
                                                if _2330 < w - 1:
                                                    sub_16aea5c0[arg1] = _2330
                                                    emit Claimed(arg1, 0, _2330, _2330);
                                                else:
                                                    sub_16aea5c0[arg1] = w - 1
                                                    emit Claimed(arg1, 0, w - 1, _2330);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 3), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 3), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 3), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 3), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                            else:
                                                if w > _2330:
                                                    if w < 1:
                                                        revert with 0, 17
                                                    if _2330 < w - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = w - 1
                                                        emit Claimed(arg1, 0, w - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 3), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32)))))))))):
                                                    if sub_486d25fe[arg1] >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 3), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 3), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor2[arg1]]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 3), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 3)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 3)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                        revert with 0, 17
                                            if sub_486d25fe[arg1] > -604801:
                                                revert with 0, 17
                                            if t == -1:
                                                revert with 0, 17
                                            t = t + 1
                                            u = u
                                            v = v
                                            w = w
                                            continue 
                                        if w + 1 > _2330:
                                            _6628 = mem[64]
                                            mem[64] = mem[64] + 128
                                            mem[_6628] = 0
                                            mem[_6628 + 32] = 0
                                            mem[_6628 + 64] = 0
                                            mem[_6628 + 96] = 0
                                            if t == -1:
                                                revert with 0, 17
                                            t = t + 1
                                            u = v
                                            v = _6628
                                            w = w + 1
                                            continue 
                                        staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                                gas gas_remaining wei
                                               args arg1, w + 1
                                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6828 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 128
                                        _7017 = mem[64]
                                        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                            revert with 0, 65
                                        mem[64] = mem[64] + 128
                                        require mem[_6828] == ('signextend', 15, ('mem', ('range', ('var', '_6828'), 32)))
                                        mem[_7017] = mem[_6828]
                                        require mem[_6828 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6828')), 32)))
                                        mem[_7017 + 32] = mem[_6828 + 32]
                                        mem[_7017 + 64] = mem[_6828 + 64]
                                        mem[_7017 + 96] = mem[_6828 + 96]
                                        if t == -1:
                                            revert with 0, 17
                                        t = t + 1
                                        u = v
                                        v = _7017
                                        w = w + 1
                                        continue 
                                    if w < 1:
                                        revert with 0, 17
                                    if _2330 < w - 1:
                                        sub_16aea5c0[arg1] = _2330
                                        emit Claimed(arg1, 0, _2330, _2330);
                                    else:
                                        sub_16aea5c0[arg1] = w - 1
                                        emit Claimed(arg1, 0, w - 1, _2330);
                                else:
                                    _3032 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_3032] = 0
                                    mem[_3032 + 32] = 0
                                    mem[_3032 + 64] = 0
                                    mem[_3032 + 96] = 0
                                    idx = 0
                                    s = _3032
                                    t = _2424
                                    u = 1
                                    while idx < 50:
                                        if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                            if u < 1:
                                                revert with 0, 17
                                            if _2330 < u - 1:
                                                sub_16aea5c0[arg1] = _2330
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, _2330, _2330);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, u - 1, _2330);
                                            return 0
                                        if start_time < mem[t + 64]:
                                            if start_time < mem[s + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                if u <= _2330:
                                                    if start_time > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    s = s
                                                    t = t
                                                    u = u
                                                    continue 
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2330 < u - 1:
                                                    sub_16aea5c0[arg1] = _2330
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2330, _2330);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, _2330);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                            else:
                                                if u > _2330:
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if _2330 < u - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, u - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                            if start_time > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            t = t
                                            u = u
                                            continue 
                                        if u > _2330:
                                            if start_time < mem[s + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                if u <= _2330:
                                                    if start_time > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    s = s
                                                    t = t
                                                    u = u
                                                    continue 
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2330 < u - 1:
                                                    sub_16aea5c0[arg1] = _2330
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2330, _2330);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, _2330);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                            else:
                                                if u > _2330:
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if _2330 < u - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, u - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                            if start_time > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            t = t
                                            u = u
                                            continue 
                                        if u + 1 > _2330:
                                            _6635 = mem[64]
                                            mem[64] = mem[64] + 128
                                            mem[_6635] = 0
                                            mem[_6635 + 32] = 0
                                            mem[_6635 + 64] = 0
                                            mem[_6635 + 96] = 0
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = t
                                            t = _6635
                                            u = u + 1
                                            continue 
                                        staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                                gas gas_remaining wei
                                               args arg1, u + 1
                                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6834 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 128
                                        _7020 = mem[64]
                                        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                            revert with 0, 65
                                        mem[64] = mem[64] + 128
                                        require mem[_6834] == ('signextend', 15, ('mem', ('range', ('var', '_6834'), 32)))
                                        mem[_7020] = mem[_6834]
                                        require mem[_6834 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6834')), 32)))
                                        mem[_7020 + 32] = mem[_6834 + 32]
                                        mem[_7020 + 64] = mem[_6834 + 64]
                                        mem[_7020 + 96] = mem[_6834 + 96]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _7020
                                        u = u + 1
                                        continue 
                                    if u < 1:
                                        revert with 0, 17
                                    if _2330 < u - 1:
                                        sub_16aea5c0[arg1] = _2330
                                        sub_486d25fe[arg1] = start_time
                                        emit Claimed(arg1, 0, _2330, _2330);
                                    else:
                                        sub_16aea5c0[arg1] = u - 1
                                        sub_486d25fe[arg1] = start_time
                                        emit Claimed(arg1, 0, u - 1, _2330);
                        else:
                            _2836 = mem[_2424 + 64]
                            if mem[_2424 + 64] > -604801:
                                revert with 0, 17
                            if mem[_2424 + 64] + (168 * 24 * 3600) < 1:
                                revert with 0, 17
                            if mem[_2424 + 64] + 604799 / 168 * 24 * 3600 and 168 * 24 * 3600 > -1 / mem[_2424 + 64] + 604799 / 168 * 24 * 3600:
                                revert with 0, 17
                            if 168 * 24 * 3600 * mem[_2424 + 64] + 604799 / 168 * 24 * 3600 < last_token_time:
                                if 168 * 24 * 3600 * mem[_2424 + 64] + 604799 / 168 * 24 * 3600 >= start_time:
                                    _3504 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_3504] = 0
                                    mem[_3504 + 32] = 0
                                    mem[_3504 + 64] = 0
                                    mem[_3504 + 96] = 0
                                    idx = 0
                                    s = _3504
                                    t = _2424
                                    u = 1
                                    while idx < 50:
                                        if 168 * 24 * 3600 * _2836 + 604799 / 168 * 24 * 3600 >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                            if u < 1:
                                                revert with 0, 17
                                            if _2330 < u - 1:
                                                sub_16aea5c0[arg1] = _2330
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * _2836 + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, _2330, _2330);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * _2836 + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, u - 1, _2330);
                                            return 0
                                        if 168 * 24 * 3600 * _2836 + 604799 / 168 * 24 * 3600 < mem[t + 64]:
                                            if 168 * 24 * 3600 * _2836 + 604799 / 168 * 24 * 3600 < mem[s + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2836')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2836')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2836')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2836')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2836')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2836')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2836')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2836')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2836')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2836')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2836')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2836')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2836')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                if u <= _2330:
                                                    if 168 * 24 * 3600 * _2836 + 604799 / 168 * 24 * 3600 > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    s = s
                                                    t = t
                                                    u = u
                                                    continue 
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2330 < u - 1:
                                                    sub_16aea5c0[arg1] = _2330
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _2836 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, _2330, _2330);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _2836 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, u - 1, _2330);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2836')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if 168 * 24 * 3600 * _2836 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2836')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_2836 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2836')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[_2836 + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2836')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_2836 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_2836 + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                            else:
                                                if u > _2330:
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if _2330 < u - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _2836 + 604799 / 168 * 24 * 3600
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _2836 + 604799 / 168 * 24 * 3600
                                                        emit Claimed(arg1, 0, u - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2836')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if 168 * 24 * 3600 * _2836 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2836')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_2836 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2836')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[_2836 + 604799 / 168 * 24 * 3600]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2836')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_2836 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_2836 + 604799 / 168 * 24 * 3600]):
                                                        revert with 0, 17
                                            if 168 * 24 * 3600 * _2836 + 604799 / 168 * 24 * 3600 > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            t = t
                                            u = u
                                            continue 
                                        if u > _2330:
                                            if 168 * 24 * 3600 * _2836 + 604799 / 168 * 24 * 3600 < mem[s + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2836')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2836')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2836')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2836')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2836')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2836')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2836')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2836')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2836')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2836')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2836')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2836')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2836')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                if u <= _2330:
                                                    if 168 * 24 * 3600 * _2836 + 604799 / 168 * 24 * 3600 > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    s = s
                                                    t = t
                                                    u = u
                                                    continue 
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2330 < u - 1:
                                                    sub_16aea5c0[arg1] = _2330
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _2836 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, _2330, _2330);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _2836 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, u - 1, _2330);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2836')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if 168 * 24 * 3600 * _2836 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2836')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_2836 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2836')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[_2836 + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2836')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_2836 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_2836 + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                            else:
                                                if u > _2330:
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if _2330 < u - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _2836 + 604799 / 168 * 24 * 3600
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _2836 + 604799 / 168 * 24 * 3600
                                                        emit Claimed(arg1, 0, u - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2836')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if 168 * 24 * 3600 * _2836 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2836')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_2836 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2836')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[_2836 + 604799 / 168 * 24 * 3600]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2836')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_2836 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_2836 + 604799 / 168 * 24 * 3600]):
                                                        revert with 0, 17
                                            if 168 * 24 * 3600 * _2836 + 604799 / 168 * 24 * 3600 > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            t = t
                                            u = u
                                            continue 
                                        if u + 1 > _2330:
                                            _6642 = mem[64]
                                            mem[64] = mem[64] + 128
                                            mem[_6642] = 0
                                            mem[_6642 + 32] = 0
                                            mem[_6642 + 64] = 0
                                            mem[_6642 + 96] = 0
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = t
                                            t = _6642
                                            u = u + 1
                                            continue 
                                        staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                                gas gas_remaining wei
                                               args arg1, u + 1
                                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6840 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 128
                                        _7023 = mem[64]
                                        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                            revert with 0, 65
                                        mem[64] = mem[64] + 128
                                        require mem[_6840] == ('signextend', 15, ('mem', ('range', ('var', '_6840'), 32)))
                                        mem[_7023] = mem[_6840]
                                        require mem[_6840 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6840')), 32)))
                                        mem[_7023 + 32] = mem[_6840 + 32]
                                        mem[_7023 + 64] = mem[_6840 + 64]
                                        mem[_7023 + 96] = mem[_6840 + 96]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _7023
                                        u = u + 1
                                        continue 
                                    if u < 1:
                                        revert with 0, 17
                                    if _2330 < u - 1:
                                        sub_16aea5c0[arg1] = _2330
                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _2836 + 604799 / 168 * 24 * 3600
                                        emit Claimed(arg1, 0, _2330, _2330);
                                    else:
                                        sub_16aea5c0[arg1] = u - 1
                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _2836 + 604799 / 168 * 24 * 3600
                                        emit Claimed(arg1, 0, u - 1, _2330);
                                else:
                                    _3546 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_3546] = 0
                                    mem[_3546 + 32] = 0
                                    mem[_3546 + 64] = 0
                                    mem[_3546 + 96] = 0
                                    idx = 0
                                    s = _3546
                                    t = _2424
                                    u = 1
                                    while idx < 50:
                                        if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                            if u < 1:
                                                revert with 0, 17
                                            if _2330 < u - 1:
                                                sub_16aea5c0[arg1] = _2330
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, _2330, _2330);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, u - 1, _2330);
                                            return 0
                                        if start_time < mem[t + 64]:
                                            if start_time < mem[s + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                if u <= _2330:
                                                    if start_time > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    s = s
                                                    t = t
                                                    u = u
                                                    continue 
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2330 < u - 1:
                                                    sub_16aea5c0[arg1] = _2330
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2330, _2330);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, _2330);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                            else:
                                                if u > _2330:
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if _2330 < u - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, u - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                            if start_time > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            t = t
                                            u = u
                                            continue 
                                        if u > _2330:
                                            if start_time < mem[s + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                if u <= _2330:
                                                    if start_time > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    s = s
                                                    t = t
                                                    u = u
                                                    continue 
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2330 < u - 1:
                                                    sub_16aea5c0[arg1] = _2330
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2330, _2330);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, _2330);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                            else:
                                                if u > _2330:
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if _2330 < u - 1:
                                                        sub_16aea5c0[arg1] = _2330
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, _2330, _2330);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, u - 1, _2330);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                            if start_time > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            t = t
                                            u = u
                                            continue 
                                        if u + 1 > _2330:
                                            _6649 = mem[64]
                                            mem[64] = mem[64] + 128
                                            mem[_6649] = 0
                                            mem[_6649 + 32] = 0
                                            mem[_6649 + 64] = 0
                                            mem[_6649 + 96] = 0
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = t
                                            t = _6649
                                            u = u + 1
                                            continue 
                                        staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                                gas gas_remaining wei
                                               args arg1, u + 1
                                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6846 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 128
                                        _7026 = mem[64]
                                        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                            revert with 0, 65
                                        mem[64] = mem[64] + 128
                                        require mem[_6846] == ('signextend', 15, ('mem', ('range', ('var', '_6846'), 32)))
                                        mem[_7026] = mem[_6846]
                                        require mem[_6846 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6846')), 32)))
                                        mem[_7026 + 32] = mem[_6846 + 32]
                                        mem[_7026 + 64] = mem[_6846 + 64]
                                        mem[_7026 + 96] = mem[_6846 + 96]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _7026
                                        u = u + 1
                                        continue 
                                    if u < 1:
                                        revert with 0, 17
                                    if _2330 < u - 1:
                                        sub_16aea5c0[arg1] = _2330
                                        sub_486d25fe[arg1] = start_time
                                        emit Claimed(arg1, 0, _2330, _2330);
                                    else:
                                        sub_16aea5c0[arg1] = u - 1
                                        sub_486d25fe[arg1] = start_time
                                        emit Claimed(arg1, 0, u - 1, _2330);
                return 0
            else:
                return 0
        time_cursor = s
        if last_token_time / 168 * 24 * 3600 and 168 * 24 * 3600 > -1 / last_token_time / 168 * 24 * 3600:
            revert with 0, 17
        mem[mem[64] + 4] = arg1
        staticcall voting_escrowAddress.user_point_epoch(uint256 arg1) with:
                gas gas_remaining wei
               args arg1
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _2222 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _2271 = mem[_2222]
        if mem[_2222]:
            mem[0] = arg1
            mem[32] = 2
            if not sub_486d25fe[arg1]:
                idx = 0
                s = 0
                while idx < 128:
                    if s < _2271:
                        if s > !_2271:
                            revert with 0, 17
                        if 2 > !(s + _2271):
                            revert with 0, 17
                        staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                gas gas_remaining wei
                               args arg1, s + _2271 + 2 / 2
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6998 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _7204 = mem[64]
                        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                            revert with 0, 65
                        mem[64] = mem[64] + 128
                        require mem[_6998] == ('signextend', 15, ('mem', ('range', ('var', '_6998'), 32)))
                        mem[_7204] = mem[_6998]
                        require mem[_6998 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6998')), 32)))
                        mem[_7204 + 32] = mem[_6998 + 32]
                        mem[_7204 + 64] = mem[_6998 + 64]
                        mem[_7204 + 96] = mem[_6998 + 96]
                        if mem[_7204 + 64] <= start_time:
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + _2271 + 2 / 2
                            continue 
                        if s + _2271 + 2 / 2 < 1:
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s
                        continue 
                    if s:
                        staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                gas gas_remaining wei
                               args arg1, s
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6214 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _6596 = mem[64]
                        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                            revert with 0, 65
                        mem[64] = mem[64] + 128
                        require mem[_6214] == ('signextend', 15, ('mem', ('range', ('var', '_6214'), 32)))
                        mem[_6596] = mem[_6214]
                        require mem[_6214 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6214')), 32)))
                        mem[_6596 + 32] = mem[_6214 + 32]
                        mem[_6596 + 64] = mem[_6214 + 64]
                        mem[_6596 + 96] = mem[_6214 + 96]
                        if sub_486d25fe[arg1]:
                            if sub_486d25fe[arg1] < last_token_time:
                                if sub_486d25fe[arg1] >= start_time:
                                    _7374 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_7374] = 0
                                    mem[_7374 + 32] = 0
                                    mem[_7374 + 64] = 0
                                    mem[_7374 + 96] = 0
                                    idx = 0
                                    t = _7374
                                    u = _6596
                                    v = s
                                    while idx < 50:
                                        if sub_486d25fe[arg1] >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                            if v < 1:
                                                revert with 0, 17
                                            if _2271 < v - 1:
                                                sub_16aea5c0[arg1] = _2271
                                                emit Claimed(arg1, 0, _2271, _2271);
                                            else:
                                                sub_16aea5c0[arg1] = v - 1
                                                emit Claimed(arg1, 0, v - 1, _2271);
                                            return 0
                                        if sub_486d25fe[arg1] < mem[u + 64]:
                                            if sub_486d25fe[arg1] < mem[t + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                                if v <= _2271:
                                                    if sub_486d25fe[arg1] > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    t = t
                                                    u = u
                                                    v = v
                                                    continue 
                                                if v < 1:
                                                    revert with 0, 17
                                                if _2271 < v - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    emit Claimed(arg1, 0, v - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                            else:
                                                if v > _2271:
                                                    if v < 1:
                                                        revert with 0, 17
                                                    if _2271 < v - 1:
                                                        sub_16aea5c0[arg1] = _2271
                                                        emit Claimed(arg1, 0, _2271, _2271);
                                                    else:
                                                        sub_16aea5c0[arg1] = v - 1
                                                        emit Claimed(arg1, 0, v - 1, _2271);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    if sub_486d25fe[arg1] >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor2[arg1]]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                        revert with 0, 17
                                            if sub_486d25fe[arg1] > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            t = t
                                            u = u
                                            v = v
                                            continue 
                                        if v > _2271:
                                            if sub_486d25fe[arg1] < mem[t + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                                if v <= _2271:
                                                    if sub_486d25fe[arg1] > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    t = t
                                                    u = u
                                                    v = v
                                                    continue 
                                                if v < 1:
                                                    revert with 0, 17
                                                if _2271 < v - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    emit Claimed(arg1, 0, v - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                            else:
                                                if v > _2271:
                                                    if v < 1:
                                                        revert with 0, 17
                                                    if _2271 < v - 1:
                                                        sub_16aea5c0[arg1] = _2271
                                                        emit Claimed(arg1, 0, _2271, _2271);
                                                    else:
                                                        sub_16aea5c0[arg1] = v - 1
                                                        emit Claimed(arg1, 0, v - 1, _2271);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    if sub_486d25fe[arg1] >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor2[arg1]]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                        revert with 0, 17
                                            if sub_486d25fe[arg1] > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            t = t
                                            u = u
                                            v = v
                                            continue 
                                        if v + 1 > _2271:
                                            _11887 = mem[64]
                                            mem[64] = mem[64] + 128
                                            mem[_11887] = 0
                                            mem[_11887 + 32] = 0
                                            mem[_11887 + 64] = 0
                                            mem[_11887 + 96] = 0
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            t = u
                                            u = _11887
                                            v = v + 1
                                            continue 
                                        staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                                gas gas_remaining wei
                                               args arg1, v + 1
                                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12102 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 128
                                        _12334 = mem[64]
                                        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                            revert with 0, 65
                                        mem[64] = mem[64] + 128
                                        require mem[_12102] == ('signextend', 15, ('mem', ('range', ('var', '_12102'), 32)))
                                        mem[_12334] = mem[_12102]
                                        require mem[_12102 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_12102')), 32)))
                                        mem[_12334 + 32] = mem[_12102 + 32]
                                        mem[_12334 + 64] = mem[_12102 + 64]
                                        mem[_12334 + 96] = mem[_12102 + 96]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = u
                                        u = _12334
                                        v = v + 1
                                        continue 
                                    if v < 1:
                                        revert with 0, 17
                                    if _2271 < v - 1:
                                        sub_16aea5c0[arg1] = _2271
                                        emit Claimed(arg1, 0, _2271, _2271);
                                    else:
                                        sub_16aea5c0[arg1] = v - 1
                                        emit Claimed(arg1, 0, v - 1, _2271);
                                else:
                                    _7383 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_7383] = 0
                                    mem[_7383 + 32] = 0
                                    mem[_7383 + 64] = 0
                                    mem[_7383 + 96] = 0
                                    idx = 0
                                    t = _7383
                                    u = _6596
                                    v = s
                                    while idx < 50:
                                        if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                            if v < 1:
                                                revert with 0, 17
                                            if _2271 < v - 1:
                                                sub_16aea5c0[arg1] = _2271
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, _2271, _2271);
                                            else:
                                                sub_16aea5c0[arg1] = v - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, v - 1, _2271);
                                            return 0
                                        if start_time < mem[u + 64]:
                                            if start_time < mem[t + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                                if v <= _2271:
                                                    if start_time > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    t = t
                                                    u = u
                                                    v = v
                                                    continue 
                                                if v < 1:
                                                    revert with 0, 17
                                                if _2271 < v - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, v - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                            else:
                                                if v > _2271:
                                                    if v < 1:
                                                        revert with 0, 17
                                                    if _2271 < v - 1:
                                                        sub_16aea5c0[arg1] = _2271
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, _2271, _2271);
                                                    else:
                                                        sub_16aea5c0[arg1] = v - 1
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, v - 1, _2271);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                            if start_time > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            t = t
                                            u = u
                                            v = v
                                            continue 
                                        if v > _2271:
                                            if start_time < mem[t + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                                if v <= _2271:
                                                    if start_time > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    t = t
                                                    u = u
                                                    v = v
                                                    continue 
                                                if v < 1:
                                                    revert with 0, 17
                                                if _2271 < v - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, v - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                            else:
                                                if v > _2271:
                                                    if v < 1:
                                                        revert with 0, 17
                                                    if _2271 < v - 1:
                                                        sub_16aea5c0[arg1] = _2271
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, _2271, _2271);
                                                    else:
                                                        sub_16aea5c0[arg1] = v - 1
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, v - 1, _2271);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                            if start_time > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            t = t
                                            u = u
                                            v = v
                                            continue 
                                        if v + 1 > _2271:
                                            _11894 = mem[64]
                                            mem[64] = mem[64] + 128
                                            mem[_11894] = 0
                                            mem[_11894 + 32] = 0
                                            mem[_11894 + 64] = 0
                                            mem[_11894 + 96] = 0
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            t = u
                                            u = _11894
                                            v = v + 1
                                            continue 
                                        staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                                gas gas_remaining wei
                                               args arg1, v + 1
                                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12108 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 128
                                        _12337 = mem[64]
                                        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                            revert with 0, 65
                                        mem[64] = mem[64] + 128
                                        require mem[_12108] == ('signextend', 15, ('mem', ('range', ('var', '_12108'), 32)))
                                        mem[_12337] = mem[_12108]
                                        require mem[_12108 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_12108')), 32)))
                                        mem[_12337 + 32] = mem[_12108 + 32]
                                        mem[_12337 + 64] = mem[_12108 + 64]
                                        mem[_12337 + 96] = mem[_12108 + 96]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = u
                                        u = _12337
                                        v = v + 1
                                        continue 
                                    if v < 1:
                                        revert with 0, 17
                                    if _2271 < v - 1:
                                        sub_16aea5c0[arg1] = _2271
                                        sub_486d25fe[arg1] = start_time
                                        emit Claimed(arg1, 0, _2271, _2271);
                                    else:
                                        sub_16aea5c0[arg1] = v - 1
                                        sub_486d25fe[arg1] = start_time
                                        emit Claimed(arg1, 0, v - 1, _2271);
                        else:
                            _7296 = mem[_6596 + 64]
                            if mem[_6596 + 64] > -604801:
                                revert with 0, 17
                            if mem[_6596 + 64] + (168 * 24 * 3600) < 1:
                                revert with 0, 17
                            if mem[_6596 + 64] + 604799 / 168 * 24 * 3600 and 168 * 24 * 3600 > -1 / mem[_6596 + 64] + 604799 / 168 * 24 * 3600:
                                revert with 0, 17
                            if 168 * 24 * 3600 * mem[_6596 + 64] + 604799 / 168 * 24 * 3600 < last_token_time:
                                if 168 * 24 * 3600 * mem[_6596 + 64] + 604799 / 168 * 24 * 3600 >= start_time:
                                    _8729 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_8729] = 0
                                    mem[_8729 + 32] = 0
                                    mem[_8729 + 64] = 0
                                    mem[_8729 + 96] = 0
                                    idx = 0
                                    t = _8729
                                    u = _6596
                                    v = s
                                    while idx < 50:
                                        if 168 * 24 * 3600 * _7296 + 604799 / 168 * 24 * 3600 >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                            if v < 1:
                                                revert with 0, 17
                                            if _2271 < v - 1:
                                                sub_16aea5c0[arg1] = _2271
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * _7296 + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, _2271, _2271);
                                            else:
                                                sub_16aea5c0[arg1] = v - 1
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * _7296 + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, v - 1, _2271);
                                            return 0
                                        if 168 * 24 * 3600 * _7296 + 604799 / 168 * 24 * 3600 < mem[u + 64]:
                                            if 168 * 24 * 3600 * _7296 + 604799 / 168 * 24 * 3600 < mem[t + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7296')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7296')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7296')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7296')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7296')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7296')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7296')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7296')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7296')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7296')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7296')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7296')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7296')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                                if v <= _2271:
                                                    if 168 * 24 * 3600 * _7296 + 604799 / 168 * 24 * 3600 > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    t = t
                                                    u = u
                                                    v = v
                                                    continue 
                                                if v < 1:
                                                    revert with 0, 17
                                                if _2271 < v - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _7296 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _7296 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, v - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7296')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if 168 * 24 * 3600 * _7296 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7296')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[_7296 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7296')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[_7296 + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7296')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[_7296 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_7296 + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                            else:
                                                if v > _2271:
                                                    if v < 1:
                                                        revert with 0, 17
                                                    if _2271 < v - 1:
                                                        sub_16aea5c0[arg1] = _2271
                                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _7296 + 604799 / 168 * 24 * 3600
                                                        emit Claimed(arg1, 0, _2271, _2271);
                                                    else:
                                                        sub_16aea5c0[arg1] = v - 1
                                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _7296 + 604799 / 168 * 24 * 3600
                                                        emit Claimed(arg1, 0, v - 1, _2271);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7296')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    if 168 * 24 * 3600 * _7296 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7296')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[_7296 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7296')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[_7296 + 604799 / 168 * 24 * 3600]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7296')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[_7296 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_7296 + 604799 / 168 * 24 * 3600]):
                                                        revert with 0, 17
                                            if 168 * 24 * 3600 * _7296 + 604799 / 168 * 24 * 3600 > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            t = t
                                            u = u
                                            v = v
                                            continue 
                                        if v > _2271:
                                            if 168 * 24 * 3600 * _7296 + 604799 / 168 * 24 * 3600 < mem[t + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7296')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7296')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7296')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7296')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7296')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7296')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7296')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7296')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7296')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7296')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7296')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7296')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7296')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                                if v <= _2271:
                                                    if 168 * 24 * 3600 * _7296 + 604799 / 168 * 24 * 3600 > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    t = t
                                                    u = u
                                                    v = v
                                                    continue 
                                                if v < 1:
                                                    revert with 0, 17
                                                if _2271 < v - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _7296 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _7296 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, v - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7296')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if 168 * 24 * 3600 * _7296 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7296')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[_7296 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7296')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[_7296 + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7296')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[_7296 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_7296 + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                            else:
                                                if v > _2271:
                                                    if v < 1:
                                                        revert with 0, 17
                                                    if _2271 < v - 1:
                                                        sub_16aea5c0[arg1] = _2271
                                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _7296 + 604799 / 168 * 24 * 3600
                                                        emit Claimed(arg1, 0, _2271, _2271);
                                                    else:
                                                        sub_16aea5c0[arg1] = v - 1
                                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _7296 + 604799 / 168 * 24 * 3600
                                                        emit Claimed(arg1, 0, v - 1, _2271);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7296')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    if 168 * 24 * 3600 * _7296 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7296')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[_7296 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7296')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[_7296 + 604799 / 168 * 24 * 3600]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7296')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[_7296 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_7296 + 604799 / 168 * 24 * 3600]):
                                                        revert with 0, 17
                                            if 168 * 24 * 3600 * _7296 + 604799 / 168 * 24 * 3600 > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            t = t
                                            u = u
                                            v = v
                                            continue 
                                        if v + 1 > _2271:
                                            _11901 = mem[64]
                                            mem[64] = mem[64] + 128
                                            mem[_11901] = 0
                                            mem[_11901 + 32] = 0
                                            mem[_11901 + 64] = 0
                                            mem[_11901 + 96] = 0
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            t = u
                                            u = _11901
                                            v = v + 1
                                            continue 
                                        staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                                gas gas_remaining wei
                                               args arg1, v + 1
                                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12114 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 128
                                        _12340 = mem[64]
                                        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                            revert with 0, 65
                                        mem[64] = mem[64] + 128
                                        require mem[_12114] == ('signextend', 15, ('mem', ('range', ('var', '_12114'), 32)))
                                        mem[_12340] = mem[_12114]
                                        require mem[_12114 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_12114')), 32)))
                                        mem[_12340 + 32] = mem[_12114 + 32]
                                        mem[_12340 + 64] = mem[_12114 + 64]
                                        mem[_12340 + 96] = mem[_12114 + 96]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = u
                                        u = _12340
                                        v = v + 1
                                        continue 
                                    if v < 1:
                                        revert with 0, 17
                                    if _2271 < v - 1:
                                        sub_16aea5c0[arg1] = _2271
                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _7296 + 604799 / 168 * 24 * 3600
                                        emit Claimed(arg1, 0, _2271, _2271);
                                    else:
                                        sub_16aea5c0[arg1] = v - 1
                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _7296 + 604799 / 168 * 24 * 3600
                                        emit Claimed(arg1, 0, v - 1, _2271);
                                else:
                                    _8907 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_8907] = 0
                                    mem[_8907 + 32] = 0
                                    mem[_8907 + 64] = 0
                                    mem[_8907 + 96] = 0
                                    idx = 0
                                    t = _8907
                                    u = _6596
                                    v = s
                                    while idx < 50:
                                        if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                            if v < 1:
                                                revert with 0, 17
                                            if _2271 < v - 1:
                                                sub_16aea5c0[arg1] = _2271
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, _2271, _2271);
                                            else:
                                                sub_16aea5c0[arg1] = v - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, v - 1, _2271);
                                            return 0
                                        if start_time < mem[u + 64]:
                                            if start_time < mem[t + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                                if v <= _2271:
                                                    if start_time > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    t = t
                                                    u = u
                                                    v = v
                                                    continue 
                                                if v < 1:
                                                    revert with 0, 17
                                                if _2271 < v - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, v - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                            else:
                                                if v > _2271:
                                                    if v < 1:
                                                        revert with 0, 17
                                                    if _2271 < v - 1:
                                                        sub_16aea5c0[arg1] = _2271
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, _2271, _2271);
                                                    else:
                                                        sub_16aea5c0[arg1] = v - 1
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, v - 1, _2271);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                            if start_time > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            t = t
                                            u = u
                                            v = v
                                            continue 
                                        if v > _2271:
                                            if start_time < mem[t + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                                if v <= _2271:
                                                    if start_time > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    t = t
                                                    u = u
                                                    v = v
                                                    continue 
                                                if v < 1:
                                                    revert with 0, 17
                                                if _2271 < v - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, v - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                            else:
                                                if v > _2271:
                                                    if v < 1:
                                                        revert with 0, 17
                                                    if _2271 < v - 1:
                                                        sub_16aea5c0[arg1] = _2271
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, _2271, _2271);
                                                    else:
                                                        sub_16aea5c0[arg1] = v - 1
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, v - 1, _2271);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                            if start_time > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            t = t
                                            u = u
                                            v = v
                                            continue 
                                        if v + 1 > _2271:
                                            _11908 = mem[64]
                                            mem[64] = mem[64] + 128
                                            mem[_11908] = 0
                                            mem[_11908 + 32] = 0
                                            mem[_11908 + 64] = 0
                                            mem[_11908 + 96] = 0
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            t = u
                                            u = _11908
                                            v = v + 1
                                            continue 
                                        staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                                gas gas_remaining wei
                                               args arg1, v + 1
                                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12120 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 128
                                        _12343 = mem[64]
                                        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                            revert with 0, 65
                                        mem[64] = mem[64] + 128
                                        require mem[_12120] == ('signextend', 15, ('mem', ('range', ('var', '_12120'), 32)))
                                        mem[_12343] = mem[_12120]
                                        require mem[_12120 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_12120')), 32)))
                                        mem[_12343 + 32] = mem[_12120 + 32]
                                        mem[_12343 + 64] = mem[_12120 + 64]
                                        mem[_12343 + 96] = mem[_12120 + 96]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = u
                                        u = _12343
                                        v = v + 1
                                        continue 
                                    if v < 1:
                                        revert with 0, 17
                                    if _2271 < v - 1:
                                        sub_16aea5c0[arg1] = _2271
                                        sub_486d25fe[arg1] = start_time
                                        emit Claimed(arg1, 0, _2271, _2271);
                                    else:
                                        sub_16aea5c0[arg1] = v - 1
                                        sub_486d25fe[arg1] = start_time
                                        emit Claimed(arg1, 0, v - 1, _2271);
                    else:
                        staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                gas gas_remaining wei
                               args arg1, 1
                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6384 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 128
                        _6801 = mem[64]
                        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                            revert with 0, 65
                        mem[64] = mem[64] + 128
                        require mem[_6384] == ('signextend', 15, ('mem', ('range', ('var', '_6384'), 32)))
                        mem[_6801] = mem[_6384]
                        require mem[_6384 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6384')), 32)))
                        mem[_6801 + 32] = mem[_6384 + 32]
                        mem[_6801 + 64] = mem[_6384 + 64]
                        mem[_6801 + 96] = mem[_6384 + 96]
                        if sub_486d25fe[arg1]:
                            if sub_486d25fe[arg1] < last_token_time:
                                if sub_486d25fe[arg1] >= start_time:
                                    _7384 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_7384] = 0
                                    mem[_7384 + 32] = 0
                                    mem[_7384 + 64] = 0
                                    mem[_7384 + 96] = 0
                                    idx = 0
                                    s = _7384
                                    t = _6801
                                    u = 1
                                    while idx < 50:
                                        if sub_486d25fe[arg1] >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                            if u < 1:
                                                revert with 0, 17
                                            if _2271 < u - 1:
                                                sub_16aea5c0[arg1] = _2271
                                                emit Claimed(arg1, 0, _2271, _2271);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                emit Claimed(arg1, 0, u - 1, _2271);
                                            return 0
                                        if sub_486d25fe[arg1] < mem[t + 64]:
                                            if sub_486d25fe[arg1] < mem[s + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                if u <= _2271:
                                                    if sub_486d25fe[arg1] > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    s = s
                                                    t = t
                                                    u = u
                                                    continue 
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2271 < u - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    emit Claimed(arg1, 0, u - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                            else:
                                                if u > _2271:
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if _2271 < u - 1:
                                                        sub_16aea5c0[arg1] = _2271
                                                        emit Claimed(arg1, 0, _2271, _2271);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        emit Claimed(arg1, 0, u - 1, _2271);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if sub_486d25fe[arg1] >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor2[arg1]]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                        revert with 0, 17
                                            if sub_486d25fe[arg1] > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            t = t
                                            u = u
                                            continue 
                                        if u > _2271:
                                            if sub_486d25fe[arg1] < mem[s + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                if u <= _2271:
                                                    if sub_486d25fe[arg1] > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    s = s
                                                    t = t
                                                    u = u
                                                    continue 
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2271 < u - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    emit Claimed(arg1, 0, u - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                            else:
                                                if u > _2271:
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if _2271 < u - 1:
                                                        sub_16aea5c0[arg1] = _2271
                                                        emit Claimed(arg1, 0, _2271, _2271);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        emit Claimed(arg1, 0, u - 1, _2271);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if sub_486d25fe[arg1] >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor2[arg1]]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                        revert with 0, 17
                                            if sub_486d25fe[arg1] > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            t = t
                                            u = u
                                            continue 
                                        if u + 1 > _2271:
                                            _11915 = mem[64]
                                            mem[64] = mem[64] + 128
                                            mem[_11915] = 0
                                            mem[_11915 + 32] = 0
                                            mem[_11915 + 64] = 0
                                            mem[_11915 + 96] = 0
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = t
                                            t = _11915
                                            u = u + 1
                                            continue 
                                        staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                                gas gas_remaining wei
                                               args arg1, u + 1
                                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12126 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 128
                                        _12346 = mem[64]
                                        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                            revert with 0, 65
                                        mem[64] = mem[64] + 128
                                        require mem[_12126] == ('signextend', 15, ('mem', ('range', ('var', '_12126'), 32)))
                                        mem[_12346] = mem[_12126]
                                        require mem[_12126 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_12126')), 32)))
                                        mem[_12346 + 32] = mem[_12126 + 32]
                                        mem[_12346 + 64] = mem[_12126 + 64]
                                        mem[_12346 + 96] = mem[_12126 + 96]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _12346
                                        u = u + 1
                                        continue 
                                    if u < 1:
                                        revert with 0, 17
                                    if _2271 < u - 1:
                                        sub_16aea5c0[arg1] = _2271
                                        emit Claimed(arg1, 0, _2271, _2271);
                                    else:
                                        sub_16aea5c0[arg1] = u - 1
                                        emit Claimed(arg1, 0, u - 1, _2271);
                                else:
                                    _7398 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_7398] = 0
                                    mem[_7398 + 32] = 0
                                    mem[_7398 + 64] = 0
                                    mem[_7398 + 96] = 0
                                    idx = 0
                                    s = _7398
                                    t = _6801
                                    u = 1
                                    while idx < 50:
                                        if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                            if u < 1:
                                                revert with 0, 17
                                            if _2271 < u - 1:
                                                sub_16aea5c0[arg1] = _2271
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, _2271, _2271);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, u - 1, _2271);
                                            return 0
                                        if start_time < mem[t + 64]:
                                            if start_time < mem[s + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                if u <= _2271:
                                                    if start_time > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    s = s
                                                    t = t
                                                    u = u
                                                    continue 
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2271 < u - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                            else:
                                                if u > _2271:
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if _2271 < u - 1:
                                                        sub_16aea5c0[arg1] = _2271
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, _2271, _2271);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, u - 1, _2271);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                            if start_time > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            t = t
                                            u = u
                                            continue 
                                        if u > _2271:
                                            if start_time < mem[s + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                if u <= _2271:
                                                    if start_time > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    s = s
                                                    t = t
                                                    u = u
                                                    continue 
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2271 < u - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                            else:
                                                if u > _2271:
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if _2271 < u - 1:
                                                        sub_16aea5c0[arg1] = _2271
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, _2271, _2271);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, u - 1, _2271);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                            if start_time > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            t = t
                                            u = u
                                            continue 
                                        if u + 1 > _2271:
                                            _11922 = mem[64]
                                            mem[64] = mem[64] + 128
                                            mem[_11922] = 0
                                            mem[_11922 + 32] = 0
                                            mem[_11922 + 64] = 0
                                            mem[_11922 + 96] = 0
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = t
                                            t = _11922
                                            u = u + 1
                                            continue 
                                        staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                                gas gas_remaining wei
                                               args arg1, u + 1
                                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12132 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 128
                                        _12349 = mem[64]
                                        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                            revert with 0, 65
                                        mem[64] = mem[64] + 128
                                        require mem[_12132] == ('signextend', 15, ('mem', ('range', ('var', '_12132'), 32)))
                                        mem[_12349] = mem[_12132]
                                        require mem[_12132 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_12132')), 32)))
                                        mem[_12349 + 32] = mem[_12132 + 32]
                                        mem[_12349 + 64] = mem[_12132 + 64]
                                        mem[_12349 + 96] = mem[_12132 + 96]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _12349
                                        u = u + 1
                                        continue 
                                    if u < 1:
                                        revert with 0, 17
                                    if _2271 < u - 1:
                                        sub_16aea5c0[arg1] = _2271
                                        sub_486d25fe[arg1] = start_time
                                        emit Claimed(arg1, 0, _2271, _2271);
                                    else:
                                        sub_16aea5c0[arg1] = u - 1
                                        sub_486d25fe[arg1] = start_time
                                        emit Claimed(arg1, 0, u - 1, _2271);
                        else:
                            _7351 = mem[_6801 + 64]
                            if mem[_6801 + 64] > -604801:
                                revert with 0, 17
                            if mem[_6801 + 64] + (168 * 24 * 3600) < 1:
                                revert with 0, 17
                            if mem[_6801 + 64] + 604799 / 168 * 24 * 3600 and 168 * 24 * 3600 > -1 / mem[_6801 + 64] + 604799 / 168 * 24 * 3600:
                                revert with 0, 17
                            if 168 * 24 * 3600 * mem[_6801 + 64] + 604799 / 168 * 24 * 3600 < last_token_time:
                                if 168 * 24 * 3600 * mem[_6801 + 64] + 604799 / 168 * 24 * 3600 >= start_time:
                                    _8910 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_8910] = 0
                                    mem[_8910 + 32] = 0
                                    mem[_8910 + 64] = 0
                                    mem[_8910 + 96] = 0
                                    idx = 0
                                    s = _8910
                                    t = _6801
                                    u = 1
                                    while idx < 50:
                                        if 168 * 24 * 3600 * _7351 + 604799 / 168 * 24 * 3600 >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                            if u < 1:
                                                revert with 0, 17
                                            if _2271 < u - 1:
                                                sub_16aea5c0[arg1] = _2271
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * _7351 + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, _2271, _2271);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * _7351 + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, u - 1, _2271);
                                            return 0
                                        if 168 * 24 * 3600 * _7351 + 604799 / 168 * 24 * 3600 < mem[t + 64]:
                                            if 168 * 24 * 3600 * _7351 + 604799 / 168 * 24 * 3600 < mem[s + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7351')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7351')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7351')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7351')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7351')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7351')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7351')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7351')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7351')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7351')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7351')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7351')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7351')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                if u <= _2271:
                                                    if 168 * 24 * 3600 * _7351 + 604799 / 168 * 24 * 3600 > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    s = s
                                                    t = t
                                                    u = u
                                                    continue 
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2271 < u - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _7351 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _7351 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, u - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7351')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if 168 * 24 * 3600 * _7351 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7351')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_7351 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7351')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[_7351 + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7351')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_7351 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_7351 + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                            else:
                                                if u > _2271:
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if _2271 < u - 1:
                                                        sub_16aea5c0[arg1] = _2271
                                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _7351 + 604799 / 168 * 24 * 3600
                                                        emit Claimed(arg1, 0, _2271, _2271);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _7351 + 604799 / 168 * 24 * 3600
                                                        emit Claimed(arg1, 0, u - 1, _2271);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7351')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if 168 * 24 * 3600 * _7351 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7351')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_7351 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7351')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[_7351 + 604799 / 168 * 24 * 3600]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7351')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_7351 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_7351 + 604799 / 168 * 24 * 3600]):
                                                        revert with 0, 17
                                            if 168 * 24 * 3600 * _7351 + 604799 / 168 * 24 * 3600 > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            t = t
                                            u = u
                                            continue 
                                        if u > _2271:
                                            if 168 * 24 * 3600 * _7351 + 604799 / 168 * 24 * 3600 < mem[s + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7351')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7351')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7351')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7351')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7351')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7351')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7351')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7351')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7351')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7351')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7351')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7351')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7351')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                if u <= _2271:
                                                    if 168 * 24 * 3600 * _7351 + 604799 / 168 * 24 * 3600 > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    s = s
                                                    t = t
                                                    u = u
                                                    continue 
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2271 < u - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _7351 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _7351 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, u - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7351')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if 168 * 24 * 3600 * _7351 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7351')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_7351 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7351')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[_7351 + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7351')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_7351 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_7351 + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                            else:
                                                if u > _2271:
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if _2271 < u - 1:
                                                        sub_16aea5c0[arg1] = _2271
                                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _7351 + 604799 / 168 * 24 * 3600
                                                        emit Claimed(arg1, 0, _2271, _2271);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _7351 + 604799 / 168 * 24 * 3600
                                                        emit Claimed(arg1, 0, u - 1, _2271);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7351')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if 168 * 24 * 3600 * _7351 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7351')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_7351 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7351')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[_7351 + 604799 / 168 * 24 * 3600]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7351')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_7351 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_7351 + 604799 / 168 * 24 * 3600]):
                                                        revert with 0, 17
                                            if 168 * 24 * 3600 * _7351 + 604799 / 168 * 24 * 3600 > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            t = t
                                            u = u
                                            continue 
                                        if u + 1 > _2271:
                                            _11929 = mem[64]
                                            mem[64] = mem[64] + 128
                                            mem[_11929] = 0
                                            mem[_11929 + 32] = 0
                                            mem[_11929 + 64] = 0
                                            mem[_11929 + 96] = 0
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = t
                                            t = _11929
                                            u = u + 1
                                            continue 
                                        staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                                gas gas_remaining wei
                                               args arg1, u + 1
                                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12138 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 128
                                        _12352 = mem[64]
                                        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                            revert with 0, 65
                                        mem[64] = mem[64] + 128
                                        require mem[_12138] == ('signextend', 15, ('mem', ('range', ('var', '_12138'), 32)))
                                        mem[_12352] = mem[_12138]
                                        require mem[_12138 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_12138')), 32)))
                                        mem[_12352 + 32] = mem[_12138 + 32]
                                        mem[_12352 + 64] = mem[_12138 + 64]
                                        mem[_12352 + 96] = mem[_12138 + 96]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _12352
                                        u = u + 1
                                        continue 
                                    if u < 1:
                                        revert with 0, 17
                                    if _2271 < u - 1:
                                        sub_16aea5c0[arg1] = _2271
                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _7351 + 604799 / 168 * 24 * 3600
                                        emit Claimed(arg1, 0, _2271, _2271);
                                    else:
                                        sub_16aea5c0[arg1] = u - 1
                                        sub_486d25fe[arg1] = 168 * 24 * 3600 * _7351 + 604799 / 168 * 24 * 3600
                                        emit Claimed(arg1, 0, u - 1, _2271);
                                else:
                                    _9125 = mem[64]
                                    mem[64] = mem[64] + 128
                                    mem[_9125] = 0
                                    mem[_9125 + 32] = 0
                                    mem[_9125 + 64] = 0
                                    mem[_9125 + 96] = 0
                                    idx = 0
                                    s = _9125
                                    t = _6801
                                    u = 1
                                    while idx < 50:
                                        if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                            if u < 1:
                                                revert with 0, 17
                                            if _2271 < u - 1:
                                                sub_16aea5c0[arg1] = _2271
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, _2271, _2271);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, u - 1, _2271);
                                            return 0
                                        if start_time < mem[t + 64]:
                                            if start_time < mem[s + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                if u <= _2271:
                                                    if start_time > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    s = s
                                                    t = t
                                                    u = u
                                                    continue 
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2271 < u - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                            else:
                                                if u > _2271:
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if _2271 < u - 1:
                                                        sub_16aea5c0[arg1] = _2271
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, _2271, _2271);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, u - 1, _2271);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                            if start_time > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            t = t
                                            u = u
                                            continue 
                                        if u > _2271:
                                            if start_time < mem[s + 64]:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                                revert with 0, 17
                                            if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                                if u <= _2271:
                                                    if start_time > -604801:
                                                        revert with 0, 17
                                                    if idx == -1:
                                                        revert with 0, 17
                                                    idx = idx + 1
                                                    s = s
                                                    t = t
                                                    u = u
                                                    continue 
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2271 < u - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                            else:
                                                if u > _2271:
                                                    if u < 1:
                                                        revert with 0, 17
                                                    if _2271 < u - 1:
                                                        sub_16aea5c0[arg1] = _2271
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, _2271, _2271);
                                                    else:
                                                        sub_16aea5c0[arg1] = u - 1
                                                        sub_486d25fe[arg1] = start_time
                                                        emit Claimed(arg1, 0, u - 1, _2271);
                                                    return 0
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    if start_time >= 10^15:
                                                        revert with 0, 50
                                                    if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                        revert with 0, 17
                                                    if not sub_d4dafba8[stor0]:
                                                        revert with 0, 18
                                                    if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                        revert with 0, 17
                                            if start_time > -604801:
                                                revert with 0, 17
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            t = t
                                            u = u
                                            continue 
                                        if u + 1 > _2271:
                                            _11936 = mem[64]
                                            mem[64] = mem[64] + 128
                                            mem[_11936] = 0
                                            mem[_11936 + 32] = 0
                                            mem[_11936 + 64] = 0
                                            mem[_11936 + 96] = 0
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = t
                                            t = _11936
                                            u = u + 1
                                            continue 
                                        staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                                gas gas_remaining wei
                                               args arg1, u + 1
                                        mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _12144 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 128
                                        _12355 = mem[64]
                                        if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                            revert with 0, 65
                                        mem[64] = mem[64] + 128
                                        require mem[_12144] == ('signextend', 15, ('mem', ('range', ('var', '_12144'), 32)))
                                        mem[_12355] = mem[_12144]
                                        require mem[_12144 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_12144')), 32)))
                                        mem[_12355 + 32] = mem[_12144 + 32]
                                        mem[_12355 + 64] = mem[_12144 + 64]
                                        mem[_12355 + 96] = mem[_12144 + 96]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _12355
                                        u = u + 1
                                        continue 
                                    if u < 1:
                                        revert with 0, 17
                                    if _2271 < u - 1:
                                        sub_16aea5c0[arg1] = _2271
                                        sub_486d25fe[arg1] = start_time
                                        emit Claimed(arg1, 0, _2271, _2271);
                                    else:
                                        sub_16aea5c0[arg1] = u - 1
                                        sub_486d25fe[arg1] = start_time
                                        emit Claimed(arg1, 0, u - 1, _2271);
                    return 0
                if s:
                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                            gas gas_remaining wei
                           args arg1, s
                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6071 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 128
                    _6213 = mem[64]
                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                        revert with 0, 65
                    mem[64] = mem[64] + 128
                    require mem[_6071] == ('signextend', 15, ('mem', ('range', ('var', '_6071'), 32)))
                    mem[_6213] = mem[_6071]
                    require mem[_6071 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6071')), 32)))
                    mem[_6213 + 32] = mem[_6071 + 32]
                    mem[_6213 + 64] = mem[_6071 + 64]
                    mem[_6213 + 96] = mem[_6071 + 96]
                    if sub_486d25fe[arg1]:
                        if sub_486d25fe[arg1] < last_token_time:
                            if sub_486d25fe[arg1] >= start_time:
                                _7295 = mem[64]
                                mem[64] = mem[64] + 128
                                mem[_7295] = 0
                                mem[_7295 + 32] = 0
                                mem[_7295 + 64] = 0
                                mem[_7295 + 96] = 0
                                idx = 0
                                t = _7295
                                u = _6213
                                v = s
                                while idx < 50:
                                    if sub_486d25fe[arg1] >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                        if v < 1:
                                            revert with 0, 17
                                        if _2271 < v - 1:
                                            sub_16aea5c0[arg1] = _2271
                                            emit Claimed(arg1, 0, _2271, _2271);
                                        else:
                                            sub_16aea5c0[arg1] = v - 1
                                            emit Claimed(arg1, 0, v - 1, _2271);
                                        return 0
                                    if sub_486d25fe[arg1] < mem[u + 64]:
                                        if sub_486d25fe[arg1] < mem[t + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                            if v <= _2271:
                                                if sub_486d25fe[arg1] > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                t = t
                                                u = u
                                                v = v
                                                continue 
                                            if v < 1:
                                                revert with 0, 17
                                            if _2271 < v - 1:
                                                sub_16aea5c0[arg1] = _2271
                                                emit Claimed(arg1, 0, _2271, _2271);
                                            else:
                                                sub_16aea5c0[arg1] = v - 1
                                                emit Claimed(arg1, 0, v - 1, _2271);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                            if sub_486d25fe[arg1] >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor2[arg1]]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                revert with 0, 17
                                        else:
                                            if v > _2271:
                                                if v < 1:
                                                    revert with 0, 17
                                                if _2271 < v - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    emit Claimed(arg1, 0, v - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                        if sub_486d25fe[arg1] > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = t
                                        u = u
                                        v = v
                                        continue 
                                    if v > _2271:
                                        if sub_486d25fe[arg1] < mem[t + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                            if v <= _2271:
                                                if sub_486d25fe[arg1] > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                t = t
                                                u = u
                                                v = v
                                                continue 
                                            if v < 1:
                                                revert with 0, 17
                                            if _2271 < v - 1:
                                                sub_16aea5c0[arg1] = _2271
                                                emit Claimed(arg1, 0, _2271, _2271);
                                            else:
                                                sub_16aea5c0[arg1] = v - 1
                                                emit Claimed(arg1, 0, v - 1, _2271);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                            if sub_486d25fe[arg1] >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor2[arg1]]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                revert with 0, 17
                                        else:
                                            if v > _2271:
                                                if v < 1:
                                                    revert with 0, 17
                                                if _2271 < v - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    emit Claimed(arg1, 0, v - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                        if sub_486d25fe[arg1] > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = t
                                        u = u
                                        v = v
                                        continue 
                                    if v + 1 > _2271:
                                        _11831 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_11831] = 0
                                        mem[_11831 + 32] = 0
                                        mem[_11831 + 64] = 0
                                        mem[_11831 + 96] = 0
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = u
                                        u = _11831
                                        v = v + 1
                                        continue 
                                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                            gas gas_remaining wei
                                           args arg1, v + 1
                                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12054 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 128
                                    _12310 = mem[64]
                                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                        revert with 0, 65
                                    mem[64] = mem[64] + 128
                                    require mem[_12054] == ('signextend', 15, ('mem', ('range', ('var', '_12054'), 32)))
                                    mem[_12310] = mem[_12054]
                                    require mem[_12054 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_12054')), 32)))
                                    mem[_12310 + 32] = mem[_12054 + 32]
                                    mem[_12310 + 64] = mem[_12054 + 64]
                                    mem[_12310 + 96] = mem[_12054 + 96]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    t = u
                                    u = _12310
                                    v = v + 1
                                    continue 
                                if v < 1:
                                    revert with 0, 17
                                if _2271 < v - 1:
                                    sub_16aea5c0[arg1] = _2271
                                    emit Claimed(arg1, 0, _2271, _2271);
                                else:
                                    sub_16aea5c0[arg1] = v - 1
                                    emit Claimed(arg1, 0, v - 1, _2271);
                            else:
                                _7348 = mem[64]
                                mem[64] = mem[64] + 128
                                mem[_7348] = 0
                                mem[_7348 + 32] = 0
                                mem[_7348 + 64] = 0
                                mem[_7348 + 96] = 0
                                idx = 0
                                t = _7348
                                u = _6213
                                v = s
                                while idx < 50:
                                    if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                        if v < 1:
                                            revert with 0, 17
                                        if _2271 < v - 1:
                                            sub_16aea5c0[arg1] = _2271
                                            sub_486d25fe[arg1] = start_time
                                            emit Claimed(arg1, 0, _2271, _2271);
                                        else:
                                            sub_16aea5c0[arg1] = v - 1
                                            sub_486d25fe[arg1] = start_time
                                            emit Claimed(arg1, 0, v - 1, _2271);
                                        return 0
                                    if start_time < mem[u + 64]:
                                        if start_time < mem[t + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                            if v <= _2271:
                                                if start_time > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                t = t
                                                u = u
                                                v = v
                                                continue 
                                            if v < 1:
                                                revert with 0, 17
                                            if _2271 < v - 1:
                                                sub_16aea5c0[arg1] = _2271
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, _2271, _2271);
                                            else:
                                                sub_16aea5c0[arg1] = v - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, v - 1, _2271);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if v > _2271:
                                                if v < 1:
                                                    revert with 0, 17
                                                if _2271 < v - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, v - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                        if start_time > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = t
                                        u = u
                                        v = v
                                        continue 
                                    if v > _2271:
                                        if start_time < mem[t + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                            if v <= _2271:
                                                if start_time > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                t = t
                                                u = u
                                                v = v
                                                continue 
                                            if v < 1:
                                                revert with 0, 17
                                            if _2271 < v - 1:
                                                sub_16aea5c0[arg1] = _2271
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, _2271, _2271);
                                            else:
                                                sub_16aea5c0[arg1] = v - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, v - 1, _2271);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if v > _2271:
                                                if v < 1:
                                                    revert with 0, 17
                                                if _2271 < v - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, v - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                        if start_time > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = t
                                        u = u
                                        v = v
                                        continue 
                                    if v + 1 > _2271:
                                        _11838 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_11838] = 0
                                        mem[_11838 + 32] = 0
                                        mem[_11838 + 64] = 0
                                        mem[_11838 + 96] = 0
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = u
                                        u = _11838
                                        v = v + 1
                                        continue 
                                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                            gas gas_remaining wei
                                           args arg1, v + 1
                                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12060 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 128
                                    _12313 = mem[64]
                                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                        revert with 0, 65
                                    mem[64] = mem[64] + 128
                                    require mem[_12060] == ('signextend', 15, ('mem', ('range', ('var', '_12060'), 32)))
                                    mem[_12313] = mem[_12060]
                                    require mem[_12060 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_12060')), 32)))
                                    mem[_12313 + 32] = mem[_12060 + 32]
                                    mem[_12313 + 64] = mem[_12060 + 64]
                                    mem[_12313 + 96] = mem[_12060 + 96]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    t = u
                                    u = _12313
                                    v = v + 1
                                    continue 
                                if v < 1:
                                    revert with 0, 17
                                if _2271 < v - 1:
                                    sub_16aea5c0[arg1] = _2271
                                    sub_486d25fe[arg1] = start_time
                                    emit Claimed(arg1, 0, _2271, _2271);
                                else:
                                    sub_16aea5c0[arg1] = v - 1
                                    sub_486d25fe[arg1] = start_time
                                    emit Claimed(arg1, 0, v - 1, _2271);
                    else:
                        _7246 = mem[_6213 + 64]
                        if mem[_6213 + 64] > -604801:
                            revert with 0, 17
                        if mem[_6213 + 64] + (168 * 24 * 3600) < 1:
                            revert with 0, 17
                        if mem[_6213 + 64] + 604799 / 168 * 24 * 3600 and 168 * 24 * 3600 > -1 / mem[_6213 + 64] + 604799 / 168 * 24 * 3600:
                            revert with 0, 17
                        if 168 * 24 * 3600 * mem[_6213 + 64] + 604799 / 168 * 24 * 3600 < last_token_time:
                            if 168 * 24 * 3600 * mem[_6213 + 64] + 604799 / 168 * 24 * 3600 >= start_time:
                                _8009 = mem[64]
                                mem[64] = mem[64] + 128
                                mem[_8009] = 0
                                mem[_8009 + 32] = 0
                                mem[_8009 + 64] = 0
                                mem[_8009 + 96] = 0
                                idx = 0
                                t = _8009
                                u = _6213
                                v = s
                                while idx < 50:
                                    if 168 * 24 * 3600 * _7246 + 604799 / 168 * 24 * 3600 >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                        if v < 1:
                                            revert with 0, 17
                                        if _2271 < v - 1:
                                            sub_16aea5c0[arg1] = _2271
                                            sub_486d25fe[arg1] = 168 * 24 * 3600 * _7246 + 604799 / 168 * 24 * 3600
                                            emit Claimed(arg1, 0, _2271, _2271);
                                        else:
                                            sub_16aea5c0[arg1] = v - 1
                                            sub_486d25fe[arg1] = 168 * 24 * 3600 * _7246 + 604799 / 168 * 24 * 3600
                                            emit Claimed(arg1, 0, v - 1, _2271);
                                        return 0
                                    if 168 * 24 * 3600 * _7246 + 604799 / 168 * 24 * 3600 < mem[u + 64]:
                                        if 168 * 24 * 3600 * _7246 + 604799 / 168 * 24 * 3600 < mem[t + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7246')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7246')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7246')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7246')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7246')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7246')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7246')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7246')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7246')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7246')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7246')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7246')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7246')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                            if v <= _2271:
                                                if 168 * 24 * 3600 * _7246 + 604799 / 168 * 24 * 3600 > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                t = t
                                                u = u
                                                v = v
                                                continue 
                                            if v < 1:
                                                revert with 0, 17
                                            if _2271 < v - 1:
                                                sub_16aea5c0[arg1] = _2271
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * _7246 + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, _2271, _2271);
                                            else:
                                                sub_16aea5c0[arg1] = v - 1
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * _7246 + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, v - 1, _2271);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7246')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                            if 168 * 24 * 3600 * _7246 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7246')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[_7246 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7246')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[_7246 + 604799 / 168 * 24 * 3600]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7246')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[_7246 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_7246 + 604799 / 168 * 24 * 3600]):
                                                revert with 0, 17
                                        else:
                                            if v > _2271:
                                                if v < 1:
                                                    revert with 0, 17
                                                if _2271 < v - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _7246 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _7246 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, v - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7246')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if 168 * 24 * 3600 * _7246 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7246')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[_7246 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7246')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[_7246 + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7246')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[_7246 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_7246 + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                        if 168 * 24 * 3600 * _7246 + 604799 / 168 * 24 * 3600 > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = t
                                        u = u
                                        v = v
                                        continue 
                                    if v > _2271:
                                        if 168 * 24 * 3600 * _7246 + 604799 / 168 * 24 * 3600 < mem[t + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7246')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7246')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7246')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7246')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7246')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7246')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7246')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7246')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7246')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7246')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7246')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7246')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7246')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                            if v <= _2271:
                                                if 168 * 24 * 3600 * _7246 + 604799 / 168 * 24 * 3600 > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                t = t
                                                u = u
                                                v = v
                                                continue 
                                            if v < 1:
                                                revert with 0, 17
                                            if _2271 < v - 1:
                                                sub_16aea5c0[arg1] = _2271
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * _7246 + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, _2271, _2271);
                                            else:
                                                sub_16aea5c0[arg1] = v - 1
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * _7246 + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, v - 1, _2271);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7246')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                            if 168 * 24 * 3600 * _7246 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7246')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[_7246 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7246')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[_7246 + 604799 / 168 * 24 * 3600]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7246')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[_7246 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_7246 + 604799 / 168 * 24 * 3600]):
                                                revert with 0, 17
                                        else:
                                            if v > _2271:
                                                if v < 1:
                                                    revert with 0, 17
                                                if _2271 < v - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _7246 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _7246 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, v - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7246')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if 168 * 24 * 3600 * _7246 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7246')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[_7246 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7246')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[_7246 + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7246')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[_7246 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_7246 + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                        if 168 * 24 * 3600 * _7246 + 604799 / 168 * 24 * 3600 > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = t
                                        u = u
                                        v = v
                                        continue 
                                    if v + 1 > _2271:
                                        _11845 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_11845] = 0
                                        mem[_11845 + 32] = 0
                                        mem[_11845 + 64] = 0
                                        mem[_11845 + 96] = 0
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = u
                                        u = _11845
                                        v = v + 1
                                        continue 
                                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                            gas gas_remaining wei
                                           args arg1, v + 1
                                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12066 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 128
                                    _12316 = mem[64]
                                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                        revert with 0, 65
                                    mem[64] = mem[64] + 128
                                    require mem[_12066] == ('signextend', 15, ('mem', ('range', ('var', '_12066'), 32)))
                                    mem[_12316] = mem[_12066]
                                    require mem[_12066 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_12066')), 32)))
                                    mem[_12316 + 32] = mem[_12066 + 32]
                                    mem[_12316 + 64] = mem[_12066 + 64]
                                    mem[_12316 + 96] = mem[_12066 + 96]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    t = u
                                    u = _12316
                                    v = v + 1
                                    continue 
                                if v < 1:
                                    revert with 0, 17
                                if _2271 < v - 1:
                                    sub_16aea5c0[arg1] = _2271
                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _7246 + 604799 / 168 * 24 * 3600
                                    emit Claimed(arg1, 0, _2271, _2271);
                                else:
                                    sub_16aea5c0[arg1] = v - 1
                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _7246 + 604799 / 168 * 24 * 3600
                                    emit Claimed(arg1, 0, v - 1, _2271);
                            else:
                                _8452 = mem[64]
                                mem[64] = mem[64] + 128
                                mem[_8452] = 0
                                mem[_8452 + 32] = 0
                                mem[_8452 + 64] = 0
                                mem[_8452 + 96] = 0
                                idx = 0
                                t = _8452
                                u = _6213
                                v = s
                                while idx < 50:
                                    if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                        if v < 1:
                                            revert with 0, 17
                                        if _2271 < v - 1:
                                            sub_16aea5c0[arg1] = _2271
                                            sub_486d25fe[arg1] = start_time
                                            emit Claimed(arg1, 0, _2271, _2271);
                                        else:
                                            sub_16aea5c0[arg1] = v - 1
                                            sub_486d25fe[arg1] = start_time
                                            emit Claimed(arg1, 0, v - 1, _2271);
                                        return 0
                                    if start_time < mem[u + 64]:
                                        if start_time < mem[t + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                            if v <= _2271:
                                                if start_time > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                t = t
                                                u = u
                                                v = v
                                                continue 
                                            if v < 1:
                                                revert with 0, 17
                                            if _2271 < v - 1:
                                                sub_16aea5c0[arg1] = _2271
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, _2271, _2271);
                                            else:
                                                sub_16aea5c0[arg1] = v - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, v - 1, _2271);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if v > _2271:
                                                if v < 1:
                                                    revert with 0, 17
                                                if _2271 < v - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, v - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                        if start_time > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = t
                                        u = u
                                        v = v
                                        continue 
                                    if v > _2271:
                                        if start_time < mem[t + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 2), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) < 0:
                                            if v <= _2271:
                                                if start_time > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                t = t
                                                u = u
                                                v = v
                                                continue 
                                            if v < 1:
                                                revert with 0, 17
                                            if _2271 < v - 1:
                                                sub_16aea5c0[arg1] = _2271
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, _2271, _2271);
                                            else:
                                                sub_16aea5c0[arg1] = v - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, v - 1, _2271);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if v > _2271:
                                                if v < 1:
                                                    revert with 0, 17
                                                if _2271 < v - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = v - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, v - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 2), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 2)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 2)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                        if start_time > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = t
                                        u = u
                                        v = v
                                        continue 
                                    if v + 1 > _2271:
                                        _11852 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_11852] = 0
                                        mem[_11852 + 32] = 0
                                        mem[_11852 + 64] = 0
                                        mem[_11852 + 96] = 0
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        t = u
                                        u = _11852
                                        v = v + 1
                                        continue 
                                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                            gas gas_remaining wei
                                           args arg1, v + 1
                                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12072 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 128
                                    _12319 = mem[64]
                                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                        revert with 0, 65
                                    mem[64] = mem[64] + 128
                                    require mem[_12072] == ('signextend', 15, ('mem', ('range', ('var', '_12072'), 32)))
                                    mem[_12319] = mem[_12072]
                                    require mem[_12072 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_12072')), 32)))
                                    mem[_12319 + 32] = mem[_12072 + 32]
                                    mem[_12319 + 64] = mem[_12072 + 64]
                                    mem[_12319 + 96] = mem[_12072 + 96]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    t = u
                                    u = _12319
                                    v = v + 1
                                    continue 
                                if v < 1:
                                    revert with 0, 17
                                if _2271 < v - 1:
                                    sub_16aea5c0[arg1] = _2271
                                    sub_486d25fe[arg1] = start_time
                                    emit Claimed(arg1, 0, _2271, _2271);
                                else:
                                    sub_16aea5c0[arg1] = v - 1
                                    sub_486d25fe[arg1] = start_time
                                    emit Claimed(arg1, 0, v - 1, _2271);
                else:
                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                            gas gas_remaining wei
                           args arg1, 1
                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6087 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 128
                    _6383 = mem[64]
                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                        revert with 0, 65
                    mem[64] = mem[64] + 128
                    require mem[_6087] == ('signextend', 15, ('mem', ('range', ('var', '_6087'), 32)))
                    mem[_6383] = mem[_6087]
                    require mem[_6087 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6087')), 32)))
                    mem[_6383 + 32] = mem[_6087 + 32]
                    mem[_6383 + 64] = mem[_6087 + 64]
                    mem[_6383 + 96] = mem[_6087 + 96]
                    if sub_486d25fe[arg1]:
                        if sub_486d25fe[arg1] < last_token_time:
                            if sub_486d25fe[arg1] >= start_time:
                                _7349 = mem[64]
                                mem[64] = mem[64] + 128
                                mem[_7349] = 0
                                mem[_7349 + 32] = 0
                                mem[_7349 + 64] = 0
                                mem[_7349 + 96] = 0
                                idx = 0
                                s = _7349
                                t = _6383
                                u = 1
                                while idx < 50:
                                    if sub_486d25fe[arg1] >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                        if u < 1:
                                            revert with 0, 17
                                        if _2271 < u - 1:
                                            sub_16aea5c0[arg1] = _2271
                                            emit Claimed(arg1, 0, _2271, _2271);
                                        else:
                                            sub_16aea5c0[arg1] = u - 1
                                            emit Claimed(arg1, 0, u - 1, _2271);
                                        return 0
                                    if sub_486d25fe[arg1] < mem[t + 64]:
                                        if sub_486d25fe[arg1] < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= _2271:
                                                if sub_486d25fe[arg1] > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if _2271 < u - 1:
                                                sub_16aea5c0[arg1] = _2271
                                                emit Claimed(arg1, 0, _2271, _2271);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                emit Claimed(arg1, 0, u - 1, _2271);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if sub_486d25fe[arg1] >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor2[arg1]]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                revert with 0, 17
                                        else:
                                            if u > _2271:
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2271 < u - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    emit Claimed(arg1, 0, u - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                        if sub_486d25fe[arg1] > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u > _2271:
                                        if sub_486d25fe[arg1] < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= _2271:
                                                if sub_486d25fe[arg1] > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if _2271 < u - 1:
                                                sub_16aea5c0[arg1] = _2271
                                                emit Claimed(arg1, 0, _2271, _2271);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                emit Claimed(arg1, 0, u - 1, _2271);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if sub_486d25fe[arg1] >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor2[arg1]]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                revert with 0, 17
                                        else:
                                            if u > _2271:
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2271 < u - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    emit Claimed(arg1, 0, u - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                        if sub_486d25fe[arg1] > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u + 1 > _2271:
                                        _11859 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_11859] = 0
                                        mem[_11859 + 32] = 0
                                        mem[_11859 + 64] = 0
                                        mem[_11859 + 96] = 0
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _11859
                                        u = u + 1
                                        continue 
                                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                            gas gas_remaining wei
                                           args arg1, u + 1
                                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12078 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 128
                                    _12322 = mem[64]
                                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                        revert with 0, 65
                                    mem[64] = mem[64] + 128
                                    require mem[_12078] == ('signextend', 15, ('mem', ('range', ('var', '_12078'), 32)))
                                    mem[_12322] = mem[_12078]
                                    require mem[_12078 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_12078')), 32)))
                                    mem[_12322 + 32] = mem[_12078 + 32]
                                    mem[_12322 + 64] = mem[_12078 + 64]
                                    mem[_12322 + 96] = mem[_12078 + 96]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = t
                                    t = _12322
                                    u = u + 1
                                    continue 
                                if u < 1:
                                    revert with 0, 17
                                if _2271 < u - 1:
                                    sub_16aea5c0[arg1] = _2271
                                    emit Claimed(arg1, 0, _2271, _2271);
                                else:
                                    sub_16aea5c0[arg1] = u - 1
                                    emit Claimed(arg1, 0, u - 1, _2271);
                            else:
                                _7373 = mem[64]
                                mem[64] = mem[64] + 128
                                mem[_7373] = 0
                                mem[_7373 + 32] = 0
                                mem[_7373 + 64] = 0
                                mem[_7373 + 96] = 0
                                idx = 0
                                s = _7373
                                t = _6383
                                u = 1
                                while idx < 50:
                                    if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                        if u < 1:
                                            revert with 0, 17
                                        if _2271 < u - 1:
                                            sub_16aea5c0[arg1] = _2271
                                            sub_486d25fe[arg1] = start_time
                                            emit Claimed(arg1, 0, _2271, _2271);
                                        else:
                                            sub_16aea5c0[arg1] = u - 1
                                            sub_486d25fe[arg1] = start_time
                                            emit Claimed(arg1, 0, u - 1, _2271);
                                        return 0
                                    if start_time < mem[t + 64]:
                                        if start_time < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= _2271:
                                                if start_time > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if _2271 < u - 1:
                                                sub_16aea5c0[arg1] = _2271
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, _2271, _2271);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, u - 1, _2271);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if u > _2271:
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2271 < u - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                        if start_time > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u > _2271:
                                        if start_time < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= _2271:
                                                if start_time > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if _2271 < u - 1:
                                                sub_16aea5c0[arg1] = _2271
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, _2271, _2271);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, u - 1, _2271);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if u > _2271:
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2271 < u - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                        if start_time > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u + 1 > _2271:
                                        _11866 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_11866] = 0
                                        mem[_11866 + 32] = 0
                                        mem[_11866 + 64] = 0
                                        mem[_11866 + 96] = 0
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _11866
                                        u = u + 1
                                        continue 
                                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                            gas gas_remaining wei
                                           args arg1, u + 1
                                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12084 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 128
                                    _12325 = mem[64]
                                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                        revert with 0, 65
                                    mem[64] = mem[64] + 128
                                    require mem[_12084] == ('signextend', 15, ('mem', ('range', ('var', '_12084'), 32)))
                                    mem[_12325] = mem[_12084]
                                    require mem[_12084 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_12084')), 32)))
                                    mem[_12325 + 32] = mem[_12084 + 32]
                                    mem[_12325 + 64] = mem[_12084 + 64]
                                    mem[_12325 + 96] = mem[_12084 + 96]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = t
                                    t = _12325
                                    u = u + 1
                                    continue 
                                if u < 1:
                                    revert with 0, 17
                                if _2271 < u - 1:
                                    sub_16aea5c0[arg1] = _2271
                                    sub_486d25fe[arg1] = start_time
                                    emit Claimed(arg1, 0, _2271, _2271);
                                else:
                                    sub_16aea5c0[arg1] = u - 1
                                    sub_486d25fe[arg1] = start_time
                                    emit Claimed(arg1, 0, u - 1, _2271);
                    else:
                        _7281 = mem[_6383 + 64]
                        if mem[_6383 + 64] > -604801:
                            revert with 0, 17
                        if mem[_6383 + 64] + (168 * 24 * 3600) < 1:
                            revert with 0, 17
                        if mem[_6383 + 64] + 604799 / 168 * 24 * 3600 and 168 * 24 * 3600 > -1 / mem[_6383 + 64] + 604799 / 168 * 24 * 3600:
                            revert with 0, 17
                        if 168 * 24 * 3600 * mem[_6383 + 64] + 604799 / 168 * 24 * 3600 < last_token_time:
                            if 168 * 24 * 3600 * mem[_6383 + 64] + 604799 / 168 * 24 * 3600 >= start_time:
                                _8455 = mem[64]
                                mem[64] = mem[64] + 128
                                mem[_8455] = 0
                                mem[_8455 + 32] = 0
                                mem[_8455 + 64] = 0
                                mem[_8455 + 96] = 0
                                idx = 0
                                s = _8455
                                t = _6383
                                u = 1
                                while idx < 50:
                                    if 168 * 24 * 3600 * _7281 + 604799 / 168 * 24 * 3600 >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                        if u < 1:
                                            revert with 0, 17
                                        if _2271 < u - 1:
                                            sub_16aea5c0[arg1] = _2271
                                            sub_486d25fe[arg1] = 168 * 24 * 3600 * _7281 + 604799 / 168 * 24 * 3600
                                            emit Claimed(arg1, 0, _2271, _2271);
                                        else:
                                            sub_16aea5c0[arg1] = u - 1
                                            sub_486d25fe[arg1] = 168 * 24 * 3600 * _7281 + 604799 / 168 * 24 * 3600
                                            emit Claimed(arg1, 0, u - 1, _2271);
                                        return 0
                                    if 168 * 24 * 3600 * _7281 + 604799 / 168 * 24 * 3600 < mem[t + 64]:
                                        if 168 * 24 * 3600 * _7281 + 604799 / 168 * 24 * 3600 < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7281')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7281')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7281')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7281')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7281')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7281')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7281')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7281')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7281')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7281')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7281')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7281')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7281')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= _2271:
                                                if 168 * 24 * 3600 * _7281 + 604799 / 168 * 24 * 3600 > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if _2271 < u - 1:
                                                sub_16aea5c0[arg1] = _2271
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * _7281 + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, _2271, _2271);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * _7281 + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, u - 1, _2271);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7281')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if 168 * 24 * 3600 * _7281 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7281')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_7281 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7281')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[_7281 + 604799 / 168 * 24 * 3600]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7281')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_7281 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_7281 + 604799 / 168 * 24 * 3600]):
                                                revert with 0, 17
                                        else:
                                            if u > _2271:
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2271 < u - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _7281 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _7281 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, u - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7281')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if 168 * 24 * 3600 * _7281 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7281')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_7281 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7281')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[_7281 + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7281')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_7281 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_7281 + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                        if 168 * 24 * 3600 * _7281 + 604799 / 168 * 24 * 3600 > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u > _2271:
                                        if 168 * 24 * 3600 * _7281 + 604799 / 168 * 24 * 3600 < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7281')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7281')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7281')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7281')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7281')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7281')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7281')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7281')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7281')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7281')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7281')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7281')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7281')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= _2271:
                                                if 168 * 24 * 3600 * _7281 + 604799 / 168 * 24 * 3600 > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if _2271 < u - 1:
                                                sub_16aea5c0[arg1] = _2271
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * _7281 + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, _2271, _2271);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * _7281 + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, u - 1, _2271);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7281')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if 168 * 24 * 3600 * _7281 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7281')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_7281 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7281')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[_7281 + 604799 / 168 * 24 * 3600]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7281')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_7281 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_7281 + 604799 / 168 * 24 * 3600]):
                                                revert with 0, 17
                                        else:
                                            if u > _2271:
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2271 < u - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _7281 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _7281 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, u - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7281')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if 168 * 24 * 3600 * _7281 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7281')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_7281 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7281')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[_7281 + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_7281')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_7281 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_7281 + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                        if 168 * 24 * 3600 * _7281 + 604799 / 168 * 24 * 3600 > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u + 1 > _2271:
                                        _11873 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_11873] = 0
                                        mem[_11873 + 32] = 0
                                        mem[_11873 + 64] = 0
                                        mem[_11873 + 96] = 0
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _11873
                                        u = u + 1
                                        continue 
                                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                            gas gas_remaining wei
                                           args arg1, u + 1
                                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12090 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 128
                                    _12328 = mem[64]
                                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                        revert with 0, 65
                                    mem[64] = mem[64] + 128
                                    require mem[_12090] == ('signextend', 15, ('mem', ('range', ('var', '_12090'), 32)))
                                    mem[_12328] = mem[_12090]
                                    require mem[_12090 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_12090')), 32)))
                                    mem[_12328 + 32] = mem[_12090 + 32]
                                    mem[_12328 + 64] = mem[_12090 + 64]
                                    mem[_12328 + 96] = mem[_12090 + 96]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = t
                                    t = _12328
                                    u = u + 1
                                    continue 
                                if u < 1:
                                    revert with 0, 17
                                if _2271 < u - 1:
                                    sub_16aea5c0[arg1] = _2271
                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _7281 + 604799 / 168 * 24 * 3600
                                    emit Claimed(arg1, 0, _2271, _2271);
                                else:
                                    sub_16aea5c0[arg1] = u - 1
                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _7281 + 604799 / 168 * 24 * 3600
                                    emit Claimed(arg1, 0, u - 1, _2271);
                            else:
                                _8726 = mem[64]
                                mem[64] = mem[64] + 128
                                mem[_8726] = 0
                                mem[_8726 + 32] = 0
                                mem[_8726 + 64] = 0
                                mem[_8726 + 96] = 0
                                idx = 0
                                s = _8726
                                t = _6383
                                u = 1
                                while idx < 50:
                                    if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                        if u < 1:
                                            revert with 0, 17
                                        if _2271 < u - 1:
                                            sub_16aea5c0[arg1] = _2271
                                            sub_486d25fe[arg1] = start_time
                                            emit Claimed(arg1, 0, _2271, _2271);
                                        else:
                                            sub_16aea5c0[arg1] = u - 1
                                            sub_486d25fe[arg1] = start_time
                                            emit Claimed(arg1, 0, u - 1, _2271);
                                        return 0
                                    if start_time < mem[t + 64]:
                                        if start_time < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= _2271:
                                                if start_time > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if _2271 < u - 1:
                                                sub_16aea5c0[arg1] = _2271
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, _2271, _2271);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, u - 1, _2271);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if u > _2271:
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2271 < u - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                        if start_time > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u > _2271:
                                        if start_time < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= _2271:
                                                if start_time > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if _2271 < u - 1:
                                                sub_16aea5c0[arg1] = _2271
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, _2271, _2271);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, u - 1, _2271);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if u > _2271:
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2271 < u - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                        if start_time > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u + 1 > _2271:
                                        _11880 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_11880] = 0
                                        mem[_11880 + 32] = 0
                                        mem[_11880 + 64] = 0
                                        mem[_11880 + 96] = 0
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _11880
                                        u = u + 1
                                        continue 
                                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                            gas gas_remaining wei
                                           args arg1, u + 1
                                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12096 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 128
                                    _12331 = mem[64]
                                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                        revert with 0, 65
                                    mem[64] = mem[64] + 128
                                    require mem[_12096] == ('signextend', 15, ('mem', ('range', ('var', '_12096'), 32)))
                                    mem[_12331] = mem[_12096]
                                    require mem[_12096 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_12096')), 32)))
                                    mem[_12331 + 32] = mem[_12096 + 32]
                                    mem[_12331 + 64] = mem[_12096 + 64]
                                    mem[_12331 + 96] = mem[_12096 + 96]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = t
                                    t = _12331
                                    u = u + 1
                                    continue 
                                if u < 1:
                                    revert with 0, 17
                                if _2271 < u - 1:
                                    sub_16aea5c0[arg1] = _2271
                                    sub_486d25fe[arg1] = start_time
                                    emit Claimed(arg1, 0, _2271, _2271);
                                else:
                                    sub_16aea5c0[arg1] = u - 1
                                    sub_486d25fe[arg1] = start_time
                                    emit Claimed(arg1, 0, u - 1, _2271);
            else:
                mem[0] = arg1
                mem[32] = 3
                if sub_16aea5c0[arg1]:
                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                            gas gas_remaining wei
                           args arg1, sub_16aea5c0[arg1]
                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2358 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 128
                    _2390 = mem[64]
                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                        revert with 0, 65
                    mem[64] = mem[64] + 128
                    require mem[_2358] == ('signextend', 15, ('mem', ('range', ('var', '_2358'), 32)))
                    mem[_2390] = mem[_2358]
                    require mem[_2358 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_2358')), 32)))
                    mem[_2390 + 32] = mem[_2358 + 32]
                    mem[_2390 + 64] = mem[_2358 + 64]
                    mem[_2390 + 96] = mem[_2358 + 96]
                    if sub_486d25fe[arg1]:
                        if sub_486d25fe[arg1] < last_token_time:
                            if sub_486d25fe[arg1] >= start_time:
                                _2706 = mem[64]
                                mem[64] = mem[64] + 128
                                mem[_2706] = 0
                                mem[_2706 + 32] = 0
                                mem[_2706 + 64] = 0
                                mem[_2706 + 96] = 0
                                idx = 0
                                s = _2706
                                t = _2390
                                u = sub_16aea5c0[arg1]
                                while idx < 50:
                                    if sub_486d25fe[arg1] >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                        if u < 1:
                                            revert with 0, 17
                                        if _2271 < u - 1:
                                            sub_16aea5c0[arg1] = _2271
                                            emit Claimed(arg1, 0, _2271, _2271);
                                        else:
                                            sub_16aea5c0[arg1] = u - 1
                                            emit Claimed(arg1, 0, u - 1, _2271);
                                        return 0
                                    if sub_486d25fe[arg1] < mem[t + 64]:
                                        if sub_486d25fe[arg1] < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= _2271:
                                                if sub_486d25fe[arg1] > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if _2271 < u - 1:
                                                sub_16aea5c0[arg1] = _2271
                                                emit Claimed(arg1, 0, _2271, _2271);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                emit Claimed(arg1, 0, u - 1, _2271);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if sub_486d25fe[arg1] >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor2[arg1]]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                revert with 0, 17
                                        else:
                                            if u > _2271:
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2271 < u - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    emit Claimed(arg1, 0, u - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                        if sub_486d25fe[arg1] > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u > _2271:
                                        if sub_486d25fe[arg1] < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= _2271:
                                                if sub_486d25fe[arg1] > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if _2271 < u - 1:
                                                sub_16aea5c0[arg1] = _2271
                                                emit Claimed(arg1, 0, _2271, _2271);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                emit Claimed(arg1, 0, u - 1, _2271);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if sub_486d25fe[arg1] >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor2[arg1]]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                revert with 0, 17
                                        else:
                                            if u > _2271:
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2271 < u - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    emit Claimed(arg1, 0, u - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                        if sub_486d25fe[arg1] > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u + 1 > _2271:
                                        _6541 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_6541] = 0
                                        mem[_6541 + 32] = 0
                                        mem[_6541 + 64] = 0
                                        mem[_6541 + 96] = 0
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _6541
                                        u = u + 1
                                        continue 
                                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                            gas gas_remaining wei
                                           args arg1, u + 1
                                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6753 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 128
                                    _6974 = mem[64]
                                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                        revert with 0, 65
                                    mem[64] = mem[64] + 128
                                    require mem[_6753] == ('signextend', 15, ('mem', ('range', ('var', '_6753'), 32)))
                                    mem[_6974] = mem[_6753]
                                    require mem[_6753 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6753')), 32)))
                                    mem[_6974 + 32] = mem[_6753 + 32]
                                    mem[_6974 + 64] = mem[_6753 + 64]
                                    mem[_6974 + 96] = mem[_6753 + 96]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = t
                                    t = _6974
                                    u = u + 1
                                    continue 
                                if u < 1:
                                    revert with 0, 17
                                if _2271 < u - 1:
                                    sub_16aea5c0[arg1] = _2271
                                    emit Claimed(arg1, 0, _2271, _2271);
                                else:
                                    sub_16aea5c0[arg1] = u - 1
                                    emit Claimed(arg1, 0, u - 1, _2271);
                            else:
                                _2833 = mem[64]
                                mem[64] = mem[64] + 128
                                mem[_2833] = 0
                                mem[_2833 + 32] = 0
                                mem[_2833 + 64] = 0
                                mem[_2833 + 96] = 0
                                idx = 0
                                s = _2833
                                t = _2390
                                u = sub_16aea5c0[arg1]
                                while idx < 50:
                                    if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                        if u < 1:
                                            revert with 0, 17
                                        if _2271 < u - 1:
                                            sub_16aea5c0[arg1] = _2271
                                            sub_486d25fe[arg1] = start_time
                                            emit Claimed(arg1, 0, _2271, _2271);
                                        else:
                                            sub_16aea5c0[arg1] = u - 1
                                            sub_486d25fe[arg1] = start_time
                                            emit Claimed(arg1, 0, u - 1, _2271);
                                        return 0
                                    if start_time < mem[t + 64]:
                                        if start_time < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= _2271:
                                                if start_time > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if _2271 < u - 1:
                                                sub_16aea5c0[arg1] = _2271
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, _2271, _2271);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, u - 1, _2271);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if u > _2271:
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2271 < u - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                        if start_time > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u > _2271:
                                        if start_time < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= _2271:
                                                if start_time > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if _2271 < u - 1:
                                                sub_16aea5c0[arg1] = _2271
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, _2271, _2271);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, u - 1, _2271);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if u > _2271:
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2271 < u - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                        if start_time > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u + 1 > _2271:
                                        _6548 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_6548] = 0
                                        mem[_6548 + 32] = 0
                                        mem[_6548 + 64] = 0
                                        mem[_6548 + 96] = 0
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _6548
                                        u = u + 1
                                        continue 
                                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                            gas gas_remaining wei
                                           args arg1, u + 1
                                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6759 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 128
                                    _6977 = mem[64]
                                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                        revert with 0, 65
                                    mem[64] = mem[64] + 128
                                    require mem[_6759] == ('signextend', 15, ('mem', ('range', ('var', '_6759'), 32)))
                                    mem[_6977] = mem[_6759]
                                    require mem[_6759 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6759')), 32)))
                                    mem[_6977 + 32] = mem[_6759 + 32]
                                    mem[_6977 + 64] = mem[_6759 + 64]
                                    mem[_6977 + 96] = mem[_6759 + 96]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = t
                                    t = _6977
                                    u = u + 1
                                    continue 
                                if u < 1:
                                    revert with 0, 17
                                if _2271 < u - 1:
                                    sub_16aea5c0[arg1] = _2271
                                    sub_486d25fe[arg1] = start_time
                                    emit Claimed(arg1, 0, _2271, _2271);
                                else:
                                    sub_16aea5c0[arg1] = u - 1
                                    sub_486d25fe[arg1] = start_time
                                    emit Claimed(arg1, 0, u - 1, _2271);
                    else:
                        _2508 = mem[_2390 + 64]
                        if mem[_2390 + 64] > -604801:
                            revert with 0, 17
                        if mem[_2390 + 64] + (168 * 24 * 3600) < 1:
                            revert with 0, 17
                        if mem[_2390 + 64] + 604799 / 168 * 24 * 3600 and 168 * 24 * 3600 > -1 / mem[_2390 + 64] + 604799 / 168 * 24 * 3600:
                            revert with 0, 17
                        if 168 * 24 * 3600 * mem[_2390 + 64] + 604799 / 168 * 24 * 3600 < last_token_time:
                            if 168 * 24 * 3600 * mem[_2390 + 64] + 604799 / 168 * 24 * 3600 >= start_time:
                                _3344 = mem[64]
                                mem[64] = mem[64] + 128
                                mem[_3344] = 0
                                mem[_3344 + 32] = 0
                                mem[_3344 + 64] = 0
                                mem[_3344 + 96] = 0
                                idx = 0
                                s = _3344
                                t = _2390
                                u = sub_16aea5c0[arg1]
                                while idx < 50:
                                    if 168 * 24 * 3600 * _2508 + 604799 / 168 * 24 * 3600 >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                        if u < 1:
                                            revert with 0, 17
                                        if _2271 < u - 1:
                                            sub_16aea5c0[arg1] = _2271
                                            sub_486d25fe[arg1] = 168 * 24 * 3600 * _2508 + 604799 / 168 * 24 * 3600
                                            emit Claimed(arg1, 0, _2271, _2271);
                                        else:
                                            sub_16aea5c0[arg1] = u - 1
                                            sub_486d25fe[arg1] = 168 * 24 * 3600 * _2508 + 604799 / 168 * 24 * 3600
                                            emit Claimed(arg1, 0, u - 1, _2271);
                                        return 0
                                    if 168 * 24 * 3600 * _2508 + 604799 / 168 * 24 * 3600 < mem[t + 64]:
                                        if 168 * 24 * 3600 * _2508 + 604799 / 168 * 24 * 3600 < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2508')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2508')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2508')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2508')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2508')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2508')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2508')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2508')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2508')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2508')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2508')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2508')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2508')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= _2271:
                                                if 168 * 24 * 3600 * _2508 + 604799 / 168 * 24 * 3600 > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if _2271 < u - 1:
                                                sub_16aea5c0[arg1] = _2271
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * _2508 + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, _2271, _2271);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * _2508 + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, u - 1, _2271);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2508')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if 168 * 24 * 3600 * _2508 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2508')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_2508 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2508')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[_2508 + 604799 / 168 * 24 * 3600]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2508')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_2508 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_2508 + 604799 / 168 * 24 * 3600]):
                                                revert with 0, 17
                                        else:
                                            if u > _2271:
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2271 < u - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _2508 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _2508 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, u - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2508')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if 168 * 24 * 3600 * _2508 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2508')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_2508 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2508')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[_2508 + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2508')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_2508 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_2508 + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                        if 168 * 24 * 3600 * _2508 + 604799 / 168 * 24 * 3600 > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u > _2271:
                                        if 168 * 24 * 3600 * _2508 + 604799 / 168 * 24 * 3600 < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2508')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2508')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2508')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2508')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2508')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2508')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2508')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2508')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2508')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2508')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2508')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2508')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2508')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= _2271:
                                                if 168 * 24 * 3600 * _2508 + 604799 / 168 * 24 * 3600 > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if _2271 < u - 1:
                                                sub_16aea5c0[arg1] = _2271
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * _2508 + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, _2271, _2271);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * _2508 + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, u - 1, _2271);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2508')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if 168 * 24 * 3600 * _2508 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2508')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_2508 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2508')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[_2508 + 604799 / 168 * 24 * 3600]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2508')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_2508 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_2508 + 604799 / 168 * 24 * 3600]):
                                                revert with 0, 17
                                        else:
                                            if u > _2271:
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2271 < u - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _2508 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _2508 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, u - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2508')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if 168 * 24 * 3600 * _2508 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2508')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_2508 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2508')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[_2508 + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2508')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_2508 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_2508 + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                        if 168 * 24 * 3600 * _2508 + 604799 / 168 * 24 * 3600 > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u + 1 > _2271:
                                        _6555 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_6555] = 0
                                        mem[_6555 + 32] = 0
                                        mem[_6555 + 64] = 0
                                        mem[_6555 + 96] = 0
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _6555
                                        u = u + 1
                                        continue 
                                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                            gas gas_remaining wei
                                           args arg1, u + 1
                                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6765 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 128
                                    _6980 = mem[64]
                                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                        revert with 0, 65
                                    mem[64] = mem[64] + 128
                                    require mem[_6765] == ('signextend', 15, ('mem', ('range', ('var', '_6765'), 32)))
                                    mem[_6980] = mem[_6765]
                                    require mem[_6765 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6765')), 32)))
                                    mem[_6980 + 32] = mem[_6765 + 32]
                                    mem[_6980 + 64] = mem[_6765 + 64]
                                    mem[_6980 + 96] = mem[_6765 + 96]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = t
                                    t = _6980
                                    u = u + 1
                                    continue 
                                if u < 1:
                                    revert with 0, 17
                                if _2271 < u - 1:
                                    sub_16aea5c0[arg1] = _2271
                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _2508 + 604799 / 168 * 24 * 3600
                                    emit Claimed(arg1, 0, _2271, _2271);
                                else:
                                    sub_16aea5c0[arg1] = u - 1
                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _2508 + 604799 / 168 * 24 * 3600
                                    emit Claimed(arg1, 0, u - 1, _2271);
                            else:
                                _3403 = mem[64]
                                mem[64] = mem[64] + 128
                                mem[_3403] = 0
                                mem[_3403 + 32] = 0
                                mem[_3403 + 64] = 0
                                mem[_3403 + 96] = 0
                                idx = 0
                                s = _3403
                                t = _2390
                                u = sub_16aea5c0[arg1]
                                while idx < 50:
                                    if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                        if u < 1:
                                            revert with 0, 17
                                        if _2271 < u - 1:
                                            sub_16aea5c0[arg1] = _2271
                                            sub_486d25fe[arg1] = start_time
                                            emit Claimed(arg1, 0, _2271, _2271);
                                        else:
                                            sub_16aea5c0[arg1] = u - 1
                                            sub_486d25fe[arg1] = start_time
                                            emit Claimed(arg1, 0, u - 1, _2271);
                                        return 0
                                    if start_time < mem[t + 64]:
                                        if start_time < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= _2271:
                                                if start_time > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if _2271 < u - 1:
                                                sub_16aea5c0[arg1] = _2271
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, _2271, _2271);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, u - 1, _2271);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if u > _2271:
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2271 < u - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                        if start_time > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u > _2271:
                                        if start_time < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= _2271:
                                                if start_time > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if _2271 < u - 1:
                                                sub_16aea5c0[arg1] = _2271
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, _2271, _2271);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, u - 1, _2271);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if u > _2271:
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2271 < u - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                        if start_time > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u + 1 > _2271:
                                        _6562 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_6562] = 0
                                        mem[_6562 + 32] = 0
                                        mem[_6562 + 64] = 0
                                        mem[_6562 + 96] = 0
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _6562
                                        u = u + 1
                                        continue 
                                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                            gas gas_remaining wei
                                           args arg1, u + 1
                                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6771 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 128
                                    _6983 = mem[64]
                                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                        revert with 0, 65
                                    mem[64] = mem[64] + 128
                                    require mem[_6771] == ('signextend', 15, ('mem', ('range', ('var', '_6771'), 32)))
                                    mem[_6983] = mem[_6771]
                                    require mem[_6771 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6771')), 32)))
                                    mem[_6983 + 32] = mem[_6771 + 32]
                                    mem[_6983 + 64] = mem[_6771 + 64]
                                    mem[_6983 + 96] = mem[_6771 + 96]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = t
                                    t = _6983
                                    u = u + 1
                                    continue 
                                if u < 1:
                                    revert with 0, 17
                                if _2271 < u - 1:
                                    sub_16aea5c0[arg1] = _2271
                                    sub_486d25fe[arg1] = start_time
                                    emit Claimed(arg1, 0, _2271, _2271);
                                else:
                                    sub_16aea5c0[arg1] = u - 1
                                    sub_486d25fe[arg1] = start_time
                                    emit Claimed(arg1, 0, u - 1, _2271);
                else:
                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                            gas gas_remaining wei
                           args arg1, 1
                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2382 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 128
                    _2403 = mem[64]
                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                        revert with 0, 65
                    mem[64] = mem[64] + 128
                    require mem[_2382] == ('signextend', 15, ('mem', ('range', ('var', '_2382'), 32)))
                    mem[_2403] = mem[_2382]
                    require mem[_2382 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_2382')), 32)))
                    mem[_2403 + 32] = mem[_2382 + 32]
                    mem[_2403 + 64] = mem[_2382 + 64]
                    mem[_2403 + 96] = mem[_2382 + 96]
                    if sub_486d25fe[arg1]:
                        if sub_486d25fe[arg1] < last_token_time:
                            if sub_486d25fe[arg1] >= start_time:
                                _2834 = mem[64]
                                mem[64] = mem[64] + 128
                                mem[_2834] = 0
                                mem[_2834 + 32] = 0
                                mem[_2834 + 64] = 0
                                mem[_2834 + 96] = 0
                                idx = 0
                                s = _2834
                                t = _2403
                                u = 1
                                while idx < 50:
                                    if sub_486d25fe[arg1] >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                        if u < 1:
                                            revert with 0, 17
                                        if _2271 < u - 1:
                                            sub_16aea5c0[arg1] = _2271
                                            emit Claimed(arg1, 0, _2271, _2271);
                                        else:
                                            sub_16aea5c0[arg1] = u - 1
                                            emit Claimed(arg1, 0, u - 1, _2271);
                                        return 0
                                    if sub_486d25fe[arg1] < mem[t + 64]:
                                        if sub_486d25fe[arg1] < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= _2271:
                                                if sub_486d25fe[arg1] > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if _2271 < u - 1:
                                                sub_16aea5c0[arg1] = _2271
                                                emit Claimed(arg1, 0, _2271, _2271);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                emit Claimed(arg1, 0, u - 1, _2271);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if sub_486d25fe[arg1] >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor2[arg1]]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                revert with 0, 17
                                        else:
                                            if u > _2271:
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2271 < u - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    emit Claimed(arg1, 0, u - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                        if sub_486d25fe[arg1] > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u > _2271:
                                        if sub_486d25fe[arg1] < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= _2271:
                                                if sub_486d25fe[arg1] > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if _2271 < u - 1:
                                                sub_16aea5c0[arg1] = _2271
                                                emit Claimed(arg1, 0, _2271, _2271);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                emit Claimed(arg1, 0, u - 1, _2271);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if sub_486d25fe[arg1] >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor2[arg1]]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                revert with 0, 17
                                        else:
                                            if u > _2271:
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2271 < u - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    emit Claimed(arg1, 0, u - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if sub_486d25fe[arg1] >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor2[arg1]] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor2[arg1]]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('map', ('param', 'arg1'), ('name', 'sub_486d25fe', 2))), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor2[arg1]] / sub_d4dafba8[stor2[arg1]]):
                                                    revert with 0, 17
                                        if sub_486d25fe[arg1] > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u + 1 > _2271:
                                        _6569 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_6569] = 0
                                        mem[_6569 + 32] = 0
                                        mem[_6569 + 64] = 0
                                        mem[_6569 + 96] = 0
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _6569
                                        u = u + 1
                                        continue 
                                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                            gas gas_remaining wei
                                           args arg1, u + 1
                                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6777 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 128
                                    _6986 = mem[64]
                                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                        revert with 0, 65
                                    mem[64] = mem[64] + 128
                                    require mem[_6777] == ('signextend', 15, ('mem', ('range', ('var', '_6777'), 32)))
                                    mem[_6986] = mem[_6777]
                                    require mem[_6777 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6777')), 32)))
                                    mem[_6986 + 32] = mem[_6777 + 32]
                                    mem[_6986 + 64] = mem[_6777 + 64]
                                    mem[_6986 + 96] = mem[_6777 + 96]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = t
                                    t = _6986
                                    u = u + 1
                                    continue 
                                if u < 1:
                                    revert with 0, 17
                                if _2271 < u - 1:
                                    sub_16aea5c0[arg1] = _2271
                                    emit Claimed(arg1, 0, _2271, _2271);
                                else:
                                    sub_16aea5c0[arg1] = u - 1
                                    emit Claimed(arg1, 0, u - 1, _2271);
                            else:
                                _2897 = mem[64]
                                mem[64] = mem[64] + 128
                                mem[_2897] = 0
                                mem[_2897 + 32] = 0
                                mem[_2897 + 64] = 0
                                mem[_2897 + 96] = 0
                                idx = 0
                                s = _2897
                                t = _2403
                                u = 1
                                while idx < 50:
                                    if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                        if u < 1:
                                            revert with 0, 17
                                        if _2271 < u - 1:
                                            sub_16aea5c0[arg1] = _2271
                                            sub_486d25fe[arg1] = start_time
                                            emit Claimed(arg1, 0, _2271, _2271);
                                        else:
                                            sub_16aea5c0[arg1] = u - 1
                                            sub_486d25fe[arg1] = start_time
                                            emit Claimed(arg1, 0, u - 1, _2271);
                                        return 0
                                    if start_time < mem[t + 64]:
                                        if start_time < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= _2271:
                                                if start_time > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if _2271 < u - 1:
                                                sub_16aea5c0[arg1] = _2271
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, _2271, _2271);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, u - 1, _2271);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if u > _2271:
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2271 < u - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                        if start_time > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u > _2271:
                                        if start_time < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= _2271:
                                                if start_time > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if _2271 < u - 1:
                                                sub_16aea5c0[arg1] = _2271
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, _2271, _2271);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, u - 1, _2271);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if u > _2271:
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2271 < u - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                        if start_time > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u + 1 > _2271:
                                        _6576 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_6576] = 0
                                        mem[_6576 + 32] = 0
                                        mem[_6576 + 64] = 0
                                        mem[_6576 + 96] = 0
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _6576
                                        u = u + 1
                                        continue 
                                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                            gas gas_remaining wei
                                           args arg1, u + 1
                                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6783 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 128
                                    _6989 = mem[64]
                                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                        revert with 0, 65
                                    mem[64] = mem[64] + 128
                                    require mem[_6783] == ('signextend', 15, ('mem', ('range', ('var', '_6783'), 32)))
                                    mem[_6989] = mem[_6783]
                                    require mem[_6783 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6783')), 32)))
                                    mem[_6989 + 32] = mem[_6783 + 32]
                                    mem[_6989 + 64] = mem[_6783 + 64]
                                    mem[_6989 + 96] = mem[_6783 + 96]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = t
                                    t = _6989
                                    u = u + 1
                                    continue 
                                if u < 1:
                                    revert with 0, 17
                                if _2271 < u - 1:
                                    sub_16aea5c0[arg1] = _2271
                                    sub_486d25fe[arg1] = start_time
                                    emit Claimed(arg1, 0, _2271, _2271);
                                else:
                                    sub_16aea5c0[arg1] = u - 1
                                    sub_486d25fe[arg1] = start_time
                                    emit Claimed(arg1, 0, u - 1, _2271);
                    else:
                        _2575 = mem[_2403 + 64]
                        if mem[_2403 + 64] > -604801:
                            revert with 0, 17
                        if mem[_2403 + 64] + (168 * 24 * 3600) < 1:
                            revert with 0, 17
                        if mem[_2403 + 64] + 604799 / 168 * 24 * 3600 and 168 * 24 * 3600 > -1 / mem[_2403 + 64] + 604799 / 168 * 24 * 3600:
                            revert with 0, 17
                        if 168 * 24 * 3600 * mem[_2403 + 64] + 604799 / 168 * 24 * 3600 < last_token_time:
                            if 168 * 24 * 3600 * mem[_2403 + 64] + 604799 / 168 * 24 * 3600 >= start_time:
                                _3406 = mem[64]
                                mem[64] = mem[64] + 128
                                mem[_3406] = 0
                                mem[_3406 + 32] = 0
                                mem[_3406 + 64] = 0
                                mem[_3406 + 96] = 0
                                idx = 0
                                s = _3406
                                t = _2403
                                u = 1
                                while idx < 50:
                                    if 168 * 24 * 3600 * _2575 + 604799 / 168 * 24 * 3600 >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                        if u < 1:
                                            revert with 0, 17
                                        if _2271 < u - 1:
                                            sub_16aea5c0[arg1] = _2271
                                            sub_486d25fe[arg1] = 168 * 24 * 3600 * _2575 + 604799 / 168 * 24 * 3600
                                            emit Claimed(arg1, 0, _2271, _2271);
                                        else:
                                            sub_16aea5c0[arg1] = u - 1
                                            sub_486d25fe[arg1] = 168 * 24 * 3600 * _2575 + 604799 / 168 * 24 * 3600
                                            emit Claimed(arg1, 0, u - 1, _2271);
                                        return 0
                                    if 168 * 24 * 3600 * _2575 + 604799 / 168 * 24 * 3600 < mem[t + 64]:
                                        if 168 * 24 * 3600 * _2575 + 604799 / 168 * 24 * 3600 < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2575')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2575')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2575')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2575')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2575')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2575')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2575')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2575')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2575')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2575')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2575')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2575')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2575')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= _2271:
                                                if 168 * 24 * 3600 * _2575 + 604799 / 168 * 24 * 3600 > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if _2271 < u - 1:
                                                sub_16aea5c0[arg1] = _2271
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * _2575 + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, _2271, _2271);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * _2575 + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, u - 1, _2271);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2575')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if 168 * 24 * 3600 * _2575 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2575')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_2575 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2575')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[_2575 + 604799 / 168 * 24 * 3600]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2575')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_2575 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_2575 + 604799 / 168 * 24 * 3600]):
                                                revert with 0, 17
                                        else:
                                            if u > _2271:
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2271 < u - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _2575 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _2575 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, u - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2575')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if 168 * 24 * 3600 * _2575 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2575')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_2575 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2575')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[_2575 + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2575')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_2575 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_2575 + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                        if 168 * 24 * 3600 * _2575 + 604799 / 168 * 24 * 3600 > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u > _2271:
                                        if 168 * 24 * 3600 * _2575 + 604799 / 168 * 24 * 3600 < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2575')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2575')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2575')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2575')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2575')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2575')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2575')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2575')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2575')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2575')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2575')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2575')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2575')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= _2271:
                                                if 168 * 24 * 3600 * _2575 + 604799 / 168 * 24 * 3600 > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if _2271 < u - 1:
                                                sub_16aea5c0[arg1] = _2271
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * _2575 + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, _2271, _2271);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = 168 * 24 * 3600 * _2575 + 604799 / 168 * 24 * 3600
                                                emit Claimed(arg1, 0, u - 1, _2271);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2575')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if 168 * 24 * 3600 * _2575 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2575')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_2575 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2575')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[_2575 + 604799 / 168 * 24 * 3600]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2575')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_2575 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_2575 + 604799 / 168 * 24 * 3600]):
                                                revert with 0, 17
                                        else:
                                            if u > _2271:
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2271 < u - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _2575 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _2575 + 604799 / 168 * 24 * 3600
                                                    emit Claimed(arg1, 0, u - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2575')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if 168 * 24 * 3600 * _2575 + 604799 / 168 * 24 * 3600 >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2575')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[_2575 + 604799 / 168 * 24 * 3600] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2575')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[_2575 + 604799 / 168 * 24 * 3600]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('mul', 604800, ('div', ('add', 604799, ('var', '_2575')), 604800)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[_2575 + 604799 / 168 * 24 * 3600] / sub_d4dafba8[_2575 + 604799 / 168 * 24 * 3600]):
                                                    revert with 0, 17
                                        if 168 * 24 * 3600 * _2575 + 604799 / 168 * 24 * 3600 > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u + 1 > _2271:
                                        _6583 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_6583] = 0
                                        mem[_6583 + 32] = 0
                                        mem[_6583 + 64] = 0
                                        mem[_6583 + 96] = 0
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _6583
                                        u = u + 1
                                        continue 
                                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                            gas gas_remaining wei
                                           args arg1, u + 1
                                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6789 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 128
                                    _6992 = mem[64]
                                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                        revert with 0, 65
                                    mem[64] = mem[64] + 128
                                    require mem[_6789] == ('signextend', 15, ('mem', ('range', ('var', '_6789'), 32)))
                                    mem[_6992] = mem[_6789]
                                    require mem[_6789 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6789')), 32)))
                                    mem[_6992 + 32] = mem[_6789 + 32]
                                    mem[_6992 + 64] = mem[_6789 + 64]
                                    mem[_6992 + 96] = mem[_6789 + 96]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = t
                                    t = _6992
                                    u = u + 1
                                    continue 
                                if u < 1:
                                    revert with 0, 17
                                if _2271 < u - 1:
                                    sub_16aea5c0[arg1] = _2271
                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _2575 + 604799 / 168 * 24 * 3600
                                    emit Claimed(arg1, 0, _2271, _2271);
                                else:
                                    sub_16aea5c0[arg1] = u - 1
                                    sub_486d25fe[arg1] = 168 * 24 * 3600 * _2575 + 604799 / 168 * 24 * 3600
                                    emit Claimed(arg1, 0, u - 1, _2271);
                            else:
                                _3455 = mem[64]
                                mem[64] = mem[64] + 128
                                mem[_3455] = 0
                                mem[_3455 + 32] = 0
                                mem[_3455 + 64] = 0
                                mem[_3455 + 96] = 0
                                idx = 0
                                s = _3455
                                t = _2403
                                u = 1
                                while idx < 50:
                                    if start_time >= 168 * 24 * 3600 * last_token_time / 168 * 24 * 3600:
                                        if u < 1:
                                            revert with 0, 17
                                        if _2271 < u - 1:
                                            sub_16aea5c0[arg1] = _2271
                                            sub_486d25fe[arg1] = start_time
                                            emit Claimed(arg1, 0, _2271, _2271);
                                        else:
                                            sub_16aea5c0[arg1] = u - 1
                                            sub_486d25fe[arg1] = start_time
                                            emit Claimed(arg1, 0, u - 1, _2271);
                                        return 0
                                    if start_time < mem[t + 64]:
                                        if start_time < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= _2271:
                                                if start_time > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if _2271 < u - 1:
                                                sub_16aea5c0[arg1] = _2271
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, _2271, _2271);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, u - 1, _2271);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if u > _2271:
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2271 < u - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                        if start_time > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u > _2271:
                                        if start_time < mem[s + 64]:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) > 0:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) > 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0xffffffffffffffffffffffffffffffff80000000000000000000000000000000 / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0 and ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))) < 0 and ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))) < 0x7fffffffffffffffffffffffffffffff / ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))):
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) >= 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) < ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) - 0x80000000000000000000000000000000:
                                            revert with 0, 17
                                        if ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) < 0 and ('signextend', 15, ('mem', ('range', ('var', 1), 32))) > ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32))))))) + 0x7fffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) < 0:
                                            if u <= _2271:
                                                if start_time > -604801:
                                                    revert with 0, 17
                                                if idx == -1:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = s
                                                t = t
                                                u = u
                                                continue 
                                            if u < 1:
                                                revert with 0, 17
                                            if _2271 < u - 1:
                                                sub_16aea5c0[arg1] = _2271
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, _2271, _2271);
                                            else:
                                                sub_16aea5c0[arg1] = u - 1
                                                sub_486d25fe[arg1] = start_time
                                                emit Claimed(arg1, 0, u - 1, _2271);
                                            return 0
                                        if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                            if start_time >= 10^15:
                                                revert with 0, 50
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                revert with 0, 17
                                            if not sub_d4dafba8[stor0]:
                                                revert with 0, 18
                                            if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                revert with 0, 17
                                        else:
                                            if u > _2271:
                                                if u < 1:
                                                    revert with 0, 17
                                                if _2271 < u - 1:
                                                    sub_16aea5c0[arg1] = _2271
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, _2271, _2271);
                                                else:
                                                    sub_16aea5c0[arg1] = u - 1
                                                    sub_486d25fe[arg1] = start_time
                                                    emit Claimed(arg1, 0, u - 1, _2271);
                                                return 0
                                            if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                if start_time >= 10^15:
                                                    revert with 0, 50
                                                if ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) and sub_edf59997[stor0] > -1 / ('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))):
                                                    revert with 0, 17
                                                if not sub_d4dafba8[stor0]:
                                                    revert with 0, 18
                                                if 0 > !(('signextend', 15, ('add', ('signextend', 15, ('mem', ('range', ('var', 1), 32))), ('mul', -1, ('signextend', 15, ('mul', ('signextend', 15, ('mem', ('range', ('add', 32, ('var', 1)), 32))), ('signextend', 15, ('add', ('stor', ('name', 'start_time', 0)), ('mul', -1, ('mem', ('range', ('add', 64, ('var', 1)), 32)))))))))) * sub_edf59997[stor0] / sub_d4dafba8[stor0]):
                                                    revert with 0, 17
                                        if start_time > -604801:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        t = t
                                        u = u
                                        continue 
                                    if u + 1 > _2271:
                                        _6590 = mem[64]
                                        mem[64] = mem[64] + 128
                                        mem[_6590] = 0
                                        mem[_6590 + 32] = 0
                                        mem[_6590 + 64] = 0
                                        mem[_6590 + 96] = 0
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = t
                                        t = _6590
                                        u = u + 1
                                        continue 
                                    staticcall voting_escrowAddress.user_point_history(uint256 arg1, uint256 arg2) with:
                                            gas gas_remaining wei
                                           args arg1, u + 1
                                    mem[mem[64] len 128] = ext_call.return_data[0 len 128]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6795 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 128
                                    _6995 = mem[64]
                                    if mem[64] + 128 > test266151307() or mem[64] + 128 < mem[64]:
                                        revert with 0, 65
                                    mem[64] = mem[64] + 128
                                    require mem[_6795] == ('signextend', 15, ('mem', ('range', ('var', '_6795'), 32)))
                                    mem[_6995] = mem[_6795]
                                    require mem[_6795 + 32] == ('signextend', 15, ('mem', ('range', ('add', 32, ('var', '_6795')), 32)))
                                    mem[_6995 + 32] = mem[_6795 + 32]
                                    mem[_6995 + 64] = mem[_6795 + 64]
                                    mem[_6995 + 96] = mem[_6795 + 96]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = t
                                    t = _6995
                                    u = u + 1
                                    continue 
                                if u < 1:
                                    revert with 0, 17
                                if _2271 < u - 1:
                                    sub_16aea5c0[arg1] = _2271
                                    sub_486d25fe[arg1] = start_time
                                    emit Claimed(arg1, 0, _2271, _2271);
                                else:
                                    sub_16aea5c0[arg1] = u - 1
                                    sub_486d25fe[arg1] = start_time
                                    emit Claimed(arg1, 0, u - 1, _2271);
    return 0
}



}
